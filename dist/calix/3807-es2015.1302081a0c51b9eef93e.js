"use strict";(self.webpackChunkcalix=self.webpackChunkcalix||[]).push([[3807],{63807:function(t,e,r){r.d(e,{H:function(){return l}});var i=r(40205),s=r(5304),h=r(88002),a=r(92340),n=r(37716),p=r(91841),o=r(38048);let l=(()=>{class t{constructor(t,e){this.http=t,this.sso=e,this.baseUrl=`${a.N.COC_SERVICES_ACTIVATION_URL}/serviceDefinitions`,this.bandwidhtbaseUrl=`${a.N.COC_SERVICES_ACTIVATION_URL}/bandwidthTiers`,this.subscriberbaseUrl=`${a.N.COC_SERVICES_ACTIVATION_URL}/serviceTemplates`,this.ouibaseurl=`${a.N.COC_SERVICES_ACTIVATION_URL}/ouiMatchList`,this.multirangebaseurl=`${a.N.COC_SERVICES_ACTIVATION_URL}/multicastRange`,this.multicastvlansbaseurl=`${a.N.COC_SERVICES_ACTIVATION_URL}/multicastVlan`}getServiceTemplateType(t,e){const r=this.sso.getOrg(t);return this.http.get(`${a.N.COC_SERVICES_ACTIVATION_URL}/serviceTemplates/type?${r}type=${e}`).pipe((0,s.K)(this.handleError))}saveProfile(t,e,r){return"RG"!==r&&(e=Object.assign({},Object.fromEntries(Object.entries(e).filter(([t,e])=>!("smpDetails"!==t&&e&&"object"==typeof e))))),this.http.post(`${a.N.COC_SERVICE_MIGRATION_URL}/${"RG"==r?"rg":"ont"}/smp`,e).pipe((0,s.K)(this.handleError))}updateJobMig(t,e,r,i){return this.url="ONT"==i?`${a.N.COC_SERVICE_MIGRATION_URL}/ont/migrate/${t}?name=${e}`:`${a.N.COC_SERVICE_MIGRATION_URL}/migration/rg/migrate/${t}?name=${e}`,r&&(this.url=this.url+`&description=${r}`),this.http.put(this.url,"").pipe((0,s.K)(this.handleError))}saveJobMig(t,e,r,i){let h=`${a.N.COC_SERVICE_MIGRATION_URL}/ont/migrate?name=${r}`;return i&&(h+=`&description=${i}`),this.http.post(h,e).pipe((0,s.K)(this.handleError))}updateJobMigFou(t,e,r,i,h){let n=`${a.N.COC_SERVICE_MIGRATION_URL}/ont/migrate/${t}?name=${e}&migrationtype=${r}&systemGroup=${i}`;return h&&(n+=`&description=${h}`),this.http.put(n,"").pipe((0,s.K)(this.handleError))}saveJobMigFou(t,e,r,i,h,n){let p=`${a.N.COC_SERVICE_MIGRATION_URL}/ont/migrate?name=${r}&migrationtype=${i}&systemGroup=${h}`;return n&&(p+=`&description=${n}`),this.http.post(p,e).pipe((0,s.K)(this.handleError))}saveJobMigRG(t){return this.http.post(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/rg/migrate`,t).pipe((0,s.K)(this.handleError))}startMigration(t,e,r){return this.http.put(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}/accept`,"").pipe((0,s.K)(this.handleError))}ExportMigration(t){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/export/${t}`).pipe((0,s.K)(this.handleError))}AbortMigration(t,e,r){return this.http.put(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}/abort`,"").pipe((0,s.K)(this.handleError))}DeleteMigration(t,e,r){return this.http.delete(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}`).pipe((0,s.K)(this.handleError))}undoMigration(t,e,r){return this.http.put(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}/revert`,"").pipe((0,s.K)(this.handleError))}UpdateProfile(t,e,r,i){return this.http.put(`${a.N.COC_SERVICE_MIGRATION_URL}/${"RG"==i?"rg":"ont"}/smp/${r}`,e).pipe((0,s.K)(this.handleError))}GetAllservices(t){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}/services?page=0&size=10`).pipe((0,s.K)(this.handleError))}GetAllsummary(t){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/${t}`).pipe((0,s.K)(this.handleError))}GetAllProfile(t,e,r){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/smps?page=${e}&size=10`).pipe((0,s.K)(this.handleError))}GetAllJob(t,e,r){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/migration/all?page=${e}&size=10`).pipe((0,s.K)(this.handleError))}GetProfile(t,e){return this.http.get(`${a.N.COC_SERVICE_MIGRATION_URL}/${"RG"==e?"rg":"ont"}/smp/${t}`).pipe((0,s.K)(this.handleError))}DeleteProfile(t,e,r){return this.http.delete(`${a.N.COC_SERVICE_MIGRATION_URL}/${"RG"==r?"rg":"ont"}/smp/${t}`).pipe((0,s.K)(this.handleError))}getsubscriber(){return this.http.get(this.baseUrl).pipe((0,s.K)(this.handleError))}getOuiList(){return this.http.get(this.ouibaseurl).pipe((0,h.U)(t=>("object"==typeof t&&t.sort((t,e)=>(t.name||"").toString().localeCompare((e.name||"").toString(),"en",{numeric:!1})),t)),(0,s.K)(this.handleError))}getMultipleRange(){return this.http.get(this.multirangebaseurl).pipe((0,h.U)(t=>("object"==typeof t&&t.sort((t,e)=>(t.name||"").toString().localeCompare((e.name||"").toString(),"en",{numeric:!1})),t)),(0,s.K)(this.handleError))}getMultiplecastVlan(){return this.http.get(this.multicastvlansbaseurl).pipe((0,h.U)(t=>("object"==typeof t&&t.sort((t,e)=>(t.name||"").toString().localeCompare((e.name||"").toString(),"en",{numeric:!1})),t)),(0,s.K)(this.handleError))}getsubscriberDetail(t,e){switch(t=encodeURIComponent(t),e){case"Service Defintion":return this.http.get(`${this.baseUrl}?name=${t}`).pipe((0,s.K)(this.handleError));case"Subscriber":return this.http.get(`${this.subscriberbaseUrl}?name=${t}`).pipe((0,s.K)(this.handleError));case"Bandwidth tier":return this.http.get(`${this.bandwidhtbaseUrl}?name=${t}`).pipe((0,s.K)(this.handleError));case"ouiMatchList":return this.http.get(`${this.ouibaseurl}?name=${t}`).pipe((0,s.K)(this.handleError));case"Multicast Range":return this.http.get(`${this.multirangebaseurl}?name=${t}`).pipe((0,s.K)(this.handleError));case"Multicast VLAN":return this.http.get(`${this.multicastvlansbaseurl}?name=${t}`).pipe((0,s.K)(this.handleError))}}delsubscriber(t,e){switch(t=encodeURIComponent(t),e){case"Service Defintion":return this.http.delete(this.baseUrl+`/${t}`).pipe((0,s.K)(this.handleError));case"Subscriber":return this.http.delete(this.subscriberbaseUrl+`/${t}`).pipe((0,s.K)(this.handleError));case"Bandwidth tier":return this.http.delete(this.bandwidhtbaseUrl+`/${t}`).pipe((0,s.K)(this.handleError));case"ouiMatchList":return this.http.delete(this.ouibaseurl+`/${t}`).pipe((0,s.K)(this.handleError));case"Multicast Range":return this.http.delete(this.multirangebaseurl+`/${t}`).pipe((0,s.K)(this.handleError));case"Multicast VLAN":return this.http.delete(this.multicastvlansbaseurl+`/${t}`).pipe((0,s.K)(this.handleError))}}postdata(t,e){switch(e){case"service_Definition_Profile":return this.http.post(this.baseUrl,t).pipe((0,s.K)(this.handleError));case"subscriber_profile":return this.http.post(this.subscriberbaseUrl,t).pipe((0,s.K)(this.handleError));case"bandWidth_profile":return this.http.post(this.bandwidhtbaseUrl,t).pipe((0,s.K)(this.handleError));case"oui_profile":return this.http.post(this.ouibaseurl,t).pipe((0,s.K)(this.handleError));case"Multicast_Range_Profile":return this.http.post(this.multirangebaseurl,t).pipe((0,s.K)(this.handleError));case"Multicast_Vlan_Profile":return this.http.post(this.multicastvlansbaseurl,t).pipe((0,s.K)(this.handleError))}}putdata(t,e){switch(e){case"service_Definition_Profile":return this.http.put(this.baseUrl,t).pipe((0,s.K)(this.handleError));case"subscriber_profile":return this.http.put(this.subscriberbaseUrl,t).pipe((0,s.K)(this.handleError));case"bandWidth_profile":return this.http.put(this.bandwidhtbaseUrl,t).pipe((0,s.K)(this.handleError));case"oui_profile":return this.http.put(this.ouibaseurl,t).pipe((0,s.K)(this.handleError));case"Multicast_Range_Profile":return this.http.put(this.multirangebaseurl,t).pipe((0,s.K)(this.handleError));case"Multicast_Vlan_Profile":return this.http.put(this.multicastvlansbaseurl,t).pipe((0,s.K)(this.handleError))}}handleError(t){return(0,i._)(t)}getProfileList(t){const e=this.sso.getOrg(t);return this.http.get(`${a.N.SUPPORT_URL}/netops-config/configuration-profile?${e}`)}convert_to_kpbs(t,e="mbps"){switch(e){case"gbps":return 1e6*t;case"mbps":return 1e3*t;default:return t}}convert_kbps_to(t,e="mbps",r={start:{count:0}}){if(r.start.count>1)return t;switch(e){case"gbps":return t/1e6;case"mbps":return t/1e3;default:return t}}}return t.\u0275fac=function(e){return new(e||t)(n.LFG(p.eN),n.LFG(o.t6))},t.\u0275prov=n.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()}}]);