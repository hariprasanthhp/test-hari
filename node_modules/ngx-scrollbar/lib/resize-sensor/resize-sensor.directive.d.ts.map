{"version":3,"file":"resize-sensor.directive.d.ts","sources":["resize-sensor.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { EventEmitter, AfterContentInit, OnDestroy, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgScrollbar } from '../ng-scrollbar';\ninterface ResizeObserverSize {\n    readonly inlineSize: number;\n    readonly blockSize: number;\n}\ninterface ResizeObserverEntry {\n    readonly target: Element;\n    readonly contentRect: DOMRectReadOnly;\n    readonly borderBoxSize?: ReadonlyArray<ResizeObserverSize>;\n    readonly contentBoxSize?: ReadonlyArray<ResizeObserverSize>;\n    readonly devicePixelContentBoxSize?: ReadonlyArray<ResizeObserverSize>;\n}\nexport declare class ResizeSensor implements AfterContentInit, OnDestroy {\n    private zone;\n    private platform;\n    private scrollbar;\n    /** Debounce interval for emitting the changes. */\n    get debounce(): number | undefined;\n    set debounce(value: number | undefined);\n    private _debounce;\n    /** Whether ResizeObserver is disabled. */\n    get disabled(): any;\n    set disabled(value: any);\n    private _disabled;\n    private _currentSubscription;\n    private _resizeObserver;\n    event: EventEmitter<readonly ResizeObserverEntry[]>;\n    constructor(zone: NgZone, platform: Platform, scrollbar: NgScrollbar);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    private _subscribe;\n    private _unsubscribe;\n}\nexport {};\n"]}