{"version":3,"file":"scroll-viewport.d.ts","sources":["scroll-viewport.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare class ScrollViewport {\n    viewPort: ElementRef;\n    readonly nativeElement: HTMLElement;\n    contentWrapperElement: HTMLElement;\n    hovered: Observable<boolean>;\n    clicked: Observable<any>;\n    get clientHeight(): number;\n    get clientWidth(): number;\n    get scrollHeight(): number;\n    get scrollWidth(): number;\n    get scrollTop(): number;\n    get scrollLeft(): number;\n    get scrollMaxX(): number;\n    get scrollMaxY(): number;\n    get contentHeight(): number;\n    get contentWidth(): number;\n    constructor(viewPort: ElementRef);\n    /**\n     * Activate viewport pointer events such as 'hovered' and 'clicked' events\n     */\n    activatePointerEvents(propagate: boolean, destroyed: Observable<void>): void;\n    /**\n     * Set this directive as a non-functional wrapper, called when a custom viewport is used\n     */\n    setAsWrapper(): void;\n    /**\n     * Set this directive as  the viewport, called when no custom viewport is used\n     */\n    setAsViewport(customClassName: string): void;\n    /**\n     * Scroll viewport vertically\n     */\n    scrollYTo(value: number): void;\n    /**\n     * Scroll viewport horizontally\n     */\n    scrollXTo(value: number): void;\n}\n"]}