{"ast":null,"code":"import { BehaviorSubject, ReplaySubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport let SubscribeService = /*#__PURE__*/(() => {\n  class SubscribeService {\n    constructor() {\n      this.subscribeClicked = new ReplaySubject(1);\n      this.subscribeClicked$ = this.subscribeClicked.asObservable();\n      this.showCountStatus = new BehaviorSubject(false);\n      this.showCountStatus$ = this.showCountStatus.asObservable();\n      this.updateSSIDCountStatus = new BehaviorSubject(false);\n      this.updateSSIDCount$ = this.updateSSIDCountStatus.asObservable();\n      this.mobileAuthToken = new BehaviorSubject(null);\n      this.mobileAuthToken$ = this.mobileAuthToken.asObservable();\n    }\n    updateClickStatus(clicked) {\n      this.subscribeClicked.next(clicked);\n    }\n    showCount(val) {\n      this.showCountStatus.next(val);\n    }\n    updateSSIDCount(val) {\n      this.updateSSIDCountStatus.next(val);\n    }\n    updateMobileToken(token) {\n      this.mobileAuthToken.next(token);\n    }\n  }\n  SubscribeService.ɵfac = function SubscribeService_Factory(t) {\n    return new (t || SubscribeService)();\n  };\n  SubscribeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SubscribeService,\n    factory: SubscribeService.ɵfac,\n    providedIn: 'root'\n  });\n  return SubscribeService;\n})();","map":null,"metadata":{},"sourceType":"module"}