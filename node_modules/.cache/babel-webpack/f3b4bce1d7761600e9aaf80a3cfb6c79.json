{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"src/app-services/translate.service\";\nimport * as i3 from \"../../marketing-channels/shared/services/marketing-channels-api.service\";\nimport * as i4 from \"../../marketing-campaigns/shared/services/marketing-campaigns-api.service\";\nimport * as i5 from \"../shared/services/marketing-campaign-define-api.service\";\nimport * as i6 from \"../shared/services/marketing-campaign-channels-api.service\";\nimport * as i7 from \"./../../../shared/services/sso-auth.service\";\nimport * as i8 from \"../../shared/services/marketing-common.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/forms\";\nconst _c0 = [\"includeChannelModal\"];\nfunction MarketingCampaignsChannelComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarketingCampaignsChannelComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"span\", 22);\n    i0.ɵɵelement(2, \"img\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 25);\n    i0.ɵɵelementStart(6, \"span\", 26);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_div_3_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.errorReset();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Error! \", ctx_r1.channelPostErrorMsg, \". \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"span\", 22);\n    i0.ɵɵelement(2, \"img\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 25);\n    i0.ɵɵelementStart(6, \"span\", 26);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_div_4_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.errorReset();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.channelAlertErrorMsg, \". \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"span\", 22);\n    i0.ɵɵelement(2, \"img\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 25);\n    i0.ɵɵelementStart(6, \"span\", 26);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_div_5_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.errorReset();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.campaignSuccessMsg, \".\");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r16.segmentExecutableSize), \" \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r17.segmentSocialSize), \" \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, item_r14.segmentSize));\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r14 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r19.language[\"All\"], \" (\", item_r14.include, \")\");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"-\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵelementStart(2, \"p\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵelementStart(7, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_13_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(3);\n      return ctx_r27.selectIncludeMailchimp(\"All\");\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_13_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext(3);\n      return ctx_r29.selectIncludeMailchimp(\"Non-Mobile Message\");\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r21.includeMailchimpSelected === \"Non-Mobile Message\" ? ctx_r21.language.mobile_non : ctx_r21.language[\"All\"], \" (\", i0.ɵɵpipeBind1(4, 6, ctx_r21.mailChimpSegmentCount), \") \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r21.language[\"All\"], \" (\", ctx_r21.selectedSegmentType == \"Acquisition\" || ctx_r21.uploadCheck ? ctx_r21.segmentExecutableSize : ctx_r21.segmentSize, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r21.language.mobile_non, \" (\", ctx_r21.selectedSegmentType == \"Acquisition\" || ctx_r21.uploadCheck ? ctx_r21.segmentNonMobileExecutableSize : ctx_r21.segmentNonMobileAppSize, \") \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵelementStart(2, \"p\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵelementStart(7, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_14_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(3);\n      return ctx_r30.selectIncludeConstant(\"All\");\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_14_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return ctx_r32.selectIncludeConstant(\"Non-Mobile Message\");\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r22.includeConstantSelected === \"Non-Mobile Message\" ? ctx_r22.language.mobile_non : ctx_r22.language[\"All\"], \" (\", i0.ɵɵpipeBind1(4, 6, ctx_r22.constantSegmentCount), \") \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r22.language[\"All\"], \" (\", ctx_r22.selectedSegmentType == \"Acquisition\" || ctx_r22.uploadCheck ? ctx_r22.segmentExecutableSize : ctx_r22.segmentSize, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r22.language.mobile_non, \" (\", ctx_r22.selectedSegmentType == \"Acquisition\" || ctx_r22.uploadCheck ? ctx_r22.segmentNonMobileExecutableSize : ctx_r22.segmentNonMobileAppSize, \") \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵelementStart(2, \"p\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵelementStart(7, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_15_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext(3);\n      return ctx_r33.selectIncludeFacebook(\"All\");\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_15_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext(3);\n      return ctx_r35.selectIncludeFacebook(\"Non-Mobile Message\");\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r23.includeFacebookSelected === \"Non-Mobile Message\" ? ctx_r23.language.mobile_non : ctx_r23.language[\"All\"], \" (\", i0.ɵɵpipeBind1(4, 6, ctx_r23.faceBookSegmentCount), \") \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r23.language[\"All\"], \" (\", ctx_r23.selectedSegmentType == \"Acquisition\" || ctx_r23.uploadCheck ? ctx_r23.segmentSocialSize : ctx_r23.segmentSize, \") \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r23.language.mobile_non, \" (\", ctx_r23.selectedSegmentType == \"Acquisition\" || ctx_r23.uploadCheck ? ctx_r23.segmentNonMobileSocialSize : ctx_r23.segmentNonMobileAppSize, \") \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵelementStart(2, \"p\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵelementStart(7, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_16_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return ctx_r36.selectIncludeHubspot(\"All\");\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_16_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r38 = i0.ɵɵnextContext(3);\n      return ctx_r38.selectIncludeHubspot(\"Non-Mobile Message\");\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r24.includeHubspotSelected === \"Non-Mobile Message\" ? ctx_r24.language.mobile_non : ctx_r24.language[\"All\"], \" (\", i0.ɵɵpipeBind1(4, 6, ctx_r24.hubspotSegmentCount), \") \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r24.language[\"All\"], \" (\", ctx_r24.selectedSegmentType == \"Acquisition\" || ctx_r24.uploadCheck ? ctx_r24.segmentExecutableSize : ctx_r24.segmentSize, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r24.language.mobile_non, \" (\", ctx_r24.selectedSegmentType == \"Acquisition\" || ctx_r24.uploadCheck ? ctx_r24.segmentNonMobileExecutableSize : ctx_r24.segmentNonMobileAppSize, \") \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵelementStart(3, \"input\", 30);\n    i0.ɵɵlistener(\"change\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const item_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return ctx_r39.channelSelect($event.target.checked, item_r14);\n    })(\"ngModelChange\", function MarketingCampaignsChannelComponent_ng_container_26_tr_1_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const item_r14 = i0.ɵɵnextContext().$implicit;\n      return item_r14.checked = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 13);\n    i0.ɵɵtemplate(7, MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_7_Template, 3, 3, \"span\", 15);\n    i0.ɵɵtemplate(8, MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_8_Template, 3, 3, \"span\", 15);\n    i0.ɵɵtemplate(9, MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_9_Template, 3, 3, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 31);\n    i0.ɵɵtemplate(11, MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_11_Template, 2, 2, \"span\", 32);\n    i0.ɵɵtemplate(12, MarketingCampaignsChannelComponent_ng_container_26_tr_1_span_12_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(13, MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_13_Template, 11, 8, \"div\", 33);\n    i0.ɵɵtemplate(14, MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_14_Template, 11, 8, \"div\", 33);\n    i0.ɵɵtemplate(15, MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_15_Template, 11, 8, \"div\", 33);\n    i0.ɵɵtemplate(16, MarketingCampaignsChannelComponent_ng_container_26_tr_1_div_16_Template, 11, 8, \"div\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r14 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", item_r14.checked)(\"value\", item_r14.marketingChannel);\n    i0.ɵɵattribute(\"disabled\", item_r14.available && !item_r14.mobcheck ? null : true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r14.marketingChannel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r15.selectedSegmentType == \"Acquisition\" || ctx_r15.uploadCheck) && item_r14.marketingChannel != \"Facebook\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r15.selectedSegmentType == \"Acquisition\" || ctx_r15.uploadCheck) && item_r14.marketingChannel == \"Facebook\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.selectedSegmentType != \"Acquisition\" && !ctx_r15.uploadCheck);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", item_r14.checked && item_r14.marketingChannel === \"Mobile Notification\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !item_r14.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.checked && item_r14.marketingChannel === \"Mailchimp\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.checked && (item_r14.marketingChannel === \"ConstantContact\" || item_r14.marketingChannel === \"Constant Contact\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.checked && item_r14.marketingChannel === \"Facebook\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.checked && item_r14.marketingChannel === \"Hubspot\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r14.description);\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MarketingCampaignsChannelComponent_ng_container_26_tr_1_Template, 19, 14, \"tr\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.show == true);\n  }\n}\nfunction MarketingCampaignsChannelComponent_tr_27_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" - \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MarketingCampaignsChannelComponent_tr_27_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵelementStart(2, \"p\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵelementStart(7, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_tr_27_div_11_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return ctx_r47.selectIncludeCahnnel(\"All\");\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_tr_27_div_11_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return ctx_r49.selectIncludeCahnnel(\"Non-Mobile Message\");\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r46.includechannelSelected.name === \"Non-Mobile Message\" ? ctx_r46.language.mobile_non : ctx_r46.language[\"All\"], \" (\", i0.ɵɵpipeBind1(4, 6, ctx_r46.includechannelSelected.count), \") \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r46.language[\"All\"], \" (\", i0.ɵɵpipeBind1(9, 8, ctx_r46.segmentSize), \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r46.language.mobile_non, \" (\", i0.ɵɵpipeBind1(12, 10, ctx_r46.segmentNonMobileAppSize), \") \");\n  }\n}\nfunction MarketingCampaignsChannelComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵelementStart(3, \"input\", 40);\n    i0.ɵɵlistener(\"change\", function MarketingCampaignsChannelComponent_tr_27_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.csvSelect($event.target.checked);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 13);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 31);\n    i0.ɵɵtemplate(10, MarketingCampaignsChannelComponent_tr_27_span_10_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(11, MarketingCampaignsChannelComponent_tr_27_div_11_Template, 13, 12, \"div\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"checked\", ctx_r5.csvSelected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language.CSV_Download);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, ctx_r5.segmentSize));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.csvSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.csvSelected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language.hint_download);\n  }\n}\nfunction MarketingCampaignsChannelComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"h5\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_template_28_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.closeModal();\n    });\n    i0.ɵɵelement(5, \"span\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 46);\n    i0.ɵɵelementStart(7, \"form\", 47);\n    i0.ɵɵelementStart(8, \"div\", 48);\n    i0.ɵɵelementStart(9, \"label\", 49);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"span\", 50);\n    i0.ɵɵtext(12, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 51);\n    i0.ɵɵelement(14, \"input\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 53);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function MarketingCampaignsChannelComponent_ng_template_28_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.closeModal();\n    });\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.language.Include_In_Channel);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.language.Amount, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r7.language.Save);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.language.Cancel);\n  }\n}\nexport let MarketingCampaignsChannelComponent = /*#__PURE__*/(() => {\n  class MarketingCampaignsChannelComponent {\n    constructor(dialogService, translateService, marketingChannelsApiService, marketingCampaignsApiService, marketingCampaignDefineApiService, marketingCampaignChannelsApiService, ssoAuthService, marketingCommonService) {\n      this.dialogService = dialogService;\n      this.translateService = translateService;\n      this.marketingChannelsApiService = marketingChannelsApiService;\n      this.marketingCampaignsApiService = marketingCampaignsApiService;\n      this.marketingCampaignDefineApiService = marketingCampaignDefineApiService;\n      this.marketingCampaignChannelsApiService = marketingCampaignChannelsApiService;\n      this.ssoAuthService = ssoAuthService;\n      this.marketingCommonService = marketingCommonService;\n      this.csvSelectData = new EventEmitter();\n      this.channelSelectData = new EventEmitter();\n      this.campaignStatus = new EventEmitter();\n      this.nextButtonValidation = new EventEmitter();\n      this.resetChannelData = new EventEmitter();\n      this.uploadCheck = false;\n      this.dtOptions = {};\n      this.campaignPostObject = {};\n      this.selectedChannelList = {};\n      this.csvSelected = false;\n      this.doubleChecked = false;\n      this.includechannelSelected = {\n        name: 'All',\n        count: 0\n      };\n      this.includeMailchimpSelected = 'All';\n      this.includeFacebookSelected = 'All';\n      this.includeHubspotSelected = 'All';\n      this.includeConstantSelected = 'All';\n      this.validationPassed = false;\n      this.channelPostError = false;\n      this.availableFacebook = false;\n      this.availableMailChimp = false;\n      this.availableHubspot = false;\n      this.availableConstant = false;\n      this.availableMobile = false;\n      this.campaignSuccess = false;\n      this.segmentSize = 0;\n      this.segmentExecutableSize = 0;\n      this.segmentNonMobileAppSize = 0;\n      this.segmentNonMobileExecutableSize = 0;\n      this.segmentMobileAppSize = 0;\n      this.segmentMobileExecutableSize = 0;\n      this.segmentNonMobileSocialSize = 0;\n      this.segmentSocialSize = 0;\n      this.editMode = false;\n      this.debounceTimer = false;\n      this.mailChimp = false;\n      this.hubspot = false;\n      this.mobileNotification = false;\n      this.faceBook = false;\n      this.constant = false;\n      this.loading = false;\n      this.deployError = false;\n      this.channelAlertMsg = false;\n      this.isAcquisition = false;\n      this.isAcquisitionCheck = false;\n      this.isDataAvilable = false;\n      this.scopeAsssiner();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    set resetChannelSelctedData(value) {\n      if (value) {\n        this.resetSelectedValues();\n      }\n    }\n    set selectedSegmentItemData(data) {\n      if (data) {\n        this.selectedSegmentType = data.segmentType;\n        if (data.segmentType == 'Upload') {\n          let name = data.segmentName;\n          let segmentname = name.substring(name.lastIndexOf(\"_\") + 1);\n          this.uploadCheck = segmentname == 'Prospects' ? true : false;\n        } else {\n          this.uploadCheck = false;\n        }\n      }\n      //this.resetData();\n      this.resetSelectedValues();\n      if (data && this.campaignDetailsDataArray) {\n        if (data.segmentType !== this.campaignDetailsDataArray.segmentType) {\n          this.isAcquisition = false;\n        }\n      }\n    }\n    set deployPreviousClicked(value) {\n      if (value && this.campaignChannelsData) {\n        this.campaignChannelsDataArray = this.campaignChannelsData;\n        //     if(!this.triggeredCampaign){\n        //         this.campaignChannelsDataArray = this.campaignChannelsData;\n        //         }else{\n        //             if(this.campaignChannelsData.length == this.campaignChannelsDataArray.length){\n        //                 this.campaignChannelsDataArray = this.campaignChannelsData;  \n        //             }\n        // }\n      }\n    }\n\n    ngOnInit() {\n      this.errorReset();\n      this.channelSubmit();\n      this.clearFunction();\n    }\n    scopeAsssiner() {\n      this.scopes = this.marketingCommonService.getCMCScopes();\n    }\n    dtOptionsAssigner() {\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        processing: true,\n        pageLength: 10,\n        lengthChange: false,\n        ordering: false,\n        searching: false\n      };\n    }\n    getCampaignChannelListApiLoader() {\n      this.campaignChannelsDataArray = [];\n      if (this.scopes.campaignWrite) {\n        this.errorReset();\n        this.getCampaignChannelListApiSubject = this.marketingChannelsApiService.MarketingChannelsListGET().subscribe(res => {\n          this.definePostObject = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n          this.triggeredCampaign = this.definePostObject && this.definePostObject.campaignType == 'Triggered' ? true : false;\n          if (this.triggeredCampaign && this.definePostObject.eventType != 'Service Limit Hit') {\n            res = res.filter(trigger => trigger.marketingChannel == 'Mobile Notification');\n          } else if (this.triggeredCampaign && this.definePostObject.eventType == 'Service Limit Hit') {\n            res = res.filter(trigger => trigger.marketingChannel == 'Mobile Notification' || trigger.marketingChannel == 'Mailchimp');\n          }\n          this.campaignChannelsDataArray = res;\n          this.campaignChannelsResponseData = res;\n          this.getCampaignDetailsApiLoader();\n        }, error => {\n          this.channelPostErrorMsg = this.marketingCommonService.errorHandling(error);\n          this.channelPostError = true;\n          this.channelErrorMsgAssigner(error);\n        });\n      }\n    }\n    getCampaignDetailsApiLoader() {\n      this.definePostObject = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n      if (this.definePostObject) {\n        this.errorReset();\n        this.loading = true;\n        this.isDataAvilable = false;\n        if (this.selectedSegmentType === undefined) {\n          this.selectedSegmentType = this.definePostObject.segmentType;\n          if (this.definePostObject.segmentType == 'Upload') {\n            let name = this.definePostObject.segmentName;\n            let segmentname = name.substring(name.lastIndexOf(\"_\") + 1);\n            this.uploadCheck = segmentname == 'Prospects' ? true : false;\n          } else {\n            this.uploadCheck = false;\n          }\n          this.isAcquisition = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n        }\n        if (this.selectedSegmentType !== (this.campaignDetailsDataArray && this.campaignDetailsDataArray.segmentType)) {\n          this.nextButtonValidation.emit(true);\n        }\n        this.getCampaignDetailsApiSubject = this.marketingCampaignChannelsApiService.GetCampaignDetails(this.definePostObject.campaignId).subscribe(res => {\n          this.campaignDetailsDataArray = res;\n          this.campaignStatus.emit(res.status);\n          this.loading = false;\n          this.segmentSize = this.campaignDetailsDataArray ? this.campaignDetailsDataArray.segmentSize : 0;\n          this.segmentMobileAppSize = this.campaignDetailsDataArray && this.campaignDetailsDataArray.segmentMobileAppSize != null ? this.campaignDetailsDataArray.segmentMobileAppSize : 0;\n          this.segmentNonMobileAppSize = this.definePostObject && this.definePostObject.segmentMobileAppSize != null ? this.definePostObject.segmentSize - this.definePostObject.segmentMobileAppSize : 0;\n          //   console.log(this.segmentNonMobileAppSize);\n          this.segmentExecutableSize = this.campaignDetailsDataArray ? this.campaignDetailsDataArray.segmentExecutableSize : 0;\n          this.segmentSocialSize = this.campaignDetailsDataArray && this.campaignDetailsDataArray.segmentSocialSize != null ? this.campaignDetailsDataArray.segmentSocialSize : 0;\n          this.segmentNonMobileExecutableSize = this.segmentExecutableSize && this.definePostObject.segmentMobileAppSize != null ? this.segmentExecutableSize - this.definePostObject.segmentMobileAppSize : 0;\n          this.segmentNonMobileSocialSize = this.segmentSocialSize && this.definePostObject.segmentMobileAppSize != null ? this.segmentSocialSize - this.definePostObject.segmentMobileAppSize : 0;\n          if (this.includechannelSelected['name'] === 'Non-Mobile Message') {\n            this.includechannelSelected['count'] = this.segmentNonMobileAppSize;\n          } else {\n            this.includechannelSelected['count'] = this.segmentSize;\n          }\n          let camp_channelArr = this.campaignChannelsDataArray;\n          this.campaignChannelsDataArray = camp_channelArr.map(data => {\n            if (this.triggeredCampaign && this.definePostObject.eventType == 'Service Limit Hit') {\n              if (data.marketingChannel === 'Mailchimp') {\n                data.segmentSize = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.include = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.show = true;\n                data.mobcheck = false;\n                if (this.includeMailchimpSelected === 'Non-Mobile Message') {\n                  this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n                } else {\n                  this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                }\n                data.include2 = this.includeMailchimpSelected;\n                this.availableMailChimp = data.available ? true : false;\n              } else if (data.marketingChannel === 'Mobile Notification') {\n                data.segmentSize = this.segmentMobileAppSize;\n                data.include = this.segmentMobileAppSize;\n                data.include3 = this.segmentMobileAppSize;\n                data.mobcheck = this.segmentMobileAppSize == 0 ? true : false;\n                data.show = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? false : true;\n                this.isAcquisitionCheck = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n                this.availableMobile = data.available ? true : false;\n              }\n              return data;\n            } else if (this.triggeredCampaign && this.definePostObject.eventType != 'Service Limit Hit') {\n              if (data.marketingChannel === 'Mobile Notification') {\n                data.segmentSize = this.segmentMobileAppSize;\n                data.include = this.segmentMobileAppSize;\n                data.include3 = this.segmentMobileAppSize;\n                data.mobcheck = this.segmentMobileAppSize == 0 ? true : false;\n                data.show = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? false : true;\n                this.isAcquisitionCheck = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n                this.availableMobile = data.available ? true : false;\n              }\n              return data;\n            } else {\n              if (data.marketingChannel === 'Mobile Notification') {\n                data.segmentSize = this.segmentMobileAppSize;\n                data.include = this.segmentMobileAppSize;\n                data.include3 = this.segmentMobileAppSize;\n                data.mobcheck = this.segmentMobileAppSize == 0 ? true : false;\n                data.show = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? false : true;\n                this.isAcquisitionCheck = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n                this.availableMobile = data.available ? true : false;\n              } else if (data.marketingChannel === 'Mailchimp') {\n                data.segmentSize = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.include = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.show = true;\n                data.mobcheck = false;\n                if (this.includeMailchimpSelected === 'Non-Mobile Message') {\n                  this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n                } else {\n                  this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                }\n                data.include2 = this.includeMailchimpSelected;\n                this.availableMailChimp = data.available ? true : false;\n              } else if (data.marketingChannel === 'Facebook') {\n                data.segmentSize = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n                data.include = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n                data.show = true;\n                data.mobcheck = false;\n                if (this.includeFacebookSelected === 'Non-Mobile Message') {\n                  this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentNonMobileSocialSize : this.segmentNonMobileAppSize;\n                } else {\n                  this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n                  ;\n                }\n                data.include1 = this.includeFacebookSelected;\n                this.availableFacebook = data.available ? true : false;\n              } else if (data.marketingChannel === 'Hubspot') {\n                data.segmentSize = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.include = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.show = true;\n                data.mobcheck = false;\n                if (this.includeHubspotSelected === 'Non-Mobile Message') {\n                  this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n                  ;\n                } else {\n                  this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                  ;\n                }\n                data.include1 = this.includeHubspotSelected;\n                this.availableHubspot = data.available ? true : false;\n              } else if (data.marketingChannel === 'ConstantContact' || data.marketingChannel === 'Constant Contact') {\n                data.segmentSize = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.include = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                data.show = true;\n                data.mobcheck = false;\n                if (this.includeConstantSelected === 'Non-Mobile Message') {\n                  this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n                  ;\n                } else {\n                  this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n                  ;\n                }\n                data.include4 = this.includeConstantSelected;\n                this.availableConstant = data.available ? true : false;\n              }\n              return data;\n            }\n          });\n          if (this.isAcquisitionCheck && !this.availableFacebook && !this.availableHubspot && !this.availableMailChimp && !this.availableConstant) {\n            this.isDataAvilable = true;\n          }\n          if (this.triggeredCampaign && this.campaignChannelsDataArray.length == 1) {\n            for (var i = 0; i < this.campaignChannelsDataArray.length; i++) {\n              this.isDataAvilable = this.campaignChannelsDataArray[i].available && !this.campaignChannelsDataArray[i].mobcheck ? false : true;\n            }\n          }\n        }, error => {\n          this.loading = false;\n          this.channelErrorMsgAssigner(error);\n          //  this.channelPostErrorMsg = this.marketingCommonService.errorHandling(error);\n        });\n      }\n    }\n\n    channelErrorMsgAssigner(error) {\n      // if (error.status == 404) {\n      //     this.channelPostErrorMsg = this.language.URLnotFoungError;\n      //     return;\n      // } else \n      if (error.status == 504 || error.status == 502) {\n        this.channelPostError = true;\n        this.channelPostErrorMsg = this.language.timeoutErrorError;\n        return;\n      } else if (error.status == 400) {\n        if (error.errorMessage == \"OK\") {\n          this.channelPostErrorMsg = this.language.Bad_Request;\n          this.channelPostError = true;\n        } else {\n          this.channelPostErrorMsg = error.error;\n          this.channelPostError = true;\n        }\n        return;\n      } else if (error.status == 500) {\n        if (error.errorMessage == \"OK\") {\n          this.channelPostErrorMsg = this.language.internalServerError;\n          this.channelPostError = true;\n        } else {\n          this.channelPostErrorMsg = error.error;\n          this.channelPostError = true;\n        }\n        return;\n      }\n      // else if (error.error) {\n      //     this.channelPostError = true;\n      //     let errorMsg = error.error.errorDesc;\n      //     this.channelPostErrorMsg = errorMsg ? errorMsg : error.error;\n      // }\n    }\n\n    channelSelect(event, data) {\n      this.isAcquisition = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n      this.channelAlertMsg = false;\n      // console.log(data, 'data===')\n      if (this.triggeredCampaign && this.definePostObject.eventType == 'Service Limit Hit') {\n        if (data.marketingChannel === 'Mailchimp') {\n          this.mailChimp = event;\n          if (event) {\n            this.selectedChannelList.mailChimp = data;\n            //   console.log(this.selectedChannelList.mailChimp, 'data this.selectedChannelList.mailChimp', data)\n            this.includeMailchimpSelected = 'All';\n            this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          } else {\n            this.selectedChannelList.mailChimp = {};\n            this.includeMailchimpSelected = 'All';\n            this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          }\n        } else if (data.marketingChannel === 'Mobile Notification') {\n          this.mobileNotification = event;\n          if (event) {\n            this.selectedChannelList.mobileNotification = data;\n          } else {\n            this.selectedChannelList.mobileNotification = {};\n          }\n        }\n        this.selectedChannelList.faceBook = {};\n        this.selectedChannelList.hubspot = {};\n        this.selectedChannelList.constant = {};\n        //  this.selectedChannelList.mobileNotification = {};\n      } else if (this.triggeredCampaign && this.definePostObject.eventType != 'Service Limit Hit') {\n        if (data.marketingChannel === 'Mobile Notification') {\n          this.mobileNotification = event;\n          if (event) {\n            this.selectedChannelList.mobileNotification = data;\n          } else {\n            this.selectedChannelList.mobileNotification = {};\n          }\n        }\n        this.selectedChannelList.faceBook = {};\n        this.selectedChannelList.hubspot = {};\n        this.selectedChannelList.constant = {};\n        this.selectedChannelList.mailChimp = {};\n      } else {\n        if (data.marketingChannel === 'Mailchimp') {\n          this.mailChimp = event;\n          if (event) {\n            this.selectedChannelList.mailChimp = data;\n            //   console.log(this.selectedChannelList.mailChimp, 'data this.selectedChannelList.mailChimp', data)\n            this.includeMailchimpSelected = 'All';\n            this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          } else {\n            this.selectedChannelList.mailChimp = {};\n            this.includeMailchimpSelected = 'All';\n            this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          }\n        } else if (data.marketingChannel === 'Mobile Notification') {\n          this.mobileNotification = event;\n          if (event) {\n            this.selectedChannelList.mobileNotification = data;\n          } else {\n            this.selectedChannelList.mobileNotification = {};\n          }\n        } else if (data.marketingChannel === 'Facebook') {\n          this.faceBook = event;\n          if (event) {\n            this.selectedChannelList.faceBook = data;\n            this.includeFacebookSelected = 'All';\n            this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n          } else {\n            this.selectedChannelList.faceBook = {};\n            this.includeFacebookSelected = 'All';\n            this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n          }\n        } else if (data.marketingChannel === 'Hubspot') {\n          this.hubspot = event;\n          if (event) {\n            this.selectedChannelList.hubspot = data;\n            this.includeHubspotSelected = 'All';\n            this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          } else {\n            this.selectedChannelList.hubspot = {};\n            this.includeHubspotSelected = 'All';\n            this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          }\n        } else if (data.marketingChannel === 'ConstantContact' || data.marketingChannel === 'Constant Contact') {\n          this.constant = event;\n          if (event) {\n            this.selectedChannelList.constant = data;\n            this.includeConstantSelected = 'All';\n            this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          } else {\n            this.selectedChannelList.constant = {};\n            this.includeConstantSelected = 'All';\n            this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentExecutableSize : this.segmentSize;\n            ;\n          }\n        }\n      }\n      let checkBoxData = {\n        mobileNotifivationSelect: this.mobileNotification,\n        mailChimpSelect: this.mailChimp,\n        faceBookSelect: this.faceBook,\n        hubspotSelect: this.hubspot,\n        constantSelect: this.constant,\n        campaignChannelsDataArray: this.campaignChannelsDataArray\n      };\n      this.headerCheckBoxChecker();\n      this.channelSelectData.emit(checkBoxData);\n      // if (event) {\n      //     this.selectedChannelList = data;\n      // } else {\n      //     this.selectedChannelList = undefined;\n      // }\n      // this.headerCheckBoxChecker();\n    }\n\n    channelAllSelect(event) {\n      this.isAcquisition = this.selectedSegmentType === \"Acquisition\" || this.uploadCheck ? true : false;\n      this.channelAlertMsg = false;\n      if (this.selectedSegmentType === 'Acquisition' || this.uploadCheck) {\n        this.csvSelect(false);\n        this.mobileNotification = false;\n      } else if (this.triggeredCampaign) {\n        this.csvSelect(false);\n        this.mobileNotification = event;\n      } else {\n        this.csvSelect(event);\n        this.mobileNotification = event;\n      }\n      if (!this.triggeredCampaign) {\n        this.mailChimp = event;\n        this.faceBook = event;\n        this.hubspot = event;\n        this.constant = event;\n      } else if (this.triggeredCampaign && this.definePostObject.eventType == 'Service Limit Hit') {\n        this.mailChimp = event;\n      } else if (this.triggeredCampaign && this.definePostObject.eventType != 'Service Limit Hit') {\n        this.mailChimp = false;\n      }\n      if (event) {\n        this.campaignChannelsDataArray.filter(data => {\n          data.checked = event;\n          if (data.marketingChannel === 'Mailchimp') {\n            if (data.available) {\n              this.selectedChannelList.mailChimp = data;\n              //  console.log(this.selectedChannelList, 'this.selectedChannelList', data)\n              this.includeMailchimpSelected = 'All';\n              this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n              ;\n              this.mailChimp = true;\n            } else {\n              data.checked = false;\n              this.mailChimp = false;\n              this.selectedChannelList.mailChimp = {};\n              // console.log('this.selectedChannelList112')\n            }\n          } else if (data.marketingChannel === 'Facebook') {\n            if (data.available) {\n              this.selectedChannelList.faceBook = data;\n              this.includeFacebookSelected = 'All';\n              this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' || this.uploadCheck ? this.segmentSocialSize : this.segmentSize;\n              this.faceBook = true;\n            } else {\n              data.checked = false;\n              this.faceBook = false;\n              this.selectedChannelList.faceBook = {};\n            }\n          } else if (data.marketingChannel === 'Hubspot') {\n            if (data.available) {\n              this.selectedChannelList.hubspot = data;\n              this.includeHubspotSelected = 'All';\n              this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n              ;\n              this.hubspot = true;\n            } else {\n              data.checked = false;\n              this.hubspot = false;\n              this.selectedChannelList.hubspot = {};\n            }\n          } else if (data.marketingChannel === 'ConstantContact' || data.marketingChannel === 'Constant Contact') {\n            if (data.available) {\n              this.selectedChannelList.constant = data;\n              this.includeConstantSelected = 'All';\n              this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n              ;\n              this.constant = true;\n            } else {\n              data.checked = false;\n              this.constant = false;\n              this.selectedChannelList.constant = {};\n            }\n          } else {\n            if (data.available) {\n              this.selectedChannelList.mobileNotification = data;\n              this.mobileNotification = data.mobcheck ? false : true;\n              data.checked = data.mobcheck ? false : true;\n            } else {\n              data.checked = false;\n              this.mobileNotification = false;\n              this.selectedChannelList.mobileNotification = {};\n            }\n          }\n        });\n      } else {\n        this.campaignChannelsDataArray.filter(data => {\n          data.checked = event;\n        });\n        this.selectedChannelList = {};\n        this.includeMailchimpSelected = 'All';\n        this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n        ;\n      }\n      let checkBoxData = {\n        mobileNotifivationSelect: this.mobileNotification,\n        mailChimpSelect: this.mailChimp,\n        faceBookSelect: this.faceBook,\n        hubspotSelect: this.hubspot,\n        constantSelect: this.constant,\n        campaignChannelsDataArray: this.campaignChannelsDataArray\n      };\n      // console.log(checkBoxData,'checkBoxData')\n      this.headerCheckBoxChecker();\n      this.channelSelectData.emit(checkBoxData);\n      // this.channelSelect(event, this.campaignChannelsDataArray[0])\n    }\n\n    csvSelect(event) {\n      this.channelAlertMsg = false;\n      this.csvSelected = event;\n      this.selectedCSV = event;\n      sessionStorage.setItem('SelectedCSV', this.selectedCSV);\n      // this.marketingCampaignDefineApiService.csvDownloadSelectSubject.next(event);\n      this.headerCheckBoxChecker();\n      if (event) {\n        this.includechannelSelected = {\n          name: 'All',\n          count: this.segmentSize\n        };\n      } else {\n        this.includechannelSelected = {\n          name: 'All',\n          count: this.segmentSize\n        };\n      }\n      this.csvSelectData.emit(this.csvSelected);\n    }\n    selectIncludeCahnnel(name) {\n      this.includechannelSelected['name'] = name;\n      if (name == 'All') {\n        this.includechannelSelected['count'] = this.segmentSize;\n      } else {\n        this.includechannelSelected['count'] = this.segmentNonMobileAppSize;\n      }\n    }\n    selectIncludeMailchimp(name) {\n      if (name === 'All') {\n        this.includeMailchimpSelected = 'All';\n        this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n      } else {\n        this.includeMailchimpSelected = 'Non-Mobile Message';\n        this.mailChimpSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n      }\n    }\n    selectIncludeConstant(name) {\n      if (name === 'All') {\n        this.includeConstantSelected = 'All';\n        this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n        ;\n        //this.selectedChannelList.constant['include2'] = this.includeConstantSelected\n      } else {\n        this.includeConstantSelected = 'Non-Mobile Message';\n        this.constantSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n        // this.selectedChannelList.constant['include2'] = this.includeConstantSelected\n        //this.headerCheckBoxChecker()\n      }\n    }\n\n    selectIncludeFacebook(name) {\n      if (name === 'All') {\n        this.includeFacebookSelected = 'All';\n        this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentSocialSize : this.segmentSize;\n      } else {\n        this.includeFacebookSelected = 'Non-Mobile Message';\n        this.faceBookSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentNonMobileSocialSize : this.segmentNonMobileAppSize;\n      }\n    }\n    selectIncludeHubspot(name) {\n      if (name === 'All') {\n        this.includeHubspotSelected = 'All';\n        this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentExecutableSize : this.segmentSize;\n      } else {\n        this.includeHubspotSelected = 'Non-Mobile Message';\n        this.hubspotSegmentCount = this.selectedSegmentType == 'Acquisition' ? this.segmentNonMobileExecutableSize : this.segmentNonMobileAppSize;\n      }\n    }\n    // Submit within Component\n    channelSubmit() {\n      // if (this.validationPassed) {\n      this.editDataAssigner();\n      if (this.defineSuccessEmitterSubject) {\n        this.defineSuccessEmitterSubject.unsubscribe();\n      }\n      this.definePostObject = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n      this.defineSuccessEmitterSubject = this.marketingCampaignDefineApiService.defineSuccessEmitterSubject.subscribe(res => {\n        this.triggeredCampaign = this.definePostObject && this.definePostObject.campaignType == 'Triggered' ? true : false;\n        this.getCampaignChannelListApiLoader();\n        if (this.includechannelSelected) {\n          this.includechannelSelected['count'] = this.segmentSize;\n        }\n      });\n      // this.marketingCampaignDefineApiService.defineNextEmitterSubject.subscribe((res) => {\n      //     this.definePostObject = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n      //     this.segmentSize = this.definePostObject ? this.definePostObject.segmentSize : 0;\n      //     this.segmentNonMobileAppSize = this.definePostObject ? this.definePostObject.segmentMobileAppSize - this.definePostObject.segmentSize : 0;\n      //     this.includechannelSelected['count'] = this.segmentSize\n      // })\n      if (this.channelNextEmitterSubject) {\n        this.channelNextEmitterSubject.unsubscribe();\n      }\n      this.channelNextEmitterSubject = this.marketingCampaignDefineApiService.channelNextEmitterSubject.subscribe(res => {\n        this.validator();\n        if (this.validationPassed) {\n          // if (this.selectedChannelList || this.csvSelected) {\n          if (this.selectedChannelList.mailChimp && this.selectedChannelList.hubspot && this.selectedChannelList.constant && this.includechannelSelected || this.selectedChannelList.mobileNotification && this.includechannelSelected) {\n            // this.campaignChannelsDataArray[0]['includeInChannel'] = this.includechannelSelected['name']\n            this.campaignChannelsDataArray.filter(data => {\n              data['includeInChannel'] = this.includechannelSelected['name'];\n            });\n          }\n          let channelSelected = this.selectedChannelList ? true : false;\n          this.definePostObject[\"csvDownloadOnly\"] = this.csvSelected;\n          // if (this.csvSelected && !this.mobileNotification && !this.mailChimp && !this.faceBook) {\n          //     this.definePostObject[\"status\"] = 'In-Progress';\n          //     this.campaignUpdater(res);\n          // } else if (!this.csvSelected && !this.mobileNotification && !this.mailChimp && !this.faceBook) {\n          //     // this.csvSelected = true\n          //     this.csvSelectData.emit(this.csvSelected);\n          //     this.definePostObject[\"csvDownloadOnly\"] = this.csvSelected;\n          //     this.definePostObject[\"status\"] = 'In-Progress';\n          //     this.campaignUpdater(res);\n          // } else {\n          this.campaignUpdater(res);\n          // setTimeout(() => {\n          //     this.marketingCampaignDefineApiService.defineSuccesEventTrigger();\n          // }, 100);\n          // }\n          this.headerCheckBoxChecker();\n        }\n      });\n    }\n    campaignUpdater(saveBtn) {\n      this.errorReset();\n      if (!this.debounceTimer) {\n        this.debounceTimer = true;\n        this.csvSelected = this.definePostObject.csvDownloadOnly;\n        if (this.scopes.campaignWrite) {\n          this.loading = true;\n          if (this.definePostObject.hasOwnProperty('segmentExecutableSize')) {\n            delete this.definePostObject[\"segmentExecutableSize\"];\n          }\n          this.defineCampaignSubject = this.marketingCampaignsApiService.CampaignPUT(this.definePostObject).subscribe(res => {\n            if (saveBtn == false) {\n              this.marketingCampaignDefineApiService.setDefineDataEmitter(res);\n              this.campaignSuccess = true;\n              this.campaignSuccessMsg = this.language.Campaign_update;\n            } else {\n              this.marketingCampaignDefineApiService.defineSuccesEventTrigger(res);\n            }\n            this.debounceTimer = false;\n            this.loading = false;\n          }, error => {\n            this.loading = false;\n            this.defineErrorMsgAssigner(error);\n            this.debounceTimer = false;\n            this.channelErrorMsgAssigner(error);\n          });\n        }\n      }\n    }\n    errorReset() {\n      this.channelPostError = false;\n      this.campaignSuccess = false;\n      this.channelAlertMsg = false;\n    }\n    defineErrorMsgAssigner(error) {\n      let errorMsg = error.error.errorDesc;\n      this.channelPostErrorMsg = errorMsg ? errorMsg : error.error;\n      this.channelPostError = true;\n    }\n    clearFunction() {\n      if (this.clearCampaignSubject) {\n        this.clearCampaignSubject.unsubscribe();\n      }\n      this.clearCampaignSubject = this.marketingCampaignDefineApiService.clearCampaignDataSubject.subscribe(res => {\n        if (res == 'channel') {\n          this.dataAssigner();\n        }\n      });\n    }\n    dataAssigner(res) {\n      let data = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n      if (data) {\n        this.editDataAssigner();\n      } else {\n        this.resetData();\n      }\n    }\n    editDataAssigner() {\n      if (this.editChannelDataSubject) {\n        this.editChannelDataSubject.unsubscribe();\n      }\n      this.editChannelDataSubject = this.marketingCampaignDefineApiService.editChannelDataSubject.subscribe(res => {\n        setTimeout(() => {\n          this.editMode = true;\n          let data = this.marketingCampaignDefineApiService.getMobileChannelDataEmitter();\n          //console.log(data)\n          //this.definePostObject = this.marketingCampaignDefineApiService.getDefineDataEmitter();\n          // this.csvSelected = this.definePostObject.csvDownloadOnly;\n          // this.csvSelect(this.csvSelected)\n          if (data.mailChimp || data.mobileNotification || data.faceBook || data.hubspot || data.constant) {\n            if (!this.triggeredCampaign) {\n              this.campaignChannelsDataArray = this.campaignChannelsData;\n            } else {\n              //  console.log('enter222', this.campaignChannelsDataArray.length,this.campaignChannelsData.length)\n              //  console.log('enter111')\n              if (this.campaignChannelsData.length == this.campaignChannelsDataArray.length) {\n                this.campaignChannelsDataArray = this.campaignChannelsData;\n              } else {\n                // console.log('enter222', this.campaignChannelsDataArray.length,this.campaignChannelsData.length)\n                if (this.campaignChannelsDataArray.length > 0) {\n                  let checkBoxData = {\n                    mobileNotifivationSelect: false,\n                    mailChimpSelect: false,\n                    faceBookSelect: false,\n                    hubspotSelect: false,\n                    constantSelect: false,\n                    campaignChannelsDataArray: this.campaignChannelsDataArray\n                  };\n                  this.channelSelectData.emit(checkBoxData);\n                }\n                //\n                // let checkBoxData = {\n                //     mobileNotifivationSelect: false,\n                //     mailChimpSelect: false,\n                //     faceBookSelect: false,\n                //     hubspotSelect: false,\n                //     constantSelect: false,\n                //     campaignChannelsDataArray: this.campaignChannelsDataArray\n                // }\n                // this.channelSelectData.emit(checkBoxData);\n              }\n            }\n\n            this.selectedChannelList = data;\n            // .find(el => el.marketingChannelId == data[0].marketingChannelId);\n          }\n          //console.log(this.selectedChannelList, 'this.selectedChannelList111')\n          this.headerCheckBoxChecker();\n        }, 1000);\n      });\n    }\n    resetSelectedValues() {\n      // console.log('reset')\n      this.doubleChecked = false;\n      if (this.campaignChannelsDataArray) {\n        this.campaignChannelsDataArray.filter(data => {\n          data.checked = false;\n        });\n      }\n      this.mobileNotification = false;\n      this.mailChimp = false;\n      this.faceBook = false;\n      this.hubspot = false;\n      this.constant = false;\n      this.csvSelected = false;\n      this.resetChannelData.emit();\n    }\n    resetData() {\n      this.selectedChannelList = this.campaignChannelsDataArray;\n      this.doubleChecked = false;\n      this.csvSelected = false;\n    }\n    headerCheckBoxChecker() {\n      // console.log('enter');\n      // console.log(this.selectedChannelList, 'this.selectedChannelList2222')\n      this.marketingCampaignDefineApiService.setMobileChannelDataEmitter(this.selectedChannelList);\n      this.marketingCampaignDefineApiService.setCsvDataEmitter(this.csvSelected);\n      if (this.isAcquisition || this.uploadCheck) {\n        let campaignChannelsDataChecked = this.campaignChannelsDataArray.filter(item => item.checked == true && item.marketingChannel !== \"Mobile Notification\");\n        let campaignChannelsDataAvailable = this.campaignChannelsDataArray.filter(item => item.available == true && item.marketingChannel !== \"Mobile Notification\");\n        // console.error(campaignChannelsDataChecked,campaignChannelsDataAvailable,'else')\n        if (campaignChannelsDataChecked.length == campaignChannelsDataAvailable.length) {\n          this.doubleChecked = true;\n        } else {\n          this.doubleChecked = false;\n        }\n      } else {\n        let campaignChannelsDataChecked = this.campaignChannelsDataArray.filter(item => item.checked == true);\n        let campaignChannelsDataAvailable = this.campaignChannelsDataArray.filter(item => item.available == true && item.mobcheck == false);\n        // console.log(campaignChannelsDataChecked.length, campaignChannelsDataAvailable.length, this.csvSelected,'else')\n        if (!this.triggeredCampaign) {\n          //console.error({campaignChannelsDataChecked,campaignChannelsDataAvailable})\n          if (campaignChannelsDataChecked.length == campaignChannelsDataAvailable.length && this.csvSelected) {\n            this.doubleChecked = true;\n          } else {\n            this.doubleChecked = false;\n          }\n        } else {\n          this.doubleChecked = campaignChannelsDataChecked.length == campaignChannelsDataAvailable.length ? true : false;\n        }\n      }\n    }\n    validator() {\n      if (this.triggeredCampaign) {\n        let campaignChannelsTrigger = this.campaignChannelsDataArray.filter(item => item.checked == true);\n        if (campaignChannelsTrigger.length == 0) {\n          this.mobileNotification = false;\n          this.mailChimp = false;\n        }\n      }\n      if (this.mobileNotification || this.mailChimp || this.faceBook || this.constant || this.csvSelected || this.hubspot) {\n        this.validationPassed = true;\n        this.channelAlertMsg = false;\n      } else {\n        this.validationPassed = false;\n        this.channelAlertErrorMsg = 'Please select at least one channel';\n        this.channelAlertMsg = true;\n      }\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.getCampaignChannelListApiSubject) {\n        this.getCampaignChannelListApiSubject.unsubscribe();\n      }\n      if (this.defineCampaignSubject) {\n        this.defineCampaignSubject.unsubscribe();\n      }\n      if (this.createCampaignSubject) {\n        this.createCampaignSubject.unsubscribe();\n      }\n      if (this.createChannelSubject) {\n        this.createChannelSubject.unsubscribe();\n      }\n      if (this.clearCampaignSubject) {\n        this.clearCampaignSubject.unsubscribe();\n      }\n      if (this.channelNextEmitterSubject) {\n        this.channelNextEmitterSubject.unsubscribe();\n      }\n      if (this.defineSuccessEmitterSubject) {\n        this.defineSuccessEmitterSubject.unsubscribe();\n      }\n      if (this.editChannelDataSubject) {\n        this.editChannelDataSubject.unsubscribe();\n      }\n    }\n    includeChannelModalOpen() {\n      this.dialogService.open(this.includeChannelModal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'custom-modal'\n      });\n    }\n    closeModal() {\n      this.dialogService.dismissAll();\n    }\n  }\n  MarketingCampaignsChannelComponent.ɵfac = function MarketingCampaignsChannelComponent_Factory(t) {\n    return new (t || MarketingCampaignsChannelComponent)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.MarketingChannelsApiService), i0.ɵɵdirectiveInject(i4.MarketingCampaignsApiService), i0.ɵɵdirectiveInject(i5.MarketingCampaignDefineApiService), i0.ɵɵdirectiveInject(i6.MarketingCampaignChannelsApiService), i0.ɵɵdirectiveInject(i7.SsoAuthService), i0.ɵɵdirectiveInject(i8.MarketingCommonService));\n  };\n  MarketingCampaignsChannelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MarketingCampaignsChannelComponent,\n    selectors: [[\"app-marketing-campaigns-channel\"]],\n    viewQuery: function MarketingCampaignsChannelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.includeChannelModal = _t.first);\n      }\n    },\n    inputs: {\n      campaignChannelsData: \"campaignChannelsData\",\n      resetChannelSelctedData: \"resetChannelSelctedData\",\n      selectedSegmentItemData: \"selectedSegmentItemData\",\n      deployPreviousClicked: \"deployPreviousClicked\"\n    },\n    outputs: {\n      csvSelectData: \"csvSelectData\",\n      channelSelectData: \"channelSelectData\",\n      campaignStatus: \"campaignStatus\",\n      nextButtonValidation: \"nextButtonValidation\",\n      resetChannelData: \"resetChannelData\"\n    },\n    decls: 30,\n    vars: 13,\n    consts: [[\"class\", \"no-data\", 4, \"ngIf\"], [1, \"subscriber-details\"], [1, \"new-campaign\"], [\"class\", \"alert alert-warning alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-warning alert-dismissible fade show col-lg-4\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"campaign-row\", \"flex\"], [\"id\", \"select-mrktng-channel\", 1, \"greyaa\", \"title-second\"], [1, \"table-responsive\", \"table-data-no\"], [1, \"row-border\", \"hover\", \"table-alter\", \"cmc-campaign-channel\"], [1, \"chk-group\"], [\"type\", \"checkbox\", \"id\", \"headerCheckBox\", 3, \"disabled\", \"checked\", \"change\"], [\"for\", \"chkhead\"], [1, \"text-right\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"col-md-12\"], [\"includeChannelModal\", \"\"], [1, \"no-data\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"success-img\"], [\"src\", \"./assets/img/error-icon.svg\"], [1, \"d-inline-flex\"], [\"type\", \"button\", \"data-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"fade\", \"show\", \"col-lg-4\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [\"src\", \"./assets/img/success-icon.svg\"], [\"type\", \"checkbox\", \"id\", \"mobilechannelCheckBox\", 3, \"ngModel\", \"value\", \"change\", \"ngModelChange\"], [1, \"drop-right\"], [\"class\", \"text-left\", 4, \"ngIf\"], [\"class\", \"dropdown-button\", \"ngbDropdown\", \"\", 4, \"ngIf\"], [1, \"text-left\"], [\"ngbDropdown\", \"\", 1, \"dropdown-button\"], [\"id\", \"dropdownPeriod\", \"ngbDropdownToggle\", \"\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"mr-2\"], [1, \"listdata\", \"mb0\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownPeriod\"], [\"ngbDropdownItem\", \"\", 1, \"greyaa\", 3, \"click\"], [\"type\", \"checkbox\", \"id\", \"csvCheckBox\", 3, \"checked\", \"change\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"custom-form\"], [1, \"form-group\", \"ccl-form\"], [\"for\", \"inputEmail3\", 1, \"col-sm-12\", \"col-form-label\"], [1, \"required\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"id\", \"inputinr\", \"placeholder\", \"$2\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"px-3\", \"px-3\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"transparant\", \"px-3\", \"px-3\", \"m-2\", 3, \"click\"]],\n    template: function MarketingCampaignsChannelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MarketingCampaignsChannelComponent_div_0_Template, 4, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, MarketingCampaignsChannelComponent_div_3_Template, 7, 1, \"div\", 3);\n        i0.ɵɵtemplate(4, MarketingCampaignsChannelComponent_div_4_Template, 7, 1, \"div\", 4);\n        i0.ɵɵtemplate(5, MarketingCampaignsChannelComponent_div_5_Template, 7, 1, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"h2\", 7);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"table\", 9);\n        i0.ɵɵelementStart(11, \"thead\");\n        i0.ɵɵelementStart(12, \"tr\");\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"change\", function MarketingCampaignsChannelComponent_Template_input_change_15_listener($event) {\n          return ctx.channelAllSelect($event.target.checked);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"label\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\", 13);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\", 13);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, MarketingCampaignsChannelComponent_ng_container_26_Template, 2, 1, \"ng-container\", 14);\n        i0.ɵɵtemplate(27, MarketingCampaignsChannelComponent_tr_27_Template, 14, 8, \"tr\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, MarketingCampaignsChannelComponent_ng_template_28_Template, 19, 4, \"ng-template\", 16, 17, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.channelPostError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.channelAlertMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.campaignSuccess);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Select_Mrktng_Channel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.isDataAvilable)(\"checked\", ctx.doubleChecked);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Channel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Segment_Size);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Includes_in_Channel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Decription);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.campaignChannelsDataArray);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedSegmentType !== \"Acquisition\" && !ctx.uploadCheck && !ctx.triggeredCampaign);\n      }\n    },\n    directives: [i9.NgIf, i9.NgForOf, i10.CheckboxControlValueAccessor, i10.NgControlStatus, i10.NgModel, i1.NgbDropdown, i1.NgbDropdownToggle, i1.NgbDropdownMenu, i1.NgbDropdownItem, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.NgForm],\n    pipes: [i9.DecimalPipe],\n    styles: [\".p-10[_ngcontent-%COMP%]{padding:10px}.p-15[_ngcontent-%COMP%]{padding:15px}.p-20[_ngcontent-%COMP%]{padding:20px}.p-25[_ngcontent-%COMP%]{padding:25px}.p-30[_ngcontent-%COMP%]{padding:30px}.p-35[_ngcontent-%COMP%]{padding:35px}.p-40[_ngcontent-%COMP%]{padding:40px}.p-45[_ngcontent-%COMP%]{padding:45px}.p-50[_ngcontent-%COMP%]{padding:50px}.p-55[_ngcontent-%COMP%]{padding:55px}.p-60[_ngcontent-%COMP%]{padding:60px}.pt-10[_ngcontent-%COMP%]{padding-top:10px}.pt-15[_ngcontent-%COMP%]{padding-top:15px}.pt-20[_ngcontent-%COMP%]{padding-top:20px}.pt-25[_ngcontent-%COMP%]{padding-top:25px}.pt-30[_ngcontent-%COMP%]{padding-top:30px}.pt-35[_ngcontent-%COMP%]{padding-top:35px}.pt-40[_ngcontent-%COMP%]{padding-top:40px}.pt-45[_ngcontent-%COMP%]{padding-top:45px}.pt-50[_ngcontent-%COMP%]{padding-top:50px}.pt-55[_ngcontent-%COMP%]{padding-top:55px}.pt-60[_ngcontent-%COMP%]{padding-top:60px}.mt-10[_ngcontent-%COMP%]{margin-top:10px}.mt-15[_ngcontent-%COMP%]{margin-top:15px}.mt-20[_ngcontent-%COMP%]{margin-top:20px}.mt-25[_ngcontent-%COMP%]{margin-top:25px}.mt-30[_ngcontent-%COMP%]{margin-top:30px}.mt-35[_ngcontent-%COMP%]{margin-top:35px}.mt-40[_ngcontent-%COMP%]{margin-top:40px}.mt-45[_ngcontent-%COMP%]{margin-top:45px}.mt-50[_ngcontent-%COMP%]{margin-top:50px}.mt-55[_ngcontent-%COMP%]{margin-top:55px}.mt-60[_ngcontent-%COMP%]{margin-top:60px}.mb0[_ngcontent-%COMP%]{margin-bottom:0}.mb1[_ngcontent-%COMP%]{margin-bottom:10px}.mb15[_ngcontent-%COMP%]{margin-bottom:15px}.mb2[_ngcontent-%COMP%]{margin-bottom:20px}.mb3[_ngcontent-%COMP%]{margin-bottom:30px}.mb4[_ngcontent-%COMP%]{margin-bottom:40px}.mb5[_ngcontent-%COMP%]{margin-bottom:50px}.mb6[_ngcontent-%COMP%]{margin-bottom:60px}.mb7[_ngcontent-%COMP%]{margin-bottom:70px}.mb8[_ngcontent-%COMP%]{margin-bottom:80px}.mb9[_ngcontent-%COMP%]{margin-bottom:90px}.primary[_ngcontent-%COMP%]{color:#0279ff}.secondary[_ngcontent-%COMP%]{color:#0054b2}.calixpurple[_ngcontent-%COMP%]{color:#43367d}.calixblue[_ngcontent-%COMP%]{color:#324a9d}.calixsky[_ngcontent-%COMP%]{color:#387cbf}.calixorange[_ngcontent-%COMP%]{color:#e97b00}.brightred[_ngcontent-%COMP%]{color:#ff3600}.lightred[_ngcontent-%COMP%]{color:#ff734f}.purple[_ngcontent-%COMP%]{color:#91479b}.error[_ngcontent-%COMP%]{color:#c70000}.warning[_ngcontent-%COMP%]{color:#ff8238}.warningt[_ngcontent-%COMP%]{color:#c74900}.success[_ngcontent-%COMP%]{color:#82bf00}.successt[_ngcontent-%COMP%]{color:#507500}.caution[_ngcontent-%COMP%]{color:#f7c343}.wgrey[_ngcontent-%COMP%]{color:#f8f8fa}.snowgrey[_ngcontent-%COMP%]{color:#ebeaef}.lgrey[_ngcontent-%COMP%]{color:#ccc}.calixgrey[_ngcontent-%COMP%]{color:#9e9e9e}.blastgrey[_ngcontent-%COMP%]{color:gray}.greyaa[_ngcontent-%COMP%]{color:#1a1f22}.darkgrey[_ngcontent-%COMP%]{color:#333}.calixblack[_ngcontent-%COMP%]{color:#1a1f22}.calixblack[_ngcontent-%COMP%]{color:#000}.calixred[_ngcontent-%COMP%]{color:#fb2d55}.calixgreen[_ngcontent-%COMP%]{color:#349885}.calixaqblue[_ngcontent-%COMP%]{color:#26c0eb}.title[_ngcontent-%COMP%]{font-size:42px;font-weight:300;line-height:53px}.title-second[_ngcontent-%COMP%]{font-size:24px!important;font-style:normal;font-weight:400!important;line-height:30px;letter-spacing:0em;text-align:left;color:#1a1f22}.heading-sm[_ngcontent-%COMP%]{font-size:16px;font-weight:600;line-height:22px}.listlabels[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:22px}.listdataem[_ngcontent-%COMP%]{font-size:13px;font-weight:600;line-height:21px}.listdata[_ngcontent-%COMP%]{font-size:13px;font-weight:400;line-height:24px}.formlabels[_ngcontent-%COMP%]{font-size:13px;font-weight:400;line-height:16px}.captions[_ngcontent-%COMP%]{font-size:11px;font-weight:600;line-height:13.2px}.chartno[_ngcontent-%COMP%]{font-size:10px;font-weight:400;line-height:12px}.btn-large[_ngcontent-%COMP%]{border-radius:26px;padding:12px;min-width:130px;text-align:center;font-size:20px;font-weight:400;color:#fff;box-shadow:5px 5px 10px #00000026;border:0}.btn-large.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-large.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-large.primary[_ngcontent-%COMP%]:focus{background:#0054b2;outline:none;box-shadow:none;border:0}.btn-large.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-large.btn-default[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c}.btn-large.btn-default[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-large.btn-default[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-large.btn-default.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-default[_ngcontent-%COMP%]{border-radius:16px;padding:5px;min-width:86px;text-align:center;font-size:16px;font-weight:400;color:#fff;box-shadow:3px 3px 6px #00000026;border:0}.btn-default.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-default.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-default.primary[_ngcontent-%COMP%]:focus{background:#0054b2}.btn-default.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-default.btn-dft[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c;border:1px solid #CCCCCC}.btn-default.btn-dft[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-default.btn-dft[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-default.btn-dft.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-small[_ngcontent-%COMP%]{border-radius:12px;padding:3px;min-width:70px;text-align:center;font-size:12px;font-weight:400;color:#fff;box-shadow:2px 2px 4px #00000026;border:0}.btn-small.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-small.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-small.primary[_ngcontent-%COMP%]:focus{background:#EBEAEF}.btn-small.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-small.btn-default[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c}.btn-small.btn-default[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-small.btn-default[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-small.btn-default.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-round[_ngcontent-%COMP%]{border-radius:50%;width:32px;height:32px;display:flex;justify-content:center;align-items:center;border:0;background-position:center;background-repeat:no-repeat;padding:0}.btn-round.info-round[_ngcontent-%COMP%]{width:32px;height:32px}.btn-round.primary[_ngcontent-%COMP%]{background-color:#0279ff}.btn-round.primary[_ngcontent-%COMP%]:hover{background-color:#0054b2}.btn-round.primary[_ngcontent-%COMP%]:focus{background-color:#0054b2;outline:none;box-shadow:none;border:0}.btn-round[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none;border:0}.btn-round.btn-small-24[_ngcontent-%COMP%]{width:24px;height:24px}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]{background-color:#f8f8fa}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]:hover{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]:focus{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-arrow[_ngcontent-%COMP%]{height:32px;line-height:32px;min-width:110px;text-align:center;border:0;padding:0;box-shadow:2px 2px 4px #00000026;font-size:16px;font-weight:400;color:#1a1f22;justify-content:center;align-items:center;position:relative;border-radius:26px}.btn-arrow[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:relative;top:-2px}.btn-arrow.btn-arr-prev[_ngcontent-%COMP%]{box-shadow:none}.btn-arrow.btn-arr-prev[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-right:10px}.btn-arrow.btn-arr-nxt[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:10px}.btn-arrow.primary[_ngcontent-%COMP%]{background-color:#0279ff;color:#fff}.btn-arrow.primary[_ngcontent-%COMP%]:hover{background-color:#0054b2}.btn-arrow.primary[_ngcontent-%COMP%]:focus{background-color:#0054b2;outline:none;box-shadow:none;border:0}.btn-arrow.btn-grey[_ngcontent-%COMP%]{background-color:#f8f8fa}.btn-arrow.btn-grey[_ngcontent-%COMP%]:hover{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-arrow.btn-grey[_ngcontent-%COMP%]:focus{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){width:16px;height:16px;min-height:16px;position:relative!important;cursor:pointer;appearance:none;-webkit-appearance:none;-moz-appearance:none}[type=radio][_ngcontent-%COMP%]:checked:before, [type=radio][_ngcontent-%COMP%]:checked:after, [type=radio][_ngcontent-%COMP%]:not(:checked):before{content:\\\"\\\";position:absolute;border-radius:100%}[type=radio][_ngcontent-%COMP%]:checked:before{background:#0279FF;width:16px;height:16px;top:0px}[type=radio][_ngcontent-%COMP%]:checked:after{width:12px;height:12px;background:#0279FF;top:2px;left:2px;border:1px solid #ffffff;z-index:9}[type=radio][_ngcontent-%COMP%]:not(:checked):before{background:#ffffff;border:1px solid #CCCCCC;width:16px;height:16px}[type=radio][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%], [type=radio][_ngcontent-%COMP%]:not(:checked) + label[_ngcontent-%COMP%]{position:relative;padding-left:10px;cursor:pointer;display:inline-block;color:#666}[type=radio][_ngcontent-%COMP%]:checked:disabled:before{background:#b4d7ff}[type=radio][_ngcontent-%COMP%]:checked:disabled:after{background:#b4d7ff}[type=radio][_ngcontent-%COMP%]:disabled, [type=radio][_ngcontent-%COMP%]:disabled + label[_ngcontent-%COMP%]{cursor:not-allowed}[type=radio][_ngcontent-%COMP%]:not(:checked):hover:before{background:#ffffff;border:1px solid #0279FF}[type=radio][_ngcontent-%COMP%]:not(:checked):disabled:before{background:#F9F9FB;border:1px solid #e6e6e6}[type=radio][_ngcontent-%COMP%]:not(:checked):disabled:hover:before{background:#F9F9FB;border:1px solid #e6e6e6}[type=radio][_ngcontent-%COMP%]{border-color:transparent!important}[type=radio][_ngcontent-%COMP%]:focus{border-color:transparent!important}[type=radio][_ngcontent-%COMP%]:active{border-color:transparent!important}.subscriber-details[_ngcontent-%COMP%]{margin-top:23px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]{margin-bottom:35px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]{justify-content:space-between;align-items:center;margin-bottom:20px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-left[_ngcontent-%COMP%]{width:300px;padding-right:20px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-left[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:0}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-left[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0;font-size:22px;font-weight:300;line-height:28px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]{justify-content:flex-end;width:calc(100% - 300px)}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:8px;min-width:138px}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]   button.btn-dft[_ngcontent-%COMP%]{box-shadow:none}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{box-shadow:none;border:0;outline:none}.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]   button.btn-no[_ngcontent-%COMP%]{background:transparent;border:0;position:relative;top:-3px;margin:0 0 0 17px;padding:0}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]{justify-content:space-between;align-items:center;margin-bottom:39px}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]{justify-content:flex-start;align-items:center}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:166px;position:relative;font-size:13px;font-weight:400;color:#9e9e9e;padding:6.5px}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{border:0;background:transparent;outline:none}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:600;display:inline-block;margin-right:10px}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{color:#fff;background:#0279ff}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button.success[_ngcontent-%COMP%]{color:#fff;background:#82BF00}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:nth-child(1){z-index:4;left:0}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:nth-child(2){z-index:3;left:-20px}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:nth-child(3){z-index:2;left:-40px}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:nth-child(4){z-index:1;left:-60px;box-shadow:none}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav-rht[_ngcontent-%COMP%]{justify-content:flex-end;align-items:center}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav-rht[_ngcontent-%COMP%]   .btn-arr-nxt[_ngcontent-%COMP%]{margin-left:16px}.notes-modal-body[_ngcontent-%COMP%]   .top-sec[_ngcontent-%COMP%]{justify-content:space-between;align-items:center;margin-top:40px;margin-bottom:20px}.notes-modal-body[_ngcontent-%COMP%]   .top-sec[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.notes-modal-body[_ngcontent-%COMP%]   .top-sec[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{transform:rotate(90deg);margin-right:10px}.notes-modal-body[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:41px;margin-bottom:38px}.notes-modal-body[_ngcontent-%COMP%]   .reason-select[_ngcontent-%COMP%]{margin-bottom:32px}.notes-modal-body[_ngcontent-%COMP%]   .reason-select[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:6px}.notes-modal-body[_ngcontent-%COMP%]   .add-bnt[_ngcontent-%COMP%]{justify-content:flex-start;align-items:center;margin:40px 0 20px}.notes-modal-body[_ngcontent-%COMP%]   .add-bnt[_ngcontent-%COMP%]   button.btn-default[_ngcontent-%COMP%]{margin-left:20px;padding:12px;width:130px;border-radius:30px}.dropdown-button.show[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{z-index:2!important}.dropdown-button.show[_ngcontent-%COMP%]   .dropdown-menu.show[_ngcontent-%COMP%]{z-index:1!important;top:0px!important;left:0px!important;padding-top:10px;padding-bottom:10px;border-radius:10px}.dropdown-button.show[_ngcontent-%COMP%]   .dropdown-menu.show[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border-radius:10px;margin-bottom:5px}.text-right[_ngcontent-%COMP%]{padding-right:75px;text-align:start!important}.required-field[_ngcontent-%COMP%]{font-size:20px;color:#d9001b}.transparant[_ngcontent-%COMP%]{color:#1a1f22;padding:5px 15px}.dropdown-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{justify-content:flex-start;align-items:flex-start}.text-left[_ngcontent-%COMP%]{padding-left:6px!important}.dropdown-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:auto!important}.dropup[_ngcontent-%COMP%]{position:absolute!important;width:15%}.table-responsive[_ngcontent-%COMP%]{overflow:visible!important}td.dataTables_empty[_ngcontent-%COMP%]{display:none!important}tr.odd[_ngcontent-%COMP%]{display:none}.result-channel[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;font-size:16px;font-weight:600;text-align:right;width:100%}.result-channel[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding-bottom:3px}.result-channel[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .total-name[_ngcontent-%COMP%]{width:110px;padding-right:25px}.listdata[_ngcontent-%COMP%]{font-size:16px!important}.dropup[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:none!important}@media (max-width: 1100px){.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .campaign-row[_ngcontent-%COMP%]   .camp-rht[_ngcontent-%COMP%]   .tabs[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{width:33%}}@media (max-width: 950px){.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav[_ngcontent-%COMP%]{margin-bottom:20px;width:100%}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .nc-nav-row[_ngcontent-%COMP%]   .nc-nav-rht[_ngcontent-%COMP%]{width:100%}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .campaign-row[_ngcontent-%COMP%]   .camp-form[_ngcontent-%COMP%]{width:100%}.subscriber-details[_ngcontent-%COMP%]   .new-campaign[_ngcontent-%COMP%]   .campaign-row[_ngcontent-%COMP%]   .camp-rht[_ngcontent-%COMP%]{width:100%}}@media (max-width: 900px){.subscriber-details[_ngcontent-%COMP%]   .subs-title[_ngcontent-%COMP%]   .st-header[_ngcontent-%COMP%]   .sth-rht[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-bottom:20px;min-width:120px}}.cmc-campaign-channel[_ngcontent-%COMP%]{width:100%;overflow-x:auto}.cmc-campaign-channel[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #CCCCCC;font-weight:600;font-size:14px;line-height:18px;padding-bottom:7px}.cmc-campaign-channel[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{height:32px}.cmc-campaign-channel[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-weight:400;font-size:15px;line-height:24px;padding:7px 0}.cmc-campaign-channel[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(4){padding:0}.cmc-campaign-channel[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(1){padding:0}.cmc-campaign-channel[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even){background:#F8F8FA}\"]\n  });\n  return MarketingCampaignsChannelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}