{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let MarketingCampaignChannelsApiService = /*#__PURE__*/(() => {\n  class MarketingCampaignChannelsApiService {\n    constructor(httpClient, ssoAuthService) {\n      this.httpClient = httpClient;\n      this.ssoAuthService = ssoAuthService;\n      this.baseURL = environment.API_BASE_URL;\n      this.campaignChannel = this.baseURL + 'cmc-channel/channel';\n      // https://occ-api-dev.calixcloud/campaign/occ/cmcConfig/v1/campaign\n      this.campaignDetails = this.baseURL + 'cmc-campaigns/campaign';\n      this.campaignCSVTS = this.baseURL + 'cmc-channel/channel/download';\n      this.campaignList = this.baseURL + 'cmc-campaigns/campaign/channel_list';\n      this.audienceSync = this.baseURL + 'cmc-campaigns/triggered_campaign/audience';\n      this.customFieldAPI = this.baseURL + 'cmc-campaigns/campaign/available_fields_detail';\n      this.customFieldPost = this.baseURL + 'cmc-campaigns/campaign/custom_fields';\n    }\n    CampaignChannelListGET() {\n      return this.httpClient.get(this.campaignChannel);\n    }\n    customFieldListGET() {\n      return this.httpClient.get(this.customFieldAPI);\n    }\n    CampaignChannelByOrgGET(id) {\n      return this.httpClient.get(`${this.campaignChannel}/${id}`);\n      // return this.httpClient.get(`${this.campaignChannel}/${this.ssoAuthService.getOrgId()}/${this.ssoAuthService.getUsername()}/campaign/${id}`)\n    }\n\n    CampaignChannelPUT(data) {\n      return this.httpClient.put(this.campaignChannel, data);\n    }\n    CampaignChannelListPUT(id, data) {\n      return this.httpClient.put(`${this.campaignList}/${id}`, data);\n    }\n    CampaignChannelPOST(data) {\n      return this.httpClient.post(this.campaignChannel, data);\n    }\n    CampaignCustomFIeldPOST(data) {\n      return this.httpClient.post(this.customFieldPost, data);\n    }\n    CampaignChannelByCampaignDELETE() {\n      return this.httpClient.get(this.campaignChannel);\n    }\n    CampaignChannelByCampaignGET() {\n      return this.httpClient.get(this.campaignChannel);\n    }\n    audeinceSyncDetailGET(id) {\n      return this.httpClient.get(`${this.audienceSync}/${id}`);\n    }\n    // public GetCampaignDetails(campaignId) {\n    //   let headers: HttpHeaders = new HttpHeaders();\n    //   headers = headers.append('Accept', 'application/json');\n    //   headers = headers.append('X-Calix-AccessToken', this.ssoAuthService.getAccessToken());\n    //   headers = headers.append('X-Calix-ClientID', environment.X_CALIX_CLIENTID);\n    //   return this.httpClient.get(this.campaignDetails, { headers });\n    // }\n    GetCampaignDetails(campaignId) {\n      return this.httpClient.get(`${this.campaignDetails}/${campaignId}`);\n    }\n    downloadCSVTS(campaignId) {\n      let downloadURL = `${this.campaignCSVTS}/${campaignId}`;\n      return {\n        downloadURL: downloadURL,\n        fileName: campaignId\n      };\n    }\n  }\n  MarketingCampaignChannelsApiService.ɵfac = function MarketingCampaignChannelsApiService_Factory(t) {\n    return new (t || MarketingCampaignChannelsApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  MarketingCampaignChannelsApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketingCampaignChannelsApiService,\n    factory: MarketingCampaignChannelsApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarketingCampaignChannelsApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}