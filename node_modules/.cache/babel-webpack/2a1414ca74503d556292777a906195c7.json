{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { CONTEXT_PAD_ENTRIES as availableActions } from './ContextPadOptions';\nconst LOW_PRIORITY = 500;\nlet ContextPadProvider = /*#__PURE__*/(() => {\n  class ContextPadProvider {\n    constructor(config, injector, contextPad, contextPadProvider) {\n      contextPadProvider.autoPlace = undefined;\n      if (config.autoPlace !== false) {\n        contextPadProvider.autoPlace = injector.get('autoPlace', false);\n      }\n      contextPad.registerProvider(LOW_PRIORITY, this);\n    }\n    getContextPadEntries(element) {\n      return function (entries) {\n        forEach(entries, function (entry, key) {\n          if (!availableActions.includes(key)) {\n            delete entries[key];\n          }\n        });\n        return entries;\n      };\n    }\n  }\n  ContextPadProvider.$inject = ['config', 'injector', 'contextPad', 'contextPadProvider'];\n  return ContextPadProvider;\n})();\nexport { ContextPadProvider as default };","map":null,"metadata":{},"sourceType":"module"}