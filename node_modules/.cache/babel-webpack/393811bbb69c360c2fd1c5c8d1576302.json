{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/sso-auth.service\";\nimport * as i2 from \"./../../../app-services/translate.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"./services/support-wifi.service\";\nimport * as i6 from \"src/app/shared-utils/date-utils.service\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"../shared/component/subscriber-menu/subscriber-menu.component\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/forms\";\nconst _c0 = [\"selfHealConfirmModal\"];\nconst _c1 = function (a1) {\n  return [\"rg\", a1];\n};\nconst _c2 = function (a0) {\n  return [a0];\n};\nfunction SupportWifiComponent_li_5_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_li_5_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const device_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.setActiveTab(device_r5.serialNumber, device_r5);\n    });\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const device_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r7.router.isActive(\"/\" + ctx_r7.MODULE + \"/wifi/rg/\" + device_r5.serialNumber, false));\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c1, device_r5.serialNumber))(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, ctx_r7.activeTab == device_r5.serialNumber ? \"active\" : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.modelName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.serialNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.opMode == \"RG\" ? ctx_r7.ssoService.isSmbEnabled(false) ? ctx_r7.language[\"Small Business Gateway\"] : ctx_r7.language.Residential_Gateway : ctx_r7.language.WAP.replace(\"WAP-IGMP\", \"Mesh(SAT)\").replace(\"WAP\", \"Mesh(SAT)\"));\n  }\n}\nconst _c3 = function (a1) {\n  return [\"extender\", a1];\n};\nfunction SupportWifiComponent_li_5_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_li_5_a_2_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const device_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.setActiveTab(device_r5.serialNumber, device_r5);\n    });\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const device_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r8.router.isActive(\"/\" + ctx_r8.MODULE + \"/wifi/extender/\" + device_r5.serialNumber, false));\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c3, device_r5.serialNumber))(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, ctx_r8.activeTab == device_r5.serialNumber ? \"active\" : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.modelName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.serialNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r5.opMode == \"RG\" ? ctx_r8.ssoService.isSmbEnabled(false) ? ctx_r8.language[\"Small Business Gateway\"] : ctx_r8.language.Residential_Gateway : ctx_r8.language.WAP.replace(\"WAP-IGMP\", \"Mesh(SAT)\").replace(\"WAP\", \"Mesh(SAT)\"));\n  }\n}\nfunction SupportWifiComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵtemplate(1, SupportWifiComponent_li_5_a_1_Template, 7, 11, \"a\", 16);\n    i0.ɵɵtemplate(2, SupportWifiComponent_li_5_a_2_Template, 7, 11, \"a\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const device_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"id\", \"wifi-router-tab-\", i_r6, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", device_r5.opMode == \"RG\" && ctx_r0.wifiRead && !ctx_r0.isModel7XX);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", device_r5.opMode !== \"RG\" && ctx_r0.wifiRead);\n  }\n}\nfunction SupportWifiComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_li_6_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.setActiveTab(\"ssid\", \"\");\n    });\n    i0.ɵɵelementStart(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_li_6_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.setActiveTab(\"ssid\", \"\");\n    });\n    i0.ɵɵelementStart(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r1.router.isActive(\"/\" + ctx_r1.MODULE + \"/wifi/ssid\", false) || ctx_r1.router.isActive(\"/\" + ctx_r1.MODULE + \"/wifi/ssidold\", false));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, ctx_r1.activeTab == \"ssid\" ? \"active\" : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.SSID_Manager, \"\");\n  }\n}\nfunction SupportWifiComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 18);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 24);\n    i0.ɵɵelementStart(8, \"label\", 25);\n    i0.ɵɵelementStart(9, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function SupportWifiComponent_div_8_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.ssidSelfHeal = $event;\n    })(\"click\", function SupportWifiComponent_div_8_Template_input_click_9_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.openSelfHealConfirmModal($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵelement(11, \"small\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Self_Heal);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.ssidSelfHealTime ? i0.ɵɵpipeBind2(6, 4, ctx_r2.ssidSelfHealTime, \"MM/dd/yyyy, hh:mm:ss a\") : \"\", \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.ssidSelfHeal)(\"disabled\", !ctx_r2.wifiWrite);\n  }\n}\nfunction SupportWifiComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"h5\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_ng_template_17_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.closeModal();\n    });\n    i0.ɵɵelement(4, \"span\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 31);\n    i0.ɵɵelementStart(6, \"div\", 1);\n    i0.ɵɵelementStart(7, \"div\", 32);\n    i0.ɵɵelementStart(8, \"h5\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 33);\n    i0.ɵɵelementStart(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_ng_template_17_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.doSsidSelfHeal();\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SupportWifiComponent_ng_template_17_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.closeModal();\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Confirm, \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r4.selfHealConfirmMessage);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Cancel, \" \");\n  }\n}\nexport let SupportWifiComponent = /*#__PURE__*/(() => {\n  class SupportWifiComponent {\n    constructor(ssoService, translateService, router, route, dialogService, api, dateUtils, sso, titleService) {\n      this.ssoService = ssoService;\n      this.translateService = translateService;\n      this.router = router;\n      this.route = route;\n      this.dialogService = dialogService;\n      this.api = api;\n      this.dateUtils = dateUtils;\n      this.sso = sso;\n      this.titleService = titleService;\n      this.deviceData = [];\n      this.scopeFlag = {};\n      this.ssidSelfHealData = {};\n      this.activeTab = '';\n      this.wifiRead = false;\n      this.wifiWrite = false;\n      this.wifiSSIDRead = false;\n      this.wifiSSIDWrite = false;\n      this.showSelfHeal = false;\n      this.showRG = false;\n      this.selfHealVisiblityInfo = {\n        hasSelfHeal: false,\n        dataAvailable: false\n      };\n      this.MODULE = 'support';\n      let url = this.router.url;\n      if (url.indexOf('/support/') > -1) {\n        this.MODULE = 'support';\n      } else this.MODULE = 'cco';\n      this.orgId = this.ssoService.getOrgId();\n      this.subsId = this.ssoService.getCSCSubscriberId();\n      if (this.subsId === 'undefined') this.subsId = undefined;\n      this.getScopes();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    ngOnInit() {\n      var _a, _b;\n      this.apiCallDone = true;\n      this.showSelfHeal = false;\n      this.error = false;\n      let url = this.router.url;\n      // if (localStorage.getItem('wifi_time_check')) {\n      //   return;\n      // }\n      // localStorage.setItem('wifi_time_check', 'true');\n      if (url.indexOf('/support/') > -1) {\n        this.MODULE = 'support';\n      } else this.MODULE = 'cco';\n      this.deviceData = JSON.parse(sessionStorage.getItem(\"calix.deviceData\"));\n      this.selfHealVisibleSubs = this.api.selfHealVisibility.subscribe(data => {\n        this.selfHealVisiblityInfo.hasSelfHeal = data;\n        this.selfHealVisiblityInfo.dataAvailable = true;\n        if (this.selfHealVisiblityInfo.hasSelfHeal) {\n          this.getSelfHeal();\n        }\n      });\n      this.pageChangesSubs = this.api.ssidPage.subscribe(data => {\n        this.activeTab = data;\n      });\n      //this.deviceData = this.deviceData.filter(obj => obj.serialNumber && !obj.hasOwnProperty('ont')); // TO fix CCL-33120  !obj.hasOwnProperty('ont') added\n      this.deviceData = (_a = this.deviceData) === null || _a === void 0 ? void 0 : _a.filter(obj => obj._id);\n      if ((_b = this.deviceData) === null || _b === void 0 ? void 0 : _b.length) {\n        const index = this.deviceData.findIndex(device => device.opMode == \"RG\");\n        if (index > -1) this.deviceData.splice(0, 0, this.deviceData.splice(index, 1)[0]);\n      }\n      /*\r\n      //this.checkSpecialModel();\r\n      if (url.indexOf('/rg/') > -1 && this.deviceData.length && !this.isModel7XX) {\r\n        let urlFsan = url.split('/rg/')[1];\r\n        let match = this.deviceData.filter((el) => el.serialNumber == urlFsan && el.opMode == 'RG');\r\n        if (match.length) {\r\n          // if (match[0][\"modelName\"] && (match[0][\"modelName\"].indexOf('GS') == -1 && match[0][\"modelName\"].indexOf('812G') == -1)) {\r\n          //   this.showSelfHeal = true;\r\n          // }\r\n          this.activeTab = urlFsan;\r\n          //this.router.navigate([`.${url}`]);\r\n          //this.router.navigate([`./rg/${urlFsan}`], { relativeTo: this.route });\r\n        } else {\r\n          this.deviceNotMatchError();\r\n        }\r\n      } else if (url.indexOf('/extender/') > -1 && this.deviceData.length) {\r\n        let urlFsan = url.split('/extender/')[1];\r\n        let match = this.deviceData.filter((el) => el.serialNumber == urlFsan && el.opMode != 'RG');\r\n        if (match.length) {\r\n          this.activeTab = urlFsan;\r\n          this.router.navigate([`.${url}`]);\r\n        } else {\r\n          this.deviceNotMatchError();\r\n        }\r\n      } else if (url.indexOf('/wifi/ssid') > -1 && this.wifiRead) {\r\n        this.activeTab = 'ssid';\r\n        //this.router.navigate([`./ssid`], { relativeTo: this.route });\r\n      } else {\r\n        let routeUrl = '';\r\n        if (this.deviceData.length && this.deviceData[0][\"serialNumber\"] && this.deviceData[0][\"opMode\"] == 'RG' && !this.isModel7XX) {\r\n          // if (this.deviceData[0][\"modelName\"].indexOf('GS') == -1) {\r\n          //   this.showSelfHeal = true;\r\n          // }\r\n          this.activeTab = this.deviceData[0][\"serialNumber\"];\r\n          routeUrl = `${this.MODULE}/wifi/rg/${this.deviceData[0][\"serialNumber\"]}`;\r\n          routeUrl = `rg/${this.deviceData[0][\"serialNumber\"]}`;\r\n          //this.router.navigate([routeUrl], { relativeTo: this.route });\r\n        } else if (this.deviceData.length && this.deviceData[0][\"serialNumber\"] && this.deviceData[0][\"opMode\"] !== 'RG') {\r\n          this.activeTab = this.deviceData[0][\"serialNumber\"];\r\n          routeUrl = `${this.MODULE}/wifi/extender/${this.deviceData[0][\"serialNumber\"]}`;\r\n          this.router.navigate([routeUrl]);\r\n        } else if (this.deviceData.length && this.isModel7XX && this.deviceData[1][\"serialNumber\"] && this.deviceData[1][\"opMode\"] !== 'RG') {\r\n          this.activeTab = this.deviceData[1][\"serialNumber\"];\r\n          routeUrl = `${this.MODULE}/wifi/extender/${this.deviceData[1][\"serialNumber\"]}`;\r\n          this.router.navigate([routeUrl]);\r\n        } else {\r\n          this.deviceNotMatchError();\r\n        }\r\n      }\r\n        */\n      //this.getSelfHeal();\n    }\n\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n      if (this.pageChangesSubs) {\n        this.pageChangesSubs.unsubscribe();\n      }\n      if (this.selfHealVisibleSubs) this.selfHealVisibleSubs.unsubscribe();\n    }\n    getScopes() {\n      let scopes = this.ssoService.getScopes();\n      // if (environment.VALIDATE_SCOPE) {\n      //   scopes['cloud.rbac.csc.wifi'] = scopes['cloud.rbac.csc.wifi'] ? scopes['cloud.rbac.csc.wifi'] : [];\n      //   if (scopes && (scopes['cloud.rbac.csc.wifi'])) {\n      //     if (scopes['cloud.rbac.csc.wifi'].indexOf('read') !== -1) {\n      //       this.wifiRead = true;\n      //     }\n      //     if (scopes['cloud.rbac.csc.wifi'].indexOf('write') !== -1) {\n      //       this.wifiWrite = true;\n      //     }\n      //   }\n      // } else {\n      //   this.wifiRead = true;\n      //   this.wifiWrite = true;\n      // }\n      if (environment.VALIDATE_SCOPE) {\n        if (this.ssoService.getCscType() !== 'DME') {\n          scopes['cloud.rbac.csc.wifi'] = scopes['cloud.rbac.csc.wifi'] ? scopes['cloud.rbac.csc.wifi'] : [];\n          if (scopes && scopes['cloud.rbac.csc.wifi']) {\n            if (scopes['cloud.rbac.csc.wifi'].indexOf('read') !== -1) {\n              this.wifiRead = true;\n            }\n            if (scopes['cloud.rbac.csc.wifi'].indexOf('write') !== -1) {\n              this.wifiWrite = true;\n            }\n          }\n        } else {\n          scopes['cloud.rbac.csc.wifi.basic'] = scopes['cloud.rbac.csc.wifi.basic'] ? scopes['cloud.rbac.csc.wifi.basic'] : [];\n          if (scopes && scopes['cloud.rbac.csc.wifi.basic']) {\n            if (scopes['cloud.rbac.csc.wifi.basic'].indexOf('read') !== -1) {\n              this.wifiRead = true;\n            }\n            if (scopes['cloud.rbac.csc.wifi.basic'].indexOf('write') !== -1) {\n              this.wifiWrite = true;\n            }\n          }\n        }\n      } else {\n        this.wifiRead = true;\n        this.wifiWrite = true;\n      }\n      /*------- Start code for CCL-48250 -----------*/\n      if (environment.VALIDATE_SCOPE) {\n        if (this.ssoService.getCscType() !== 'DME') {\n          scopes['cloud.rbac.csc.ssidmanager'] = scopes['cloud.rbac.csc.ssidmanager'] ? scopes['cloud.rbac.csc.ssidmanager'] : [];\n          scopes['cloud.rbac.csc.ssidmanager.ssidcreate'] = scopes['cloud.rbac.csc.ssidmanager.ssidcreate'] ? scopes['cloud.rbac.csc.ssidmanager.ssidcreate'] : [];\n          scopes['cloud.rbac.csc.ssidmanager.ssidedit'] = scopes['cloud.rbac.csc.ssidmanager.ssidedit'] ? scopes['cloud.rbac.csc.ssidmanager.ssidedit'] : [];\n          if (scopes['cloud.rbac.csc.ssidmanager.ssidcreate'].length > 0 || scopes['cloud.rbac.csc.ssidmanager.ssidedit'].length > 0) {\n            this.wifiSSIDRead = true;\n          } else {\n            this.wifiSSIDRead = false;\n          }\n        }\n        // else {\n        //   scopes['cloud.rbac.csc.wifi.basic'] = scopes['cloud.rbac.csc.wifi.basic'] ? scopes['cloud.rbac.csc.wifi.basic'] : [];\n        //   if (scopes && (scopes['cloud.rbac.csc.wifi.basic'])) {\n        //     if (scopes['cloud.rbac.csc.wifi.basic'].indexOf('read') !== -1) {\n        //       this.wifiRead = true;\n        //     }\n        //     if (scopes['cloud.rbac.csc.wifi.basic'].indexOf('write') !== -1) {\n        //       this.wifiWrite = true;\n        //     }\n        //   }\n        // }\n      } else {\n        this.wifiSSIDRead = false;\n        //this.wifiSSIDWrite = true;\n      }\n      /*------- End code for CCL-48250 -----------*/\n    }\n\n    openSelfHealConfirmModal(e) {\n      e.preventDefault();\n      this.selfHealConfirmMessage = `${this.language['Do you want to turn Wi-Fi optimization']} ${this.ssidSelfHeal ? this.language['OFF'] : this.language['ON']}?`;\n      this.modalRef = this.dialogService.open(this.selfHealConfirmModal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'custom-modal'\n      });\n    }\n    doSsidSelfHeal() {\n      let change = this.ssidSelfHeal ? false : true;\n      this.api.updateSelfHealStaus(this.orgId, this.subsId, change).subscribe(res => {\n        this.getSelfHeal();\n        this.closeModal();\n      }, err => {\n        //this.ssidSelfHeal = !this.ssidSelfHeal;\n      });\n    }\n    getSelfHeal() {\n      if (!this.subsId) return;\n      this.api.getSelfHealStaus(this.orgId, this.subsId).subscribe(res => {\n        if (res && Object.keys(res).length) {\n          this.ssidSelfHealData = res;\n          this.ssidSelfHeal = res.selfHeal ? true : false;\n          this.ssidSelfHealTime = res.enableTime ? new Date(res.enableTime) : null;\n          this.api.selfHealChanged(res);\n        }\n        this.showSelfHeal = true;\n      }, err => {});\n    }\n    deviceNotMatchError() {\n      this.deviceData = [];\n      this.error = true;\n      this.errorInfo = \"Device not found\";\n    }\n    setActiveTab(page, device) {\n      if (device.opMode == 'WAP') {\n        this.titleService.setTitle(`${this.language['Mesh']} - ${this.language['Wifi']} - ${this.language['Service']} - ${this.language['Calix Cloud']}`);\n      }\n      this.activeTab = page;\n    }\n    closeModal() {\n      this.dialogService.dismissAll();\n    }\n    checkSpecialModel() {\n      if (this.deviceData.length) {\n        const index = this.deviceData.findIndex(device => device.opMode == \"RG\");\n        if (index > -1) this.deviceData.splice(0, 0, this.deviceData.splice(index, 1)[0]);\n      }\n      if (this.deviceData && this.deviceData[0].opMode == \"RG\") {\n        let modelNumber = this.deviceData[0].modelName.split('-')[0].replace(/\\D/g, '');\n        if (this.deviceData.length == 1 && parseInt(modelNumber) >= 700 && parseInt(modelNumber) <= 799) {\n          this.wifiDisabled = true;\n          this.isModel7XX = true;\n        } else if (this.deviceData.length > 1 && parseInt(modelNumber) >= 700 && parseInt(modelNumber) <= 799 && this.deviceData[1].opMode != \"RG\") {\n          this.isModel7XX = true;\n          //this.getMetaData(this.deviceData[1].serialNumber);\n        }\n      }\n    }\n\n    isSmbEnabled() {\n      const subInfo = JSON.parse(sessionStorage.getItem('calix.subscriberInfo'));\n      const ent = this.sso.getEntitlementsArr();\n      return ((subInfo === null || subInfo === void 0 ? void 0 : subInfo.devices) || []).filter(obj => obj.bSmbMode).length && (subInfo === null || subInfo === void 0 ? void 0 : subInfo.isSmbOnboarded) && ent.includes('218');\n    }\n  }\n  SupportWifiComponent.ɵfac = function SupportWifiComponent_Factory(t) {\n    return new (t || SupportWifiComponent)(i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.SupportWifiService), i0.ɵɵdirectiveInject(i6.DateUtilsService), i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i7.Title));\n  };\n  SupportWifiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SupportWifiComponent,\n    selectors: [[\"app-support-wifi\"]],\n    viewQuery: function SupportWifiComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selfHealConfirmModal = _t.first);\n      }\n    },\n    decls: 19,\n    vars: 4,\n    consts: [[3, \"responseFromIssuse\"], [1, \"row\"], [1, \"col-md-12\", \"ccl-tabs\", \"wifi-content-tab\", \"my-3\"], [\"id\", \"tabs\", 1, \"nav\", \"nav-tabs\"], [\"class\", \"nav-item\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"nav-item\", \"id\", \"wifi-ssid-mgr-tab\", 3, \"click\", 4, \"ngIf\"], [1, \"col\", \"text-right\", \"justify-content-end\"], [\"class\", \"align-self-end\", \"id\", \"wifi-self-heal-container\", 4, \"ngIf\"], [\"id\", \"tabsContent\", 1, \"tab-content\"], [\"id\", \"issue\", 1, \"tab-pane\", \"fade\", \"active\", \"show\"], [1, \"row\", \"pb-2\"], [\"id\", \"topology\", 1, \"tab-pane\", \"fade\"], [\"id\", \"ssidmanager\", 1, \"tab-pane\", \"fade\"], [\"class\", \"col-md-12 custom-modal\"], [\"selfHealConfirmModal\", \"\"], [1, \"nav-item\", 3, \"id\"], [\"href\", \"javascript:void(0)\", \"data-toggle\", \"tab\", \"class\", \"nav-link small\", 3, \"routerLink\", \"ngClass\", \"active\", \"click\", 4, \"ngIf\"], [\"href\", \"javascript:void(0)\", \"data-toggle\", \"tab\", 1, \"nav-link\", \"small\", 3, \"routerLink\", \"ngClass\", \"click\"], [1, \"small-text\"], [1, \"big-text\"], [\"id\", \"wifi-ssid-mgr-tab\", 1, \"nav-item\", 3, \"click\"], [\"href\", \"javascript:void(0)\", \"routerLink\", \"./ssid\", \"data-toggle\", \"tab\", 1, \"nav-link\", \"small\", 3, \"ngClass\", \"click\"], [\"id\", \"wifi-self-heal-container\", 1, \"align-self-end\"], [1, \"d-inline\"], [1, \"d-inline\", \"toggle-swtbtn\", \"checkbox\", \"switcher\"], [\"for\", \"wifi-self-heal-slider\"], [\"type\", \"checkbox\", \"id\", \"wifi-self-heal-slider\", \"checked\", \"\", \"name\", \"ssidSelfHeal\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"click\"], [1, \"modal-header\"], [\"id\", \"self-heal-confirm-modal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"id\", \"self-heal-confirm-wrapper\", 1, \"modal-body\", 2, \"padding-left\", \"20px\"], [1, \"col-md-12\", \"px-0\"], [1, \"add-bnt\"], [\"type\", \"button\", \"id\", \"self-heal-confirm-btn\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"], [\"type\", \"button\", \"id\", \"self-heal-cancel-btn\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"transparant\", \"px-3\", \"m-2\", 3, \"click\"]],\n    template: function SupportWifiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-subscriber-menu\", 0);\n        i0.ɵɵelementStart(1, \"section\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"ul\", 3);\n        i0.ɵɵtemplate(5, SupportWifiComponent_li_5_Template, 3, 3, \"li\", 4);\n        i0.ɵɵtemplate(6, SupportWifiComponent_li_6_Template, 4, 6, \"li\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtemplate(8, SupportWifiComponent_div_8_Template, 12, 7, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelement(11, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelement(13, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵelement(15, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"router-outlet\");\n        i0.ɵɵtemplate(17, SupportWifiComponent_ng_template_17_Template, 15, 4, \"ng-template\", 13, 14, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"responseFromIssuse\", ctx.apiCallDone);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.deviceData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wifiRead);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.wifiRead && ctx.showSelfHeal && ctx.ssoService.getCscType() !== \"DME\" && ctx.subsId);\n      }\n    },\n    directives: [i8.SubscriberMenuComponent, i9.NgForOf, i9.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i9.NgClass, i10.CheckboxControlValueAccessor, i10.NgControlStatus, i10.NgModel],\n    pipes: [i9.DatePipe],\n    styles: [\".nav-tabs[_ngcontent-%COMP%]   .nav-item.show[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%], .nav-tabs[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%]{background-color:#fff;border-color:#dee2e6 #dee2e6 #fff;border:none;border-bottom:1px solid #2078fa}.nav-tabs[_ngcontent-%COMP%]{border-bottom:none}a[_ngcontent-%COMP%]{color:#333}.nav-link[_ngcontent-%COMP%]{font-size:18px;border-bottom:1px solid transparent;cursor:pointer;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%}.nav-tabs[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:focus, .nav-tabs[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover{border-color:#e9ecef #e9ecef #dee2e6;border:none;color:#4c4c4c;border-bottom:1px solid #9bc1f9}.nav-tabs[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#4c4c4c}.nav-tabs[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]{margin-bottom:0}.nav-tabs[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   a.nav-link[_ngcontent-%COMP%]{line-height:30px!important;height:100%}\"]\n  });\n  return SupportWifiComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}