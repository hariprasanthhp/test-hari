{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as Highcharts from 'highcharts/highstock';\nimport { DatePipe } from '@angular/common';\nimport { environment } from 'src/environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport { combineLatest, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/cco/cco-home/services/data.service\";\nimport * as i2 from \"src/app/cco-foundation/foundation-home/home-chart-options.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"src/app/shared-utils/date-utils.service\";\nimport * as i5 from \"../foundation-home.service\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"../../foundation-systems/foundation-manage/foundation-manage.service\";\nimport * as i8 from \"src/app/sys-admin/services/common.service\";\nimport * as i9 from \"src/app/cco/cco-home/services/home-chart-options.service\";\nimport * as i10 from \"@angular/router\";\nimport * as i11 from \"@angular/common\";\nfunction RevenueEdgeSuitsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction RevenueEdgeSuitsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function RevenueEdgeSuitsComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nconst HighchartsMore = require(\"highcharts/highcharts-more\");\nconst HighchartsExporting = require(\"highcharts/modules/exporting\");\nHighchartsMore(Highcharts);\nHighchartsExporting(Highcharts);\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let RevenueEdgeSuitsComponent = /*#__PURE__*/(() => {\n  class RevenueEdgeSuitsComponent {\n    constructor(dataService, chartOptions, translateService, dateUtils, service, sso, systemservice, commonOrgService, ccoHomeService, router) {\n      this.dataService = dataService;\n      this.chartOptions = chartOptions;\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.service = service;\n      this.sso = sso;\n      this.systemservice = systemservice;\n      this.commonOrgService = commonOrgService;\n      this.ccoHomeService = ccoHomeService;\n      this.router = router;\n      this.Out_EdgeSuit = new EventEmitter();\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.error = false;\n      this.errorInfo = '';\n      this.filterDays = '7';\n      this.ORG_ID = this.sso.getOrgId();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.loadChart();\n      });\n    }\n    ngOnInit() {\n      //this.loadChart();\n      this.getEdgeSuiteEntitlement();\n      let url = this.router.url;\n      if (url.indexOf('/cco/home/system-service-trends') > -1) {\n        this.filterDays = this.ccoHomeService.filterDays;\n        this.watchFilterDays();\n        setTimeout(() => {\n          this.getIqSuitesDatas();\n        }, 50);\n      } else {\n        this.filterDays = '7';\n        this.getIqSuitesDatas();\n      }\n    }\n    ngOnChanges() {\n      //this.loadChart();\n    }\n    getEdgeSuiteEntitlement() {\n      //debugger;\n      let entitlement = this.sso.getEntitlements();\n      entitlement['arlo'] = entitlement[206] ? entitlement[206] : [];\n      entitlement['ProtectIQ'] = entitlement[203] ? entitlement[203] : [];\n      entitlement['ExperienceIQ'] = entitlement[204] ? entitlement[204] : [];\n      entitlement['ExperienceIQ And ProtectIQ'] = entitlement[205] ? entitlement[205] : [];\n      entitlement['Servify'] = entitlement[207] ? entitlement[207] : [];\n      if (entitlement && entitlement['arlo'] && entitlement['arlo'].name === \"ARLO\") {\n        this.arloEnableentitlement = true;\n      } else {\n        this.arloEnableentitlement = false;\n      }\n      if (entitlement && entitlement['Servify'] && entitlement['Servify'].name === \"Servify\") {\n        this.ServifyEnableentitlement = true;\n      } else {\n        this.ServifyEnableentitlement = false;\n      }\n      if (entitlement && entitlement['ProtectIQ'] && entitlement['ProtectIQ'].name === \"ProtectIQ\") {\n        this.productIQEnableentitlement = true;\n      } else {\n        this.productIQEnableentitlement = false;\n      }\n      if (entitlement && entitlement['ExperienceIQ'] && entitlement['ExperienceIQ'].name === \"ExperienceIQ\") {\n        this.ExperienceIQEnableentitlement = true;\n      } else {\n        this.ExperienceIQEnableentitlement = false;\n      }\n      if (entitlement && entitlement['ExperienceIQ And ProtectIQ'] && entitlement['ExperienceIQ And ProtectIQ'].name === \"ExperienceIQ And ProtectIQ\") {\n        this.proAndExpEnableentitlement = true;\n      } else {\n        this.proAndExpEnableentitlement = false;\n      }\n    }\n    getIqSuitesDatas() {\n      this.loading = true;\n      let requestEndpoints = [];\n      let url = this.router.url;\n      requestEndpoints.push(`${environment.FOUNDATION_BASE_URL}/dashboard/iqsuite/${this.ORG_ID}?name=CIEP&days=${this.filterDays ? this.filterDays : '7'}`, `${environment.FOUNDATION_BASE_URL}/dashboard/iqsuite/${this.ORG_ID}?name=CIES&days=${this.filterDays ? this.filterDays : '7'}`, `${environment.FOUNDATION_BASE_URL}/dashboard/iqsuite/${this.ORG_ID}?name=ARLO&days=${this.filterDays ? this.filterDays : '7'}`);\n      if (this.ServifyEnableentitlement) {\n        requestEndpoints.push(`${environment.FOUNDATION_BASE_URL}/dashboard/iqsuite/${this.ORG_ID}?name=SERVIFY&days=${this.filterDays ? this.filterDays : '7'}`);\n      }\n      const requests = [];\n      requestEndpoints.forEach(endpoint => {\n        const req = this.systemservice.callRestApi(endpoint).pipe(map(res => {\n          return res;\n        }), catchError(error => {\n          return of(error);\n        }));\n        requests.push(req);\n      });\n      this.combineLatest = combineLatest(requests);\n      this.makeParallelRequest();\n    }\n    makeParallelRequest() {\n      this.parallelReqSubscribtion = this.combineLatest.subscribe(response => {\n        if (response[0] && response[0].error) {\n          this.pageErrorHandle(response[0].error);\n          this.productIQ = [];\n        } else {\n          let productIQ = response[0] ? response[0] : [];\n          this.productIQ = productIQ.histories;\n        }\n        if (response[1] && response[1].error) {\n          //this.pageErrorHandle(response[1].error);\n          this.experienceIQ = [];\n        } else {\n          let experienceIQ = response[1] ? response[1] : [];\n          this.experienceIQ = experienceIQ.histories;\n        }\n        if (response[2] && response[2].error) {\n          this.pageErrorHandle(response[2].error);\n          this.arloData = [];\n        } else {\n          let arloData = response[2] ? response[2] : [];\n          this.arloData = arloData.histories;\n        }\n        if (response[3] && response[3].error) {\n          this.pageErrorHandle(response[3].error);\n          this.servifyData = [];\n        } else {\n          let servifyData = response[3] ? response[3] : [];\n          this.servifyData = servifyData.histories;\n        }\n        setTimeout(() => {\n          this.loadChart();\n        }, 1500);\n      }, err => {\n        this.loading = false;\n        //this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      });\n    }\n    loadChart() {\n      var _a;\n      this.chartData = this.chartDataModify(this.productIQ, this.experienceIQ, this.arloData, this.servifyData);\n      if (((_a = this.chartData) === null || _a === void 0 ? void 0 : _a.categories.length) === 30) {\n        this.RevenueEdgeSub = this.chartOptions.getCommonSubscribersChartOptionsfor30records(this.chartData, 'Number of Subscribers', true).subscribe(res => {\n          this.chartDataOptions = res;\n          Highcharts.setOptions({\n            lang: {\n              thousandsSep: ','\n            }\n          });\n          setTimeout(() => {\n            this.Highcharts.chart('revenue-edge-graph-div-system', this.chartDataOptions);\n            this.loading = false;\n          }, 500);\n        });\n      } else {\n        this.RevenueEdgeSub = this.chartOptions.getCommonSubscribersChartOptions(this.chartData, 'Number of Subscribers', true).subscribe(res => {\n          this.chartDataOptions = res;\n          Highcharts.setOptions({\n            lang: {\n              thousandsSep: ','\n            }\n          });\n          setTimeout(() => {\n            this.Highcharts.chart('revenue-edge-graph-div-system', this.chartDataOptions);\n            this.loading = false;\n          }, 500);\n        });\n      }\n    }\n    chartDataModify(cData1, cData2, cData3, cData4) {\n      //debugger;\n      let ExperienceIQ = [],\n        ProtectIQ = [],\n        Arlo = [],\n        servify = [],\n        series = [],\n        categories = [],\n        countper = [];\n      let data = {};\n      cData1 = this.chartOptions.sortByTimestamp(cData1, 'date');\n      cData1.forEach(el1 => {\n        categories.push(this.reverseString(el1.date, 'M/d/yy'));\n        //categories.push(this.dateUtils.getChartFormatDate(el1.time, 'M/d/yy', true))\n        el1['value'] = el1.value ? el1.value : 0;\n        // el.degrade = el.degrade > 10000 ? el.degrade / 100 : el.degrade;\n        ExperienceIQ.push(parseInt(el1.value));\n        // suspended.push(parseInt(el.degrade));\n        // terminated.push(el.degrade - 1000);\n        // servify.push(el.outage + 1000);\n      });\n\n      cData2 = this.chartOptions.sortByTimestamp(cData2, 'date');\n      cData2.forEach(el2 => {\n        //categories.push(this.reverseString(el2.date, 'M/d/yy'))\n        el2['value'] = el2.value ? el2.value : 0;\n        // el.degrade = el.degrade > 10000 ? el.degrade / 100 : el.degrade;\n        ProtectIQ.push(parseInt(el2.value));\n      });\n      cData3 = this.chartOptions.sortByTimestamp(cData3, 'date');\n      cData3.forEach(el3 => {\n        //categories.push(this.reverseString(el3.date, 'M/d/yy'))\n        el3['value'] = el3.value ? el3.value : 0;\n        // el.degrade = el.degrade > 10000 ? el.degrade / 100 : el.degrade;\n        Arlo.push(parseInt(el3.value));\n      });\n      if (cData4 !== undefined) {\n        cData4 = this.chartOptions.sortByTimestamp(cData4, 'date');\n        cData4.forEach(el4 => {\n          //categories.push(this.reverseString(el4.date, 'M/d/yy'))\n          el4['value'] = el4.value ? el4.value : 0;\n          // el.degrade = el.degrade > 10000 ? el.degrade / 100 : el.degrade;\n          servify.push(parseInt(el4.value));\n        });\n      }\n      var count = 0;\n      this.catelength = categories.length - 1;\n      this.catelenth = categories.length - 2;\n      this.ProtectIQ = ProtectIQ[this.catelength];\n      this.ExperienceIQ = ExperienceIQ[this.catelength];\n      this.Arlo = Arlo[this.catelength] ? Arlo[this.catelength] : 0;\n      this.servify = servify[this.catelength] ? servify[this.catelength] : 0;\n      this.edgeSuit = this.ProtectIQ + this.ExperienceIQ + this.Arlo + this.servify;\n      this.ProtectIQbefore = ProtectIQ[this.catelenth];\n      this.ExperienceIQbefore = ExperienceIQ[this.catelenth];\n      this.Arlobefore = Arlo[this.catelenth] ? Arlo[this.catelenth] : 0;\n      this.servifybefore = servify[this.catelenth] ? servify[this.catelenth] : 0;\n      this.edgeSuitBefore = this.ProtectIQbefore + this.ExperienceIQbefore + this.Arlobefore + this.servifybefore;\n      if (this.edgeSuitBefore == 0 && this.edgeSuit != 0) {\n        this.edgeSuitper = (this.edgeSuit * 100).toFixed();\n        ;\n      } else {\n        this.edgeSuitper = this.setpercentage(this.edgeSuit, this.edgeSuitBefore, 2) == '0.00' ? '0' : this.setpercentage(this.edgeSuit, this.edgeSuitBefore, 2);\n      }\n      this.revenueEdgetatus = {\n        edgeSuit: this.edgeSuit == 'NaN' ? 0 : this.edgeSuit,\n        edgeSuitper: Math.abs(this.edgeSuitper == 'NaN' ? 0 : this.edgeSuitper),\n        positiveOrNegative: this.checkPositvNegativ(this.edgeSuitper)\n      };\n      this.Out_EdgeSuit.emit(this.revenueEdgetatus);\n      let url = this.router.url;\n      if (!this.ServifyEnableentitlement) {\n        series = [{\n          name: 'ExperienceIQ',\n          data: ExperienceIQ\n        }, {\n          name: 'ProtectIQ',\n          data: ProtectIQ\n        }, {\n          name: 'Arlo',\n          data: Arlo\n        }\n        // {\n        //   name: 'Servify',\n        //   data: servify\n        // }\n        ];\n      } else {\n        series = [{\n          name: 'ExperienceIQ',\n          data: ExperienceIQ\n        }, {\n          name: 'ProtectIQ',\n          data: ProtectIQ\n        }, {\n          name: 'Arlo',\n          data: Arlo\n        }, {\n          name: 'Servify',\n          data: servify\n        }];\n      }\n      data = {\n        series: series,\n        categories: categories\n      };\n      return data;\n    }\n    reverseString(str, format) {\n      var string = str.toString();\n      var month = parseInt(string.slice(4, 6)) - 1;\n      let dateObj = new Date();\n      dateObj.setFullYear(string.slice(0, 4));\n      dateObj.setMonth(month);\n      dateObj.setDate(string.slice(6, 8));\n      let pipe = new DatePipe('en-US');\n      let dateString = '';\n      if (format) {\n        dateString = `${pipe.transform(dateObj, format)}`;\n      } else {\n        dateString = `${pipe.transform(dateObj, 'MM/dd/yyyy')}`;\n      }\n      return dateString;\n    }\n    setpercentage(a, b, degit) {\n      //return ((100 * ((a - b) / ((a + b) / 2))).toFixed(degit ? degit : 0))\n      var percentage = (100 * ((a - b) / b)).toFixed(degit ? degit : 2);\n      if (percentage == '0.00') {\n        return '0';\n      } else {\n        return percentage;\n      }\n    }\n    countPercentage() {}\n    checkPositvNegativ(returnqlickdata) {\n      if (returnqlickdata == 0) {\n        return '+';\n      }\n      if (returnqlickdata.charAt(0) == '-') return '-';else return '+';\n    }\n    closeAlert() {}\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n    }\n    ngOnDestroy() {\n      this.Out_EdgeSuit.emit(this.revenueEdgetatus);\n      // this.dataService.setSystemSubscription(this.subscriberForm.value);\n      if (this.filterDaysSubscription) this.filterDaysSubscription.unsubscribe();\n      if (this.RevenueEdgeSub) this.RevenueEdgeSub.unsubscribe();\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n    watchFilterDays() {\n      this.filterDaysSubscription = this.ccoHomeService.filterDays$.subscribe(value => {\n        this.filterDays = value;\n        this.getIqSuitesDatas();\n      });\n    }\n  }\n  RevenueEdgeSuitsComponent.ɵfac = function RevenueEdgeSuitsComponent_Factory(t) {\n    return new (t || RevenueEdgeSuitsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HomeChartOptionsService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DateUtilsService), i0.ɵɵdirectiveInject(i5.FoundationHomeService), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.FoundationManageService), i0.ɵɵdirectiveInject(i8.CommonService), i0.ɵɵdirectiveInject(i9.HomeChartOptionsService), i0.ɵɵdirectiveInject(i10.Router));\n  };\n  RevenueEdgeSuitsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RevenueEdgeSuitsComponent,\n    selectors: [[\"app-revenue-edge-suits\"]],\n    outputs: {\n      Out_EdgeSuit: \"Out_EdgeSuit\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"loader-wrapper\"], [\"class\", \"loader-wrapper-info\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [1, \"row\", 2, \"max-height\", \"400px\"], [1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"revenue-edge-graph-div-system\", 2, \"height\", \"300px\"], [1, \"loader-wrapper-info\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"]],\n    template: function RevenueEdgeSuitsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, RevenueEdgeSuitsComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, RevenueEdgeSuitsComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 0);\n      }\n    },\n    directives: [i11.NgIf, i11.NgClass],\n    styles: [\"\"]\n  });\n  return RevenueEdgeSuitsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}