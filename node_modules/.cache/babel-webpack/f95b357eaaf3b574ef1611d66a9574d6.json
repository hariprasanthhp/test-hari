{"ast":null,"code":"import { getNewShapePosition } from '../../auto-place/BpmnAutoPlaceUtil';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { is } from '../../../util/ModelUtil';\nvar HIGH_PRIORITY = 2000;\nexport default function AutoPlaceBehavior(eventBus, gridSnapping) {\n  eventBus.on('autoPlace', HIGH_PRIORITY, function (context) {\n    var source = context.source,\n      sourceMid = getMid(source),\n      shape = context.shape;\n    var position = getNewShapePosition(source, shape);\n    ['x', 'y'].forEach(function (axis) {\n      var options = {};\n\n      // do not snap if x/y equal\n      if (position[axis] === sourceMid[axis]) {\n        return;\n      }\n      if (position[axis] > sourceMid[axis]) {\n        options.min = position[axis];\n      } else {\n        options.max = position[axis];\n      }\n      if (is(shape, 'bpmn:TextAnnotation')) {\n        if (isHorizontal(axis)) {\n          options.offset = -shape.width / 2;\n        } else {\n          options.offset = -shape.height / 2;\n        }\n      }\n      position[axis] = gridSnapping.snapValue(position[axis], options);\n    });\n\n    // must be returned to be considered by auto place\n    return position;\n  });\n}\nAutoPlaceBehavior.$inject = ['eventBus', 'gridSnapping'];\n\n// helpers //////////\n\nfunction isHorizontal(axis) {\n  return axis === 'x';\n}","map":null,"metadata":{},"sourceType":"module"}