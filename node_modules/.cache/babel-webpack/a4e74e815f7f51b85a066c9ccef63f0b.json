{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared-utils/date-utils.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"../../../../../../shared/directives/autofocus.directive\";\nconst _c0 = [\"endTime\"];\nfunction WrkflowAlarmWizardScheduleParametersComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵelement(2, \"img\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"ul\", 22);\n    i0.ɵɵelementStart(5, \"li\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language.Device_reboot, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"1.\\u00A0\", ctx_r0.language.Changes_Wan, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"2.\\u00A0\", ctx_r0.language.Apply_wifi, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"3.\\u00A0\", ctx_r0.language.Apply_reboot, \"\");\n  }\n}\nfunction WrkflowAlarmWizardScheduleParametersComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.item;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[item_r6.name], \" \");\n  }\n}\nfunction WrkflowAlarmWizardScheduleParametersComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.item;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[item_r7.name], \" \");\n  }\n}\nfunction WrkflowAlarmWizardScheduleParametersComponent_h4_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Triggered_CPE_Alarm_discovered, \" \");\n  }\n}\nfunction WrkflowAlarmWizardScheduleParametersComponent_div_21_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Enter Valid Email Id \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardScheduleParametersComponent_div_21_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.language[\"This field is required\"], \"\");\n  }\n}\nconst _c1 = function (a0) {\n  return [a0];\n};\nfunction WrkflowAlarmWizardScheduleParametersComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"label\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵelementStart(4, \"input\", 27, 28);\n    i0.ɵɵlistener(\"ngModelChange\", function WrkflowAlarmWizardScheduleParametersComponent_div_21_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.workflowInputData.email = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, WrkflowAlarmWizardScheduleParametersComponent_div_21_div_6_Template, 2, 0, \"div\", 29);\n    i0.ɵɵtemplate(7, WrkflowAlarmWizardScheduleParametersComponent_div_21_div_7_Template, 2, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(5);\n    const ctx_r5 = i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(20);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language == null ? null : ctx_r5.language.Email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ((_r9 == null ? null : _r9.errors == null ? null : _r9.errors.pattern) || (_r9 == null ? null : _r9.errors == null ? null : _r9.errors.required)) && (_r4.submitted || (_r9 == null ? null : _r9.touched)) ? \"errorMessage\" : \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.workflowInputData.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (_r9 == null ? null : _r9.errors == null ? null : _r9.errors.pattern) && (_r4.submitted || (_r9 == null ? null : _r9.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((_r9 == null ? null : _r9.touched) || _r4.submitted) && (_r9 == null ? null : _r9.errors == null ? null : _r9.errors.required));\n  }\n}\nexport let WrkflowAlarmWizardScheduleParametersComponent = /*#__PURE__*/(() => {\n  class WrkflowAlarmWizardScheduleParametersComponent {\n    constructor(translateService, dateUtils, router) {\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.router = router;\n      this.workflowInputData = {};\n      this.workflowOprData = new EventEmitter();\n      this.activeTab = new EventEmitter();\n      this.endtimeError = false;\n      this.timeWindow = 60;\n      this.dailyChecked = true;\n      this.weekChecked = false;\n      this.monthChecked = false;\n      this.weekScheduling = false;\n      this.monthScheduling = false;\n      this.RangeRecurrenceEndBy = false;\n      this.RangeRecurrenceEndAfter = true;\n      this.customStartDate = new Date();\n      this.customStartRange = new Date();\n      this.customEndRange = new Date();\n      this.startDateTime = new Date();\n      this.weekselected = [];\n      this.daysOfMonth = 1;\n      this.rangeOccurrence = 1;\n      this.endBy = false;\n      this.endAfter = true;\n      this.radio = true;\n      this.daily_frequency = 1;\n      this.week_frequency = 1;\n      this.month_frequency = 1;\n      this.weekerror = false;\n      this.disablefullGroupExecute = false;\n      this.WindowerrorMsg = null;\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      if (this.workflowInputData) {\n        (_b = (_a = this.workflowInputData) === null || _a === void 0 ? void 0 : _a.actions) === null || _b === void 0 ? void 0 : _b.filter(element => {\n          if (element.actionType === 'Download SW/FW Image' && this.router.url.includes(\"/cco-foundation/foundation-operations/foundation-system-operation/workflows/workflow-wizard\")) {\n            this.disablefullGroupExecute = true;\n          }\n        });\n      }\n      let replaceProfile = this.workflowInputData ? (_d = (_c = this.workflowInputData) === null || _c === void 0 ? void 0 : _c.actions) === null || _d === void 0 ? void 0 : _d.filter(element => element.actionType === 'Replace Service Profile' || element.actionType === 'Edge Suites Bulk Activation') : '';\n      let officialImage = this.workflowInputData ? (_f = (_e = this.workflowInputData) === null || _e === void 0 ? void 0 : _e.actions) === null || _f === void 0 ? void 0 : _f.filter(element => element.actionType === 'Download Official Image') : '';\n      if (replaceProfile === null || replaceProfile === void 0 ? void 0 : replaceProfile.length) {\n        this.scheduleValueSelected = 'Time Scheduler';\n        this.timeschedule = true;\n        this.inputOperationType = [{\n          name: 'Time Scheduler',\n          id: 'Time Scheduler'\n        }];\n      } else if (officialImage === null || officialImage === void 0 ? void 0 : officialImage.length) {\n        this.scheduleValueSelected = 'Time Scheduler';\n        this.disablefullGroupExecute = true;\n        this.workflowInputData.source = \"Foundation\";\n        this.timeschedule = true;\n        this.workflowInputData.fullGroupExecute = true;\n        this.inputOperationType = [{\n          name: 'Time Scheduler',\n          id: 'Time Scheduler'\n        }];\n      } else {\n        this.scheduleValueSelected = 'On Discovery';\n        this.timeschedule = false;\n        this.inputOperationType = [{\n          name: 'On Discovery',\n          id: 'On Discovery'\n        }];\n      }\n      if (this.workflowInputData) {\n        if (this.workflowInputData.execPolicy === {} || typeof ((_h = (_g = this.workflowInputData) === null || _g === void 0 ? void 0 : _g.execPolicy) === null || _h === void 0 ? void 0 : _h.initialTrigger) === 'undefined' || ((_l = (_k = (_j = this.workflowInputData) === null || _j === void 0 ? void 0 : _j.execPolicy) === null || _k === void 0 ? void 0 : _k.initialTrigger) === null || _l === void 0 ? void 0 : _l.type) === 'CPE Event') {\n          /** fix CCL-24907 add if condition to check replace profiles  */\n          console.log(\"officialImage=>\", officialImage);\n          if (!(replaceProfile === null || replaceProfile === void 0 ? void 0 : replaceProfile.length) && !(officialImage === null || officialImage === void 0 ? void 0 : officialImage.length)) {\n            console.log(\"officialImage in if=>\", officialImage);\n            this.scheduleValueSelected = 'On Discovery';\n            this.timeschedule = false;\n          }\n        } else {\n          console.log(\"officialImage in else=>\", officialImage);\n          this.scheduleValueSelected = 'Time Scheduler';\n          this.timeschedule = true;\n          this.startDateTime = this.workflowInputData.execPolicy.window.startDateTime ? new Date(this.workflowInputData.execPolicy.window.startDateTime) : new Date();\n          this.customStartDate = this.workflowInputData.execPolicy.window.startDateTime ? new Date(this.workflowInputData.execPolicy.window.startDateTime) : new Date();\n          this.timeWindow = this.workflowInputData.execPolicy.window.windowLength ? this.workflowInputData.execPolicy.window.windowLength / 60 : 60;\n          if (this.workflowInputData.execPolicy.window.recurrence !== undefined) {\n            this.rangeOccurrence = this.workflowInputData.execPolicy.window.recurrence;\n            this.RangeRecurrenceEndAfter = true;\n            this.endAfter = true;\n            this.endBy = false;\n          } else {\n            this.customStartDate = this.workflowInputData.execPolicy.window.startDateTime ? new Date(this.workflowInputData.execPolicy.window.startDateTime) : new Date();\n            this.customEndRange = new Date(this.workflowInputData.execPolicy.window.endDateTime);\n            this.RangeRecurrenceEndBy = true;\n            this.RangeRecurrenceEndAfter = false;\n            this.endAfter = false;\n            this.endBy = true;\n          }\n          switch (this.workflowInputData.execPolicy.window.type) {\n            case 'weekly':\n              {\n                console.log('weekly');\n                this.weekScheduling = true;\n                this.monthScheduling = false;\n                this.weekChecked = true;\n                this.dailyChecked = false;\n                this.monthChecked = false;\n                this.weekly = 'yes';\n                this.daily = 'no';\n                this.monthly = 'no';\n                this.week_frequency = this.workflowInputData.execPolicy.window.frequency;\n                this.daily_frequency = 1;\n                this.month_frequency = 1;\n                if (this.workflowInputData.execPolicy.window.weekdays) {\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"SUN\")) {\n                    this.Sunday = true;\n                    this.weekselected.push('SUN');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"MON\")) {\n                    this.Monday = true;\n                    this.weekselected.push('MON');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"TUE\")) {\n                    this.Tuesday = true;\n                    this.weekselected.push('TUE');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"WEN\")) {\n                    this.Wednesday = true;\n                    this.weekselected.push('WEN');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"THU\")) {\n                    this.Thursday = true;\n                    this.weekselected.push('THU');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"FRI\")) {\n                    this.Friday = true;\n                    this.weekselected.push('FRI');\n                  }\n                  if (this.workflowInputData.execPolicy.window.weekdays.includes(\"SAT\")) {\n                    this.Saturday = true;\n                    this.weekselected.push('SAT');\n                  }\n                } else {\n                  this.weekselected = [];\n                }\n                break;\n              }\n            case 'monthly':\n              {\n                console.log('weekly');\n                this.monthScheduling = true;\n                this.weekScheduling = false;\n                this.monthChecked = true;\n                this.dailyChecked = false;\n                this.weekChecked = false;\n                this.monthly = 'yes';\n                this.weekly = 'no';\n                this.daily = 'no';\n                this.month_frequency = this.workflowInputData.execPolicy.window.frequency;\n                this.daysOfMonth = this.workflowInputData.execPolicy.window.daysOfMonth[0];\n                this.week_frequency = 1;\n                this.daily_frequency = 1;\n                break;\n              }\n            default:\n              {\n                console.log('daily');\n                this.weekScheduling = false;\n                this.monthScheduling = false;\n                this.dailyChecked = true;\n                this.weekChecked = false;\n                this.monthChecked = false;\n                this.daily = 'yes';\n                this.monthly = 'no';\n                this.weekly = 'no';\n                this.week_frequency = 1;\n                this.month_frequency = 1;\n                this.daily_frequency = this.workflowInputData.execPolicy.window.frequency;\n                break;\n              }\n          }\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n    }\n    optionValChoose() {\n      if (this.scheduleValueSelected === 'Time Scheduler') {\n        this.timeschedule = true;\n      } else {\n        this.timeschedule = false;\n        this.scheduleValueSelected = \"On Discovery\";\n      }\n    }\n    getRecurrenceData(event) {\n      if (event.target.value === 'daily') {\n        this.weekScheduling = false;\n        this.monthScheduling = false;\n        this.dailyChecked = true;\n        this.weekChecked = false;\n        this.monthChecked = false;\n        this.daily = 'yes';\n        this.monthly = 'no';\n        this.weekly = 'no';\n        this.week_frequency = 1;\n        this.month_frequency = 1;\n        this.daysOfMonth = 1;\n      } else if (event.target.value === 'weekly') {\n        this.weekScheduling = true;\n        this.monthScheduling = false;\n        this.weekChecked = true;\n        this.dailyChecked = false;\n        this.monthChecked = false;\n        this.weekly = 'yes';\n        this.daily = 'no';\n        this.monthly = 'no';\n        this.month_frequency = 1;\n        this.daily_frequency = 1;\n        this.daysOfMonth = 1;\n      } else {\n        this.monthScheduling = true;\n        this.weekScheduling = false;\n        this.monthChecked = true;\n        this.dailyChecked = false;\n        this.weekChecked = false;\n        this.monthly = 'yes';\n        this.weekly = 'no';\n        this.daily = 'no';\n        this.week_frequency = 1;\n        this.daily_frequency = 1;\n      }\n    }\n    bindData(event) {\n      var _a;\n      if (event.target.checked) {\n        this.weekselected.push(event.target.value);\n      } else {\n        this.weekselected = (_a = this.weekselected) === null || _a === void 0 ? void 0 : _a.filter(e => e != event.target.value);\n      }\n    }\n    go_next() {\n      var _a;\n      this.customStartDate.setHours(+this.startDateTime.getHours());\n      this.customStartDate.setMinutes(+this.startDateTime.getMinutes());\n      this.customStartDate.setMilliseconds(+this.startDateTime.getMilliseconds());\n      if (this.scheduleValueSelected === 'On Discovery') {\n        this.workflowInputData['execPolicy'] = {\n          \"initialTrigger\": {\n            \"type\": \"CPE Event\",\n            \"cpeEvent\": \"CC EVENT - New CPE Discovered\"\n          }\n        };\n      } else if (this.scheduleValueSelected === 'Time Scheduler') {\n        if (this.weekScheduling === true) {\n          if (((_a = this.weekselected) === null || _a === void 0 ? void 0 : _a.length) < 1) {\n            this.weekerror = true;\n            return;\n          } else {\n            this.weekerror = false;\n          }\n          this.workflowInputData['execPolicy'] = {\n            \"initialTrigger\": {\n              \"type\": \"Maintenance Window\"\n            },\n            \"window\": {\n              \"type\": \"weekly\",\n              \"startDateTime\": this.customStartDate.toISOString(),\n              \"windowLength\": this.timeWindow * 60,\n              \"frequency\": this.week_frequency,\n              \"weekdays\": this.weekselected\n            }\n          };\n        } else if (this.monthScheduling === true) {\n          this.workflowInputData['execPolicy'] = {\n            \"initialTrigger\": {\n              \"type\": \"Maintenance Window\"\n            },\n            \"window\": {\n              \"type\": \"monthly\",\n              \"startDateTime\": this.customStartDate.toISOString(),\n              \"windowLength\": this.timeWindow * 60,\n              \"frequency\": this.month_frequency,\n              \"daysOfMonth\": [this.daysOfMonth]\n            }\n          };\n        } else {\n          this.workflowInputData['execPolicy'] = {\n            \"initialTrigger\": {\n              \"type\": \"Maintenance Window\"\n            },\n            \"window\": {\n              \"type\": 'daily',\n              \"startDateTime\": this.customStartDate.toISOString(),\n              \"windowLength\": this.timeWindow * 60,\n              \"frequency\": this.daily_frequency\n            }\n          };\n        }\n        if (this.RangeRecurrenceEndBy) {\n          if (this.endtimeError) {\n            return;\n          }\n          this.workflowInputData['execPolicy']['window']['endDateTime'] = this.customEndRange ? new Date(this.customEndRange).toISOString() : '';\n        } else {\n          this.workflowInputData['execPolicy']['window']['recurrence'] = this.rangeOccurrence ? this.rangeOccurrence : 0;\n        }\n      }\n      this.workflowInputData[\"startTime\"] = new Date(this.startDateTime).toISOString();\n      if (this.workflowInputData.levelPassed <= 4) {\n        this.workflowInputData.levelPassed = 4;\n      }\n      this.workflowOprData.emit(this.workflowInputData);\n      this.activeTab.emit('Review');\n      return true;\n    }\n    go_previous() {\n      this.activeTab.emit('Select Operation Parameters');\n    }\n    getRangeRecurrence(event) {\n      if (event.target.value === 'endBy') {\n        this.RangeRecurrenceEndBy = true;\n        this.RangeRecurrenceEndAfter = false;\n        this.endBy = true;\n        this.endAfter = false;\n      } else {\n        this.RangeRecurrenceEndAfter = true;\n        this.RangeRecurrenceEndBy = false;\n        this.endAfter = true;\n        this.endBy = false;\n      }\n    }\n    validateWindow(event) {\n      console.log(\"event=>\", event);\n      if (!event) {\n        this.WindowerrorMsg = \"\";\n      } else {\n        if (event == 0) {\n          this.WindowerrorMsg = this.language['Input_Number_Validation'] + ' 0';\n        } else if (event > 1440) {\n          this.WindowerrorMsg = this.language['Input_Number_Validation2'] + \" 1440\";\n        } else {\n          this.WindowerrorMsg = \"\";\n        }\n      }\n    }\n    onSelectStartTime(event) {\n      console.log(\"event=>\", event.target.value);\n      let selectedDate = event.target.value;\n      if (!Date.parse(selectedDate.toString())) {\n        this.customStartDate = new Date();\n      }\n    }\n    onSelectStartOnlyTime(event) {\n      console.log(\"event=>\", event);\n      let re = /^\\d{1,2}:\\d{2}( [ap || AP]M)?$/;\n      let selectedDate = event.target.value;\n      if (!selectedDate.match(re)) {\n        console.log(\"selected Date=>\", !selectedDate.match(re));\n        this.startDateTime = new Date();\n      }\n    }\n    onSelectEndTime(event) {\n      console.log(\"event endtime=>\", event);\n      console.log(\"event starttime=>\", this.customStartDate);\n      let endDate = event;\n      let startDate = this.customStartDate;\n      if (!Date.parse(endDate.toString())) {\n        this.customEndRange = new Date();\n      } else if (endDate.getTime() > startDate.getTime()) {\n        this.endtimeError = false;\n      } else {\n        this.endtimeError = true;\n      }\n    }\n    onChangeEndTime(event) {\n      console.log(\"event=>\", event.target.value);\n      let endDate = event.target.value;\n      let startDate = this.customStartDate;\n      if (!Date.parse(endDate)) {\n        this.customEndRange = new Date();\n      } else if (new Date(endDate).getTime() > startDate.getTime()) {\n        this.endtimeError = false;\n      } else {\n        this.endtimeError = true;\n      }\n    }\n  }\n  WrkflowAlarmWizardScheduleParametersComponent.ɵfac = function WrkflowAlarmWizardScheduleParametersComponent_Factory(t) {\n    return new (t || WrkflowAlarmWizardScheduleParametersComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.DateUtilsService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  WrkflowAlarmWizardScheduleParametersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WrkflowAlarmWizardScheduleParametersComponent,\n    selectors: [[\"app-alarm-wrkflow-wizard-schedule-parameters\"]],\n    viewQuery: function WrkflowAlarmWizardScheduleParametersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endTime = _t.first);\n      }\n    },\n    inputs: {\n      workflowInputData: \"workflowInputData\"\n    },\n    outputs: {\n      workflowOprData: \"workflowOprData\",\n      activeTab: \"activeTab\"\n    },\n    decls: 22,\n    vars: 10,\n    consts: [[\"id\", \"workflowWizardSchedule\", 1, \"workflow-wizard-schedule\"], [1, \"form-group\", \"row\"], [1, \"col-xs-12\", \"col-12\", \"col-md-12\", \"col-lg-12\"], [\"class\", \"alert alert-note \", \"role\", \"alert\", \"style\", \"margin-right: -13px\", 4, \"ngIf\"], [1, \"workflow-next-previous\"], [\"type\", \"button\", \"id\", \"previous\", 1, \"btn-arrow\", \"btn-arr-prev\", \"btn-grey\", \"mr-2\", 3, \"click\"], [\"src\", \"assets/img/ic_chevronleft_grey.svg\"], [\"type\", \"submit\", \"id\", \"submit\", \"form\", \"email-form\", \"id\", \"next\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"primary\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [\"id\", \"trigger-form\", 1, \"row\", \"mt-4\", \"mb-2\"], [\"for\", \"inputOperationType\", 1, \"col-lg-2\", \"col-md-2\", \"col-sm-2\", \"control-label\"], [1, \"custom-selectbox-shedule-par\", \"col-lg-8\", \"col-md-10\", \"col-sm-12\"], [\"bindLabel\", \"name\", \"autofocus\", \"\", \"placeholder\", \"\", \"name\", \"trigger\", \"id\", \"trigger\", \"id\", \"trigger\", \"bindValue\", \"id\", 3, \"items\", \"ngModel\", \"searchable\", \"clearable\", \"change\", \"ngModelChange\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"class\", \"f-size-18 pb-3\", 4, \"ngIf\"], [\"novalidate\", \"\", \"id\", \"email-form\", 3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [\"class\", \"form-group row required ccl-form\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-note\", 2, \"margin-right\", \"-13px\"], [1, \"success-img\"], [\"src\", \"./assets/img/ic_info.svg\"], [1, \"waring-ul\", \"mb-0\"], [1, \"f-size-18\", \"pb-3\"], [1, \"form-group\", \"row\", \"required\", \"ccl-form\"], [\"for\", \"email\", 1, \"col-2\", \"control-label\"], [1, \"col-lg-8\", \"col-md-10\", \"col-sm-12\", 3, \"ngClass\"], [\"id\", \"email\", \"required\", \"\", \"aria-required\", \"true\", \"type\", \"email\", \"name\", \"email\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Enter Comma Separated Notification Mailing List\", \"aria-required\", \"true\", \"aria-describedby\", \"email-error\", \"aria-invalid\", \"true\", \"pattern\", \"^(\\\\s?[^\\\\s,]+@[^\\\\s,]+\\\\.[^\\\\s,]+\\\\s?,)*(\\\\s?[^\\\\s,]+@[^\\\\s,]+\\\\.[^\\\\s,]+)$\", \"autocomplete\", \"new-password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"errorMessage\", \"id\", \"email-error\", 4, \"ngIf\"], [\"id\", \"email-error\", 1, \"errorMessage\"]],\n    template: function WrkflowAlarmWizardScheduleParametersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, WrkflowAlarmWizardScheduleParametersComponent_div_3_Template, 11, 4, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardScheduleParametersComponent_Template_button_click_5_listener() {\n          return ctx.go_previous();\n        });\n        i0.ɵɵelement(6, \"img\", 6);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelement(10, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 9);\n        i0.ɵɵelementStart(12, \"label\", 10);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"ng-select\", 12);\n        i0.ɵɵlistener(\"change\", function WrkflowAlarmWizardScheduleParametersComponent_Template_ng_select_change_15_listener() {\n          return ctx.optionValChoose();\n        })(\"ngModelChange\", function WrkflowAlarmWizardScheduleParametersComponent_Template_ng_select_ngModelChange_15_listener($event) {\n          return ctx.scheduleValueSelected = $event;\n        });\n        i0.ɵɵtemplate(16, WrkflowAlarmWizardScheduleParametersComponent_ng_template_16_Template, 1, 1, \"ng-template\", 13);\n        i0.ɵɵtemplate(17, WrkflowAlarmWizardScheduleParametersComponent_ng_template_17_Template, 1, 1, \"ng-template\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, WrkflowAlarmWizardScheduleParametersComponent_h4_18_Template, 2, 1, \"h4\", 15);\n        i0.ɵɵelementStart(19, \"form\", 16, 17);\n        i0.ɵɵlistener(\"ngSubmit\", function WrkflowAlarmWizardScheduleParametersComponent_Template_form_ngSubmit_19_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r4 = i0.ɵɵreference(20);\n          return _r4.form.valid && ctx.go_next();\n        });\n        i0.ɵɵtemplate(21, WrkflowAlarmWizardScheduleParametersComponent_div_21_Template, 8, 7, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.timeschedule);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Previous, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Next, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language.Trigger);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"items\", ctx.inputOperationType)(\"ngModel\", ctx.scheduleValueSelected)(\"searchable\", false)(\"clearable\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.timeschedule);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.timeschedule);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.NgSelectComponent, i7.AutofocusDirective, i5.NgControlStatus, i5.NgModel, i6.ɵh, i6.ɵf, i4.NgClass, i5.DefaultValueAccessor, i5.RequiredValidator, i5.PatternValidator],\n    styles: [\".f-w-600[_ngcontent-%COMP%]{font-weight:600}[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){position:relative!important;left:unset!important}ul.date-order[_ngcontent-%COMP%]{display:inline-flex;width:100%}ul.date-order[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{width:15%}.ccl-form.number-input[_ngcontent-%COMP%]{width:50%;margin-left:10px}.number-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding-right:5px;color:#222}.radio-inline[_ngcontent-%COMP%]{cursor:pointer}.workflow-oneline[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:20px}.workflow-oneline[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{width:65px;margin:0 10px}.weekly-days[_ngcontent-%COMP%]{display:flex;align-items:center}.weekly-days[_ngcontent-%COMP%]   .checkbox-inline[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{cursor:pointer}.days-line[_ngcontent-%COMP%]{padding-left:5px}.mont-list[_ngcontent-%COMP%]   .ccl-form[_ngcontent-%COMP%]{width:20%;display:flex;align-items:center}.mont-list[_ngcontent-%COMP%]   .ccl-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:50%;padding-right:5px}.mont-list[_ngcontent-%COMP%]   .ccl-form[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-left:10px}.mont-list[_ngcontent-%COMP%]   label.radio-inline[_ngcontent-%COMP%]{margin-right:9px}.ccl-form[_ngcontent-%COMP%]   .occurr-end[_ngcontent-%COMP%]{display:flex;align-items:center}.ccl-form[_ngcontent-%COMP%]   .occurr-end[_ngcontent-%COMP%]   .occur-input[_ngcontent-%COMP%]{width:11%;margin-left:10px}.ccl-form[_ngcontent-%COMP%]   .occurr-end[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding-right:5px}.mothly-error-div[_ngcontent-%COMP%]{display:flex;align-items:start;width:auto}.mothly-error-div[_ngcontent-%COMP%]   .daily-month-error[_ngcontent-%COMP%]{width:28%;padding-right:10px;font-size:13px}.days-label[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding-right:15px;margin:0}.days-label[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin-right:5px}.custom-selectbox-shedule-par[_ngcontent-%COMP%]   .ng-dropdown-panel[_ngcontent-%COMP%]{z-index:1;width:100%;padding-top:10px;padding-bottom:10px;border-radius:10px!important;min-height:auto;max-height:260px;overflow-y:auto;font-size:14px;transition:.5s ease}.alert-note[_ngcontent-%COMP%]{color:#1a1f22;background-color:#f5faff;border-color:#f5faff}\"]\n  });\n  return WrkflowAlarmWizardScheduleParametersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}