{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@ng-select/ng-select\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/calendar\";\nconst _c0 = [\"addScheduleModal\"];\nfunction CustomerPortalNetworkAccessComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"div\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵelementStart(5, \"p-calendar\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_div_7_Template_p_calendar_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.newSchedule.startTime = $event;\n    })(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_div_7_Template_p_calendar_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.calcualteStopTime();\n    })(\"onClose\", function CustomerPortalNetworkAccessComponent_div_7_Template_p_calendar_onClose_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.addSchedule(false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10);\n    i0.ɵɵelementStart(7, \"div\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 12);\n    i0.ɵɵelementStart(10, \"p-calendar\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_div_7_Template_p_calendar_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.newSchedule.stopTime = $event;\n    })(\"onClose\", function CustomerPortalNetworkAccessComponent_div_7_Template_p_calendar_onClose_10_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.addSchedule(false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Start Time\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newSchedule.startTime)(\"showIcon\", true)(\"hourFormat\", 12)(\"readonlyInput\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"End Time\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newSchedule.stopTime)(\"showIcon\", true)(\"minDate\", ctx_r0.calcualteStopTime(\"get\"))(\"maxDate\", ctx_r0.maxDate)(\"hourFormat\", 12)(\"readonlyInput\", true);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.openAddScheduleModal();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" + \", ctx_r1.language[\"Add Network Access Hours\"], \" \");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_tr_10_div_4_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const timeRange_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.getTimeString(timeRange_r20), \" \");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_tr_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CustomerPortalNetworkAccessComponent_div_10_tr_10_div_4_p_1_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r14.timeRanges);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_tr_10_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.language[\"No Limit\"]);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_tr_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"img\", 22);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_div_10_tr_10_div_7_Template_img_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const networkAccessIndex_r23 = restoredCtx.index;\n      const row_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.deleteNetworkAccess(row_r14.id, networkAccessIndex_r23);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", ctx_r18.language.Delete);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, CustomerPortalNetworkAccessComponent_div_10_tr_10_div_4_Template, 2, 1, \"div\", 19);\n    i0.ɵɵtemplate(5, CustomerPortalNetworkAccessComponent_div_10_tr_10_p_5_Template, 2, 1, \"p\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtemplate(7, CustomerPortalNetworkAccessComponent_div_10_tr_10_div_7_Template, 2, 1, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r14.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", row_r14.timeRanges);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r14.timeRanges.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", row_r14.timeRanges);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"table\");\n    i0.ɵɵelementStart(3, \"thead\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"th\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, CustomerPortalNetworkAccessComponent_div_10_tr_10_Template, 8, 4, \"tr\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.language[\"Day\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language[\"Network Access Hours\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.formattedSchedules);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelementStart(1, \"span\", 39);\n    i0.ɵɵelement(2, \"img\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 41);\n    i0.ɵɵelementStart(4, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return ctx_r35.errorMessage = \"\";\n    });\n    i0.ɵɵelement(5, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r28.errorMessage, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r37.language[\"Please select a day\"], \" \");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 43);\n    i0.ɵɵtext(4, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ng-select\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_7_Template_ng_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return ctx_r38.newSchedule.selectedDays = $event;\n    })(\"change\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_7_Template_ng_select_change_5_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return ctx_r40.validateDays();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CustomerPortalNetworkAccessComponent_ng_template_11_div_7_div_6_Template, 2, 1, \"div\", 45);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r29.language[\"Select Day(s)\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r29.days)(\"ngModel\", ctx_r29.newSchedule.selectedDays)(\"multiple\", true)(\"closeOnSelect\", false)(\"searchable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r29.formSubmitted && !ctx_r29.newSchedule.selectedDays.length);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r30.language[\"Enabled\"]);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r31.language[\"Disabled\"]);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵelementStart(4, \"p-calendar\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_1_Template_p_calendar_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(3);\n      return ctx_r43.newSchedule.startTime = $event;\n    })(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_1_Template_p_calendar_ngModelChange_4_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      ctx_r45.calcualteStopTime();\n      return ctx_r45.validateDays();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r41.language[\"Start Time\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r41.newSchedule.startTime)(\"showIcon\", true)(\"hourFormat\", 12)(\"readonlyInput\", true);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵelementStart(4, \"p-calendar\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_2_Template_p_calendar_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext(3);\n      return ctx_r46.newSchedule.stopTime = $event;\n    })(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_2_Template_p_calendar_ngModelChange_4_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext(3);\n      return ctx_r48.validateDays();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r42.language[\"End Time\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r42.newSchedule.stopTime)(\"showIcon\", true)(\"minDate\", ctx_r42.calcualteStopTime(\"get\"))(\"maxDate\", ctx_r42.maxDate)(\"hourFormat\", 12)(\"readonlyInput\", true);\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_1_Template, 5, 5, \"div\", 46);\n    i0.ɵɵtemplate(2, CustomerPortalNetworkAccessComponent_ng_template_11_div_15_div_2_Template, 5, 7, \"div\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.networkAccessType != \"Always\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.networkAccessType != \"Always\");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r33.language[\"The selected date and time is already Added\"], \" \");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_ng_template_11_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return ctx_r49.addSchedule(false);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r34.disableAddButton || ctx_r34.formSubmitted && ctx_r34.networkAccessType == \"Custom\" && !ctx_r34.newSchedule.selectedDays.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r34.language[\"Save & Add Another\"], \" \");\n  }\n}\nfunction CustomerPortalNetworkAccessComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"button\", 24);\n    i0.ɵɵelementStart(2, \"span\", 25);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_ng_template_11_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r52);\n      const modal_r27 = restoredCtx.$implicit;\n      return modal_r27.close(\"cancel\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵelementStart(4, \"h2\", 27);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CustomerPortalNetworkAccessComponent_ng_template_11_div_6_Template, 6, 1, \"div\", 28);\n    i0.ɵɵtemplate(7, CustomerPortalNetworkAccessComponent_ng_template_11_div_7_Template, 7, 7, \"div\", 29);\n    i0.ɵɵelementStart(8, \"div\", 30);\n    i0.ɵɵelementStart(9, \"label\", 31);\n    i0.ɵɵelementStart(10, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.newSchedule.enabled = $event;\n    })(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_ng_template_11_Template_input_ngModelChange_10_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.disabledNetworkAccess();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\", 33);\n    i0.ɵɵelement(12, \"small\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CustomerPortalNetworkAccessComponent_ng_template_11_span_13_Template, 2, 1, \"span\", 19);\n    i0.ɵɵtemplate(14, CustomerPortalNetworkAccessComponent_ng_template_11_span_14_Template, 2, 1, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, CustomerPortalNetworkAccessComponent_ng_template_11_div_15_Template, 3, 2, \"div\", 8);\n    i0.ɵɵtemplate(16, CustomerPortalNetworkAccessComponent_ng_template_11_div_16_Template, 2, 1, \"div\", 34);\n    i0.ɵɵelementStart(17, \"div\");\n    i0.ɵɵelementStart(18, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_ng_template_11_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.addSchedule(true);\n    });\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, CustomerPortalNetworkAccessComponent_ng_template_11_button_20_Template, 2, 2, \"button\", 36);\n    i0.ɵɵelementStart(21, \"a\", 37);\n    i0.ɵɵlistener(\"click\", function CustomerPortalNetworkAccessComponent_ng_template_11_Template_a_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r52);\n      const modal_r27 = restoredCtx.$implicit;\n      return modal_r27.close(\"cancel\");\n    });\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language[\"Network Access Hours\"], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.errorMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.networkAccessType == \"Custom\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.newSchedule.enabled);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newSchedule.enabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.newSchedule.enabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newSchedule.enabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.duplicateTimeRangeError);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disableAddButton || ctx_r4.formSubmitted && ctx_r4.networkAccessType == \"Custom\" && !ctx_r4.newSchedule.selectedDays.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language[\"Save Access Hours\"], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.networkAccessType == \"Custom\" && ctx_r4.newSchedule.enabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.cancel, \" \");\n  }\n}\nexport let CustomerPortalNetworkAccessComponent = /*#__PURE__*/(() => {\n  class CustomerPortalNetworkAccessComponent {\n    constructor(parent, modalService, formBuilder) {\n      this.parent = parent;\n      this.modalService = modalService;\n      this.formBuilder = formBuilder;\n      this.language = {};\n      this.submitForm = new EventEmitter();\n      this.disableAddButton = false;\n      this.formSubmitted = false;\n      this.duplicateTimeRangeError = false;\n      this.networkAccessType = 'Always';\n      this.errorMessage = '';\n      this.networkAccess = [];\n      this.days = [];\n      this.formattedSchedules = [];\n      this.newSchedule = {\n        selectedDays: [],\n        enabled: true,\n        startTime: new Date(),\n        stopTime: new Date(new Date().setMinutes(new Date().getMinutes() + 1))\n      };\n      this.maxDate = new Date('2023/7/18 11:58:00 pm');\n    }\n    set detectLanguageChange(language) {\n      this.ngOnInit();\n    }\n    set detectScheduleChange(schedules) {\n      if (this.networkAccessType == 'Custom') {\n        this.ngOnInit();\n        this.validateDays();\n      }\n    }\n    ngOnInit() {\n      this.form = this.parent.form;\n      this.networkAccess = [{\n        id: 'Always',\n        name: 'Always On',\n        label: this.language['Always_On']\n      }, {\n        id: 'Everyday',\n        name: 'Everyday',\n        label: this.language['everyDay']\n      }, {\n        id: 'Custom',\n        name: 'Custom',\n        label: this.language['Custom']\n      }];\n      this.days = [{\n        id: 'mon',\n        name: 'Monday',\n        label: this.language['Monday'],\n        timeRanges: []\n      }, {\n        id: 'tue',\n        name: 'Tuesday',\n        label: this.language['Tuesday'],\n        timeRanges: []\n      }, {\n        id: 'wed',\n        name: 'Wednesday',\n        label: this.language['Wednesday'],\n        timeRanges: []\n      }, {\n        id: 'thu',\n        name: 'Thursday',\n        label: this.language['Thursday'],\n        timeRanges: []\n      }, {\n        id: 'fri',\n        name: 'Friday',\n        label: this.language['Friday'],\n        timeRanges: []\n      }, {\n        id: 'sat',\n        name: 'Saturday',\n        label: this.language['Saturday'],\n        timeRanges: []\n      }, {\n        id: 'sun',\n        name: 'Sunday',\n        label: this.language['Sunday'],\n        timeRanges: []\n      }];\n      if (this.schedules.length == 0) {\n        this.networkAccessType = 'Always';\n        return;\n      }\n      this.formSubmitted = false;\n      this.initNewSchedule();\n      this.formatSchedules();\n    }\n    get schedules() {\n      return this.form.get('schedules').value;\n    }\n    get scheduleFormArray() {\n      return this.form.get('schedules');\n    }\n    get startTimeString() {\n      return this.newSchedule.startTime ? this.getDateString(this.newSchedule.startTime) : '';\n    }\n    get stopTimeString() {\n      return this.newSchedule.stopTime ? this.getDateString(this.newSchedule.stopTime) : '';\n    }\n    getDateString(date) {\n      let hours = String(date.getHours() ? String(date.getHours()).length == 1 ? '0' + date.getHours() : date.getHours() : '00');\n      let minutes = String(date.getMinutes() ? String(date.getMinutes()).length == 1 ? '0' + date.getMinutes() : date.getMinutes() : '00');\n      return hours + minutes;\n    }\n    networkChange() {\n      this.formattedSchedules = [];\n      // if (this.networkAccessType == 'Always') {\n      //   this.scheduleFormArray.clear();\n      //   this.submitForm.emit('');\n      //   return;\n      // } else if (this.networkAccessType == 'Everyday') {\n      //   this.addSchedule(false);\n      //   return;\n      // }\n      if (this.networkAccessType == 'Always' || this.networkAccessType == 'Everyday') {\n        this.initNewSchedule();\n        this.addSchedule(false);\n        return;\n      }\n      this.scheduleFormArray.clear();\n      this.days.forEach(day => {\n        let newScheduleFormGroup = this.formBuilder.group({\n          timeRanges: this.formBuilder.array([{\n            startTime: '0000',\n            stopTime: '2359'\n          }]),\n          weekDays: day.id\n        });\n        newScheduleFormGroup.patchValue({\n          weekDays: day.id\n        });\n        this.scheduleFormArray.push(newScheduleFormGroup);\n      });\n      this.initNewSchedule();\n    }\n    initNewSchedule() {\n      this.errorMessage = '';\n      this.duplicateTimeRangeError = false;\n      this.newSchedule = {\n        selectedDays: [],\n        enabled: true,\n        startTime: new Date(),\n        stopTime: new Date(new Date().setMinutes(new Date().getMinutes() + 1))\n      };\n    }\n    formatSchedules() {\n      // if (this.schedules.length == 0) {\n      //   this.networkAccessType = 'Always';\n      //   return;\n      // }\n      let ranges = [];\n      this.formattedSchedules = [...this.days];\n      let schedules = [...this.schedules];\n      schedules.forEach((schedule, i) => {\n        let timeRanges = [];\n        schedule.timeRanges.forEach(time => {\n          const range = String(time.startTime) + String(time.stopTime);\n          const timeRange = {\n            startTime: this.formatTime(range.substring(0, 2) + ',' + range.substring(2, 4), 'string'),\n            stopTime: this.formatTime(range.substring(4, 6) + ',' + range.substring(6, 8), 'string')\n          };\n          if (range != '00002359') {\n            timeRanges.push(timeRange);\n          }\n          if (!ranges.includes(range)) ranges.push(range);\n        });\n        let existingDay = this.formattedSchedules.find(day => day.id == schedule.weekDays);\n        existingDay['timeRanges'] = timeRanges;\n      });\n      ranges.forEach(range => {\n        let days = [];\n        schedules.forEach(schedule => {\n          schedule.timeRanges.forEach(time => {\n            if (range == String(time.startTime) + String(time.stopTime)) days.push(schedule.weekDays);\n          });\n        });\n        let scheduledDays = days.sort().join(',');\n        let allDays = this.days.map(day => {\n          return day.id;\n        }).sort().join(',');\n        if (scheduledDays == allDays && this.networkAccessType != 'Custom') {\n          if (ranges.length == 1 && ranges[0] == '00002359') {\n            this.networkAccessType = 'Always';\n          } else {\n            this.networkAccessType = 'Everyday';\n            this.newSchedule.startTime = this.formatTime(range.substring(0, 2) + ',' + range.substring(2, 4), 'object');\n            this.newSchedule.stopTime = this.formatTime(range.substring(4, 6) + ',' + range.substring(6, 8), 'object');\n          }\n        } else {\n          this.networkAccessType = 'Custom';\n        }\n      });\n    }\n    formatTime(timeString, returnType) {\n      let hours = timeString.split(',').shift();\n      let minutes = timeString.split(',').pop();\n      if (hours == '00' && minutes == '00' && this.networkAccessType != 'Everyday') {\n        return '0000';\n      }\n      let date = new Date('1/1/1 ' + hours + ':' + minutes + ':00');\n      if (returnType == 'object') {\n        return date;\n      }\n      return moment(date).format('hh:mm A');\n    }\n    openAddScheduleModal() {\n      this.formSubmitted = false;\n      this.disableAddButton = true;\n      this.errorMessage = '';\n      this.initNewSchedule();\n      this.modalService.open(this.addScheduleModal, {\n        size: 'sm',\n        windowClass: \"add-schedule-modal\",\n        centered: true,\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    addSchedule(closeModal) {\n      this.formSubmitted = true;\n      if (this.networkAccessType == 'Custom' && !this.newSchedule.selectedDays.length) return;\n      this.disableAddButton = true;\n      let timeRange = {\n        startTime: this.startTimeString,\n        stopTime: this.stopTimeString\n      };\n      if (this.networkAccessType == 'Always') {\n        this.scheduleFormArray.clear();\n        this.days.forEach(day => {\n          let newScheduleFormGroup = this.formBuilder.group({\n            timeRanges: this.formBuilder.array([{\n              startTime: '0000',\n              stopTime: '2359'\n            }]),\n            weekDays: day.id\n          });\n          newScheduleFormGroup.patchValue({\n            weekDays: day.id\n          });\n          this.scheduleFormArray.push(newScheduleFormGroup);\n        });\n      } else if (this.networkAccessType == 'Everyday') {\n        this.scheduleFormArray.clear();\n        this.days.forEach(day => {\n          let newScheduleFormGroup = this.formBuilder.group({\n            timeRanges: this.formBuilder.array([timeRange]),\n            weekDays: day.id\n          });\n          newScheduleFormGroup.patchValue({\n            weekDays: day.id\n          });\n          this.scheduleFormArray.push(newScheduleFormGroup);\n        });\n      } else if (this.networkAccessType == 'Custom') {\n        // if (!this.formattedSchedules.length) this.scheduleFormArray.clear();\n        this.newSchedule.selectedDays.forEach(day => {\n          let existingSchedule = this.schedules.find(schedule => schedule.weekDays == day);\n          if (existingSchedule) {\n            if (timeRange.startTime == '0000' && timeRange.stopTime == '0000') {\n              existingSchedule.timeRanges = [];\n            }\n            if (existingSchedule.timeRanges.find(timeRange => timeRange.startTime == '0000' && timeRange.stopTime == '0000')) {\n              existingSchedule.timeRanges = [];\n            }\n            if (existingSchedule.timeRanges.length == 1 && existingSchedule.timeRanges.find(timeRange => timeRange.startTime == '0000' && timeRange.stopTime == '2359')) {\n              existingSchedule.timeRanges = [];\n            }\n            existingSchedule.timeRanges.push(timeRange);\n          } else {\n            let newScheduleFormGroup = this.formBuilder.group({\n              timeRanges: this.formBuilder.array([timeRange]),\n              weekDays: day\n            });\n            newScheduleFormGroup.patchValue({\n              weekDays: day\n            });\n            this.scheduleFormArray.push(newScheduleFormGroup);\n          }\n        });\n      }\n      this.submitForm.emit('');\n      if (!closeModal) return;\n      this.modalService.dismissAll();\n    }\n    validateDays() {\n      if (this.networkAccessType != 'Custom') return;\n      this.disableAddButton = true;\n      this.errorMessage = '';\n      this.duplicateTimeRangeError = false;\n      if (this.newSchedule.selectedDays.length) {\n        this.disableAddButton = false;\n        if (!this.newSchedule.enabled) return;\n      }\n      if (this.formattedSchedules.length == 0) return;\n      this.newSchedule.selectedDays.forEach(day => {\n        let dayExists = this.schedules.find(schedule => schedule.weekDays == day);\n        if (dayExists.timeRanges[0].startTime == '0000' && dayExists.timeRanges[0].stopTime == '2359') {\n          return;\n        }\n        if (dayExists) {\n          if (dayExists.timeRanges.length == 5) {\n            this.errorMessage = `${this.language['Sorry, you can set up to five network access hour time slots each day']}`;\n            this.disableAddButton = true;\n            return;\n          }\n          dayExists.timeRanges.forEach(timeRange => {\n            if (this.startTimeString >= timeRange.startTime && this.startTimeString <= timeRange.stopTime || this.stopTimeString >= timeRange.startTime && this.stopTimeString <= timeRange.stopTime || timeRange.startTime >= this.startTimeString && timeRange.startTime <= this.stopTimeString || timeRange.stopTime >= this.startTimeString && timeRange.stopTime <= this.stopTimeString) {\n              this.disableAddButton = true;\n              this.duplicateTimeRangeError = true;\n              return;\n            }\n            ;\n          });\n        }\n      });\n    }\n    calcualteStopTime(type = 'set') {\n      if (this.newSchedule.startTime) {\n        let maxDate = new Date(this.newSchedule.startTime);\n        maxDate.setHours(23);\n        maxDate.setMinutes(58);\n        this.maxDate = new Date(maxDate);\n        const startTimeCopy = new Date(this.newSchedule.startTime);\n        let stopTime = new Date(startTimeCopy.setMinutes(startTimeCopy.getMinutes() + 1));\n        if (type == 'get') {\n          return stopTime;\n        }\n        this.newSchedule.stopTime = stopTime;\n      }\n    }\n    getMinDate() {\n      if (this.newSchedule.startTime) {\n        const startTimeCopy = new Date(this.newSchedule.startTime);\n        return new Date(startTimeCopy.setMinutes(startTimeCopy.getMinutes() + 1));\n      }\n    }\n    getTimeString(timeRange) {\n      if (timeRange.startTime == '0000' && timeRange.stopTime == '0000') {\n        return this.language['Network Disabled'];\n      }\n      return (parseInt(timeRange.startTime) ? timeRange.startTime : '12:00 AM') + ' to ' + (parseInt(timeRange.stopTime) ? timeRange.stopTime : '12:00 AM');\n    }\n    disabledNetworkAccess() {\n      if (!this.newSchedule.enabled) {\n        this.newSchedule.startTime = new Date('1/1/1 ' + '00:00:00');\n        this.newSchedule.stopTime = new Date('1/1/1 ' + '00:00:00');\n      } else {\n        this.newSchedule.startTime = new Date();\n        this.newSchedule.stopTime = new Date(new Date().setMinutes(new Date().getMinutes() + 1));\n      }\n      this.validateDays();\n    }\n    deleteNetworkAccess(dayId, networkAccessIndex) {\n      let dayIndex = this.schedules.findIndex(schedule => schedule.weekDays == dayId);\n      if (this.scheduleFormArray.at(dayIndex).value.timeRanges.length > 1) {\n        this.scheduleFormArray.at(dayIndex).value.timeRanges.splice(networkAccessIndex, 1);\n      } else {\n        this.scheduleFormArray.at(dayIndex).patchValue({\n          timeRanges: [{\n            startTime: '0000',\n            stopTime: '2359'\n          }]\n        });\n        this.networkAccessType = 'Always';\n      }\n      this.formatSchedules();\n      this.validateDays();\n      this.submitForm.emit('');\n    }\n  }\n  CustomerPortalNetworkAccessComponent.ɵfac = function CustomerPortalNetworkAccessComponent_Factory(t) {\n    return new (t || CustomerPortalNetworkAccessComponent)(i0.ɵɵdirectiveInject(i1.FormGroupDirective), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  CustomerPortalNetworkAccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomerPortalNetworkAccessComponent,\n    selectors: [[\"customer-portal-network-access\"]],\n    viewQuery: function CustomerPortalNetworkAccessComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addScheduleModal = _t.first);\n      }\n    },\n    inputs: {\n      language: \"language\",\n      detectLanguageChange: \"detectLanguageChange\",\n      detectScheduleChange: \"detectScheduleChange\"\n    },\n    outputs: {\n      submitForm: \"submitForm\"\n    },\n    decls: 13,\n    vars: 7,\n    consts: [[\"id\", \"network-access\"], [1, \"row\", \"ccl-form\"], [1, \"col-md-4\"], [1, \"mb-2\"], [\"name\", \"networkAccessType\", \"value\", \"id\", \"bindLabel\", \"label\", \"bindValue\", \"id\", 3, \"ngModel\", \"items\", \"searchable\", \"ngModelChange\", \"change\"], [\"class\", \"row ccl-form\", 4, \"ngIf\"], [1, \"row\"], [\"type\", \"button\", \"class\", \"btn-default primary btn-sm-primary mt-2\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"addScheduleModal\", \"\"], [1, \"captive-time\", \"mb-2\", \"col-md-3\"], [\"for\", \"startTime\"], [1, \"captive-time-item\", \"position-relative\"], [\"id\", \"startTime\", \"name\", \"startTime\", \"timeOnly\", \"true\", \"showTime\", \"true\", 3, \"ngModel\", \"showIcon\", \"hourFormat\", \"readonlyInput\", \"ngModelChange\", \"onClose\"], [\"for\", \"stopTime\"], [\"id\", \"stopTime\", \"name\", \"stopTime\", \"timeOnly\", \"true\", \"showTime\", \"true\", 3, \"ngModel\", \"showIcon\", \"minDate\", \"maxDate\", \"hourFormat\", \"readonlyInput\", \"ngModelChange\", \"onClose\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"btn-sm-primary\", \"mt-2\", 3, \"click\"], [1, \"captive-hours-table\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"captive-hours-delete\", 4, \"ngFor\", \"ngForOf\"], [1, \"captive-hours-delete\"], [\"src\", \"../../../../assets/img/net-delete.svg\", 1, \"net-delete\", \"pointer\", 3, \"title\", \"click\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\", 3, \"click\"], [1, \"modal-body\", \"ccl-form\"], [1, \"title\"], [\"class\", \"w-100 d-flex alert alert-danger fade show\", 4, \"ngIf\"], [\"class\", \"mb-2\", 4, \"ngIf\"], [\"ng-reflect-ng-class\", \"toggle-swtbtn checkbox switche\", 1, \"toggle-swtbtn\", \"checkbox\", \"switcher\", \"mr-2\"], [\"for\", \"enabled\"], [\"type\", \"checkbox\", \"name\", \"enabled\", \"id\", \"enabled\", 1, \"ng-untouched\", \"ng-pristine\", \"ng-valid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mr-2\"], [\"class\", \"error mb-2\", 4, \"ngIf\"], [\"type\", \"button\", \"id\", \"add\", 1, \"btn-default\", \"primary\", \"px-3\", \"mr-3\", \"mt-5\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"id\", \"add-another\", \"class\", \"btn-default default btn-dft px-3 mr-3 mt-5\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"id\", \"cancel\", 1, \"primary\", 3, \"click\"], [1, \"w-100\", \"d-flex\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [1, \"d-inline-flex\", \"w-75\", 3, \"innerHtml\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"error\"], [\"bindLabel\", \"label\", \"bindValue\", \"id\", \"name\", \"selectedDays\", 3, \"items\", \"ngModel\", \"multiple\", \"closeOnSelect\", \"searchable\", \"ngModelChange\", \"change\"], [\"class\", \"error\", 4, \"ngIf\"], [\"class\", \"captive-time mb-2 col-md-6\", 4, \"ngIf\"], [1, \"captive-time\", \"mb-2\", \"col-md-6\"], [\"id\", \"startTime\", \"name\", \"startTime\", \"timeOnly\", \"true\", \"showTime\", \"true\", 3, \"ngModel\", \"showIcon\", \"hourFormat\", \"readonlyInput\", \"ngModelChange\"], [\"id\", \"stopTime\", \"name\", \"stopTime\", \"timeOnly\", \"true\", \"showTime\", \"true\", 3, \"ngModel\", \"showIcon\", \"minDate\", \"maxDate\", \"hourFormat\", \"readonlyInput\", \"ngModelChange\"], [1, \"error\", \"mb-2\"], [\"type\", \"button\", \"id\", \"add-another\", 1, \"btn-default\", \"default\", \"btn-dft\", \"px-3\", \"mr-3\", \"mt-5\", 3, \"disabled\", \"click\"]],\n    template: function CustomerPortalNetworkAccessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ng-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomerPortalNetworkAccessComponent_Template_ng_select_ngModelChange_6_listener($event) {\n          return ctx.networkAccessType = $event;\n        })(\"change\", function CustomerPortalNetworkAccessComponent_Template_ng_select_change_6_listener() {\n          return ctx.networkChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, CustomerPortalNetworkAccessComponent_div_7_Template, 11, 12, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtemplate(9, CustomerPortalNetworkAccessComponent_button_9_Template, 2, 1, \"button\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CustomerPortalNetworkAccessComponent_div_10_Template, 11, 3, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, CustomerPortalNetworkAccessComponent_ng_template_11_Template, 23, 12, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Network Access\"], \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.networkAccessType)(\"items\", ctx.networkAccess)(\"searchable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.networkAccessType == \"Everyday\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.networkAccessType == \"Custom\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.networkAccessType == \"Custom\");\n      }\n    },\n    directives: [i3.NgSelectComponent, i1.NgControlStatus, i1.NgModel, i4.NgIf, i5.Calendar, i4.NgForOf, i1.CheckboxControlValueAccessor],\n    styles: [\".captive-time-item .p-calendar-w-btn .p-datepicker-trigger .p-button-icon.pi.pi-calendar{background:url(clock.257649ad24994256bc09.svg)!important;background-repeat:no-repeat!important;background-size:20px!important;display:inline-block;width:20px;height:20px}  .captive-time-item .p-calendar-w-btn .p-datepicker-trigger .p-button-icon.pi.pi-calendar:before{display:none!important}.captive-time[_ngcontent-%COMP%]{position:relative}.captive-time[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:absolute;right:11px;top:35px;width:20px}.captive-time-item[_ngcontent-%COMP%]{width:100%}.captive-hours-table[_ngcontent-%COMP%]{width:616px;margin-top:16px}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{border-bottom:1px solid #cccccc}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;font-size:14px;line-height:18px;padding-bottom:6px}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(1){padding-left:16px}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-weight:400;font-size:15px;line-height:24px}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;padding:3px 0}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(1){padding-left:16px}.captive-hours-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even){background:#f8f8fa}  .add-schedule-modal .modal-dialog{border-radius:26px;width:536px}  .add-schedule-modal .modal-dialog .modal-header{height:20px}  .add-schedule-modal .modal-dialog .modal-content .modal-body h2{font-family:\\\"Source Sans Pro\\\";font-style:normal;font-weight:300;font-size:42px;line-height:53px;display:flex;align-items:center}  .add-schedule-modal .modal-dialog .modal-content .modal-body #cancel{text-decoration:none;cursor:pointer}.captive-hours-delete[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:16px;padding:6px 0}\"]\n  });\n  return CustomerPortalNetworkAccessComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}