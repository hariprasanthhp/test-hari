{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    //'X-Calix-Username': 'admin@calix.com'\n  })\n};\nexport let OrganizationApiService = /*#__PURE__*/(() => {\n  class OrganizationApiService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseURL = environment.calixAdminURL;\n      this.OrgBaseURL = environment.CALIX_ADMIN_ORG_BASE_URL;\n      this.org_id = environment.faAdminOrgId;\n      this.users = this.baseURL + 'users';\n      this.userDelete = this.baseURL + `user`;\n      this.userAdd = this.baseURL + `user/signup`;\n      this.roles = this.baseURL + `roles`;\n      this.roleDelete = this.baseURL + 'role';\n      this.deactivateUsersList = this.baseURL + 'dpu/list';\n      this.aclList = this.baseURL + `org/50/orgacl`;\n      this.ssoconfigAdd = this.baseURL + `config`;\n      this.ssoconfigUpdate = this.baseURL + `config`;\n      this.ssoconfigGet = this.baseURL + `config/org/`;\n      this.ssoconfigDelete = this.baseURL + `config/`;\n      this.aclDelete = this.baseURL + `org/12622588/orgacl`;\n      this.aclAdd = this.baseURL + `org/50/orgacl`;\n      this.acsList = this.OrgBaseURL + `orgshare/acs`;\n      this.acsUpdate = this.OrgBaseURL + `orgshare/acs`;\n      this.acsDelete = this.baseURL + `orgshare/acs/remove/1234`;\n      this.orgInfo = this.OrgBaseURL + `organizations/50`;\n      this.orgInfoEntitlements = this.OrgBaseURL + `entitlements/50`;\n    }\n    UsersCountByOrgId(orgId) {\n      return this.httpClient.get(`${this.baseURL}org/${orgId}/users/_count`, httpOptions);\n    }\n    UsersList() {\n      return this.httpClient.get(this.users, httpOptions);\n    }\n    UsersListByOrgId(orgId, count) {\n      return this.httpClient.get(`${this.baseURL}org/${orgId}/users?size=${count}`, httpOptions);\n    }\n    UserDelete(id) {\n      return this.httpClient.delete(`${this.userDelete}/${id}`, httpOptions);\n    }\n    UserAdd(params) {\n      return this.httpClient.put(`${this.userAdd}`, params, httpOptions);\n    }\n    RolesList() {\n      return this.httpClient.get(this.roles, httpOptions);\n    }\n    RolesListByOrgID(orgId) {\n      return this.httpClient.get(`${this.baseURL}org/${orgId}/roles`, httpOptions);\n    }\n    RoleDelete(id) {\n      return this.httpClient.delete(`${this.roleDelete}/${id}`, httpOptions);\n    }\n    DeactivateUsersList() {\n      return this.httpClient.get(this.deactivateUsersList, httpOptions);\n    }\n    // public AclList<T>(): Observable<T> {\n    //     return this.httpClient.get<T>(this.aclList, httpOptions)\n    // }\n    AclList(orgId) {\n      return this.httpClient.get(`${environment.calixAdminURL}org/${orgId}/orgacl`, httpOptions);\n    }\n    // public AclAdd<T>(params: T): Observable<T> {\n    //     return this.httpClient.post<T>(`${this.aclAdd}`, params, httpOptions)\n    // }\n    AclAdd(params, orgId) {\n      // return this.httpClient.post<T>(`${this.aclAdd}`, params, httpOptions)\n      return this.httpClient.post(`${environment.calixAdminURL}org/${orgId}/orgacl`, params, httpOptions);\n    }\n    AclDelete(orgId) {\n      // return this.httpClient.post<T>(`${this.aclAdd}`, params, httpOptions)\n      return this.httpClient.delete(`${environment.calixAdminURL}org/${orgId}/orgacl`, httpOptions);\n    }\n    SSOConfigAdd(params) {\n      return this.httpClient.put(`${this.ssoconfigAdd}`, params, httpOptions);\n    }\n    SSOConfigUpdate(params, _id) {\n      return this.httpClient.post(`${this.ssoconfigUpdate}/${_id}`, params, httpOptions);\n    }\n    // public SSOConfigGet<T>(): Observable<T> {\n    //     return this.httpClient.get<T>(this.ssoconfigGet, httpOptions)\n    // }\n    SSOConfigGet(orgId) {\n      return this.httpClient.get(`${environment.calixAdminURL}config/org/${orgId}`, httpOptions);\n    }\n    SSOConfigDelete(id) {\n      return this.httpClient.delete(`${this.ssoconfigDelete}/${id}`, httpOptions);\n    }\n    // public AcsList<T>(): Observable<T> {\n    //     return this.httpClient.get<T>(this.acsList, httpOptions)\n    // }\n    ACSList(orgId) {\n      return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}orgshare/acs/${orgId}`, httpOptions);\n    }\n    ACSAdd(params) {\n      return this.httpClient.post(`${environment.CALIX_ADMIN_ORG_BASE_URL}orgshare/acs`, params, httpOptions);\n    }\n    AcsDelete() {\n      return this.httpClient.get(this.acsDelete, httpOptions);\n    }\n    ACSUpdate(params, orgId) {\n      return this.httpClient.put(`${environment.CALIX_ADMIN_ORG_BASE_URL}orgshare/acs/${orgId}`, params, httpOptions);\n    }\n    // public orgInformation(orgId: any): any {\n    //     // return this.httpClient.get<T>(this.orgInfo, httpOptions)\n    //     return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}organizations/${orgId}`, httpOptions);\n    // }\n    orgInformation(orgId) {\n      // return this.httpClient.get<T>(this.orgInfo, httpOptions)\n      return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}organizations/${orgId}`, httpOptions);\n    }\n    orgInfoEntitlement(orgId) {\n      // return this.httpClient.get<T>(this.orgInfoEntitlements, httpOptions)\n      return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}entitlements/${orgId}`, httpOptions);\n    }\n    OrganzationDetail(orgId) {\n      return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}organizations/${orgId}`, httpOptions);\n    }\n    GetSpeedTestData(orgId) {\n      //return this.httpClient.get(`${environment.calixAdminURL}speedtest/organization/${orgId}`, httpOptions);\n      return this.httpClient.get(`${environment.SUPPORT_URL}/device/speed-test/config/${orgId}`);\n    }\n    UpdateSpeedTestData(orgId, params) {\n      //return this.httpClient.put(`${environment.calixAdminURL}speedtest/organization/${orgId}`, params, httpOptions);\n      return this.httpClient.put(`${environment.SUPPORT_URL}/device/speed-test/config/${orgId}`, params);\n    }\n    AddSpeedTestData(params) {\n      return this.httpClient.post(`${environment.calixAdminURL}speedtest/organization`, params, httpOptions);\n    }\n    DeleteSpeedTestData(orgId) {\n      return this.httpClient.delete(`${environment.calixAdminURL}speedtest/organization/${orgId}`, httpOptions);\n    }\n    callRestApi(endpoint, filters) {\n      return this.httpClient.get(`${endpoint}`, httpOptions).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n    DeleteRolesListByUserId(userId) {\n      return this.httpClient.delete(`${environment.calixAdminURL}user/${userId}/roles`, httpOptions);\n    }\n    GetHostData(url) {\n      return this.httpClient.get(`${url}`);\n    }\n    GetACSData(orgId) {\n      return this.httpClient.get(`${environment.calixAdminURL}acs/organization/${orgId}`);\n    }\n    UpdateACSData(params, orgId) {\n      return this.httpClient.put(`${environment.calixAdminURL}acs/organization/${orgId}`, params, httpOptions);\n    }\n    getOrgInfo(orgId) {\n      // return this.httpClient.get<T>(this.orgInfo, httpOptions)\n      return this.httpClient.get(`${environment.CALIX_ADMIN_ORG_BASE_URL}organizations/${orgId}`, httpOptions);\n    }\n    fetchBillingSummaryInfo() {\n      return this.httpClient.get(`${environment.API_BASE_URL}billing/subscriber-pipeline/summary`);\n    }\n  }\n  OrganizationApiService.ɵfac = function OrganizationApiService_Factory(t) {\n    return new (t || OrganizationApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  OrganizationApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrganizationApiService,\n    factory: OrganizationApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrganizationApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}