{"ast":null,"code":"import { assign } from 'min-dash';\n\n/**\n * A palette provider for BPMN 2.0 elements.\n */\nexport default function PaletteProvider(palette, create, elementFactory, spaceTool, lassoTool, handTool, globalConnect, translate) {\n  this._palette = palette;\n  this._create = create;\n  this._elementFactory = elementFactory;\n  this._spaceTool = spaceTool;\n  this._lassoTool = lassoTool;\n  this._handTool = handTool;\n  this._globalConnect = globalConnect;\n  this._translate = translate;\n  palette.registerProvider(this);\n}\nPaletteProvider.$inject = ['palette', 'create', 'elementFactory', 'spaceTool', 'lassoTool', 'handTool', 'globalConnect', 'translate'];\nPaletteProvider.prototype.getPaletteEntries = function (element) {\n  var actions = {},\n    create = this._create,\n    elementFactory = this._elementFactory,\n    spaceTool = this._spaceTool,\n    lassoTool = this._lassoTool,\n    handTool = this._handTool,\n    globalConnect = this._globalConnect,\n    translate = this._translate;\n  function createAction(type, group, className, title, options) {\n    function createListener(event) {\n      var shape = elementFactory.createShape(assign({\n        type: type\n      }, options));\n      if (options) {\n        shape.businessObject.di.isExpanded = options.isExpanded;\n      }\n      create.start(event, shape);\n    }\n    var shortType = type.replace(/^bpmn:/, '');\n    return {\n      group: group,\n      className: className,\n      title: title || translate('Create {type}', {\n        type: shortType\n      }),\n      action: {\n        dragstart: createListener,\n        click: createListener\n      }\n    };\n  }\n  function createSubprocess(event) {\n    var subProcess = elementFactory.createShape({\n      type: 'bpmn:SubProcess',\n      x: 0,\n      y: 0,\n      isExpanded: true\n    });\n    var startEvent = elementFactory.createShape({\n      type: 'bpmn:StartEvent',\n      x: 40,\n      y: 82,\n      parent: subProcess\n    });\n    create.start(event, [subProcess, startEvent], {\n      hints: {\n        autoSelect: [startEvent]\n      }\n    });\n  }\n  function createParticipant(event) {\n    create.start(event, elementFactory.createParticipantShape());\n  }\n  assign(actions, {\n    'hand-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-hand-tool',\n      title: translate('Activate the hand tool'),\n      action: {\n        click: function (event) {\n          handTool.activateHand(event);\n        }\n      }\n    },\n    'lasso-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-lasso-tool',\n      title: translate('Activate the lasso tool'),\n      action: {\n        click: function (event) {\n          lassoTool.activateSelection(event);\n        }\n      }\n    },\n    'space-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-space-tool',\n      title: translate('Activate the create/remove space tool'),\n      action: {\n        click: function (event) {\n          spaceTool.activateSelection(event);\n        }\n      }\n    },\n    'global-connect-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-connection-multi',\n      title: translate('Activate the global connect tool'),\n      action: {\n        click: function (event) {\n          globalConnect.start(event);\n        }\n      }\n    },\n    'tool-separator': {\n      group: 'tools',\n      separator: true\n    },\n    'create.start-event': createAction('bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none', translate('Create StartEvent')),\n    'create.intermediate-event': createAction('bpmn:IntermediateThrowEvent', 'event', 'bpmn-icon-intermediate-event-none', translate('Create Intermediate/Boundary Event')),\n    'create.end-event': createAction('bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none', translate('Create EndEvent')),\n    'create.exclusive-gateway': createAction('bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-none', translate('Create Gateway')),\n    'create.task': createAction('bpmn:Task', 'activity', 'bpmn-icon-task', translate('Create Task')),\n    'create.data-object': createAction('bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object', translate('Create DataObjectReference')),\n    'create.data-store': createAction('bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store', translate('Create DataStoreReference')),\n    'create.subprocess-expanded': {\n      group: 'activity',\n      className: 'bpmn-icon-subprocess-expanded',\n      title: translate('Create expanded SubProcess'),\n      action: {\n        dragstart: createSubprocess,\n        click: createSubprocess\n      }\n    },\n    'create.participant-expanded': {\n      group: 'collaboration',\n      className: 'bpmn-icon-participant',\n      title: translate('Create Pool/Participant'),\n      action: {\n        dragstart: createParticipant,\n        click: createParticipant\n      }\n    },\n    'create.group': createAction('bpmn:Group', 'artifact', 'bpmn-icon-group', translate('Create Group'))\n  });\n  return actions;\n};","map":null,"metadata":{},"sourceType":"module"}