{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { DataTableDirective } from 'angular-datatables';\nimport { forkJoin, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../data.service\";\nimport * as i4 from \"../netops-management.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"src/app/sys-admin/services/common.service\";\nimport * as i7 from \"src/app/shared/services/sso-auth.service\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"src/app/shared/services/download.service\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"angular-datatables\";\nfunction WorkflowStatusComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction WorkflowStatusComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_tr_31_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.go_details(item_r3);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵelementStart(12, \"p\", 21);\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵelementStart(18, \"p\", 22);\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵelementStart(24, \"p\", 23);\n    i0.ɵɵelementStart(25, \"span\");\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵelementStart(30, \"p\", 24);\n    i0.ɵɵelementStart(31, \"span\");\n    i0.ɵɵtext(32);\n    i0.ɵɵpipe(33, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"i\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 11, item_r3.start, \"MM/dd/yyyy hh:mm a\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", item_r3.succeededCount + item_r3.failedCount ? i0.ɵɵpipeBind2(9, 14, (item_r3.succeededCount + item_r3.failedCount) / (item_r3.succeededCount + item_r3.failedCount + item_r3.inProgressCount + item_r3.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.Completed, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.succeededCount ? i0.ɵɵpipeBind2(15, 17, item_r3.succeededCount / (item_r3.succeededCount + item_r3.failedCount + item_r3.inProgressCount + item_r3.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.Succeeded, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", item_r3.failedCount ? i0.ɵɵpipeBind2(21, 20, item_r3.failedCount / (item_r3.succeededCount + item_r3.failedCount + item_r3.inProgressCount + item_r3.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.Failed, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", item_r3.inProgressCount ? i0.ɵɵpipeBind2(27, 23, item_r3.inProgressCount / (item_r3.succeededCount + item_r3.failedCount + item_r3.inProgressCount + item_r3.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.In_Progress, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.pendingCount ? i0.ɵɵpipeBind2(33, 26, item_r3.pendingCount / (item_r3.succeededCount + item_r3.failedCount + item_r3.inProgressCount + item_r3.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.Pending, \"\");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tr_69_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8.state == \"Succeeded\" ? ctx_r9.language.Succeeded : \"\");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tr_69_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8.state == \"In Progress\" ? ctx_r10.language.In_Progress : \"\");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tr_69_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8.state == \"Pending\" ? ctx_r11.language.Pending : \"\");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tr_69_p_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8.state == \"Failed\" ? ctx_r12.language.Failed : \"\");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tr_69_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"span\", 49);\n    i0.ɵɵelementStart(3, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_tr_69_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const item_r8 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.go_device(item_r8);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 50);\n    i0.ɵɵelementStart(15, \"div\", 51);\n    i0.ɵɵtemplate(16, WorkflowStatusComponent_div_32_tr_69_p_16_Template, 2, 1, \"p\", 48);\n    i0.ɵɵtemplate(17, WorkflowStatusComponent_div_32_tr_69_p_17_Template, 2, 1, \"p\", 48);\n    i0.ɵɵtemplate(18, WorkflowStatusComponent_div_32_tr_69_p_18_Template, 2, 1, \"p\", 48);\n    i0.ɵɵtemplate(19, WorkflowStatusComponent_div_32_tr_69_p_19_Template, 2, 1, \"p\", 48);\n    i0.ɵɵelementStart(20, \"p\", 52);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r8.serialNumber ? item_r8.serialNumber : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r8.ipAddress ? item_r8.ipAddress : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r8.modelName ? item_r8.modelName : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r8.softwareVersion ? item_r8.softwareVersion : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", item_r8.state == \"Succeeded\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.state == \"In Progress\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.state == \"Pending\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.state == \"Failed\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((item_r8 == null ? null : item_r8.failureSummary) === \"myCommunityIQ Bulk Activation failed\" ? \"SmartTown Wi-Fi Bulk Activation failed\" : (item_r8 == null ? null : item_r8.failureSummary) === \"myCommunityIQ Bulk Activation is pending\" ? \"SmartTown Wi-Fi Bulk Activation is pending\" : item_r8.failureSummary);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(24, 11, item_r8.start, \"MM/dd/yyyy hh:mm:ss a\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(27, 14, item_r8.end, \"MM/dd/yyyy hh:mm:ss a\"), \" \");\n  }\n}\nfunction WorkflowStatusComponent_div_32_tbody_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 53);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.language[\"No data available in table\"]);\n  }\n}\nfunction WorkflowStatusComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelementStart(1, \"table\", 27);\n    i0.ɵɵelementStart(2, \"tbody\");\n    i0.ɵɵelementStart(3, \"tr\", 28);\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 29);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_Template_td_click_14_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.doFilter(\"Succeeded\", ctx_r19.workflowFil);\n    });\n    i0.ɵɵelementStart(15, \"p\", 30);\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19);\n    i0.ɵɵelementStart(20, \"span\", 31);\n    i0.ɵɵelement(21, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\", 33);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_Template_td_click_22_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.doFilter(\"Failed\", ctx_r21.workflowFil);\n    });\n    i0.ɵɵelementStart(23, \"p\", 34);\n    i0.ɵɵelementStart(24, \"span\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27);\n    i0.ɵɵelementStart(28, \"span\", 31);\n    i0.ɵɵelement(29, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"td\", 35);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_Template_td_click_30_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.doFilter(\"In Progress\", ctx_r22.workflowFil);\n    });\n    i0.ɵɵelementStart(31, \"p\", 36);\n    i0.ɵɵelementStart(32, \"span\");\n    i0.ɵɵtext(33);\n    i0.ɵɵpipe(34, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(35);\n    i0.ɵɵelementStart(36, \"span\", 31);\n    i0.ɵɵelement(37, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"td\", 37);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_Template_td_click_38_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.doFilter(\"Pending\", ctx_r23.workflowFil);\n    });\n    i0.ɵɵelementStart(39, \"p\", 38);\n    i0.ɵɵelementStart(40, \"span\");\n    i0.ɵɵtext(41);\n    i0.ɵɵpipe(42, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(43);\n    i0.ɵɵelementStart(44, \"span\", 31);\n    i0.ɵɵelement(45, \"i\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"td\", 39);\n    i0.ɵɵelementStart(47, \"p\", 40);\n    i0.ɵɵelement(48, \"i\", 41);\n    i0.ɵɵelementStart(49, \"span\", 42);\n    i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_div_32_Template_span_click_49_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r24 = i0.ɵɵnextContext();\n      ctx_r24.go_back();\n      return ctx_r24.workflowFil = \"\";\n    });\n    i0.ɵɵtext(50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"table\", 43);\n    i0.ɵɵelementStart(52, \"thead\");\n    i0.ɵɵelementStart(53, \"tr\");\n    i0.ɵɵelementStart(54, \"th\", 44);\n    i0.ɵɵtext(55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"th\", 45);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"th\", 45);\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"th\", 45);\n    i0.ɵɵtext(61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"th\", 45);\n    i0.ɵɵtext(63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"th\", 46);\n    i0.ɵɵtext(65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(66, \"th\", 46);\n    i0.ɵɵtext(67);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"tbody\");\n    i0.ɵɵtemplate(69, WorkflowStatusComponent_div_32_tr_69_Template, 28, 17, \"tr\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(70, WorkflowStatusComponent_div_32_tbody_70_Template, 4, 1, \"tbody\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 31, ctx_r2.workflowFil.start, \"MM/dd/yyyy hh:mm a\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount ? i0.ɵɵpipeBind2(12, 34, (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount) / (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount + ctx_r2.workflowFil.inProgressCount + ctx_r2.workflowFil.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Completed, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"\", ctx_r2.workflowFil.succeededCount, \" device(s)\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.workflowFil.succeededCount ? i0.ɵɵpipeBind2(18, 37, ctx_r2.workflowFil.succeededCount / (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount + ctx_r2.workflowFil.inProgressCount + ctx_r2.workflowFil.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Succeeded, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.succeed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"\", ctx_r2.workflowFil.failedCount, \" device(s)\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.workflowFil.failedCount ? i0.ɵɵpipeBind2(26, 40, ctx_r2.workflowFil.failedCount / (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount + ctx_r2.workflowFil.inProgressCount + ctx_r2.workflowFil.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Failed, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.failed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"\", ctx_r2.workflowFil.inProgressCount, \" device(s)\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.workflowFil.inProgressCount ? i0.ɵɵpipeBind2(34, 43, ctx_r2.workflowFil.inProgressCount / (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount + ctx_r2.workflowFil.inProgressCount + ctx_r2.workflowFil.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.In_Progress, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.inprogress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"\", ctx_r2.workflowFil.pendingCount, \" device(s)\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.workflowFil.pendingCount ? i0.ɵɵpipeBind2(42, 46, ctx_r2.workflowFil.pendingCount / (ctx_r2.workflowFil.succeededCount + ctx_r2.workflowFil.failedCount + ctx_r2.workflowFil.inProgressCount + ctx_r2.workflowFil.pendingCount) * 100, \"1.0-1\") : \"0\", \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Pending, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.pending);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Back_Summary);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r2.tableFilterOptions)(\"hidden\", !ctx_r2.detailDataAvailable && ctx_r2.excLogVisible);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.language.FSAN_Serial_Number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.IPAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.model);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Current_Software_Image_Version);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Start_Time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.End_Time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.workflowfilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.workflowfilter == null ? null : ctx_r2.workflowfilter.length) == 0);\n  }\n}\nvar wfState = /*#__PURE__*/(() => {\n  (function (wfState) {\n    wfState[\"Failed\"] = \"Failed\";\n    wfState[\"InProgress\"] = \"In Progress\";\n    wfState[\"Succeeded\"] = \"Succeeded\";\n    wfState[\"Pending\"] = \"Pending\";\n  })(wfState || (wfState = {}));\n  return wfState;\n})();\nexport let WorkflowStatusComponent = /*#__PURE__*/(() => {\n  class WorkflowStatusComponent {\n    constructor(translateService, route, service, api, router, http, commonOrgService, sso, titleService, downloadService) {\n      this.translateService = translateService;\n      this.route = route;\n      this.service = service;\n      this.api = api;\n      this.router = router;\n      this.http = http;\n      this.commonOrgService = commonOrgService;\n      this.sso = sso;\n      this.titleService = titleService;\n      this.downloadService = downloadService;\n      this.loading = true;\n      this.isRerender = false;\n      this.errorInfo = '';\n      this.successInfo = '';\n      this.tableOptions = {};\n      this.tableFilterOptions = {};\n      this.dtTrigger = new Subject();\n      this.excLogVisible = false;\n      this.filter = \"\";\n      this.datatableVisible = false;\n      this.succeed = false;\n      this.failed = false;\n      this.inprogress = false;\n      this.pending = false;\n      this.workflowfilter = [];\n      this.orgId = this.sso.getOrgId();\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n      this.germanTable = this.translateService.de_DE;\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        this.name = params.name;\n        this.workflowId = params.item;\n      });\n      // this.GetWorkFlowCountHist();\n      this.getWorkflowStatus();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        setTimeout(() => {\n          this.redraw();\n        }, 500);\n        this.tableLanguageOptions();\n        this.rerender();\n        this.newRedraw();\n      });\n      if (!this.router.url.includes('cco-foundation') && !this.router.url.includes('cco/operations/')) {\n        this.titleService.setTitle('Workflows - Operations  - Netops - Service - Calix Cloud');\n      } else if (this.router.url.includes('cco/operations/')) {\n        this.titleService.setTitle(`${this.language['Workflows']} - ${this.language['Configuration']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.titleService.setTitle('Workflow - Configuration - Deployment - Calix Cloud');\n      }\n      this.fetchWorkFlowExcLogs();\n    }\n    getExcLogsCout(state) {\n      this.api.getWorkFlowExcLogsCount(this.orgId, this.workflowId, this.workflowFil.execId, state).subscribe(res => {\n        this.count = res.count;\n        this.excLogVisible = true;\n        this.detailDataAvailable = true;\n        this.isRerender = false;\n        this.rerender();\n      });\n    }\n    fetchWorkFlowExcLogs() {\n      this.loading = true;\n      const that = this;\n      this.tableFilterOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 20,\n        serverSide: true,\n        processing: false,\n        dom: \"tip\",\n        responsive: true,\n        columnDefs: [{\n          targets: [5, 6],\n          orderable: true\n        }, {\n          type: 'date',\n          targets: [5, 6]\n        }],\n        order: [[5, 'desc']],\n        ajax: (dataTablesParameters, callback) => {\n          this.loading = true;\n          let orderBy = encodeURIComponent(JSON.stringify({\n            \"end\": -1\n          }));\n          let sortBy = dataTablesParameters.order[0].column;\n          let sortType = dataTablesParameters.order[0].dir;\n          if (sortBy == 6) {\n            if (sortType == \"asc\") {\n              orderBy = encodeURIComponent(JSON.stringify({\n                \"end\": 1\n              }));\n            } else {\n              orderBy = encodeURIComponent(JSON.stringify({\n                \"end\": -1\n              }));\n            }\n          } else {\n            if (sortType == \"asc\") {\n              orderBy = encodeURIComponent(JSON.stringify({\n                \"start\": 1\n              }));\n            } else {\n              orderBy = encodeURIComponent(JSON.stringify({\n                \"start\": -1\n              }));\n            }\n          }\n          let params = new HttpParams();\n          // params = params.set(\"orgId\", String(this.orgId))\n          params = params.set(\"skip\", dataTablesParameters.start);\n          params = params.set(\"limit\", dataTablesParameters.length);\n          params = params.set(\"workflowId\", this.workflowId);\n          params = params.set(\"execId\", this.workflowFil.execId);\n          if (this.sso.getOrg(this.orgId)) {\n            params.set(\"orgId\", this.orgId);\n          }\n          if (this.filter === \"Succeeded\" || this.filter === 'Failed' || this.filter === 'In Progress' || this.filter === 'Pending') {\n            params = params.set(\"state\", this.filter);\n          }\n          this.workflowhistory = [];\n          that.http.get(environment.SUPPORT_URL + '/netops-wf/workflow-exec-logs?orderby=' + orderBy, {\n            params\n          }).subscribe(res => {\n            console.log(\"res=>\", res);\n            if (res) {\n              this.workflowhistory = res;\n              this.workflowfilter = this.workflowhistory.filter(e => e.execId === this.workflowFil.execId);\n              if (this.filter === \"\") {\n                this.totalRec = this.workflowfilter.length;\n                this.successPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Succeeded\").length / this.totalRec * 100);\n                this.failPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Failed\").length / this.totalRec * 100);\n                this.inprgPercent = Math.round(this.workflowfilter.filter(e => e.state === \"In Progress\").length / this.totalRec * 100);\n                this.pendingPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Pending\").length / this.totalRec * 100);\n                this.completePercent = this.successPercent + this.failPercent;\n              }\n              this.setTableOptions();\n              if (this.isRerender) {\n                this.rerender();\n                this.isRerender = false;\n              } else {\n                this.dtTrigger.next();\n                this.loading = false;\n              }\n            }\n            callback({\n              recordsTotal: this.count,\n              recordsFiltered: this.count,\n              data: []\n            });\n          }), error => {\n            this.setTableOptions();\n            if (this.isRerender) {\n              this.rerender();\n              this.isRerender = false;\n            } else {\n              this.dtTrigger.next();\n            }\n            this.loading = false;\n            this.pageErrorHandle(error);\n            this.commonOrgService.pageScrollTop();\n          };\n        },\n        drawCallback: settings => {\n          this.changeTableStatusLanguage(settings);\n        }\n      };\n      this.tableLanguageOptions();\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n    }\n    getTimezoneName() {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n    go_details(item) {\n      if (this.dtTrigger) {\n        this.dtTrigger.unsubscribe();\n        this.dtTrigger = new Subject();\n      }\n      this.isRerender = false;\n      this.showDetails = true;\n      this.workflowFil = item;\n      this.loading = true;\n      this.getExcLogsCout();\n      this.getWorkflowStatus();\n    }\n    setTableOptions(type) {\n      /*  this.tableFilterOptions = {\r\n         pagingType: 'full_numbers',\r\n         rowId: 'id',\r\n         lengthChange: false,\r\n         pageLength: 20,\r\n         processing: true,\r\n         //searching: false,\r\n         dom: 'tipr',\r\n         columnDefs: [\r\n           { targets: [0,1,2,3,4,5,6], orderable: true }\r\n         ],\r\n         order: [6, 'desc'],\r\n         drawCallback: (settings) => {\r\n           let total = settings.aoData.length;\r\n           let length = settings._iDisplayLength;\r\n           if (total <= length) {\r\n             $(settings.nTableWrapper).find('#workflow-table_last').addClass('disabled');\r\n           }\r\n         }\r\n       }; */\n      // this.tableLanguageOptions();\n      /*  if (type && type == 'language') {\r\n         console.log('type && type')\r\n         setTimeout(() => {\r\n           this.rerender();\r\n           setTimeout(() => {\r\n             this.detailDataAvailable = true;\r\n             this.loading = false;\r\n           }, 100);\r\n         }, 100);\r\n       } else {\r\n         setTimeout(() => {\r\n           this.detailDataAvailable = true;\r\n           this.loading = false;\r\n         }, 500);\r\n       }\r\n      */\n    }\n    // rerender(): void {\n    //   this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n    //     // Destroy the table first\n    //     dtInstance.destroy();\n    //     this.dtTrigger.next();\n    //   });\n    // }\n    rerender() {\n      let i = 0;\n      this.dtElements.forEach(dtElement => {\n        dtElement.dtInstance.then(dtInstance => {\n          dtInstance.draw();\n          this.dtTrigger.next();\n        });\n      });\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.sso.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n    }\n    closeAlert() {\n      this.error = false;\n      this.success = false;\n    }\n    Refresh() {\n      this.loading = true;\n      this.isRerender = true;\n      if (this.showDetails) {\n        if (this.succeed) {\n          this.filter = \"Succeeded\";\n          this.rerender();\n          // this.getStatusHistory(\"Succeeded\",this.workflowFil)\n        } else if (this.failed) {\n          this.filter = \"Failed\";\n          this.rerender();\n          // this.getStatusHistory(\"Failed\",this.workflowFil)\n        } else if (this.inprogress) {\n          this.filter = \"In Progress\";\n          this.rerender();\n          // this.getStatusHistory(\"In Progress\",this.workflowFil)\n        } else if (this.pending) {\n          this.filter = \"Pending\";\n          this.rerender();\n          // this.getStatusHistory(\"Pending\",this.workflowFil)\n        } else {\n          this.filter = \"\";\n          this.getExcLogsCout();\n          this.rerender();\n          // this.getWorkflowStatus();\n          // this.getStatusHistory(\"\",this.workflowFil)\n        }\n      } else {\n        this.getWorkflowStatus();\n        this.newRedraw();\n      }\n    }\n    Download() {\n      var _a;\n      this.isError = false;\n      this.isModalError = false;\n      let timeZone = this.getTimezoneName();\n      let namefile;\n      if ((_a = this.workflowFil) === null || _a === void 0 ? void 0 : _a.execId) {\n        this.api.DownloadpartWkflwData(this.orgId, this.workflowId, this.workflowFil.execId, timeZone, this.filter).subscribe(res => {\n          if (res != null) {\n            this.route.queryParams.subscribe(params => {\n              namefile = params.name;\n            });\n            this.downloadService.saveToDiskwkflw(JSON.parse(res)[1].fileName, null, false, namefile);\n          } else {\n            this.isModalError = true;\n          }\n          this.isError = false;\n        }, err => {\n          this.isError = true;\n          this.pageErrorHandle(err);\n        });\n      } else {\n        this.api.DownloadWholeWkflwData(this.orgId, this.workflowId, timeZone).subscribe(res => {\n          if (res != null) {\n            this.route.queryParams.subscribe(params => {\n              namefile = params.name;\n            });\n            this.downloadService.saveToDiskwkflw(JSON.parse(res)[1].fileName, null, false, namefile);\n          } else {\n            this.isModalError = true;\n          }\n          this.isError = false;\n        }, err => {\n          this.isError = true;\n          this.pageErrorHandle(err);\n        });\n      }\n    }\n    go_device(item) {\n      this.service.performSearch(this.orgId, `device:\"${item.serialNumber}\"`, 1, 1).subscribe(res => {\n        if (res) {\n          if (this.router.url.includes('cco-foundation')) {\n            this.service.setSubscriberInfo(undefined);\n            this.service.setSubscriberTabInfoData(undefined);\n            this.router.navigate([`/cco-foundation/foundation-systems/foundation-manage/system-details`], {\n              queryParams: {\n                sn: item.serialNumber,\n                subscriber: res.records[0].subscriberId\n              }\n            });\n          } else if (this.router.url.includes('/cco/operations')) {\n            this.service.setSubscriberInfo(undefined);\n            this.service.setSubscriberTabInfoData(undefined);\n            localStorage.setItem(\"calix.Device_Details\", JSON.stringify(res === null || res === void 0 ? void 0 : res.records[0]));\n            this.router.navigate([`/cco/system/cco-subscriber-system/system-details`], {\n              queryParams: {\n                sn: item.serialNumber,\n                subscriber: res.records[0].subscriberId,\n                regId: \"\"\n              }\n            });\n          } else {\n            let subscriberId = res.records[0].subscriberId;\n            sessionStorage.setItem('calix.subscriberId', subscriberId);\n            sessionStorage.setItem('calix.deviceData', JSON.stringify(res.records[0].devices));\n            sessionStorage.setItem('calix.serialNo', item.serialNumber);\n            this.service.setSubscriberInfo(undefined);\n            this.service.setSubscriberTabInfoData(undefined);\n            this.router.navigate(['/support/router'], {\n              state: {\n                serialNumber: item.serialNumber,\n                isRouter: true\n              }\n            });\n          }\n        }\n      }, err => {});\n    }\n    getWorkflowStatus() {\n      this.loading = true;\n      let orgId = this.sso.getOrg(this.orgId);\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthChange: false,\n        serverSide: true,\n        ordering: false,\n        processing: false,\n        dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          console.log('1146');\n          const that = this;\n          let page = dataTablesParameters.start;\n          let size = dataTablesParameters.length;\n          forkJoin([this.api.GetWorkFlowCountHist(orgId, this.workflowId), this.api.GetWorkflowHisyPagination(orgId, this.workflowId, page, size)]).subscribe(res => {\n            var _a, _b;\n            const [countres, listres] = [res[0], res[1]];\n            if (countres) {\n              this.wfCount = countres['count'];\n              console.log(countres);\n            }\n            if (listres) {\n              console.log(listres);\n              listres.forEach((element, i) => {\n                element.id = i + 1;\n              });\n              this.workflowData = listres;\n              this.loading = false;\n              this.dataAvailable = true;\n              this.workflowFil = (_b = (_a = this.workflowData) === null || _a === void 0 ? void 0 : _a.find(workflow => {\n                var _a;\n                return workflow.execId === ((_a = this.workflowFil) === null || _a === void 0 ? void 0 : _a.execId);\n              })) !== null && _b !== void 0 ? _b : {};\n            }\n            callback({\n              recordsTotal: that.wfCount != undefined ? that.wfCount : 0,\n              recordsFiltered: that.wfCount != undefined ? that.wfCount : that.wfCount,\n              data: []\n            });\n          });\n        },\n        // this.getWorkflowByHistSubscribe = this.api.GetWorkflowHisyPagination(this.orgId, this.workflowId, page, size).subscribe((res: any) => {\n        //   if (res) {\n        //     res.forEach((element, i) => {\n        //       element.id = i + 1;\n        //     });\n        //     this.workflowData = res;\n        //     this.loading = false;\n        //     this.dataAvailable = true;\n        //     this.workflowFil = this.workflowData?.find(workflow => workflow.execId === this.workflowFil?.execId) ?? {}\n        //   if (this.workflowFil) {\n        //     var workflowFil = this.workflowData?.filter(x => x.execId == this.workflowFil?.execId)[0];\n        //     if (workflowFil) {\n        //       this.workflowFil = workflowFil;\n        //    }\n        //   }\n        //   else{\n        //     var workflowFil = this.workflowData?.filter(x => x.workflowId == this.workflowId);\n        //   if (workflowFil) {\n        //     this.workflowFil = workflowFil;\n        //   }\n        // }\n        // }\n        // callback({\n        //   recordsTotal: (that.wfCount != undefined) ? that.wfCount : 0,\n        //   recordsFiltered: (that.wfCount != undefined) ? that.wfCount : that.wfCount,\n        //   data: []\n        // });\n        /*  callback({\r\n           recordsTotal: that.wfCount,\r\n           recordsFiltered: that.wfCount,\r\n           data: []\r\n         }); */\n        // }, (err: HttpErrorResponse) => {\n        //   if (err.status == 404) {\n        //     setTimeout(() => {\n        //       callback({\n        //         recordsTotal: (that.wfCount != undefined) ? that.wfCount : 0,\n        //         recordsFiltered: (that.wfCount != undefined) ? that.wfCount : that.wfCount,\n        //         data: []\n        //       });\n        //     }, 100);\n        //   } else\n        //     this.loading = false;\n        //   this.pageErrorHandle(err);\n        //   this.commonOrgService.pageScrollTop();\n        // }, () => {\n        //   //this.loading = false;\n        // });\n        // },\n        drawCallback: settings => {\n          this.changeTableStatusLanguage(settings);\n          let total = settings.aoData.length;\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#workflow-table_last').addClass('disabled');\n          }\n        }\n      };\n    }\n    newRedraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    /* getWorkflowStatus() {\r\n     \r\n      // this.getWorkflowByHistSubscribe = this.api.GetWorkflowHisyPagination(this.orgId, this.workflowId, page, Size).subscribe((res: any) => {\r\n      this.getWorkflowByHistSubscribe = this.api.getWorkflowByHist(this.orgId, this.workflowId).subscribe((res: any) => {\r\n        if (res) {\r\n          this.workflowData = res;\r\n          this.loading = false;\r\n          this.dataAvailable = true;\r\n        }\r\n      }, (err: HttpErrorResponse) => {\r\n            this.loading = false;\r\n        this.pageErrorHandle(err);\r\n        this.commonOrgService.pageScrollTop();\r\n      }, () => {\r\n        //this.loading = false;\r\n      });\r\n    }\r\n    */\n    GetWorkFlowCountHist() {\n      this.loading = true;\n      this.api.GetWorkFlowCountHist(this.orgId, this.workflowId).subscribe(res => {\n        this.wfCount = res.count;\n        this.datatableVisible = true;\n      });\n    }\n    go_back() {\n      this.filter = '';\n      this.inprogress = false;\n      this.failed = false;\n      this.succeed = false;\n      this.pending = false;\n      this.isRerender = false;\n      this.showDetails = false;\n      this.detailDataAvailable = false;\n      this.GetWorkFlowCountHist();\n      this.newRedraw();\n    }\n    doFilter(filter, workflowFil) {\n      this.isRerender = true;\n      this.workflowFil = workflowFil;\n      this.loading = true;\n      switch (filter) {\n        case \"Succeeded\":\n          {\n            this.succeed = !this.succeed;\n            this.failed = false;\n            this.inprogress = false;\n            this.pending = false;\n            if (this.succeed) {\n              this.filter = \"Succeeded\";\n              this.getExcLogsCout(wfState.Succeeded);\n              // this.getStatusHistory(\"Succeeded\",workflowFil)\n            } else {\n              this.filter = \"\";\n              this.getExcLogsCout();\n              // this.getStatusHistory(\"\",workflowFil)\n            }\n\n            break;\n          }\n        case \"Failed\":\n          {\n            this.failed = !this.failed;\n            this.succeed = false;\n            this.inprogress = false;\n            this.pending = false;\n            if (this.failed) {\n              this.filter = \"Failed\";\n              this.getExcLogsCout(wfState.Failed);\n              // this.getStatusHistory(\"Failed\",workflowFil)\n            } else {\n              this.filter = \"\";\n              this.getExcLogsCout();\n              // this.getStatusHistory(\"\",workflowFil)\n            }\n\n            break;\n          }\n        case \"In Progress\":\n          {\n            this.inprogress = !this.inprogress;\n            this.failed = false;\n            this.succeed = false;\n            this.pending = false;\n            if (this.inprogress) {\n              this.filter = \"In Progress\";\n              this.getExcLogsCout(wfState.InProgress);\n              // this.getStatusHistory(\"In Progress\",workflowFil)\n            } else {\n              this.filter = \"\";\n              this.getExcLogsCout();\n              //  this.getStatusHistory(\"\",workflowFil)\n            }\n\n            break;\n          }\n        case \"Pending\":\n          {\n            this.pending = !this.pending;\n            this.inprogress = false;\n            this.failed = false;\n            this.succeed = false;\n            if (this.pending) {\n              this.filter = \"Pending\";\n              this.getExcLogsCout(wfState.Pending);\n              // this.getStatusHistory(\"Pending\",workflowFil)\n            } else {\n              this.filter = \"\";\n              this.getExcLogsCout();\n              // this.getStatusHistory(\"\",workflowFil)\n            }\n\n            break;\n          }\n      }\n    }\n    getStatusHistory(filter, item) {\n      this.loading = true;\n      this.getExecLogsSubscribe = this.api.getExecLogs(this.orgId, this.workflowId, filter, this.workflowFil.execId).subscribe(res => {\n        if (res) {\n          this.workflowhistory = res;\n          this.workflowfilter = this.workflowhistory.filter(e => e.execId === item.execId);\n          if (filter === \"\") {\n            this.totalRec = this.workflowfilter.length;\n            this.successPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Succeeded\").length / this.totalRec * 100);\n            this.failPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Failed\").length / this.totalRec * 100);\n            this.inprgPercent = Math.round(this.workflowfilter.filter(e => e.state === \"In Progress\").length / this.totalRec * 100);\n            this.pendingPercent = Math.round(this.workflowfilter.filter(e => e.state === \"Pending\").length / this.totalRec * 100);\n            this.completePercent = this.successPercent + this.failPercent;\n          }\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n            this.loading = false;\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    // destroyTable() {\n    //   // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n    //   //   dtInstance.destroy();\n    //   // });\n    // }\n    closeWorkflow() {\n      this.sso.redirectByUrlForWorkflow(['/support/netops-management/operations/workflows', '', `./cco-foundation/foundation-configuration/configuration-workflow/workflows`, `/cco/operations/configuration/workflows`]);\n    }\n    // changeTableStatusLanguage(dtObj) {\n    //   const nf = new Intl.NumberFormat();\n    //   this.tableCounts = {\n    //     searchText: dtObj.oPreviousSearch.sSearch.trim(),\n    //     total: dtObj._iRecordsTotal,\n    //     displayCount: dtObj._iDisplayLength,\n    //     displayed: dtObj._iRecordsDisplay,\n    //     start: dtObj._iDisplayStart\n    //   };\n    //   const isFrench = (sessionStorage.getItem('defaultLanguage') == 'fr'),\n    //     filtered = `${dtObj.oPreviousSearch.sSearch.trim() ?\n    //       (isFrench ?\n    //         `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` :\n    //         `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)`) :\n    //       ''}`;\n    //   const startCount = (dtObj._iRecordsDisplay == 0) ? -1 : dtObj._iDisplayStart;\n    //   const showingCount = (dtObj._iDisplayStart + dtObj._iDisplayLength) > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : (dtObj._iDisplayStart + dtObj._iDisplayLength);\n    //   $('div [role=\"status\"]').text(isFrench ?\n    //     `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` :\n    //     `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`\n    //   )\n    //   $(\".first\").text(isFrench ? 'Le début' : 'First');\n    //   $(\".previous\").text(isFrench ? 'Précédent' : 'Previous');\n    //   $(\".next\").text(isFrench ? 'Suivant' : 'Next');\n    //   $(\".last\").text(isFrench ? 'Dernière' : 'Last');\n    // }\n    changeTableStatusLanguage(dtObj) {\n      const nf = new Intl.NumberFormat();\n      this.tableCounts = {\n        searchText: dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\"),\n        total: dtObj._iRecordsTotal,\n        displayCount: dtObj._iDisplayLength,\n        displayed: dtObj._iRecordsDisplay,\n        start: dtObj._iDisplayStart\n      };\n      const isFrench = sessionStorage.getItem('defaultLanguage') == 'fr';\n      const isSpanish = sessionStorage.getItem('defaultLanguage') == 'es';\n      const isGermen = sessionStorage.getItem('defaultLanguage') == 'de_DE';\n      const filtered = `${dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\") ? isFrench ? `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` : isSpanish ? `(filtrado de un total de ${nf.format(dtObj._iRecordsTotal)} entradas)` : isGermen ? `(gefiltert aus ${nf.format(dtObj._iRecordsTotal)} Einträgen)` : `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)` : ''}`;\n      const startCount = dtObj._iRecordsDisplay == 0 ? -1 : dtObj._iDisplayStart;\n      const showingCount = dtObj._iDisplayStart + dtObj._iDisplayLength > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : dtObj._iDisplayStart + dtObj._iDisplayLength;\n      $(`#workflows-status ${dtObj.sTableId || ''} div [role=\"status\"]`).text(isFrench ? `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` : isSpanish ? `Se muestran del ${nf.format(startCount + 1)} al ${nf.format(showingCount)} de ${nf.format(dtObj._iRecordsDisplay)} resultados ${filtered}` : isGermen ? `Angezeigt ${nf.format(startCount + 1)} bis ${nf.format(showingCount)} von ${nf.format(dtObj._iRecordsDisplay)} ergebnissen ${filtered}` : `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`);\n      //$(\".dataTables_filter label\")[0].childNodes[0].nodeValue = isFrench ? 'Chercher:' : 'Search:';\n      //$(\".dataTables_length label\")[0].childNodes[0].nodeValue = isFrench ? 'Afficher les ' : 'Show ';\n      //$(\".dataTables_length label\")[0].childNodes[2].nodeValue = isFrench ? ' entrées' : ' entries';\n      $(\".first\").text(isFrench ? 'Le début' : isSpanish ? 'Primero' : isGermen ? 'Erste Seite' : 'First');\n      $(\".previous\").text(isFrench ? 'Précédent' : isSpanish ? 'Anterior' : isGermen ? 'Zurück' : 'Previous');\n      $(\".next\").text(isFrench ? 'Suivant' : isSpanish ? 'Siguiente' : isGermen ? 'Weiter' : 'Next');\n      $(\".last\").text(isFrench ? 'Dernière' : isSpanish ? 'Último' : isGermen ? 'Letzte' : 'Last');\n    }\n    tableLanguageOptions() {\n      if (sessionStorage.getItem('defaultLanguage') && sessionStorage.getItem('defaultLanguage') == 'fr') {\n        this.tableFilterOptions.language = this.frTable;\n      } else if (sessionStorage.getItem('defaultLanguage') && sessionStorage.getItem('defaultLanguage') == 'es') {\n        this.tableFilterOptions.language = this.esTable;\n      } else if (sessionStorage.getItem('defaultLanguage') && sessionStorage.getItem('defaultLanguage') == 'de_DE') {\n        this.tableFilterOptions.language = this.germanTable;\n      } else if (sessionStorage.getItem('defaultLanguage') && sessionStorage.getItem('defaultLanguage') == 'en' && this.tableFilterOptions.language) {\n        delete this.tableFilterOptions.language;\n      }\n      //console.log(this.dtOptions)\n    }\n\n    redraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n  }\n  WorkflowStatusComponent.ɵfac = function WorkflowStatusComponent_Factory(t) {\n    return new (t || WorkflowStatusComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.DataServiceService), i0.ɵɵdirectiveInject(i4.NetopsServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i5.HttpClient), i0.ɵɵdirectiveInject(i6.CommonService), i0.ɵɵdirectiveInject(i7.SsoAuthService), i0.ɵɵdirectiveInject(i8.Title), i0.ɵɵdirectiveInject(i9.DownloadService));\n  };\n  WorkflowStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkflowStatusComponent,\n    selectors: [[\"app-workflow-status\"]],\n    viewQuery: function WorkflowStatusComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElements = _t);\n      }\n    },\n    decls: 33,\n    vars: 11,\n    consts: [[\"id\", \"workflows-status\", 1, \"tab-pane\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"col-md-8\", \"pl-0\"], [1, \"net-ops-secondary-title\", \"mb-0\", \"d-inline-flex\"], [1, \"d-inline-flex\"], [\"type\", \"button\", \"id\", \"refresh\", 1, \"btn-default\", \"primary\", \"px-3\", \"ml-3\", 3, \"click\"], [\"type\", \"button\", \"id\", \"download\", 1, \"btn-default\", \"btn-dft\", \"px-3\", \"ml-3\", 3, \"click\"], [1, \"col-md-3\", \"mt-3\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"pb-2\"], [1, \"net-ops-secondary-title\", \"status-title\", \"m-0\"], [3, \"ngClass\"], [\"id\", \"workflow-status-table\", \"width\", \"100%\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", \"dataTable\", \"cursor-pointer\", 3, \"dtOptions\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"overflow-auto\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [3, \"click\"], [1, \"success\"], [1, \"failed\"], [1, \"inprogress\"], [1, \"pending\"], [1, \"fas\", \"fa-caret-right\"], [1, \"overflow-auto\"], [\"width\", \"100%\", 1, \"row-border\", \"hover\", \"table-alter\", \"mt-4\", \"mb-3\", \"overflow-auto\"], [1, \"with-filter-tr\"], [\"data-toggle\", \"tooltip\", \"id\", \"success-filter\", 3, \"title\", \"click\"], [1, \"success\", \"pointer\"], [3, \"hidden\"], [1, \"fa\", \"fa-lg\", \"fa-fw\", \"fa-filter\"], [\"data-toggle\", \"tooltip\", \"id\", \"failed-filter\", 3, \"title\", \"click\"], [1, \"failed\", \"pointer\"], [\"data-toggle\", \"tooltip\", \"id\", \"inprogress-filter\", 3, \"title\", \"click\"], [1, \"inprogress\", \"pointer\"], [\"data-toggle\", \"tooltip\", \"id\", \"pending-filter\", 3, \"title\", \"click\"], [1, \"pending\", \"pointer\"], [\"id\", \"go-back\"], [1, \"pull-right\", \"back-to\", \"pointer\"], [1, \"fa\", \"fa-angle-left\"], [1, \"ml-1\", 3, \"click\"], [\"id\", \"workflow-status-info-table\", \"width\", \"100%\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", \"dataTable\", \"failed-table\", 3, \"dtOptions\", \"hidden\"], [\"data-orderable\", \"false\", 1, \"w-12\"], [\"data-orderable\", \"false\", 1, \"w-10\"], [1, \"w-10\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"serial_a\"], [1, \"max-w-300px\"], [1, \"failed-msg\"], [1, \"text-break\"], [\"colspan\", \"7\", 1, \"no-data-available\"]],\n    template: function WorkflowStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_Template_button_click_6_listener() {\n          return ctx.Refresh();\n        });\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_Template_button_click_9_listener() {\n          return ctx.Download();\n        });\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function WorkflowStatusComponent_Template_button_click_12_listener() {\n          return ctx.closeWorkflow();\n        });\n        i0.ɵɵelement(13, \"span\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, WorkflowStatusComponent_div_14_Template, 5, 1, \"div\", 9);\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"h4\", 11);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12);\n        i0.ɵɵelementStart(19, \"table\", 13);\n        i0.ɵɵelementStart(20, \"thead\");\n        i0.ɵɵelementStart(21, \"tr\");\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"th\");\n        i0.ɵɵelement(27, \"th\");\n        i0.ɵɵelement(28, \"th\");\n        i0.ɵɵelement(29, \"th\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"tbody\");\n        i0.ɵɵtemplate(31, WorkflowStatusComponent_tr_31_Template, 36, 29, \"tr\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, WorkflowStatusComponent_div_32_Template, 71, 49, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language.Workflow_Status);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Refresh_Data);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Export_Data);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", !ctx.showDetails ? \"\" : \"d-none\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dtOptions\", ctx.tableOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language.Start_Time);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Status);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.workflowData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDetails);\n      }\n    },\n    directives: [i10.NgIf, i10.NgClass, i11.DataTableDirective, i10.NgForOf],\n    pipes: [i10.DatePipe, i10.DecimalPipe],\n    styles: [\".success[_ngcontent-%COMP%]{color:#2ecc71}.failed[_ngcontent-%COMP%]{color:#c70000}.inprogress[_ngcontent-%COMP%]{color:#009ee8}.pending[_ngcontent-%COMP%]{color:#f90}.with-filter-tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:5px;vertical-align:middle}.back-to[_ngcontent-%COMP%]{color:green}span.serial_a[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#007bff!important;cursor:pointer}span.serial_a[_ngcontent-%COMP%]:hover{text-decoration:underline!important}.failed-msg[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0}.scroll-table[_ngcontent-%COMP%]{overflow-x:auto}.scroll-table[_ngcontent-%COMP%]   .failed-table[_ngcontent-%COMP%]{width:1660px!important}.failed-msg[_ngcontent-%COMP%]{white-space:normal}[_nghost-%COMP%]     .dataTables_empty{display:none}.no-data-available[_ngcontent-%COMP%]{text-align:center}table.dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{width:-moz-fit-content!important;width:fit-content!important}.max-w-300px[_ngcontent-%COMP%]{max-width:300px}\"]\n  });\n  return WorkflowStatusComponent;\n})();\nfunction page(orgId, workflowId, page, size) {\n  throw new Error('Function not implemented.');\n}\nfunction Size(orgId, workflowId, page, Size) {\n  throw new Error('Function not implemented.');\n}","map":null,"metadata":{},"sourceType":"module"}