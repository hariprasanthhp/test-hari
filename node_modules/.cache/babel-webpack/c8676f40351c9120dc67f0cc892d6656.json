{"ast":null,"code":"import { Subject, forkJoin, of } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { environment } from 'src/environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport * as $ from 'jquery';\nimport { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../../../app-services/translate.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"src/app/cco/shared/services/cco-common.service\";\nimport * as i4 from \"src/app/sys-admin/services/common.service\";\nimport * as i5 from \"src/app/cco/system/services/cco-system.service\";\nimport * as i6 from \"src/app/shared/services/export-excel.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common/http\";\nimport * as i9 from \"src/app/shared-utils/date-utils.service\";\nimport * as i10 from \"src/app/shared/services/sso-auth.service\";\nimport * as i11 from \"src/app/cco/issues/service/issue.service\";\nimport * as i12 from \"@angular/platform-browser\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@ng-select/ng-select\";\nimport * as i15 from \"@angular/forms\";\nimport * as i16 from \"primeng/calendar\";\nimport * as i17 from \"angular-datatables\";\nconst _c0 = [\"deleteModal\"];\nconst _c1 = [\"deleteSuccessModal\"];\nconst _c2 = [\"calendar\"];\nfunction OntDevicesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵelementStart(1, \"div\", 41);\n    i0.ɵɵelementStart(2, \"div\", 42);\n    i0.ɵɵelementStart(3, \"span\", 43);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction OntDevicesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction OntDevicesComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.item;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[item_r13.name], \" \");\n  }\n}\nfunction OntDevicesComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r14 = ctx.item;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language[item_r14.name], \" \");\n  }\n}\nfunction OntDevicesComponent_small_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r4.language[\"Invalid FSAN\"], \"/\", ctx_r4.language.MAC_Address, \"\");\n  }\n}\nfunction OntDevicesComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 46);\n    i0.ɵɵelementStart(1, \"span\", 47);\n    i0.ɵɵelement(2, \"img\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_div_52_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.exportError = false;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r7.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction OntDevicesComponent_div_53_tbody_30_tr_1_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"/\", item_r21.location, \"\");\n  }\n}\nfunction OntDevicesComponent_div_53_tbody_30_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 58);\n    i0.ɵɵelementStart(1, \"td\", 58);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 58);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 58);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 58);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 58);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 58);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 58);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, OntDevicesComponent_div_53_tbody_30_tr_1_span_20_Template, 2, 1, \"span\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r21 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"tr-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"name-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r21.ontId, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"Fsan-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r21.fsan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"model-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r21 == null ? null : item_r21.discoveredModel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"regid-\", item_r21 == null ? null : item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r20.is_DEVICE_NEVER_CHECKED_IN ? item_r21 == null ? null : item_r21.registrationId : item_r21 == null ? null : item_r21.discoveredRegistrationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"discoveredPonPort-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r21.discoveredPonPort, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"discoveredMacAddress-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r20.is_DEVICE_NEVER_CHECKED_IN ? (item_r21 == null ? null : item_r21.macAddress) == \"00:00:00:00:00:00\" ? \"\" : item_r21 == null ? null : item_r21.macAddress : item_r21 == null ? null : item_r21.discoveredMacAddress, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"discoveredVersion-\", item_r21.uuid, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r21.discoveredVersion, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r21 && item_r21.isRogue ? \"Yes\" : item_r21.isRogue == null ? \"\" : \"No\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r21.region);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r21.location);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r21.oltName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((item_r21 == null ? null : item_r21.firstPresentTime) ? ctx_r20.convertToDateTime(item_r21.firstPresentTime) : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((item_r21 == null ? null : item_r21.lastPresentTime) ? ctx_r20.convertToDateTime(item_r21.lastPresentTime) : \"\");\n  }\n}\nfunction OntDevicesComponent_div_53_tbody_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, OntDevicesComponent_div_53_tbody_30_tr_1_Template, 27, 21, \"tr\", 57);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.list);\n  }\n}\nfunction OntDevicesComponent_div_53_tbody_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 59);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r19.language[\"No data available in table\"], \" \");\n  }\n}\nfunction OntDevicesComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelementStart(1, \"div\", 52);\n    i0.ɵɵelementStart(2, \"div\", 53);\n    i0.ɵɵelementStart(3, \"table\", 54);\n    i0.ɵɵelementStart(4, \"thead\");\n    i0.ɵɵelementStart(5, \"tr\");\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"th\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"th\", 55);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"th\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, OntDevicesComponent_div_53_tbody_30_Template, 2, 1, \"tbody\", 56);\n    i0.ɵɵtemplate(31, OntDevicesComponent_div_53_tbody_31_Template, 4, 1, \"tbody\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r8.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"ONU ID\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"FSAN\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"model\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"Registration_ID\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"Interface\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"ONU Mac Address\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Version);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.IsQuarantined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r8.language.Region, \"/\", ctx_r8.language.Location, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.System);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"First discovered\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"Last discovered\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r8.list == null ? null : ctx_r8.list.length) != 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r8.list == null ? null : ctx_r8.list.length) || ctx_r8.count == 0);\n  }\n}\nfunction OntDevicesComponent_ng_template_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 60);\n    i0.ɵɵelementStart(1, \"h4\", 61);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 62);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_ng_template_54_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.close();\n    });\n    i0.ɵɵelement(4, \"span\", 63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 64);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" ? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 65);\n    i0.ɵɵelementStart(12, \"button\", 66);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_ng_template_54_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.close();\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_ng_template_54_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.doDelete();\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.language.Delete);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language[\"Are you sure you want to delete the System\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.deleteName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language.Close, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language.Yes, \" \");\n  }\n}\nfunction OntDevicesComponent_ng_template_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 60);\n    i0.ɵɵelementStart(1, \"h4\", 61);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 62);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_ng_template_56_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.close();\n    });\n    i0.ɵɵelement(4, \"span\", 63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 64);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 65);\n    i0.ɵɵelementStart(9, \"button\", 66);\n    i0.ɵɵlistener(\"click\", function OntDevicesComponent_ng_template_56_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.close();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.language.Delete);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r12.language[\"Deleted Successfully\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language.Close, \" \");\n  }\n}\nconst _c3 = function () {\n  return {\n    standalone: true\n  };\n};\nexport let OntDevicesComponent = /*#__PURE__*/(() => {\n  class OntDevicesComponent {\n    constructor(translateService, modalService, ccoCommonService, commonOrgService, service, exportExcel, router, http, dateUtilsService, dialogService, route, sso, issueService, exportExcelService, titleService) {\n      this.translateService = translateService;\n      this.modalService = modalService;\n      this.ccoCommonService = ccoCommonService;\n      this.commonOrgService = commonOrgService;\n      this.service = service;\n      this.exportExcel = exportExcel;\n      this.router = router;\n      this.http = http;\n      this.dateUtilsService = dateUtilsService;\n      this.dialogService = dialogService;\n      this.route = route;\n      this.sso = sso;\n      this.issueService = issueService;\n      this.exportExcelService = exportExcelService;\n      this.titleService = titleService;\n      this.isDev = false;\n      this.errorInfo = '';\n      this.successInfo = '';\n      this.deleteId = '';\n      this.tableData = [];\n      this.empty = {\n        serielNumber: '',\n        type: '',\n        model: '',\n        name: '',\n        region: '',\n        location: '',\n        connection_status: '',\n        software_version: ''\n      };\n      this.servicePlans = [];\n      this.servicePlanSelected = '1G';\n      this.list = [];\n      this.loading = false;\n      this.dataAvailable = false;\n      this.dtTrigger = new Subject();\n      this.dtOptions = {};\n      this.isRerender = false;\n      this.types = [];\n      this.typeSelected = 'DISCOVERED_DEVICE';\n      this.showTable = false;\n      this.regionsDataArray = [\"All\"];\n      this.regionSelected = '';\n      this.locationSelected = '';\n      this.locationDataArray = [\"All\"];\n      this.systemDataArray = [\"All\"];\n      this.timePeriodSelected = 'first';\n      this.maxForStartDate = new Date();\n      this.hasScopeAccess = false;\n      this.name = '';\n      this.condition = false;\n      this.fmmaxlength = 17;\n      this.is_DEVICE_NEVER_CHECKED_IN = false;\n      this.sortBy = undefined;\n      this.sortType = undefined;\n      this.deleteName = '';\n      this.count = 0;\n      this.initLoad = false;\n      let base = `${environment.API_BASE}`;\n      let host = window.location.host;\n      if (base.indexOf('/dev.api.calix.ai') > -1) {\n        // || host.indexOf('localhost') > -1\n        this.isDev = true;\n      } else this.isDev = false;\n      this.ccoCommonService.currentPageAdder('system-table-view');\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n      this.language = this.translateService.defualtLanguage;\n      this.tableLanguageOptions();\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.tableLanguageOptions();\n        this.showTable = false;\n        setTimeout(() => {\n          this.showTable = true;\n          this.count = 0;\n          this.list = [];\n          this.getCount();\n        }, 100);\n        this.titleService.setTitle(`${this.language['ONT Systems']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      });\n    }\n    ngOnInit() {\n      //this.ccoCommonService.listen('listsystemData').subscribe((data) => \n      //this.GetallDatas(data));\n      this.exportEventSubs = this.ccoCommonService.ccoPageExport.subscribe(data => {\n        if (data && data == 'network-system-table-list') {\n          this.export();\n        }\n      });\n      this.titleService.setTitle(`${this.language['ONT Systems']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      this.types = [{\n        name: 'All Systems',\n        value: 'DISCOVERED_DEVICE'\n      }, {\n        name: 'Systems Not Checked In',\n        value: 'DEVICE_NOT_CHECKED_IN'\n      }, {\n        name: 'Systems Checked In',\n        value: 'DEVICE_CHECKED_IN'\n      }, {\n        name: 'System Never Checked In',\n        value: 'DEVICE_NEVER_CHECKED_IN'\n      }];\n      // let date = new Date();\n      // this.firstPresentTimeStart = new Date(date.getTime() - (10 * 24 * 60 * 60 * 1000));\n      // this.lastPresentTimeStart = new Date(date.getTime() - (10 * 24 * 60 * 60 * 1000));\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.operations.report.ontdevices') !== -1) {\n              this.hasScopeAccess = true;\n              break;\n            }\n          }\n        }\n      } else {\n        this.hasScopeAccess = true;\n      }\n      if (!this.hasScopeAccess) {\n        this.sso.setPageAccess(false);\n        return;\n      }\n      this.getRegions();\n      this.getCount();\n    }\n    changeMAc() {\n      if (this.name.length == 0 || this.name.length == 12 && !this.name.includes(\":\") || this.name.length == 17 && !this.validateMAc()) this.fsanvalid = false;\n      if (this.name.length > 0) {\n        this.condition = true;\n        this.regionSelected = 'All';\n        this.locationSelected = \"All\";\n        this.systemSelected = \"All\";\n      } else {\n        this.condition = false;\n        this.fsanvalid = false;\n      }\n      if (this.name.includes(\":\") || this.name.length == 0) this.fmmaxlength = 17;else this.fmmaxlength = 12;\n    }\n    textselected() {\n      this.fmmaxlength = 17;\n    }\n    fsanvalidated($event) {\n      var _a;\n      if (this.name.includes(\":\")) return true;\n      let flength = (_a = this.name) === null || _a === void 0 ? void 0 : _a.length;\n      if (flength != 0 && flength < 12) {\n        this.fsanvalid = true;\n        return true;\n      } else {\n        this.fsanvalid = false;\n        return false;\n      }\n    }\n    validateMAc() {\n      const maskCharRegExp = /^[x|X]$/;\n      const maskPairRegExp = /^[x|X]{2}$/;\n      let isValid = false;\n      if (!this.name.includes(\":\")) return true;\n      if (this.name.length !== 17) {\n        this.fsanvalid = true;\n        return true;\n      }\n      let macPairs = this.name.split(\":\");\n      isValid = false;\n      if (macPairs.length !== 6) {\n        this.fsanvalid = true;\n        return true;\n      }\n      let startMask = false;\n      for (let j = 0; j < 6; j++) {\n        let curPair = macPairs[j];\n        if (curPair.length !== 2) {\n          isValid = true;\n          break;\n        }\n        if (startMask) {\n          if (!maskCharRegExp.test(curPair[1])) {\n            isValid = true;\n            break;\n          }\n        } else {\n          let temp = parseInt(curPair, 16);\n          if (isNaN(temp)) {\n            if (maskPairRegExp.test(curPair)) {\n              startMask = true;\n            } else {\n              isValid = true;\n              break;\n            }\n          } else {\n            if (maskCharRegExp.test(curPair[1])) {\n              isValid = true;\n              break;\n            }\n          }\n        }\n      }\n      if (isValid) this.fsanvalid = true;else this.fsanvalid = false;\n      return isValid;\n    }\n    getRegions() {\n      this.regionSelected = 'All';\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.regionsSubject = this.http.get(`${environment.API_BASE_URL}nfa/regions?tenant=0`).subscribe(res => {\n        let counts = {};\n        res.forEach(x => {\n          counts[x.name] = (counts[x.name] || 0) + 1;\n        });\n        res.forEach((element, index) => {\n          var _a;\n          if (counts[element['name']] > 1) {\n            element.name = element.name + \" (\" + ((_a = element.fqn) === null || _a === void 0 ? void 0 : _a.split('=')[1].split(',')[0]) + \")\";\n          }\n        });\n        res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n          numeric: false\n        }));\n        this.regionsDataArray = [...this.regionsDataArray, ...res];\n      }, error => {});\n    }\n    getLocations() {\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      let id = this.regionSelected;\n      if (this.regionSelected && this.regionSelected != 'All') {\n        this.locationsSubject = this.http.get(`${environment.API_BASE_URL}nfa/locations?tenant=0&region=${id}`).subscribe(res => {\n          res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n            numeric: false\n          }));\n          this.locationDataArray = [\"All\"];\n          this.locationDataArray = [...this.locationDataArray, ...res];\n        }, error => {});\n      }\n      if (this.regionSelected == 'All') {\n        this.locationDataArray = [\"All\"];\n        this.systemDataArray = [\"All\"];\n      }\n      // this.regionsDataArray.forEach((element: any) => {\n      //   if (element.id == this.regionSelected) {\n      //     this.RegionName = element.name;\n      //   }\n      // })\n    }\n\n    loadSystemValue(event) {\n      //this.clickedLocation = '';\n      let regionid = this.regionSelected;\n      let locationid = this.locationSelected;\n      this.systemSelected = \"All\";\n      if (this.locationSelected && this.regionSelected && this.locationSelected != 'All') {\n        this.systemsSubject = this.issueService.getSystems(regionid, locationid).subscribe(res => {\n          res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n            numeric: false\n          }));\n          this.systemDataArray = [\"All\"];\n          this.systemDataArray = [...this.systemDataArray, ...res];\n        }, error => {});\n      }\n      // this.locationDataArray.forEach((element: any) => {\n      //   if (element.id == this.locationSelected) {\n      //     this.locationName = element.name;\n      //   }\n      // })\n      if (this.locationSelected == 'All') {\n        //this.locationName = null;\n        // this.systemName = null;\n        this.systemDataArray = [\"All\"];\n      }\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.dtOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.dtOptions.language = this.esTable;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.dtOptions.language = this.translateService.de_DE;\n      } else if (this.language.fileLanguage == 'en' && this.dtOptions.language) {\n        delete this.dtOptions.language;\n      }\n    }\n    renderTable(rerender) {\n      //this.tableLanguageOptions();\n      if (rerender) {\n        this.rerender();\n      } else {\n        this.dtTrigger.next();\n      }\n      setTimeout(() => {\n        this.dataAvailable = true;\n      }, 800);\n    }\n    rerender() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    }\n    export() {\n      let name = this.ccoCommonService.generateExportName('systems');\n      let exportData = this.ccoCommonService.exportDataConvertor(this.tableData);\n      if (exportData.length) {\n        this.exportExcel.downLoadCSV(name, exportData);\n      } else {\n        this.exportExcel.downLoadCSV(name, [this.empty]);\n      }\n    }\n    gotoSystem(stateparams) {\n      this.router.navigate(['../cco-add-new-system' + '/' + stateparams.SN], {\n        relativeTo: this.route\n      });\n    }\n    updateService() {\n      this.closeAllModal();\n    }\n    closeAllModal() {\n      this.modalService.dismissAll();\n    }\n    goToSystemDetails(stateparams) {\n      this.router.navigate(['../system-details' + '/' + stateparams.SN], {\n        relativeTo: this.route\n      });\n    }\n    getListNew() {\n      this.loading = true;\n      this.dtOptions = {\n        paging: false,\n        lengthChange: false,\n        searching: false,\n        ordering: false\n      };\n      const requests = {};\n      let types = ['ONU'];\n      types.forEach(type => {\n        const req = this.http.get(`${environment.API_BASE_URL}cnap/invmgr/devices?type=${type}`).pipe(catchError(err => of(err.status)));\n        requests[type] = req;\n      });\n      this.listObs = forkJoin(requests).subscribe(json => {\n        this.loading = false;\n        this.list = json['ONU'];\n        this.loading = false;\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n          setTimeout(() => {\n            this.dataAvailable = true;\n          }, 200);\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n        this.dataAvailable = true;\n      });\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n      this.loading = false;\n    }\n    closeAlert() {\n      this.error = false;\n      this.success = false;\n    }\n    showSuccess(msg) {\n      this.closeAlert();\n      this.successInfo = msg;\n      this.success = true;\n    }\n    showError(msg) {\n      this.closeAlert();\n      this.errorInfo = msg;\n      this.error = true;\n    }\n    cancelDelete() {\n      this.deleteId = '';\n    }\n    ngOnDestroy() {\n      if (this.listObs) {\n        this.listObs.unsubscribe();\n      }\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.exportEventSubs) this.exportEventSubs.unsubscribe();\n    }\n    delete(id, name) {\n      this.deleteId = id;\n      this.deleteName = name;\n      if (this.modalRef) {\n        this.close();\n      }\n      this.modalRef = this.dialogService.open(this.deleteModal);\n    }\n    close() {\n      this.modalRef.close();\n    }\n    doDelete() {\n      this.http.delete(`${environment.API_BASE_URL}cnap/invmgr/devices/${this.deleteId}`).subscribe(json => {\n        this.close();\n        this.modalRef = this.dialogService.open(this.deleteSuccessModal);\n        this.deleteId = '';\n        this.isRerender = true;\n        this.getListNew();\n      }, err => {\n        this.close();\n        this.pageErrorHandle(err);\n      });\n    }\n    gotoEdit(id) {\n      this.router.navigate([`cco/system/cco-network-system/edit/${id}`]);\n    }\n    refresh(id) {\n      this.http.get(`${environment.API_BASE_URL}cnap/invmgr/devices/${id}`).subscribe(item => {\n        $(`#name-${id}`).html(`${item.onuId ? item.onuId : ''}`);\n        $(`#macAddress-${id}`).html(`${item.macAddress ? item.macAddress : ''}`);\n        $(`#deviceModel-${id}`).html(`${item.deviceModel ? item.deviceModel : ''}`);\n        $(`#swVersion-${id}`).html(`${item.swVersion ? item.swVersion : ''}`);\n        $(`#serialNumber-${id}`).html(`${item.serialNumber ? item.serialNumber : ''}`);\n        $(`#communicationState-${id}`).html(`${item.protocolInfos && item.protocolInfos[0] && item.protocolInfos[0].communicationState ? item.protocolInfos[0].communicationState : ''}`);\n        $(`#cmSyncFunction-${id}`).html(`${item.cmSyncFunction && item.cmSyncFunction['syncStatus'] ? item.cmSyncFunction['syncStatus'] : ''}`);\n        $(`#fmSyncFunction-${id}`).html(`${item.fmSyncFunction && item.fmSyncFunction['syncStatus'] ? item.fmSyncFunction['syncStatus'] : ''}`);\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    redraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    getCount() {\n      if (this.fsanvalidated('') && this.validateMAc()) return;\n      this.loading = true;\n      this.exportError = false;\n      this.initLoad = false;\n      this.showTable = false;\n      //console.log(this.dateUtilsService.getUtCMilliSecByDateObj(this.firstPresentTimeStart));\n      if (this.firstDiscoverd) {\n        this.firstPresentTimeStart = this.firstDiscoverd[0] ? this.firstDiscoverd[0] : undefined;\n        this.firstPresentTimeEnd = this.firstDiscoverd[1] ? this.firstDiscoverd[1] : new Date();\n      }\n      if (this.lastDiscoverd) {\n        this.lastPresentTimeStart = this.lastDiscoverd[0] ? this.lastDiscoverd[0] : undefined;\n        this.lastPresentTimeEnd = this.lastDiscoverd[1] ? this.lastDiscoverd[1] : new Date();\n      }\n      if (this.typeSelected == 'DEVICE_NEVER_CHECKED_IN') {\n        this.is_DEVICE_NEVER_CHECKED_IN = true;\n      } else this.is_DEVICE_NEVER_CHECKED_IN = false;\n      let params = {\n        reportType: this.typeSelected,\n        tenant: 0,\n        region: this.regionSelected !== 'All' && !this.name ? this.regionSelected : undefined,\n        location: this.locationSelected !== 'All' && !this.name ? this.locationSelected : undefined,\n        system: this.systemSelected !== 'All' && !this.name ? this.systemSelected : undefined,\n        firstPresentTimeStart: this.firstPresentTimeStart ? this.dateUtilsService.getUtCMilliSecByDateObj(this.firstPresentTimeStart) : undefined,\n        firstPresentTimeEnd: this.firstPresentTimeEnd ? this.dateUtilsService.getUtCMilliSecByDateObj(this.firstPresentTimeEnd, true) : undefined,\n        lastPresentTimeStart: this.lastPresentTimeStart ? this.dateUtilsService.getUtCMilliSecByDateObj(this.lastPresentTimeStart) : undefined,\n        lastPresentTimeEnd: this.lastPresentTimeEnd ? this.dateUtilsService.getUtCMilliSecByDateObj(this.lastPresentTimeEnd, true) : undefined,\n        fsanMac: this.name ? this.name : undefined\n      };\n      let query = \"\";\n      for (var key in params) {\n        if (params[key] == undefined) {\n          continue;\n        }\n        if (query != \"\") {\n          query += \"&\";\n        }\n        query += key + \"=\" + encodeURIComponent(params[key]);\n      }\n      this.http.get(`${environment.API_BASE_URL}nfa/onts/count?${query}`).subscribe(json => {\n        this.showTable = true;\n        if (json && typeof json.count !== undefined) {\n          this.count = json.count;\n          if (this.initLoad) {\n            this.redraw();\n          } else {\n            this.getList();\n          }\n        } else {\n          this.loading = false;\n        }\n      }, err => {\n        this.loading = false;\n        this.pageErrorHandle(err);\n      });\n    }\n    getList() {\n      let params = {\n        reportType: this.typeSelected,\n        tenant: 0,\n        region: this.regionSelected !== 'All' && !this.name ? this.regionSelected : undefined,\n        location: this.locationSelected !== 'All' && !this.name ? this.locationSelected : undefined,\n        system: this.systemSelected !== 'All' && !this.name ? this.systemSelected : undefined,\n        firstPresentTimeStart: this.firstPresentTimeStart ? this.dateUtilsService.getUtCMilliSecByDateObj(this.firstPresentTimeStart) : undefined,\n        firstPresentTimeEnd: this.firstPresentTimeEnd ? this.dateUtilsService.getUtCMilliSecByDateObj(this.firstPresentTimeEnd, true) : undefined,\n        lastPresentTimeStart: this.lastPresentTimeStart ? this.dateUtilsService.getUtCMilliSecByDateObj(this.lastPresentTimeStart) : undefined,\n        lastPresentTimeEnd: this.lastPresentTimeEnd ? this.dateUtilsService.getUtCMilliSecByDateObj(this.lastPresentTimeEnd, true) : undefined,\n        fsanMac: this.name ? this.name : undefined\n      };\n      let query = \"\";\n      for (var key in params) {\n        if (params[key] == undefined) {\n          continue;\n        }\n        if (query != \"\") {\n          query += \"&\";\n        }\n        query += key + \"=\" + encodeURIComponent(params[key]);\n      }\n      this.exportquery = query;\n      this.exportparams = params;\n      const that = this;\n      this.dtOptions = {\n        pagingType: \"full_numbers\",\n        pageLength: 10,\n        //responsive: true,\n        serverSide: true,\n        processing: false,\n        searching: false,\n        ordering: true,\n        order: [],\n        //scrollX: true,\n        // dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          var _a, _b;\n          let url = `${environment.API_BASE_URL}nfa/onts?offset=${dataTablesParameters.start}&limit=${dataTablesParameters.length}&${query}`;\n          this.sortBy = dataTablesParameters.order && dataTablesParameters.order.length > 0 ? (_a = dataTablesParameters.order[0]) === null || _a === void 0 ? void 0 : _a.column : undefined;\n          this.sortType = dataTablesParameters.order && dataTablesParameters.order.length > 0 ? (_b = dataTablesParameters.order[0]) === null || _b === void 0 ? void 0 : _b.dir : undefined;\n          let orderBy = parseInt(this.sortBy) == 0 ? 'onuid' : parseInt(this.sortBy) == 1 ? 'fsan' : parseInt(this.sortBy) == 2 ? 'model' : parseInt(this.sortBy) == 3 ? 'registrationid' : parseInt(this.sortBy) == 4 ? 'discoveredPonPort' : parseInt(this.sortBy) == 5 ? 'onumacaddr' : parseInt(this.sortBy) == 6 ? 'currversion' : parseInt(this.sortBy) == 7 ? 'isrogue' : parseInt(this.sortBy) == 8 ? 'region' : parseInt(this.sortBy) == 9 ? 'devicename' : parseInt(this.sortBy) == 10 ? 'firstpresenttime' : parseInt(this.sortBy) == 11 ? 'lastpresenttime' : undefined;\n          if (orderBy) {\n            url += `&sortBy=${orderBy}&sortOrder=${this.sortType}`;\n          }\n          that.http.get(url).subscribe(resp => {\n            this.loading = false;\n            if (resp && resp['ontDevices'] && resp['ontDevices'].length) {\n              if (params['fsanMac']) {\n                this.count = 1;\n              }\n              this.list = resp['ontDevices'];\n              for (let i = 0; i < this.list.length; i++) {\n                if (this.list[i].vendorId == null) {\n                  this.list[i].vendorId = this.list[i].discoveredVendorId;\n                }\n              }\n            } else {\n              this.list = [];\n              if (params['fsanMac']) {\n                this.count = 0;\n              }\n            }\n            this.initLoad = true;\n            this.loading = false;\n            callback({\n              recordsTotal: this.count ? this.count : 0,\n              recordsFiltered: this.count ? this.count : 0,\n              data: []\n            });\n          }, err => {\n            this.loading = false;\n            this.list = [];\n            this.exportError = true;\n            this.pageErrorHandle(err);\n            callback({\n              recordsTotal: 0,\n              recordsFiltered: 0,\n              data: []\n            });\n          });\n        },\n        drawCallback: settings => {\n          // this.changeTableStatusLanguage(settings);\n          this.tableLanguageOptions();\n          let total = settings._iRecordsDisplay; // for server side rendering\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#users-table_last').addClass('disabled');\n          } else {\n            //$(settings.nTableWrapper).find('#users-table_last').removeClass('disabled');\n          }\n        }\n      };\n      this.tableLanguageOptions();\n      this.Regionname(this.regionSelected);\n      this.locationName(this.locationSelected);\n      this.systemName(this.systemSelected);\n    }\n    clearFilter() {\n      this.typeSelected = 'DISCOVERED_DEVICE';\n      this.regionSelected = 'All';\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.locationDataArray = [\"All\"];\n      this.systemDataArray = [\"All\"];\n      // let date = new Date();\n      // this.firstPresentTimeStart = new Date(date.getTime() - (10 * 24 * 60 * 60 * 1000));\n      // this.lastPresentTimeStart = new Date(date.getTime() - (10 * 24 * 60 * 60 * 1000));\n      this.firstPresentTimeStart = undefined;\n      this.firstPresentTimeEnd = undefined;\n      this.lastPresentTimeEnd = undefined;\n      this.lastPresentTimeStart = undefined;\n      this.firstDiscoverd = undefined;\n      this.lastDiscoverd = undefined;\n      this.name = \"\";\n      this.condition = false;\n      this.exportError = false;\n      this.getCount();\n    }\n    getExportData(exportid) {\n      let totalexport = {};\n      var offset = 0;\n      if (this.count == 0) {\n        this.Download([], exportid);\n        return;\n      }\n      for (var i = 0; i < Math.ceil(this.count / 500); i++) {\n        let url = `${environment.API_BASE_URL}nfa/onts?offset=${offset}&limit=500&${this.exportquery}`;\n        totalexport[i] = this.http.get(url);\n        offset += 500;\n      }\n      forkJoin(totalexport).subscribe(res1 => {\n        let keys = Object.keys(totalexport);\n        let totaleportvalue = [];\n        keys.map(arrayVal => {\n          let value = [];\n          value = res1[arrayVal][\"ontDevices\"];\n          totaleportvalue.push(...value);\n        });\n        this.Download(totaleportvalue, exportid);\n      }, err => {\n        this.exportError = true;\n        this.pageErrorHandle(err);\n      });\n      // let url = `${environment.API_BASE_URL}nfa/onts?offset=0&limit=${this.count}&${this.exportquery}`;\n      // this.http.get(url).subscribe((resp: any) => {\n      //   console.log(resp);\n      //   this.Download(resp[\"ontDevices\"], exportid)\n      // })\n    }\n\n    Download(data1, exportid) {\n      let timezoneName = 'UTC';\n      let pipe = new DatePipe('en-US');\n      let extraData = `${this.language['ONT Systems Report']} \\r\\n${this.language.type} : ${this.reportType(this.exportparams['reportType'])}\\r\\n${this.language.region} : ${this.exportparams['region'] ? this.RegionName : 'All'}\\r\\n${this.language.location} : ${this.exportparams['location'] ? this.LocationName : 'All'}\\r\\n${this.language.System} : ${this.exportparams['system'] ? this.SystemName : 'All'}\\r\\n${this.language.FSAN}/${this.language.MAC_Address} : ${this.exportparams['fsanMac'] ? this.exportparams['fsanMac'] : \"\"}\\r\\n${this.language['First discovered']} : ${this.exportparams['firstPresentTimeStart'] ? this.startISODate(this.exportparams['firstPresentTimeStart'], false) : \"\"} - ${this.exportparams['firstPresentTimeEnd'] ? this.startISODate(this.exportparams['firstPresentTimeEnd'], false) : \"\"}\\r\\n${this.language['Last discovered']} : ${this.exportparams['lastPresentTimeStart'] ? this.startISODate(this.exportparams['lastPresentTimeStart'], false) : \"\"} - ${this.exportparams['lastPresentTimeEnd'] ? this.startISODate(this.exportparams['lastPresentTimeEnd'], false) : \"\"}\\r\\n\\r\\n`;\n      $(exportid).addClass('spinnershow');\n      let data = this.chartDataFraming(data1);\n      let type_name;\n      this.types.some(type => {\n        if (type.value === this.exportparams['reportType']) type_name = type.name;\n      });\n      let name = 'ONT_Systems_' + this.typeSelected;\n      let fname = this.generateDownloadName(this.language['ONT Systems'] + \" (\" + this.language[type_name] + \")\");\n      if (data1) {\n        setTimeout(() => {\n          $(exportid).removeClass('spinnershow');\n        }, 1000);\n      }\n      this.exportExcelService.downLoadCSV(fname, data, extraData);\n    }\n    Regionname(id) {\n      this.RegionName = 'All';\n      this.regionsDataArray.forEach(element => {\n        if (element.id == this.regionSelected) {\n          this.RegionName = element.name;\n        }\n      });\n    }\n    locationName(id) {\n      this.LocationName = 'All';\n      this.locationDataArray.forEach(element => {\n        if (element.id == this.locationSelected) {\n          this.LocationName = element.name;\n        }\n      });\n    }\n    systemName(id) {\n      this.SystemName = 'All';\n      this.systemDataArray.forEach(element => {\n        if (element.uuid == this.systemSelected) {\n          this.SystemName = element.name;\n        }\n      });\n    }\n    reportType(type) {\n      switch (type) {\n        case 'DISCOVERED_DEVICE':\n          return this.language['All Systems'];\n        case 'DEVICE_NOT_CHECKED_IN':\n          return this.language['Systems Not Checked In'];\n        case 'DEVICE_CHECKED_IN':\n          return this.language['Systems Checked In'];\n        case 'DEVICE_NEVER_CHECKED_IN':\n          return this.language['System Never Checked In'];\n      }\n    }\n    chartDataFraming(data1) {\n      let resultArray = [];\n      for (var i = 0; i < (data1 === null || data1 === void 0 ? void 0 : data1.length); i++) {\n        resultArray.push({\n          [this.language['ONU ID']]: data1[i].ontId ? data1[i].ontId : \"\",\n          // [this.language['Vendor ID']]: data1[i]?.vendorId ? data1[i]?.vendorId : data1[i]?.discoveredVendorId ? data1[i]?.discoveredVendorId : \"\",\n          // [this.language['Serial Number']]: data1[i].discoveredSerialNumber ? data1[i].discoveredSerialNumber : \"\",\n          [this.language['FSAN']]: data1[i].fsan ? data1[i].fsan : \"\",\n          [this.language['model']]: data1[i].discoveredModel ? data1[i].discoveredModel : \"\",\n          [this.language['Registration_ID']]: data1[i].discoveredRegistrationId ? data1[i].discoveredRegistrationId : \"\",\n          [this.language['Interface']]: data1[i].discoveredPonPort ? `\"  \"${data1[i].discoveredPonPort}` : \"\",\n          [this.language['ONU Mac Address']]: data1[i].discoveredMacAddress ? data1[i].discoveredMacAddress : \"\",\n          [this.language['Version']]: data1[i].discoveredVersion ? data1[i].discoveredVersion : \"\",\n          [this.language['IsQuarantined']]: data1[i].isRogue ? \"Yes\" : \"No\",\n          [this.language['Region']]: data1[i].region ? data1[i].region : \"\",\n          [this.language['Location']]: data1[i].location ? data1[i].location : \"\",\n          [this.language['System']]: data1[i].oltName ? data1[i].oltName : \"\",\n          [this.language['First discovered']]: data1[i].firstPresentTime ? this.convertToDateTime(data1[i].firstPresentTime) : \"\",\n          [this.language['Last discovered']]: data1[i].lastPresentTime ? this.convertToDateTime(data1[i].lastPresentTime) : \"\"\n        });\n      }\n      return resultArray;\n    }\n    generateDownloadName(chartName) {\n      let splitName = chartName.split(\" \");\n      let joinName = splitName.join('_');\n      let time = new Date().getTime();\n      let name = '';\n      let date = this.formatTodayDate() ? this.formatTodayDate() : '';\n      name += joinName; //+ '-' + date + '-' + time;\n      return name;\n    }\n    formatTodayDate() {\n      var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n    startISODate(startDate, enddata) {\n      if (startDate == undefined) return undefined;\n      let date = new Date(startDate);\n      let year = date.getFullYear();\n      let month = `${date.getMonth() + 1}`;\n      let day = `${date.getDate()}`;\n      if (month.length < 2) {\n        month = `0${month}`;\n      }\n      if (day.length < 2) {\n        day = `0${day}`;\n      }\n      let stdate;\n      if (enddata) stdate = `${year}-${month}-${day}T23:59:00Z`;else stdate = `${year}-${month}-${day}T${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}Z`;\n      // let d = new Date(stdate)\n      // return d.getTime();\n      return stdate;\n    }\n    changeTableStatusLanguage(dtObj) {\n      const nf = new Intl.NumberFormat();\n      this.tableCounts = {\n        searchText: dtObj.oPreviousSearch.sSearch.trim(),\n        total: dtObj._iRecordsTotal,\n        displayCount: dtObj._iDisplayLength,\n        displayed: dtObj._iRecordsDisplay,\n        start: dtObj._iDisplayStart\n      };\n      const isSpanish = sessionStorage.getItem('defaultLanguage') == 'es';\n      const isFrench = sessionStorage.getItem('defaultLanguage') == 'fr',\n        filtered = `${dtObj.oPreviousSearch.sSearch.trim() ? isFrench ? `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` : `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)` : ''}`;\n      const startCount = dtObj._iRecordsDisplay == 0 ? -1 : dtObj._iDisplayStart;\n      const showingCount = dtObj._iDisplayStart + dtObj._iDisplayLength > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : dtObj._iDisplayStart + dtObj._iDisplayLength;\n      $('div [role=\"status\"]').text(isFrench ? `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` : isSpanish ? `Se muestran del ${nf.format(startCount + 1)} al ${nf.format(showingCount)} de ${nf.format(dtObj._iRecordsDisplay)} resultados ${filtered}` : `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`);\n      $(\".first\").text(isFrench ? 'Le début' : isSpanish ? 'Primero' : 'First');\n      $(\".previous\").text(isFrench ? 'Précédent' : isSpanish ? 'Anterior' : 'Previous');\n      $(\".next\").text(isFrench ? 'Suivant' : isSpanish ? 'Siguiente' : 'Next');\n      $(\".last\").text(isFrench ? 'Dernière' : isSpanish ? \"Último\" : 'Last');\n    }\n    onSelect() {\n      if (this.calendar.overlayVisible == false) {\n        if (this.firstDiscoverd) {\n          this.firstDiscoverd[1] = this.firstDiscoverd[1] ? this.firstDiscoverd[1] : new Date();\n          this.firstDiscoverd = [this.firstDiscoverd[0], this.firstDiscoverd[1]];\n        } else if (!this.firstDiscoverd) {\n          this.firstPresentTimeStart = undefined;\n          this.firstPresentTimeEnd = undefined;\n          this.firstDiscoverd = undefined;\n        }\n        if (this.lastDiscoverd) {\n          this.lastDiscoverd[1] = this.lastDiscoverd[1] ? this.lastDiscoverd[1] : new Date();\n          this.lastDiscoverd = [this.lastDiscoverd[0], this.lastDiscoverd[1]];\n        } else if (!this.lastDiscoverd) {\n          this.lastPresentTimeEnd = undefined;\n          this.lastPresentTimeStart = undefined;\n          this.lastDiscoverd = undefined;\n        }\n      }\n    }\n    removespecialcharacter(event) {\n      var key;\n      key = event.keyCode; //key = event.charCode;\n      return key > 47 && key < 59 || key > 64 && key < 91 || key > 96 && key < 123;\n    }\n    convertToDateTime(dateTime) {\n      if (!dateTime) {\n        return;\n      }\n      dateTime = Number(dateTime);\n      let pipe = new DatePipe('en-US');\n      return pipe.transform(new Date(dateTime), 'short');\n    }\n  }\n  OntDevicesComponent.ɵfac = function OntDevicesComponent_Factory(t) {\n    return new (t || OntDevicesComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.CcoCommonService), i0.ɵɵdirectiveInject(i4.CommonService), i0.ɵɵdirectiveInject(i5.CcoSystemService), i0.ɵɵdirectiveInject(i6.ExportExcelService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i8.HttpClient), i0.ɵɵdirectiveInject(i9.DateUtilsService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i7.ActivatedRoute), i0.ɵɵdirectiveInject(i10.SsoAuthService), i0.ɵɵdirectiveInject(i11.IssueService), i0.ɵɵdirectiveInject(i6.ExportExcelService), i0.ɵɵdirectiveInject(i12.Title));\n  };\n  OntDevicesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OntDevicesComponent,\n    selectors: [[\"app-ont-devices\"]],\n    viewQuery: function OntDevicesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteSuccessModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendar = _t.first);\n      }\n    },\n    decls: 58,\n    vars: 62,\n    consts: [[1, \"my-3\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"filter-section\", \"filter-elemnts\", \"pt-2\"], [1, \"filter-wrapper\", \"mb-3\"], [1, \"custom-selectbox\", \"col-md-3\"], [1, \"filter-label\"], [\"id\", \"type\", \"bindLabel\", \"name\", \"bindValue\", \"value\", 3, \"items\", \"clearOnBackspace\", \"placeholder\", \"searchable\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"id\", \"region\", 1, \"custom-selectbox\", \"col-md-3\"], [\"for\", \"Name\", 1, \"filter-label\"], [\"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"ngModelOptions\", \"clearable\", \"searchable\", \"disabled\", \"placeholder\", \"ngModelChange\"], [\"id\", \"location\", 1, \"custom-selectbox\", \"col-md-3\"], [\"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"placeholder\", \"ngModelOptions\", \"clearable\", \"disabled\", \"searchable\", \"ngModelChange\"], [1, \"current-issue-menu-item\", \"col-12\", \"col-sm-6\", \"col-md-3\", \"col-lg-3\"], [\"for\", \"Name\", 1, \"col-form-label\", \"select-font\"], [\"id\", \"current-issues-interval\", 1, \"w-100\"], [\"bindValue\", \"uuid\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"placeholder\", \"ngModelOptions\", \"disabled\", \"clearable\", \"searchable\", \"ngModelChange\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-12\", \"col-lg-3\", \"mpl-1\", \"flex\", \"current-issue-item-w\"], [\"for\", \"Name\", 1, \"col-form-label\", \"select-font\", \"w-100\"], [1, \"ccl-form\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\", 3, \"ngModel\", \"maxlength\", \"placeholder\", \"ngModelChange\", \"keypress\", \"change\", \"keyup\"], [\"class\", \"vald-tag\", 4, \"ngIf\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-12\", \"col-lg-3\", \"mpl-1\", \"flex\"], [1, \"ccl-form\", \"w-100\", \"first-discovered\"], [\"selectionMode\", \"range\", \"inputId\", \"range\", 3, \"ngModel\", \"readonlyInput\", \"showButtonBar\", \"maxDate\", \"showIcon\", \"ngModelChange\", \"onClose\"], [\"calendar\", \"\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-12\", \"col-lg-3\", \"mpl-1\", \"flex\", \"mw-120\"], [\"selectionMode\", \"range\", \"inputId\", \"range\", 3, \"ngModel\", \"readonlyInput\", \"maxDate\", \"showIcon\", \"showButtonBar\", \"minDate\", \"ngModelChange\", \"onClose\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-12\", \"col-lg-5\", \"mt-4\", \"pt-2\"], [1, \"d-inline-flex\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"mr-3\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-12\", \"col-lg-7\"], [\"type\", \"button\", \"id\", \"export\", 1, \"btn-default\", \"btn-dft\", \"float-right\", 3, \"click\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [\"class\", \"container\", 4, \"ngIf\"], [\"deleteModal\", \"\"], [\"deleteSuccessModal\", \"\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"vald-tag\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-12\", \"px-0\", \"overflow-auto\"], [\"datatable\", \"\", 1, \"table\", \"table-borderless\", 3, \"dtOptions\"], [1, \"mw-120\"], [4, \"ngIf\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [\"colspan\", \"14\", 1, \"no-data-available\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"ml-2\", 3, \"click\"]],\n    template: function OntDevicesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵtemplate(1, OntDevicesComponent_div_1_Template, 5, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, OntDevicesComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"section\");\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ng-select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_9_listener($event) {\n          return ctx.typeSelected = $event;\n        });\n        i0.ɵɵtemplate(10, OntDevicesComponent_ng_template_10_Template, 1, 1, \"ng-template\", 8);\n        i0.ɵɵtemplate(11, OntDevicesComponent_ng_template_11_Template, 1, 1, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"label\", 11);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ng-select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_15_listener($event) {\n          return ctx.regionSelected = $event;\n        })(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_15_listener() {\n          return ctx.getLocations();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵelementStart(17, \"label\", 11);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ng-select\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_19_listener($event) {\n          return ctx.locationSelected = $event;\n        })(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_19_listener($event) {\n          return ctx.loadSystemValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵelementStart(21, \"label\", 16);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 17);\n        i0.ɵɵelementStart(24, \"ng-select\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_ng_select_ngModelChange_24_listener($event) {\n          return ctx.systemSelected = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵelementStart(26, \"label\", 20);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 21);\n        i0.ɵɵelementStart(29, \"input\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.name = $event;\n        })(\"keypress\", function OntDevicesComponent_Template_input_keypress_29_listener($event) {\n          return ctx.removespecialcharacter($event);\n        })(\"change\", function OntDevicesComponent_Template_input_change_29_listener() {\n          return ctx.textselected();\n        })(\"keyup\", function OntDevicesComponent_Template_input_keyup_29_listener() {\n          return ctx.changeMAc();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, OntDevicesComponent_small_30_Template, 2, 2, \"small\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 24);\n        i0.ɵɵelementStart(32, \"label\", 20);\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 25);\n        i0.ɵɵelementStart(35, \"p-calendar\", 26, 27);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_p_calendar_ngModelChange_35_listener($event) {\n          return ctx.firstDiscoverd = $event;\n        })(\"onClose\", function OntDevicesComponent_Template_p_calendar_onClose_35_listener() {\n          return ctx.onSelect();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 28);\n        i0.ɵɵelementStart(38, \"label\", 20);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 25);\n        i0.ɵɵelementStart(41, \"p-calendar\", 29, 27);\n        i0.ɵɵlistener(\"ngModelChange\", function OntDevicesComponent_Template_p_calendar_ngModelChange_41_listener($event) {\n          return ctx.lastDiscoverd = $event;\n        })(\"onClose\", function OntDevicesComponent_Template_p_calendar_onClose_41_listener() {\n          return ctx.onSelect();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 30);\n        i0.ɵɵelementStart(44, \"div\", 31);\n        i0.ɵɵelementStart(45, \"button\", 32);\n        i0.ɵɵlistener(\"click\", function OntDevicesComponent_Template_button_click_45_listener() {\n          return ctx.getCount();\n        });\n        i0.ɵɵtext(46);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 33);\n        i0.ɵɵlistener(\"click\", function OntDevicesComponent_Template_button_click_47_listener() {\n          return ctx.clearFilter();\n        });\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 34);\n        i0.ɵɵelementStart(50, \"button\", 35);\n        i0.ɵɵlistener(\"click\", function OntDevicesComponent_Template_button_click_50_listener() {\n          return ctx.getExportData(\"export\");\n        });\n        i0.ɵɵtext(51);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(52, OntDevicesComponent_div_52_Template, 6, 1, \"div\", 36);\n        i0.ɵɵtemplate(53, OntDevicesComponent_div_53_Template, 32, 16, \"div\", 37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, OntDevicesComponent_ng_template_54_Template, 16, 5, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(56, OntDevicesComponent_ng_template_56_Template, 11, 3, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.language.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"None Selected\"]);\n        i0.ɵɵproperty(\"items\", ctx.types)(\"clearOnBackspace\", false)(\"searchable\", false)(\"ngModel\", ctx.typeSelected)(\"ngModelOptions\", i0.ɵɵpureFunction0(58, _c3));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.language.region);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.region);\n        i0.ɵɵproperty(\"ngModel\", ctx.regionSelected)(\"items\", ctx.regionsDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(59, _c3))(\"clearable\", false)(\"searchable\", true)(\"disabled\", ctx.condition);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.location);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.Location);\n        i0.ɵɵproperty(\"ngModel\", ctx.locationSelected)(\"items\", ctx.locationDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(60, _c3))(\"clearable\", false)(\"disabled\", ctx.condition)(\"searchable\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.System);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.System);\n        i0.ɵɵproperty(\"ngModel\", ctx.systemSelected)(\"items\", ctx.systemDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(61, _c3))(\"disabled\", ctx.condition)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.language.FSAN, \"/\", ctx.language.MAC_Address, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", ctx.language.FSAN, \"/\", ctx.language.MAC_Address, \"\");\n        i0.ɵɵproperty(\"ngModel\", ctx.name)(\"maxlength\", ctx.fmmaxlength);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fsanvalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"First discovered\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstDiscoverd)(\"readonlyInput\", true)(\"showButtonBar\", true)(\"maxDate\", ctx.maxForStartDate)(\"showIcon\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language[\"Last discovered\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.lastDiscoverd)(\"readonlyInput\", true)(\"maxDate\", ctx.maxForStartDate)(\"showIcon\", true)(\"showButtonBar\", true)(\"minDate\", ctx.firstDiscoverd ? ctx.firstDiscoverd[0] ? ctx.firstDiscoverd[0] : ctx.firstDiscoverd[1] ? ctx.firstDiscoverd[1] : undefined : undefined);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.run, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Clear_Filters, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Export, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exportError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTable);\n      }\n    },\n    directives: [i13.NgIf, i14.NgSelectComponent, i15.NgControlStatus, i15.NgModel, i14.ɵh, i14.ɵf, i15.DefaultValueAccessor, i15.MaxLengthValidator, i16.Calendar, i17.DataTableDirective, i13.NgForOf],\n    styles: [\".current-issues-table[_ngcontent-%COMP%]{width:100%}.current-issues-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.current-issues-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{font-size:14px}.current-issues-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]{font-size:14px}.cco-pointer[_ngcontent-%COMP%]{cursor:pointer}table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6;font-size:16px;font-weight:400}.run-btn[_ngcontent-%COMP%]{background-color:#6c757d!important;color:#fff!important}.run-btn-active[_ngcontent-%COMP%]{background-color:#0173bc!important;color:#fff!important}label[_ngcontent-%COMP%]{font-weight:normal!important}.filter-wrapper[_ngcontent-%COMP%]{min-width:300px;display:flex;flex-wrap:wrap;align-items:flex-end}.filter-wrapper[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:120px}.custom-btn[_ngcontent-%COMP%]{background-color:#0173bc;border:1px solid #44367D;color:#fff;font-weight:bold;min-width:82px;height:2.4em;padding:0 15px;border-radius:20px;font-size:14px}.custom-btn[_ngcontent-%COMP%]:disabled{background-color:#6a6b6f;border:1px solid #44367D}[_nghost-%COMP%]     table.dataTable td.dataTables_empty{display:none}.substep-title[_ngcontent-%COMP%]{font-size:12px;line-height:22px;font-weight:300;margin-bottom:5px}.first-discovered[_ngcontent-%COMP%]   .p-calendar[_ngcontent-%COMP%]{width:100%}.first-discovered[_ngcontent-%COMP%]   .p-calendar[_ngcontent-%COMP%]   .p-datepicker[_ngcontent-%COMP%]{min-width:inherit;width:auto;max-width:200px}.spinnershow[_ngcontent-%COMP%]{background-image:url(spinnersmall.8539076b5d15004b8953.svg)!important}  .p-calendar-w-btn .p-inputtext{padding-right:0!important}  .p-button.p-button-icon-only{max-width:24px;padding-left:0!important;padding-right:9px!important}.filter-elemnts[_ngcontent-%COMP%]{padding-left:15px!important;padding-right:15px!important}small[_ngcontent-%COMP%]{color:#c70000}small.vald-tag[_ngcontent-%COMP%]{position:absolute;bottom:-20px;padding-left:10px}.current-issue-item-w[_ngcontent-%COMP%]{min-width:120px;position:relative}.mw-120[_ngcontent-%COMP%]{min-width:120px}\"]\n  });\n  return OntDevicesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}