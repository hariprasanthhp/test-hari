{"ast":null,"code":"import PropertiesActivator from 'bpmn-js-properties-panel/lib/PropertiesActivator';\nimport idProps from 'bpmn-js-properties-panel/lib/provider/bpmn/parts/IdProps';\nimport nameProps from 'bpmn-js-properties-panel/lib/provider/bpmn/parts/NameProps';\nimport processProps from 'bpmn-js-properties-panel/lib/provider/bpmn/parts/ProcessProps';\nimport executableProps from 'bpmn-js-properties-panel/lib/provider/bpmn/parts/ExecutableProps';\nimport inputOutput from './parts/InputOutputProps';\nimport headers from './parts/HeadersProps';\nimport taskDefinition from './parts/TaskDefinitionProps';\nimport sequenceFlowProps from './parts/SequenceFlowProps';\nimport messageProps from './parts/MessageProps';\nimport timerProps from './parts/TimerEventProps';\nimport multiInstanceProps from './parts/MultiInstanceProps';\nimport errorProps from './parts/ErrorProps';\nimport callActivityProps from './parts/CallActivityProps';\nimport formProps from './parts/FormProps';\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nfunction getIdOptions(element) {\n  if (is(element, 'bpmn:Participant')) {\n    return {\n      id: 'participant-id',\n      label: 'Participant Id'\n    };\n  }\n}\nfunction getNameOptions(element) {\n  if (is(element, 'bpmn:Participant')) {\n    return {\n      id: 'participant-name',\n      label: 'Participant Name'\n    };\n  }\n}\nfunction createGeneralTabGroups(element, bpmnFactory, canvas, translate) {\n  const generalGroup = {\n    id: 'general',\n    label: translate('General'),\n    entries: []\n  };\n  idProps(generalGroup, element, translate, getIdOptions(element));\n  nameProps(generalGroup, element, bpmnFactory, canvas, translate, getNameOptions(element));\n  processProps(generalGroup, element, translate);\n  executableProps(generalGroup, element, translate);\n  const detailsGroup = {\n    id: 'details',\n    label: translate('Details'),\n    entries: []\n  };\n  taskDefinition(detailsGroup, element, bpmnFactory, translate);\n  sequenceFlowProps(detailsGroup, element, bpmnFactory, translate);\n  messageProps(detailsGroup, element, bpmnFactory, translate);\n  timerProps(detailsGroup, element, bpmnFactory, translate);\n  errorProps(detailsGroup, element, bpmnFactory, translate);\n  callActivityProps(detailsGroup, element, bpmnFactory, translate);\n  const multiInstanceGroup = {\n    id: 'multiInstance',\n    label: translate('Multi Instance'),\n    entries: []\n  };\n  multiInstanceProps(multiInstanceGroup, element, bpmnFactory, translate);\n  return [generalGroup, detailsGroup, multiInstanceGroup];\n}\nfunction createFormsGroups(element, bpmnFactory, translate) {\n  const formsGroups = {\n    id: 'forms-properties',\n    label: translate('Forms'),\n    entries: []\n  };\n  formProps(formsGroups, element, bpmnFactory, translate);\n  return [formsGroups];\n}\nfunction createHeadersGroups(element, bpmnFactory, translate) {\n  const headersGroup = {\n    id: 'headers-properties',\n    label: translate('Headers'),\n    entries: []\n  };\n  headers(headersGroup, element, bpmnFactory, translate);\n  return [headersGroup];\n}\nfunction createInputOutputTabGroups(element, bpmnFactory, translate) {\n  const inputGroup = {\n    id: 'input',\n    label: translate('Input Parameters'),\n    entries: []\n  };\n  inputOutput(inputGroup, element, bpmnFactory, translate, {\n    type: 'zeebe:Input',\n    prop: 'inputParameters',\n    prefix: 'input'\n  });\n  const outputGroup = {\n    id: 'output',\n    label: translate('Output Parameters'),\n    entries: []\n  };\n  inputOutput(outputGroup, element, bpmnFactory, translate, {\n    type: 'zeebe:Output',\n    prop: 'outputParameters',\n    prefix: 'output'\n  });\n  return [inputGroup, outputGroup];\n}\nlet ZeebePropertiesProvider = /*#__PURE__*/(() => {\n  class ZeebePropertiesProvider extends PropertiesActivator {\n    constructor(eventBus, bpmnFactory, canvas, translate) {\n      super(eventBus);\n      this._bpmnFactory = bpmnFactory;\n      this._canvas = canvas;\n      this._translate = translate;\n    }\n    getTabs(element) {\n      const generalTab = {\n        id: 'general',\n        label: this._translate('General'),\n        groups: createGeneralTabGroups(element, this._bpmnFactory, this._canvas, this._translate)\n      };\n      const formsTab = {\n        id: 'forms',\n        label: this._translate('Forms'),\n        groups: createFormsGroups(element, this._bpmnFactory, this._translate)\n      };\n      const inputOutputTab = {\n        id: 'input-output',\n        label: this._translate('Input/Output'),\n        groups: createInputOutputTabGroups(element, this._bpmnFactory, this._translate)\n      };\n      const headersTab = {\n        id: 'headers',\n        label: this._translate('Headers'),\n        groups: createHeadersGroups(element, this._bpmnFactory, this._translate)\n      };\n      return [generalTab, formsTab, inputOutputTab, headersTab];\n    }\n  }\n  ZeebePropertiesProvider.$inject = ['eventBus', 'bpmnFactory', 'canvas', 'translate'];\n  return ZeebePropertiesProvider;\n})();\nexport { ZeebePropertiesProvider as default };","map":null,"metadata":{},"sourceType":"module"}