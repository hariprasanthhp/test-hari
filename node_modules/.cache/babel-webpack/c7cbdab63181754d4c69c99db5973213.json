{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { forkJoin, Subject } from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as jquery from 'jquery';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"../../../../shared/services/api.service\";\nimport * as i4 from \"../../../../shared/services/sso-auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"../../shared/dial-plan.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"./dial-plan-new/dial-plan-new.component\";\nimport * as i10 from \"angular-datatables\";\nconst _c0 = [\"dialPlanDeleteModalRef\"];\nconst _c1 = [\"closeBtn\"];\nconst _c2 = [\"openDialogBtn\"];\nfunction DialPlanComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction DialPlanComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵelement(2, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 14);\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 1, ctx_r1.successMsg));\n  }\n}\nfunction DialPlanComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵelement(3, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵelementStart(5, \"span\", 20);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"span\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.closeAlert();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelement(10, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language[\"Warning\"], \"!\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r2.errorMsg, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.OK, \"\");\n  }\n}\nfunction DialPlanComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.language[\"Dial Plan\"], \" \");\n  }\n}\nfunction DialPlanComponent_div_5_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 37, 38);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_5_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.openDialog();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.New_Dial_Plan);\n  }\n}\nfunction DialPlanComponent_div_5_app_dial_plan_new_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-dial-plan-new\", 39);\n    i0.ɵɵlistener(\"onClose\", function DialPlanComponent_div_5_app_dial_plan_new_13_Template_app_dial_plan_new_onClose_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onModalClose($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"editModalInput\", ctx_r15.editDialPlanObj)(\"Id\", ctx_r15.editDialPlanObj ? ctx_r15.editDialPlanObj._id : \"\");\n  }\n}\nfunction DialPlanComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, DialPlanComponent_div_5_button_1_Template, 3, 1, \"button\", 26);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵelementStart(3, \"div\", 28);\n    i0.ɵɵelementStart(4, \"div\", 29);\n    i0.ɵɵelementStart(5, \"div\", 30);\n    i0.ɵɵelementStart(6, \"div\", 31);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"img\", 32);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_5_Template_img_click_8_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.closeModal();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 33);\n    i0.ɵɵelementStart(10, \"a\");\n    i0.ɵɵelement(11, \"i\", 34, 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, DialPlanComponent_div_5_app_dial_plan_new_13_Template, 1, 2, \"app-dial-plan-new\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasWriteAccess && ctx_r4.allowDialPlan);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.language[\"Dial Plan\"]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showDialog);\n  }\n}\nfunction DialPlanComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵelement(2, \"img\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 42);\n    i0.ɵɵelementStart(6, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_6_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.doDeleteDialPlan();\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_6_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.cancelDelete();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.Dial_Plan_Confirmation1, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.Cancel, \" \");\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_td_14_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 60);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_td_14_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const dialPlan_r32 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r35 = i0.ɵɵnextContext(4);\n      ctx_r35.deleteDialPlan(dialPlan_r32);\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelement(1, \"i\", 61);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(6);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r34.language.Delete);\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 53);\n    i0.ɵɵtemplate(1, DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_td_14_a_1_Template, 2, 1, \"a\", 59);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dialPlan_r32 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (dialPlan_r32 == null ? null : dialPlan_r32.name) !== \"system-default\");\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 56);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_Template_tr_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const dialPlan_r32 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext(4);\n      ctx_r39.goToEdit(dialPlan_r32);\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementStart(1, \"td\", 50);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 50);\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 51);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 51);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 52);\n    i0.ɵɵelementStart(12, \"div\", 57);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_td_14_Template, 2, 1, \"td\", 58);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dialPlan_r32 = ctx.$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(4);\n    i0.ɵɵpropertyInterpolate(\"id\", dialPlan_r32 == null ? null : dialPlan_r32._id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dialPlan_r32 == null ? null : dialPlan_r32.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dialPlan_r32 == null ? null : dialPlan_r32.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dialPlan_r32 == null ? null : dialPlan_r32.shortTimer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dialPlan_r32 == null ? null : dialPlan_r32.longTimer);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dialPlan_r32 == null ? null : dialPlan_r32.rules == null ? null : dialPlan_r32.rules.join(\"|\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r31.hasWriteAccess);\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_tbody_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, DialPlanComponent_div_7_ng_container_2_tbody_16_tr_1_Template, 15, 7, \"tr\", 55);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r28.dialPadList);\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_tbody_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 62);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r29.language.NO_Dial_Plan_Found);\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 63);\n    i0.ɵɵelementStart(1, \"div\", 64);\n    i0.ɵɵelementStart(2, \"div\", 65);\n    i0.ɵɵelementStart(3, \"span\", 66);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r30.language.Loading);\n  }\n}\nfunction DialPlanComponent_div_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 48);\n    i0.ɵɵelementStart(2, \"table\", 49);\n    i0.ɵɵelementStart(3, \"thead\");\n    i0.ɵɵelementStart(4, \"tr\");\n    i0.ɵɵelementStart(5, \"th\", 50);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 50);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 51);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 51);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 52);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"th\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, DialPlanComponent_div_7_ng_container_2_tbody_16_Template, 2, 1, \"tbody\", 47);\n    i0.ɵɵtemplate(17, DialPlanComponent_div_7_ng_container_2_tbody_17_Template, 4, 1, \"tbody\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, DialPlanComponent_div_7_ng_container_2_div_18_Template, 5, 1, \"div\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r27.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r27.language.Name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r27.language.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r27.language.Digit_shortimer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r27.language.Digit_longimer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r27.language.Rules);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r27.dialPadList == null ? null : ctx_r27.dialPadList.length) > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r27.dialPadList == null ? null : ctx_r27.dialPadList.length) === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.loader);\n  }\n}\nfunction DialPlanComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45, 46);\n    i0.ɵɵtemplate(2, DialPlanComponent_div_7_ng_container_2_Template, 19, 9, \"ng-container\", 47);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.language);\n  }\n}\nfunction DialPlanComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵelementStart(1, \"h4\", 68);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_ng_template_8_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const modal_r41 = restoredCtx.$implicit;\n      return modal_r41.dismiss(false);\n    });\n    i0.ɵɵelement(4, \"span\", 70);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"strong\", 71);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" ? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 72);\n    i0.ɵɵelementStart(11, \"button\", 73);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_ng_template_8_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const modal_r41 = restoredCtx.$implicit;\n      return modal_r41.dismiss(false);\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 74);\n    i0.ɵɵlistener(\"click\", function DialPlanComponent_ng_template_8_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const modal_r41 = restoredCtx.$implicit;\n      return modal_r41.close(true);\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.Delete_DialPlan, \"!\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.Dial_Plan_Confirmation2, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.dialPlanObj == null ? null : ctx_r8.dialPlanObj.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Close);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Delete);\n  }\n}\nconst _c3 = \"/support/netops-management/configuration/dial-plan\";\nconst _c4 = \"/cco/operations/cco-subscriber-operations/configurations/dial-plan\";\nconst _c5 = \"/cco-foundation/foundation-operations/foundation-system-operation/sub-profile\";\nconst _c6 = \"/cco-foundation/foundation-configuration/configuration-prerequisites/dial-plan\";\nconst _c7 = function () {\n  return [_c3, \"/cco/operations/cco-system-operations/sub-profile\", _c4, _c5, _c6, \"/cco/services/service-profiles/dial-plan\"];\n};\nexport let DialPlanComponent = /*#__PURE__*/(() => {\n  class DialPlanComponent {\n    constructor(translateService, titleService, httpService, authService, router, activatedRoute, modalService, httpDialPlan) {\n      this.translateService = translateService;\n      this.titleService = titleService;\n      this.httpService = httpService;\n      this.authService = authService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.modalService = modalService;\n      this.httpDialPlan = httpDialPlan;\n      // Initialize component essential variables.\n      this.dtOptions = {};\n      this.loader = false;\n      this.showDialog = true;\n      this.unSubscribeParam$ = new Subject();\n      // Url constants.\n      this.dialPadUrl = `${environment[`SUPPORT_URL`]}/netops-dp/dial-plan`;\n      this.dialPadCountUrl = `${environment[`SUPPORT_URL`]}/netops-dp/dial-plan/count`;\n      this.dialPlanName = '';\n      this.hasWriteAccess = false;\n      this.allowDialPlan = true;\n      this.hasScopeAccess = false;\n      this.editMode = false;\n      this.loader = true;\n    }\n    setTitle(url) {\n      if (this.router.url.includes('cco-foundation')) {\n        this.titleService.setTitle(`${this.language['Dial Plans']}  - ${this.language['Workflow Prerequisites']} - ${this.language['configuration']} - ${this.language['Deployment']} - ${this.language['Calix Cloud']}`);\n      } else if (this.router.url.includes('/cco/services/service-profiles/dial-plan')) {\n        this.titleService.setTitle(`${this.language['RG Dial Plans']} - ${this.language['Services Profiles']} - ${this.language['Services']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else if (this.router.url.includes('/support/netops-management')) {\n        this.titleService.setTitle(`${this.language['Dial Plans']} - ${this.language['Configurations']} - ${this.language['NetOps']} - ${this.language['Support']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      var _a, _b;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.setTitle(this.router.url);\n      });\n      this.setTitle(this.router.url);\n      let enttlmnts = this.authService.getEntitlements();\n      if (this.router.url.includes('cco/services') && enttlmnts[210] && !enttlmnts[102]) {\n        this.allowDialPlan = false;\n      }\n      let scopes = this.authService.getScopes();\n      if (!this.router.url.includes('cco-foundation') && !this.router.url.includes('cco/services/service-profiles/dial-plan')) {\n        if (environment.VALIDATE_SCOPE) {\n          scopes['cloud.rbac.csc.netops.config.dial_plan'] = scopes['cloud.rbac.csc.netops.config.dial_plan'] ? scopes['cloud.rbac.csc.netops.config.dial_plan'] : [];\n          if (scopes['cloud.rbac.csc.netops.config.dial_plan'].length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.config.dial_plan'] && scopes['cloud.rbac.csc.netops.config.dial_plan'].indexOf('write') !== -1) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      } else if (this.router.url.includes('cco/services/service-profiles/dial-plan')) {\n        if (environment.VALIDATE_SCOPE) {\n          if ((_a = scopes['cloud.rbac.coc.services.serviceprofiles.rgdialplans']) === null || _a === void 0 ? void 0 : _a.length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && ((_b = scopes['cloud.rbac.coc.services.serviceprofiles.rgdialplans']) === null || _b === void 0 ? void 0 : _b.includes('write'))) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      } else {\n        if (environment.VALIDATE_SCOPE) {\n          scopes['cloud.rbac.foundation.configurations'] = scopes['cloud.rbac.foundation.configurations'] ? scopes['cloud.rbac.foundation.configurations'] : [];\n          if (scopes['cloud.rbac.foundation.configurations'].length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && scopes['cloud.rbac.foundation.configurations'].includes('write')) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      }\n      if (!this.hasScopeAccess) {\n        this.authService.setPageAccess(false);\n        return;\n      }\n      let base = `${environment.API_BASE}`;\n      if (base.indexOf('/dev.api.calix.ai') > -1) {\n        this.validateScopeStage = true;\n      } else this.validateScopeStage = false;\n      if (!this.dialPlanObj) {\n        this.loadDialPadList();\n      }\n    }\n    ngAfterViewInit() {\n      this.routerState$ = this.activatedRoute.paramMap.pipe(takeUntil(this.unSubscribeParam$), map(() => window.history.state));\n      this.routerState$.subscribe(state => {\n        if (state && state[`dialPlanObj`] !== null && state[`dialPlanObj`] !== undefined) {\n          this.dialPlanObj = state[`dialPlanObj`];\n          this.triggerSaveOrEdit();\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n      this.unSubscribeParam$.next();\n      this.unSubscribeParam$.complete();\n    }\n    /**\r\n     * @description - Method to trigger save or edit.\r\n     */\n    triggerSaveOrEdit() {\n      if (this.dialPlanObj && !this.dialPlanObj.hasOwnProperty('_id')) {\n        this.httpService.post(this.dialPadUrl, this.dialPlanObj, this.constructParam(null)).subscribe(result => {\n          if (result) {\n            this.loadDialPadList();\n            this.reDrawTable();\n          }\n        }, error => {\n          this.showErrorAlert(this.httpService.handleError(error));\n        });\n      } else if (this.dialPlanObj && this.dialPlanObj.hasOwnProperty('_id')) {\n        const formattedUrl = this.dialPadUrl + '/' + `${this.dialPlanObj._id}`;\n        this.httpService.put(formattedUrl, this.dialPlanObj, this.constructParam(null)).subscribe(() => {\n          this.loadDialPadList();\n          this.reDrawTable();\n        }, error => {\n          this.showErrorAlert(this.httpService.handleError(error));\n        });\n      }\n    }\n    /**\r\n     * @description - Method to show alert.\r\n     * @param - {string} msg.\r\n     */\n    showSuccessAlert(msg) {\n      jquery('.alert.alert-success').show();\n      this.successMsg = msg;\n      setTimeout(() => {\n        this.closeAlert();\n      }, 2000);\n    }\n    /**\r\n     * @description - Method to show alert.\r\n     * @param - {string} msg.\r\n     */\n    showErrorAlert(msg) {\n      jquery('.alert.alert-error').show();\n      this.errorMsg = msg;\n      setTimeout(() => {\n        this.closeAlert();\n      }, 2000);\n    }\n    showDeleteAlert(msg) {\n      jquery('.alert.alert-error').show();\n      jquery('.alert.alert-error').addClass('alert-danger');\n      this.errorMsg = msg;\n    }\n    /**\r\n     * @description - Method to close alert.\r\n     */\n    closeAlert() {\n      jquery('.alert').hide();\n    }\n    /**\r\n     * @description - Method to load dialpad list.\r\n     */\n    loadDialPadList() {\n      this.dtOptions = {\n        // pagingType: 'full_numbers',\n        // pageLength: 10,\n        paging: false,\n        dom: 't',\n        searching: false,\n        lengthChange: false,\n        destroy: true,\n        ordering: false,\n        serverSide: true,\n        processing: false,\n        columns: [{\n          data: 'name'\n        }, {\n          data: 'description'\n        }, {\n          data: 'shortTimer'\n        }, {\n          data: 'longTimer'\n        }, {\n          data: 'rules'\n        }, {\n          data: null\n        }],\n        ajax: (dtParams, callbackTransferData) => {\n          const dialPad = this.httpService.get(this.dialPadUrl, this.constructParam(dtParams));\n          const diapPadCount = this.httpService.get(this.dialPadCountUrl, this.constructParam(null));\n          forkJoin([dialPad, diapPadCount]).subscribe(apiJsonResults => {\n            this.dialPadList = apiJsonResults[0];\n            this.dialPadCount = apiJsonResults[1].count;\n            this.loader = false;\n            callbackTransferData({\n              recordsTotal: this.dialPadCount,\n              recordsFiltered: this.dialPadCount,\n              data: []\n            });\n          }, error => {\n            this.loader = false;\n            this.showErrorAlert(this.httpService.handleError(error));\n          });\n        }\n      };\n    }\n    constructParam(dtParams) {\n      this.httpParams = new HttpParams();\n      // this.httpParams = this.httpParams.set('orgId', this.authService.getOrg(this.orgId));\n      if (this.authService.getOrg(this.orgId)) {\n        this.httpParams.set(\"orgId\", this.orgId);\n      }\n      if (dtParams !== null) {\n        this.httpParams = this.httpParams.set('limit', '0');\n        this.httpParams = this.httpParams.set('skip', '0');\n        // this.httpParams = this.httpParams.set('limit', dtParams.length.toString());\n        // this.httpParams = this.httpParams.set('skip', dtParams.start.toString());\n      }\n\n      return this.httpParams;\n    }\n    goToEdit(dialPlanObj) {\n      if ((dialPlanObj === null || dialPlanObj === void 0 ? void 0 : dialPlanObj.name) === \"system-default\") {\n        return;\n      }\n      this.editDialPlanObj = dialPlanObj;\n      this.editMode = true;\n      this.openDialogBtn.nativeElement.click();\n      this.showDialog = true;\n      /*  this.authService.redirectByUrl([\r\n         `support/netops-management/configuration/dial-plan/${dialPlanObj._id}`,\r\n         `cco/operations/cco-system-operations/sub-profile/${dialPlanObj._id}`,\r\n         `/cco-foundation/foundation-configuration/configuration-prerequisites/dial-plan/${dialPlanObj._id}`,\r\n         `/cco/operations/cco-subscriber-operations/configurations/dial-plan/${dialPlanObj._id}`,\r\n       ], {\r\n         state: {\r\n           dialPlanObj: dialPlanObj ? dialPlanObj : null\r\n         }\r\n       }); */\n      /* this.router.navigateByUrl('/support/netops-management/configuration/dial-plan/' +\r\n        `${dialPlanObj._id}`, {\r\n        state: {\r\n          dialPlanObj: dialPlanObj ? dialPlanObj : null\r\n        }\r\n      }); */\n    }\n    /**\r\n     * @description -Method to delete dial plan dialog.\r\n     * @param - { any } dialPlanObj.\r\n     */\n    deleteDialPlan(dialPlanObj) {\n      this.dialPlanObj = dialPlanObj;\n      this.dialPlanName = dialPlanObj === null || dialPlanObj === void 0 ? void 0 : dialPlanObj.name;\n      jquery(\"html, body\").animate({\n        scrollTop: 0\n      }, \"slow\");\n      // const dialogRef = this.modalService.open(this.deleteModalRef);\n      // dialogRef.closed.subscribe((result: any) => {\n      //   if (result) {\n      //     const deleteSubnetByIdUrl: string = this.dialPadUrl + '/' + `${dialPlanObj._id}`;\n      //     this.httpService.delete(deleteSubnetByIdUrl).subscribe(() => {\n      //       this.dialPlanObj = null;\n      //       this.showSuccessAlert(this.language['Dial Plan Deleted successfully']);\n      //       this.reDrawTable();\n      //     }, (error: HttpErrorResponse) => {\n      //       this.showErrorAlert(this.httpService.handleError(error));\n      //     });\n      //   }\n      // });\n    }\n    /**\r\n     * @description - Method to redraw table.\r\n     */\n    reDrawTable() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    cancelDelete() {\n      this.dialPlanName = '';\n    }\n    confirmDeleteDialPlan(item) {\n      this.dialPlanName = item;\n    }\n    doDeleteDialPlan() {\n      const deleteSubnetByIdUrl = this.dialPadUrl + '/' + `${this.dialPlanObj._id}`;\n      this.httpDialPlan.delete(deleteSubnetByIdUrl).subscribe(res => {\n        this.dialPlanName = '';\n        this.dialPlanObj = null;\n        this.showSuccessAlert(this.language['Dial Plan Deleted successfully']);\n        this.reDrawTable();\n      }, error => {\n        this.showDeleteAlert(this.httpService.handleError(error.error));\n        this.dialPlanName = '';\n        this.dialPlanObj = null;\n      });\n    }\n    newDialPlan() {\n      /*  this.authService.redirectByUrl([\r\n         '/support/netops-management/configuration/dial-plan/add',\r\n         '/cco/operations/cco-system-operations/sub-profile/add',\r\n         '/cco-foundation/foundation-configuration/configuration-prerequisites/dial-plan/add',\r\n         '/cco/operations/cco-subscriber-operations/configurations/dial-plan/add',\r\n       ]); */\n      //this.modalRef = this.modalService.open(this.addModal, { size: 'lg', windowClass: 'custom-xl-modal' });\n    }\n    onModalClose(event) {\n      if (event == 'submit') {\n        this.reDrawTable();\n        this.showDialog = false;\n        this.editMode = false;\n      }\n      this.closeBtn.nativeElement.click();\n      this.showDialog = false;\n      this.editMode = false;\n    }\n    closeModal() {\n      if (this.modalRef) {\n        this.modalRef.close();\n        this.editMode = false;\n        this.showDialog = false;\n      }\n      this.editMode = false;\n      this.showDialog = false;\n      this.editDialPlanObj = undefined;\n    }\n    openDialog() {\n      this.showDialog = true;\n      if (!this.editMode) {\n        this.editDialPlanObj = undefined;\n      }\n    }\n  }\n  DialPlanComponent.ɵfac = function DialPlanComponent_Factory(t) {\n    return new (t || DialPlanComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.Title), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.SsoAuthService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.NgbModal), i0.ɵɵdirectiveInject(i7.DialPlanService));\n  };\n  DialPlanComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialPlanComponent,\n    selectors: [[\"app-dial-plan\"]],\n    viewQuery: function DialPlanComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModalRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.openDialogBtn = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 8,\n    consts: [[1, \"position-relative\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible\", 4, \"ngIf\"], [\"class\", \"alert alert-error alert-dismissible py-0\", 4, \"ngIf\"], [\"class\", \"row no-gutters\", 4, \"ngIf\"], [\"class\", \"d-flex flex-row justify-content-start align-items-center my-3\", 4, \"ngIf\"], [\"class\", \" warning-msg\", 4, \"ngIf\"], [\"id\", \"dial-plan\", \"class\", \"tab-pane\", 4, \"ngIf\"], [\"dialPlanDeleteModalRef\", \"\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"alert\", \"alert-success\", \"alert-dismissible\"], [1, \"success-img\"], [\"src\", \"../../../../../assets/img/success-icon.svg\"], [\"type\", \"button\", \"id\", \"success-msg\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\"], [1, \"alert\", \"alert-error\", \"alert-dismissible\", \"py-0\"], [1, \"warning-msg\", \"pt-2\", \"pb-1\", \"m-0\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_warning-36px.svg\"], [1, \"msg-details\"], [2, \"font-weight\", \"bold\"], [3, \"innerHtml\"], [\"type\", \"button\", \"id\", \"err-msg\", 1, \"btn-default\", \"px-3\", \"ok-btn\", \"float-right\", 3, \"click\"], [1, \"row\", \"no-gutters\"], [1, \"d-block\", \"my-3\", \"d-sm-none\", \"ccl-Secondary-title\", \"mb-2\", \"col-md-12\", \"border-bottom\"], [1, \"d-flex\", \"flex-row\", \"justify-content-start\", \"align-items-center\", \"my-3\"], [\"id\", \"New_Dial_Plan\", \"type\", \"button\", \"class\", \"btn-default primary px-3\", \"data-toggle\", \"modal\", \"data-target\", \".bd-example-modal-lg\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myLargeModalLabel\", \"aria-hidden\", \"true\", \"data-backdrop\", \"static\", \"data-keyboard\", \"false\", 1, \"modal\", \"fade\", \"bd-example-modal-lg\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\", \"dial-plan-info\"], [\"src\", \"assets/img/close-icon.svg\", \"data-dismiss\", \"modal\", \"alt\", \"\", 1, \"pointer\", 3, \"click\"], [1, \"modal-body\"], [\"hidden\", \"\", \"data-dismiss\", \"modal\", 1, \"fa\", \"fa-close\"], [\"closeBtn\", \"\"], [3, \"editModalInput\", \"Id\", \"onClose\", 4, \"ngIf\"], [\"id\", \"New_Dial_Plan\", \"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \".bd-example-modal-lg\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"], [\"openDialogBtn\", \"\"], [3, \"editModalInput\", \"Id\", \"onClose\"], [1, \"warning-msg\"], [\"src\", \"./assets/img/warning-icon.svg\"], [1, \"btn-con-sec\", \"float-right\"], [\"id\", \"deletePFBtn\", 1, \"btn-default\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"id\", \"cancel-btn\", 1, \"btn-default\", \"btn-dft\", \"py-1\", 3, \"click\"], [\"id\", \"dial-plan\", 1, \"tab-pane\"], [\"scrollTopId\", \"\"], [4, \"ngIf\"], [1, \"pb-2\"], [\"width\", \"100%\", \"id\", \"dail-plan-table\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", \"dail-plan-table\", 3, \"dtOptions\"], [2, \"width\", \"20%\"], [2, \"width\", \"10%\"], [2, \"width\", \"35%\"], [2, \"width\", \"5%\"], [\"class\", \"loader\", \"style\", \"height: 100%;\", 4, \"ngIf\"], [\"style\", \"cursor: pointer;\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [2, \"cursor\", \"pointer\", 3, \"id\", \"click\"], [1, \"text-break\", \"overflow-max-h\"], [\"style\", \"width: 5%\", 4, \"ngIf\"], [\"href\", \"javascript:void(0)\", 3, \"title\", \"click\", 4, \"ngIf\"], [\"href\", \"javascript:void(0)\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash-o\"], [\"colspan\", \"5\", 1, \"no-data-available\"], [1, \"loader\", 2, \"height\", \"100%\"], [1, \"d-flex\", \"justify-content-center\", \"align-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"modal-header\", 2, \"color\", \"#cc5814\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\", \"id\", \"delete-dail\"], [2, \"font-size\", \"18px\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"close\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", \"ngbAutofocus\", \"\", \"id\", \"delete\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function DialPlanComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DialPlanComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, DialPlanComponent_div_2_Template, 9, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, DialPlanComponent_div_3_Template, 11, 3, \"div\", 3);\n        i0.ɵɵtemplate(4, DialPlanComponent_div_4_Template, 3, 1, \"div\", 4);\n        i0.ɵɵtemplate(5, DialPlanComponent_div_5_Template, 14, 3, \"div\", 5);\n        i0.ɵɵtemplate(6, DialPlanComponent_div_6_Template, 10, 3, \"div\", 6);\n        i0.ɵɵtemplate(7, DialPlanComponent_div_7_Template, 3, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, DialPlanComponent_ng_template_8_Template, 15, 5, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelement(10, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loader && ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dialPlanName && ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction0(7, _c7).indexOf(ctx.router == null ? null : ctx.router.url) > -1 && ctx.hasScopeAccess);\n      }\n    },\n    directives: [i8.NgIf, i5.RouterOutlet, i9.DialPlanNewComponent, i10.DataTableDirective, i8.NgForOf],\n    pipes: [i8.TitleCasePipe],\n    styles: [\".overflow-ellipsis[_ngcontent-%COMP%]{max-width:120px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     table.dataTable td.dataTables_empty{display:none}.no-data-available[_ngcontent-%COMP%]{text-align:center}.alert.alert-success[_ngcontent-%COMP%]{display:none}.alert.alert-error[_ngcontent-%COMP%]{display:none}.dail-plan-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-size:15px;font-weight:400;color:#4c4c4c;padding:0 10px 0 0;border-top:0!important;border-bottom:1px solid transparent;line-height:38px;word-break:break-all}.modal.fade[_ngcontent-%COMP%]   .modal-dialog[_ngcontent-%COMP%]{border-radius:26px;max-width:35%!important}.modal.fade[_ngcontent-%COMP%]   .modal-dialog[_ngcontent-%COMP%]   .modal-content[_ngcontent-%COMP%]{padding:40px 32px!important}.alert[_ngcontent-%COMP%]   .ok-btn[_ngcontent-%COMP%]{padding:5px;min-width:auto}.alert-danger[_ngcontent-%COMP%]   .ok-btn[_ngcontent-%COMP%]{background:#721c24}.alert-success[_ngcontent-%COMP%]   .ok-btn[_ngcontent-%COMP%]{background:#155724}.dial-plan-info[_ngcontent-%COMP%]{font-size:42px;font-style:normal;font-weight:300;line-height:53px;letter-spacing:0em;text-align:left;margin-top:-20px!important}.overflow-max-h[_ngcontent-%COMP%]{max-height:290px;overflow:auto}\"]\n  });\n  return DialPlanComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}