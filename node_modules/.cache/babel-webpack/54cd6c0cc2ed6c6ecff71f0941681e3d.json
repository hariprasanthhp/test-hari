{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport let HighlightSearch = /*#__PURE__*/(() => {\n  class HighlightSearch {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n    }\n    transform(value, args) {\n      if (!args) {\n        return value;\n      } else args = String.raw`${args}`.replace(/\\\\/g, \"\\\\\\\\\");\n      if (!value) {\n        return;\n      }\n      // Match in a case insensitive maneer\n      const re = new RegExp(args.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'), 'gi');\n      const match = value.match(re);\n      // If there's no match, just return the original value.\n      if (!match) {\n        return value;\n      }\n      const result = value.replace(re, \"<mark style='background-color:#FFE000; padding: 0px;'>\" + match[0] + \"</mark>\");\n      return this.sanitizer.bypassSecurityTrustHtml(result);\n    }\n  }\n  HighlightSearch.ɵfac = function HighlightSearch_Factory(t) {\n    return new (t || HighlightSearch)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n  };\n  HighlightSearch.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"highlight\",\n    type: HighlightSearch,\n    pure: true\n  });\n  return HighlightSearch;\n})();","map":null,"metadata":{},"sourceType":"module"}