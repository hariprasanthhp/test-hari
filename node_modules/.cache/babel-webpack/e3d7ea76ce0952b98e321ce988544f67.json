{"ast":null,"code":"import { create } from '../model';\nimport { assign } from 'min-dash';\n\n/**\n * A factory for diagram-js shapes\n */\nexport default function ElementFactory() {\n  this._uid = 12;\n}\nElementFactory.prototype.createRoot = function (attrs) {\n  return this.create('root', attrs);\n};\nElementFactory.prototype.createLabel = function (attrs) {\n  return this.create('label', attrs);\n};\nElementFactory.prototype.createShape = function (attrs) {\n  return this.create('shape', attrs);\n};\nElementFactory.prototype.createConnection = function (attrs) {\n  return this.create('connection', attrs);\n};\n\n/**\n * Create a model element with the given type and\n * a number of pre-set attributes.\n *\n * @param  {string} type\n * @param  {Object} attrs\n * @return {djs.model.Base} the newly created model instance\n */\nElementFactory.prototype.create = function (type, attrs) {\n  attrs = assign({}, attrs || {});\n  if (!attrs.id) {\n    attrs.id = type + '_' + this._uid++;\n  }\n  return create(type, attrs);\n};","map":null,"metadata":{},"sourceType":"module"}