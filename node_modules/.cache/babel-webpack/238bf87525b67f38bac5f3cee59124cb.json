{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as Highcharts from 'highcharts/highstock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nimport * as i2 from \"../../../services/home-chart-options.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction SubscribersImpactedComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction SubscribersImpactedComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵelement(2, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function SubscribersImpactedComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SubscribersImpactedComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelement(2, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscribersImpactedComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelement(2, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nexport let SubscribersImpactedComponent = /*#__PURE__*/(() => {\n  class SubscribersImpactedComponent {\n    constructor(dataService, chartOptions, translateService, router) {\n      this.dataService = dataService;\n      this.chartOptions = chartOptions;\n      this.translateService = translateService;\n      this.router = router;\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.error = false;\n      this.errorInfo = '';\n      this.showDataTable = new EventEmitter();\n      this.barClicked = new EventEmitter();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.loadChart();\n      });\n    }\n    ngOnInit() {\n      this.loadChart();\n    }\n    ngOnChanges(changes) {\n      if (changes.data && changes.data.currentValue && this.data) {\n        this.loadChart();\n      }\n    }\n    loadChart() {\n      let that = this;\n      //this.chartDataOptions = this.chartOptions.getSubscriberOptions(this.data, 'Number of Subscribers', true);\n      this.chartDataOptions = this.chartOptions.getSubscriberBarOptions(this.data, 'Number of Subscribers', true);\n      if (this.chsttype === 'fullscreen') {\n        //change border color of selected bar\n        this.setSelectedBarBorder();\n        setTimeout(() => {\n          this.chartDataOptions.plotOptions.series['point']['events'] = {\n            click: event => {\n              var _a, _b;\n              event.preventDefault();\n              //change border color of selected bar\n              let clickedPointIndex = event.point.index;\n              event.point.series.data.forEach(function (point) {\n                if (point.index === clickedPointIndex) {\n                  point.update({\n                    borderColor: '#A9A9A9',\n                    borderWidth: 2\n                  });\n                } else {\n                  point.update({\n                    borderColor: ''\n                  });\n                }\n              });\n              that.clickedIndexInShrinkView = (_a = event === null || event === void 0 ? void 0 : event.point) === null || _a === void 0 ? void 0 : _a.index;\n              let xAxisValue = (_b = event === null || event === void 0 ? void 0 : event.point) === null || _b === void 0 ? void 0 : _b.category;\n              this.showDataTable.emit({\n                date: xAxisValue,\n                selectedBar: that.clickedIndexInShrinkView\n              });\n            }\n          };\n          this.Highcharts.chart('subscriber-impacted-graph-div1', this.chartDataOptions);\n          this.loading = false;\n        }, 100);\n      } else {\n        setTimeout(() => {\n          this.chartDataOptions.plotOptions.series['point']['events'] = {\n            click: event => {\n              var _a, _b;\n              event.preventDefault();\n              that.clickedIndexInShrinkView = (_a = event === null || event === void 0 ? void 0 : event.point) === null || _a === void 0 ? void 0 : _a.index;\n              let xAxisValue = (_b = event === null || event === void 0 ? void 0 : event.point) === null || _b === void 0 ? void 0 : _b.category;\n              this.barClicked.emit({\n                date: xAxisValue,\n                selectedBar: that.clickedIndexInShrinkView\n              });\n              // this.navigateByUrl(event, xAxisValue, 'subscriberDisruption');\n            }\n          };\n\n          this.Highcharts.chart('subscriber-impacted-graph-div', this.chartDataOptions);\n          this.loading = false;\n        }, 1000);\n      }\n    }\n    setSelectedBarBorder() {\n      var _a, _b;\n      let that = this;\n      if (that.chartDataOptions.series && that.chartDataOptions.series.length > 0 && that.chartDataOptions.series[0].data && that.chartDataOptions.series[0].data.length > 0) {\n        that.chartDataOptions.series[0].data[(_a = that.data) === null || _a === void 0 ? void 0 : _a.selectedBar] = {\n          y: that.chartDataOptions.series[0].data[(_b = that.data) === null || _b === void 0 ? void 0 : _b.selectedBar],\n          borderColor: '#A9A9A9',\n          borderWidth: 2\n        };\n      }\n    }\n    // navigateByUrl(data: any, xAxisValue: any, type : any){\n    //   let url = ``;\n    //   if(type == 'serviceDisruption'){\n    //     url = `cco/alerts/system/history-reports`;\n    //   }else if(type == 'subscriberDisruption'){\n    //     url = `cco/alerts/disruption/list`;\n    //   }\n    //   this.router.navigate([url]);\n    // }\n    closeAlert() {}\n  }\n  SubscribersImpactedComponent.ɵfac = function SubscribersImpactedComponent_Factory(t) {\n    return new (t || SubscribersImpactedComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HomeChartOptionsService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  SubscribersImpactedComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubscribersImpactedComponent,\n    selectors: [[\"app-subscribers-impacted\"]],\n    inputs: {\n      data: \"data\",\n      chsttype: \"chsttype\"\n    },\n    outputs: {\n      showDataTable: \"showDataTable\",\n      barClicked: \"barClicked\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [\"class\", \"row min-h-400\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"row\", \"min-h-400\"], [1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"subscriber-impacted-graph-div\", 1, \"h-400\"], [\"id\", \"subscriber-impacted-graph-div1\"]],\n    template: function SubscribersImpactedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SubscribersImpactedComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, SubscribersImpactedComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, SubscribersImpactedComponent_div_2_Template, 3, 0, \"div\", 2);\n        i0.ɵɵtemplate(3, SubscribersImpactedComponent_div_3_Template, 3, 0, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.chsttype !== \"fullscreen\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.chsttype === \"fullscreen\");\n      }\n    },\n    directives: [i5.NgIf, i5.NgClass],\n    styles: [\".min-h-400[_ngcontent-%COMP%]{min-height:400px}.h-400[_ngcontent-%COMP%]{height:400px}#subscriber-impacted-graph-div1[_ngcontent-%COMP%]{height:400px;overflow:hidden!important}\"]\n  });\n  return SubscribersImpactedComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}