{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as moment from 'moment';\nimport * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/shared/services/export-excel.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"src/app/sys-admin/services/common.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"primeng/calendar\";\nimport * as i11 from \"@angular/forms\";\nconst _c0 = [\"showInfoModal\"];\nfunction EndpointCountBymapperComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22);\n    i0.ɵɵelementStart(3, \"span\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction EndpointCountBymapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"span\", 25);\n    i0.ɵɵelement(2, \"img\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function EndpointCountBymapperComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction EndpointCountBymapperComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction EndpointCountBymapperComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language[\"Endpoint Count by Mapper\"], \" \");\n  }\n}\nfunction EndpointCountBymapperComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"h5\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function EndpointCountBymapperComponent_ng_template_26_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const modal_r8 = restoredCtx.$implicit;\n      return modal_r8.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelement(6, \"span\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 35);\n    i0.ɵɵelementStart(8, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function EndpointCountBymapperComponent_ng_template_26_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const modal_r8 = restoredCtx.$implicit;\n      return modal_r8.close(\"Save click\");\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language[ctx_r5.modalTitle]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.modalInfo, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.Ok, \" \");\n  }\n}\nconst _c1 = function () {\n  return {\n    height: \"39px\"\n  };\n};\nconst _c2 = function () {\n  return {\n    height: \"38px\"\n  };\n};\nconst HighchartsMore = require(\"highcharts/highcharts-more\");\nconst HighchartsExporting = require(\"highcharts/modules/exporting\");\nHighchartsMore(Highcharts);\nHighchartsExporting(Highcharts);\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let EndpointCountBymapperComponent = /*#__PURE__*/(() => {\n  class EndpointCountBymapperComponent {\n    constructor(translaterService, http, excel, dialogService, router, sso, titleService, commonOrgService) {\n      this.translaterService = translaterService;\n      this.http = http;\n      this.excel = excel;\n      this.dialogService = dialogService;\n      this.router = router;\n      this.sso = sso;\n      this.titleService = titleService;\n      this.commonOrgService = commonOrgService;\n      this.Highcharts = Highcharts;\n      this.today = new Date();\n      this.errorInfo = '';\n      this.showTable = false;\n      this.loading = false;\n      this.graphDates = [];\n      this.hasScopeAccess = false;\n      this.isCcoReports = true;\n    }\n    setTitle(url) {\n      if (window.location.pathname.indexOf('/cco/operations/') > -1) {\n        this.titleService.setTitle(`${this.language['Endpoint Count by Mapper']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.isCcoReports = false;\n        this.titleService.setTitle(`${this.language['Endpoint Count by Mapper']} - ${this.language['Reports']} - ${this.language['Traffic']} - ${this.language['flowconfiguration']} - ${this.language['administration']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      this.fromDate = new Date(this.today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      this.toDate = this.today;\n      this.selectedFromDate = this.setDateFormate(this.fromDate);\n      this.selectedToDate = this.setDateFormate(this.toDate);\n      this.language = this.translaterService.defualtLanguage;\n      this.languageSubject = this.translaterService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.setTitle(this.router.url);\n        if (this.selectedFromDate && this.selectedToDate && this.runClicked) {\n          this.onSubmit();\n        }\n      });\n      this.setTitle(this.router.url);\n      this.orgId = this.sso.getOrganizationID(this.router.url);\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE && window.location.pathname.indexOf('/cco/operations/') > -1) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.operations.report.epcountbymapper') !== -1) {\n              this.hasScopeAccess = true;\n              break;\n            }\n          }\n        }\n      } else {\n        this.hasScopeAccess = true;\n      }\n      if (!this.hasScopeAccess) {\n        this.sso.setPageAccess(false);\n        return;\n      }\n    }\n    setDateFormate(selectedDate) {\n      let date = new Date(selectedDate);\n      let day = `${date.getDate()}`;\n      let month = `${date.getMonth() + 1}`;\n      let year = date.getFullYear();\n      if (day.length < 2) {\n        day = `0${day}`;\n      }\n      if (month.length < 2) {\n        month = `0${month}`;\n      }\n      let formateDate = `${month}-${day}-${year}`;\n      return formateDate;\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n    }\n    selectFromDate() {\n      this.selectedFromDate = this.setDateFormate(this.fromDate);\n    }\n    selectToDate() {\n      this.selectedToDate = this.setDateFormate(this.toDate);\n    }\n    getMapperCount(fromDate, toDate, orgId) {\n      return this.http.get(`${environment.API_BASE_URL}/fa/correlator/flowendpoint/mappercount?endDate=${toDate}&org-id=${orgId}&startDate=${fromDate}`).pipe(catchError(this.handleError));\n    }\n    openModel() {\n      this.modalTitle = 'Invalid dates';\n      this.modalRef = this.dialogService.open(this.showInfoModal, {\n        size: 'sm',\n        centered: true,\n        windowClass: 'custom-modal show-info-modal'\n      });\n      this.loading = false;\n      return;\n    }\n    onSubmit() {\n      this.loading = true;\n      if (this.selectedToDate == undefined && this.selectedFromDate == undefined) {\n        this.openModel();\n      } else if (this.selectedFromDate == undefined) {\n        this.openModel();\n      } else if (this.selectedToDate == undefined) {\n        this.openModel();\n      }\n      if (this.selectedFromDate && this.selectedToDate) {\n        this.runClicked = true;\n        this.getMapperCount(this.selectedFromDate, this.selectedToDate, this.orgId).subscribe(data => {\n          this.mapperCountData = data;\n          this.loadChart(data);\n          this.loading = false;\n        }, err => {\n          this.loading = false;\n          this.pageErrorHandle(err);\n        });\n      }\n    }\n    pageErrorHandle(err) {\n      this.errorInfo = '';\n      this.error = true;\n      if (err.status == 400) {\n        this.loading = false;\n      } else {\n        if (err.status == 401) {\n          this.errorInfo = this.language['Access Denied'];\n        } else {\n          this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n        }\n        this.commonOrgService.pageScrollTop();\n      }\n      this.loading = false;\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n    // calculatedDates(startDate, endDate){\n    //   let dates = [],\n    //   currentDate = startDate,\n    //   addDays = function(days) {\n    //   let date = new Date(this.valueOf());\n    //       date.setDate(date.getDate() + days);\n    //       return date;\n    //     };\n    //   while (currentDate <= endDate) {\n    //   dates.push(currentDate);\n    //   currentDate = addDays.call(currentDate, 1);\n    //   }\t\n    //     return dates;\n    // }\n    getDates(startDate, stopDate1) {\n      let dateArray = [];\n      let currentDate = moment(startDate);\n      let stopDate = moment(stopDate1);\n      while (currentDate <= stopDate) {\n        dateArray.push(moment(currentDate).format('MM/DD/YYYY'));\n        currentDate = moment(currentDate).add(1, 'days');\n      }\n      return dateArray;\n    }\n    loadChartData(res) {\n      this.error = false;\n      this.loading = true;\n      let that = this;\n      let rangeOfDates = [];\n      let seriesData = [];\n      let xAxisNames = [];\n      let title = '',\n        subTitle = '';\n      let resultDates = this.getDates(new Date(this.fromDate.getFullYear(), this.fromDate.getMonth(), this.fromDate.getDate()), new Date(this.toDate.getFullYear(), this.toDate.getMonth(), this.toDate.getDate()));\n      resultDates.forEach(date => {\n        rangeOfDates.push(date);\n      });\n      res.forEach(element => {\n        xAxisNames.push(element.mappedBy);\n        let obj = {\n          name: element.mappedBy,\n          data: [element.count]\n        };\n        seriesData.push(obj);\n      });\n      title = this.language['Endpoint Count by Mapper'];\n      subTitle = `${this.language.timeWindow} ${rangeOfDates[0]} to ${rangeOfDates[rangeOfDates.length - 1]} [${this.language['Coordinated Universal Time']}]`;\n      let options = {\n        chart: {\n          type: 'column'\n        },\n        title: {\n          text: title\n        },\n        subtitle: {\n          text: subTitle\n        },\n        xAxis: {\n          visible: false\n        },\n        yAxis: {\n          min: 0,\n          labels: {\n            format: '{value}'\n          },\n          title: {\n            text: this.language['Endpoint Count']\n          }\n        },\n        lang: {\n          noData: this.language[\"No Data Available\"]\n        },\n        tooltip: {\n          headerFormat: '<span style=\"font-size:12px\"><table>',\n          pointFormat: '<tr><td style=\"color:{series.color};padding:0; font-size:12px; font-weight: 400\"><b>{series.name} : </b> </td>' + '<td style=\"padding:0; font-size:12px; font-weight: 400\" ><b> &nbsp {point.y:1f}</b></td></tr>',\n          footerFormat: '</table>',\n          useHTML: true\n        },\n        plotOptions: {\n          series: {\n            minPointLength: 3,\n            groupPadding: 0,\n            pointPadding: 0.1,\n            borderWidth: 0\n          }\n        },\n        series: seriesData,\n        exporting: {\n          buttons: {\n            contextButton: {\n              menuItems: [{\n                textKey: 'downloadPDF',\n                text: this.language.exportPDF || 'Export PDF',\n                onclick: function () {\n                  this.exportChart({\n                    type: 'application/pdf',\n                    filename: 'Endpoint_Count_By_Mapper'\n                  });\n                }\n              }, {\n                textKey: 'downloadCSV',\n                text: this.language.exportCsv || 'Export CSV',\n                onclick: function () {\n                  let extraData = `Endpoint Count By Mapper\\r\\n${that.language.timeWindow} ${rangeOfDates[0]} to ${rangeOfDates[rangeOfDates.length - 1]} [Coordinated Universal Time]\\r\\n\\r\\n`;\n                  let exportData = res ? that.exportDataConvertor(res) : [];\n                  that.excel.downLoadCSV('Endpoint_Count_By_Mapper', exportData, extraData);\n                }\n              }],\n              text: that.language.export\n            }\n          }\n        },\n        credits: {\n          enabled: false\n        }\n      };\n      return options;\n    }\n    loadChart(res) {\n      Highcharts.chart('endPointCountMapperChart', this.loadChartData(res));\n    }\n    exportDataConvertor(array) {\n      let exportData = [];\n      array.forEach(el => {\n        exportData.push({\n          'Mapped By': el.mappedBy ? el.mappedBy : '',\n          'Count': el.count ? el.count : 0\n        });\n      });\n      return exportData;\n    }\n    closeAlert() {\n      this.error = false;\n      this.errorInfo = \"\";\n    }\n  }\n  EndpointCountBymapperComponent.ɵfac = function EndpointCountBymapperComponent_Factory(t) {\n    return new (t || EndpointCountBymapperComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ExportExcelService), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.Title), i0.ɵɵdirectiveInject(i8.CommonService));\n  };\n  EndpointCountBymapperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EndpointCountBymapperComponent,\n    selectors: [[\"app-endpoint-count-bymapper\"]],\n    viewQuery: function EndpointCountBymapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showInfoModal = _t.first);\n      }\n    },\n    decls: 28,\n    vars: 28,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [1, \"container\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"row\"], [\"class\", \"col-md-12 px-0 cco-secondary-title mb-3\", 4, \"ngIf\"], [1, \"col-md-12\", \"px-0\"], [1, \"report-container\"], [1, \"report-item\", \"col-md-3\", \"pr-0\"], [1, \"ccl-form\"], [1, \"d-flex\"], [\"id\", \"start_date\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"autoZIndex\", \"showIcon\", \"ngModel\", \"maxDate\", \"placeholder\", \"ngModelChange\", \"onSelect\"], [1, \"report-item\", \"col-md-3\", \"pl-0\"], [\"id\", \"start_date\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"autoZIndex\", \"showIcon\", \"ngModel\", \"maxDate\", \"minDate\", \"placeholder\", \"ngModelChange\", \"onSelect\"], [1, \"report-item\", \"d-flex\", \"align-items-center\"], [1, \"\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"px-2\", 3, \"click\"], [\"id\", \"endPointCountMapperChart\"], [\"class\", \"col-md-12\"], [\"showInfoModal\", \"\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"col-md-12\", \"px-0\", \"cco-secondary-title\", \"mb-3\"], [1, \"modal-header\", \"d-block\"], [\"id\", \"showInfoModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"add-device-model\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"primary\", \"px-3\", \"px-3\", \"float-right\", 3, \"click\"]],\n    template: function EndpointCountBymapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EndpointCountBymapperComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, EndpointCountBymapperComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, EndpointCountBymapperComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(4, \"section\");\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, EndpointCountBymapperComponent_div_7_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"label\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p-calendar\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function EndpointCountBymapperComponent_Template_p_calendar_ngModelChange_15_listener($event) {\n          return ctx.fromDate = $event;\n        })(\"onSelect\", function EndpointCountBymapperComponent_Template_p_calendar_onSelect_15_listener() {\n          return ctx.selectFromDate();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵelementStart(18, \"label\", 10);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p-calendar\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function EndpointCountBymapperComponent_Template_p_calendar_ngModelChange_20_listener($event) {\n          return ctx.toDate = $event;\n        })(\"onSelect\", function EndpointCountBymapperComponent_Template_p_calendar_onSelect_20_listener() {\n          return ctx.selectToDate();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 14);\n        i0.ɵɵelementStart(22, \"div\", 15);\n        i0.ɵɵelementStart(23, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function EndpointCountBymapperComponent_Template_button_click_23_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"div\", 17);\n        i0.ɵɵtemplate(26, EndpointCountBymapperComponent_ng_template_26_Template, 10, 3, \"ng-template\", 18, 19, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCcoReports);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.language[\"From Date\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"Select From Date\"]);\n        i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(25, _c2))(\"autoZIndex\", true)(\"showIcon\", true)(\"ngModel\", ctx.fromDate)(\"maxDate\", ctx.today);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language[\"To Date\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"Select To Date\"]);\n        i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(27, _c2))(\"autoZIndex\", true)(\"showIcon\", true)(\"ngModel\", ctx.toDate)(\"maxDate\", ctx.today)(\"minDate\", ctx.fromDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Run, \" \");\n      }\n    },\n    directives: [i9.NgIf, i10.Calendar, i11.NgControlStatus, i11.NgModel],\n    styles: [\".report-container[_ngcontent-%COMP%]{display:flex}.report-item[_ngcontent-%COMP%]{flex-grow:1;height:100px;width:100%}.ccl-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;min-height:34px!important;max-height:40px!important}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{height:38px!important}  .show-info-modal .modal-dialog{max-width:500px!important}\"]\n  });\n  return EndpointCountBymapperComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}