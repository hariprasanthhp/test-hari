{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let BarkService = /*#__PURE__*/(() => {\n  class BarkService {\n    constructor(http, sso) {\n      this.http = http;\n      this.sso = sso;\n    }\n    getBarkAccount(orgId, subId) {\n      const ID = this.sso.getOrg(orgId);\n      return this.http.get(`${environment.FOUNDATION_BASE_URL}/subscriber-systems/edge-suites?${ID}subscriberId=${subId}&includeEnabledStatus=true`).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    getBarkHealth() {\n      return this.http.get(`${environment.SUPPORT_URL}/partner/feature/bark/health`).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    getUserEmail(subId) {\n      return this.http.get(`${environment.API_BASE_URL}/admin/user/${subId}`).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    sendEmail([to, subject, content, replyTo]) {\n      const inp = {\n        to: to,\n        subject: subject,\n        content: content,\n        replyTo: replyTo\n      };\n      return this.http.post(`${environment.SUPPORT_URL}/filemanage/email`, inp).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n    // getBarkAccountSetup() {\n    //   return {\n    //     \"userId\": \"52577c07-26e8-4988-8570-87392cb4d90f\",\n    //     \"email\": \"test@calix.com\",\n    //     \"firstName\": \"Augustine\",\n    //     \"lastName\": \"Oh\",\n    //     \"orgId\": \"testorgid\",\n    //     \"planCode\": \"bark_premium\",\n    //     \"planDesc\": \"Bark Premium\",\n    //     \"status\": \"Not completed\",\n    //     \"created\": 1615290666631,\n    //     \"updated\": 1615290667631\n    //   }\n    // }\n    getBarkAccountSetup(userId) {\n      {\n        return this.http.get(`${environment.SUPPORT_URL}/partner/feature/bark/subscription?userId=${userId}`).pipe(catchError(this.handleError) //  handle the error\n        );\n      }\n    }\n\n    handleError(error) {\n      // Return an observable with a user-facing error message.\n      return throwError(error);\n    }\n  }\n  BarkService.ɵfac = function BarkService_Factory(t) {\n    return new (t || BarkService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  BarkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BarkService,\n    factory: BarkService.ɵfac,\n    providedIn: 'root'\n  });\n  return BarkService;\n})();","map":null,"metadata":{},"sourceType":"module"}