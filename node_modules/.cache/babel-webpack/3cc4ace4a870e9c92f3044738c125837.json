{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { of, Subject } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/shared/services/custom-translate.service\";\nimport * as i3 from \"src/app/cco/shared/services/websocket.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"src/app/shared/services/sso-auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction InputBoxComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.language[\"Not found\"]);\n  }\n}\nfunction InputBoxComponent_div_0_div_6_ul_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵlistener(\"click\", function InputBoxComponent_div_0_div_6_ul_1_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(4);\n      return ctx_r7.gotoEndpoint(item_r5);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r5.endPointName ? item_r5.endPointName : item_r5.name ? item_r5.name : item_r5.ipAddress);\n  }\n}\nfunction InputBoxComponent_div_0_div_6_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, InputBoxComponent_div_0_div_6_ul_1_li_1_Template, 2, 1, \"li\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.searchData);\n  }\n}\nfunction InputBoxComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, InputBoxComponent_div_0_div_6_ul_1_Template, 2, 1, \"ul\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.searchData.length > 0);\n  }\n}\nfunction InputBoxComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, InputBoxComponent_div_0_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function InputBoxComponent_div_0_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.searchText = $event;\n    })(\"keyup\", function InputBoxComponent_div_0_Template_input_keyup_3_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.searchByCharacters($event);\n    })(\"keyup.enter\", function InputBoxComponent_div_0_Template_input_keyup_enter_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.performSearch();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function InputBoxComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.performIconSearch();\n    });\n    i0.ɵɵelement(5, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, InputBoxComponent_div_0_div_6_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.epSearchError);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r0.language[\"IP Address, End Points\"]);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.searchText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.searchText && ctx_r0.searchText.length >= 2 && ctx_r0.searchData.length > 0);\n  }\n}\nexport let InputBoxComponent = /*#__PURE__*/(() => {\n  class InputBoxComponent {\n    constructor(router, customTranslateService, webSocketService, http, sso) {\n      this.router = router;\n      this.customTranslateService = customTranslateService;\n      this.webSocketService = webSocketService;\n      this.http = http;\n      this.sso = sso;\n      this.pageAvailable = false;\n      this.endpointID = '';\n      this.subscriberName = '';\n      this.locationName = '';\n      this.regionName = '';\n      this.endPointName = '';\n      this.modelName = \"\";\n      this.IPAddress = '';\n      this.mappedBy = '';\n      this.lastUpdatedTime = \"\";\n      this.url = \"\";\n      this.endPointList = [];\n      this.showEndpointSearch = true;\n      this.loading = false;\n      this.showHyperLink = false;\n      this.showSubscriber = false;\n      this.hasPageAccess = false;\n      this.searchData = [];\n      this.epSearchError = false;\n      this.searchText = '';\n      this.searchText$ = new Subject();\n      if (!window.location.pathname.includes('/realtime')) {\n        this.showEndpointSearch = false;\n      }\n      this.showTextSubs = this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (!event.url.includes('/realtime')) {\n            this.showEndpointSearch = false;\n          } else {\n            this.showEndpointSearch = true;\n          }\n        }\n      });\n    }\n    ngOnInit() {\n      this.ORG_ID = this.sso.getOrganizationID(this.router.url);\n      this.language = this.customTranslateService.defualtLanguage;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.customTranslateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.doSearch();\n    }\n    doSearch() {\n      this.subscribers$ = this.searchText$.pipe(debounceTime(500), switchMap(textEntered => {\n        return this.mappedSearchEndPoint(textEntered);\n      }), switchMap(textEntered => {\n        if (textEntered == 404 || textEntered.length === 0) {\n          return this.unmappedSearchEndPoint(this.searchText);\n        } else {\n          return textEntered;\n        }\n      })).subscribe(res => {\n        if (res !== 404) {\n          if (Array.isArray(res)) {\n            this.searchData = res;\n            this.getEndpointName(this.searchData);\n            this.epSearchError = false;\n            this.webSocketService.isUnmapped = true;\n          } else {\n            this.searchData.push(res);\n            this.getEndpointName(this.searchData);\n            this.epSearchError = false;\n            this.webSocketService.isUnmapped = false;\n          }\n          this.loading = false;\n        } else {\n          this.epSearchError = true;\n          this.loading = false;\n        }\n      }, err => {\n        this.epSearchError = true;\n        this.loading = false;\n      });\n    }\n    searchByCharacters(event) {\n      const textEntered = $(event.target).val().toString();\n      if (textEntered.length < 2) {\n        this.epSearchError = false;\n        return;\n      }\n      if (event.keyCode !== 13) {\n        this.loading = true;\n        this.epSearchError = false;\n      }\n      this.searchData = [];\n      this.searchText$.next(textEntered);\n    }\n    mappedSearchEndPoint(searchtext) {\n      this.url = `${environment.faAdminCorrelatorURL}flowendpoint?org-id=${this.ORG_ID}&searchstring=${searchtext}`;\n      return this.http.get(this.url).pipe(catchError(error => of(error.status)));\n    }\n    unmappedSearchEndPoint(searchtext) {\n      this.searchData = [];\n      let url = `${environment.FA_API_BASE_URL}correlator/flowendpoint/unmapped?org-id=${this.ORG_ID}&ip=${searchtext}`;\n      return this.http.get(url).pipe(catchError(error => of(error.status)));\n    }\n    performIconSearch() {\n      if (this.searchData.length === 0) {\n        this.performSearch();\n      } else {\n        this.loading = true;\n        let hasEndpoint = false;\n        this.searchData.forEach(element => {\n          if (this.searchText === element.ipAddress || this.searchText === element.name) {\n            this.loading = false;\n            hasEndpoint = true;\n            this.gotoEndpoint(element);\n          }\n        });\n        if (!hasEndpoint) {\n          this.loading = false;\n          this.gotoEndpoint(this.searchData[0]);\n        }\n      }\n    }\n    performSearch() {\n      const textEntered = this.searchText;\n      if (textEntered.length < 2) {\n        return;\n      }\n      this.loading = true;\n      this.searchText$.next(textEntered);\n    }\n    gotoEndpoint(data) {\n      var _a, _b, _c, _d;\n      let url = window.location.pathname.indexOf('/organization-admin/') > -1 ? '/organization-admin/flowAnalyze/traffic/endpoint/realtime' : '/systemAdministration/flowAnalyze/traffic/endpoint/realtime';\n      if (!this.webSocketService.isUnmapped) {\n        if (data.id && data.id !== null) {\n          this.webSocketService.setEndpointValue(data.id);\n          if (!this.epSearchError && this.searchText && !this.loading) {\n            window.sessionStorage.setItem('endpointName', (_b = (_a = data.endPointName) !== null && _a !== void 0 ? _a : data.name) !== null && _b !== void 0 ? _b : data.ipAddress);\n            this.router.navigate([url], {\n              queryParams: {\n                id: data.id\n              }\n            });\n          }\n        }\n      } else {\n        this.webSocketService.setEndpointValue(data.ipAddress);\n        if (!this.epSearchError && this.searchText && !this.loading) {\n          window.sessionStorage.setItem('endpointName', (_d = (_c = data.endPointName) !== null && _c !== void 0 ? _c : data.name) !== null && _d !== void 0 ? _d : data.ipAddress);\n          this.router.navigate([url], {\n            queryParams: {\n              id: data.ipAddress\n            }\n          });\n        }\n      }\n    }\n    ngOnDestroy() {\n      if (this.showTextSubs) {\n        this.showTextSubs.unsubscribe();\n      }\n    }\n    getEndpointName(searchData) {\n      if (searchData && searchData.length > 0) {\n        searchData.map(element => {\n          if (!element.name) {\n            element.name = element.ipAddress;\n          }\n          if (element.name !== element.ipAddress && !element.name.includes(element.ipAddress)) {\n            element['endPointName'] = element.name + '_' + element.ipAddress;\n          }\n          if (element.name !== element.ipAddress && element.name.includes(element.ipAddress)) {\n            element['endPointName'] = element.name;\n          }\n          if (element.name === element.ipAddress) {\n            element['endPointName'] = element.name;\n          }\n        });\n      }\n    }\n  }\n  InputBoxComponent.ɵfac = function InputBoxComponent_Factory(t) {\n    return new (t || InputBoxComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CustomTranslateService), i0.ɵɵdirectiveInject(i3.WebsocketService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.SsoAuthService));\n  };\n  InputBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputBoxComponent,\n    selectors: [[\"app-input-box\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"traffic-search-area d-flex align-items-end\", 4, \"ngIf\"], [1, \"traffic-search-area\", \"d-flex\", \"align-items-end\"], [\"class\", \"invalid-msg\", \"id\", \"ep-search-error\", 4, \"ngIf\"], [1, \"d-inline-flex\", \"align-items-center\", \"justify-content-between\", \"search-box-input\"], [\"name\", \"search\", \"id\", \"search\", \"ng-reflect-name\", \"search\", \"autocomplete\", \"off\", 1, \"ng-pristine\", \"ng-valid\", \"ng-touched\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"keyup\", \"keyup.enter\"], [1, \"search-box-icon\", 3, \"disabled\", \"click\"], [\"id\", \"searchSubscriberIcon\", \"src\", \"assets/img/ic_search_white.svg\", 1, \"search-icon\", \"primary\"], [\"class\", \"search-result-dropdown overflow-auto\", 4, \"ngIf\"], [\"id\", \"ep-search-error\", 1, \"invalid-msg\"], [1, \"search-result-dropdown\", \"overflow-auto\"], [4, \"ngIf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function InputBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, InputBoxComponent_div_0_Template, 7, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showEndpointSearch);\n      }\n    },\n    directives: [i6.NgIf, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i6.NgForOf],\n    styles: [\".undo-icon[_ngcontent-%COMP%]{background-color:#f8f8fa;padding:5px;color:#9e9e9e;border-radius:15px;margin:3px;font-size:13px;cursor:pointer}.current-issue-menu-container[_ngcontent-%COMP%]{display:flex;margin:20px 0;justify-self:start}.current-issue-menu-item[_ngcontent-%COMP%]{flex-grow:0}.current-issue-menu-item[_ngcontent-%COMP%] + .current-issue-menu-item[_ngcontent-%COMP%]{margin-left:1%}.btn-secondary[_ngcontent-%COMP%]{color:#5f6165!important;background-color:#f7f8fa!important;border-color:#888!important}.test-container[_ngcontent-%COMP%]{display:flex;width:100%}.item[_ngcontent-%COMP%]{flex-grow:1;border-left:3px solid #cdcdcd;padding-left:20px;width:calc(100% / 3)}.item[_ngcontent-%COMP%] + .item[_ngcontent-%COMP%]{margin-left:2%}.sub-menu-list-icon[_ngcontent-%COMP%]{background-color:#dee5ef;padding:2px 10px;border-radius:15px;font-size:10px;margin:10px}.network-trends-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.network-trends-item[_ngcontent-%COMP%]{flex-grow:1;width:calc(100% / 2)}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%}.network-trends-item[_ngcontent-%COMP%] + .network-trends-item[_ngcontent-%COMP%]{margin-left:5%}.sub-name[_ngcontent-%COMP%]{font-weight:300;font-size:42px;line-height:53px;color:1A1F22}.sub-account-details-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{line-height:18px}.sub-account-details-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-size:14px;line-height:18px;font-weight:400;padding:5px 0;width:20%}.sub-account-details[_ngcontent-%COMP%]{display:flex;width:100%}.sub-account-details-info[_ngcontent-%COMP%]{flex-grow:1;width:100%;padding-left:20px;cursor:pointer}.sub-account-details-info[_ngcontent-%COMP%] + .sub-account-details-info[_ngcontent-%COMP%]{margin-left:2%}.sub-info-details[_ngcontent-%COMP%]{color:#0054b2;font-weight:300;line-height:20px;font-size:18px;word-break:break-word}.errbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:24px;height:24px}.sub-account-details-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:14px;line-height:22px}.btn-default.btn-dft[_ngcontent-%COMP%]{border:1px solid #CCCCCC}.active[_ngcontent-%COMP%]   .text-primary[_ngcontent-%COMP%]{color:#fff!important}.sub-accounts-info[_ngcontent-%COMP%]{width:400px;display:block}.info-section-top[_ngcontent-%COMP%]{border:.5px solid black;background-color:#ddebe445}.traffic-search-area[_ngcontent-%COMP%]{justify-content:flex-end;text-align:right;position:absolute;top:-6px;right:0}.search-box-input[_ngcontent-%COMP%]{border-radius:26px;padding:0 0 0 15px;font-size:14px;font-weight:400;min-width:265px;color:#646363;border:1px solid #dfdfdf}.search-box-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%}.search-box-icon[_ngcontent-%COMP%]{width:42px;height:40px;background-color:#0279ff;padding:10px;border-radius:25px;cursor:pointer;border:none}.invalid-msg[_ngcontent-%COMP%]{color:#c70000;font-size:12px;width:100%;position:absolute;top:-20px;text-align:left;left:21px}@media screen and (max-width: 767px){.traffic-search-area[_ngcontent-%COMP%]{justify-content:flex-end;text-align:right;position:relative;top:0;margin-top:15px;right:0}}  .record-pop span.error-img{position:absolute;left:5px;top:10px}  .record-pop .alert{padding:15px 30px 15px 50px!important}  .record-pop .alert .close{right:8px!important;top:18px!important}.search-result-dropdown[_ngcontent-%COMP%]{position:absolute;top:45px;z-index:6;background:#fff;width:auto;left:auto;right:0;max-width:500px;min-width:260px;box-shadow:0 5px 15px #00000021;border:1px solid rgba(0,0,0,.15);border-radius:16px;padding:0 15px;text-align:left;max-height:200px}.search-result-dropdown[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-top:10px;cursor:pointer}\"]\n  });\n  return InputBoxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}