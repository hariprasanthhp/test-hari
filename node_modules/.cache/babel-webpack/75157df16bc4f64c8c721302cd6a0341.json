{"ast":null,"code":"import { add as collectionAdd, indexOf as collectionIdx } from '../../../util/Collections';\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nDeleteConnectionHandler.$inject = ['canvas', 'modeling'];\nDeleteConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n    parent = connection.parent;\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n  context.source = connection.source;\n  context.target = connection.target;\n  this._canvas.removeConnection(connection);\n  connection.source = null;\n  connection.target = null;\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection,\n    parent = context.parent,\n    parentIndex = context.parentIndex;\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n  this._canvas.addConnection(connection, parent);\n  return connection;\n};","map":null,"metadata":{},"sourceType":"module"}