{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let BeaconTypeConverterPipe = /*#__PURE__*/(() => {\n  class BeaconTypeConverterPipe {\n    constructor() {}\n    transform(value, securityOptions, languageData) {\n      if (value === undefined) {\n        return value;\n      }\n      // Replace with the specified character\n      let previousValue = value;\n      securityOptions.forEach(res => {\n        if (res.id == value) {\n          value = res.name;\n        }\n      });\n      if (previousValue == value && value != 'WPA2-Personal') {\n        if (value != 'WPA-Personal' && value != \"WPA - WPA2-Personal\" && value != \"WPA-WPA2-Personal\" && value != \"WPA2-WPA3-Personal\" && value != \"WPA2 - WPA3-Personal\" && value != \"WPA3-Personal\" && value != \"none\" && value != \"SecurityOff\") {\n          value = 'Not Supported';\n        }\n      }\n      var re = /PSK/gi;\n      value = value.replace(re, 'Personal');\n      var val = value.replace(/\\//g, \"-\");\n      val = languageData[val];\n      //return value.replace(/\\//g, \"-\");\n      return val;\n    }\n  }\n  BeaconTypeConverterPipe.ɵfac = function BeaconTypeConverterPipe_Factory(t) {\n    return new (t || BeaconTypeConverterPipe)();\n  };\n  BeaconTypeConverterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"beaconTypeConverter\",\n    type: BeaconTypeConverterPipe,\n    pure: true\n  });\n  return BeaconTypeConverterPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}