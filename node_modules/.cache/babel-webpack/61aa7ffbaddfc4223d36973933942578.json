{"ast":null,"code":"import { getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\nimport entryFactory from 'bpmn-js-properties-panel/lib/factory/EntryFactory';\nimport elementHelper from 'bpmn-js-properties-panel/lib/helper/ElementHelper';\nimport cmdHelper from 'bpmn-js-properties-panel/lib/helper/CmdHelper';\nimport extensionElementsHelper from 'bpmn-js-properties-panel/lib/helper/ExtensionElementsHelper';\nexport default function (element, bpmnFactory, translate) {\n  function getProperty(element, propertyName) {\n    const loopCharacteristics = getLoopCharacteristics(element),\n      zeebeLoopCharacteristics = getZeebeLoopCharacteristics(loopCharacteristics);\n    return zeebeLoopCharacteristics && zeebeLoopCharacteristics.get(propertyName);\n  }\n  function setProperties(element, values) {\n    const loopCharacteristics = getLoopCharacteristics(element),\n      commands = [];\n\n    // ensure extensionElements\n    let extensionElements = loopCharacteristics.get('extensionElements');\n    if (!extensionElements) {\n      extensionElements = elementHelper.createElement('bpmn:ExtensionElements', {\n        values: []\n      }, loopCharacteristics, bpmnFactory);\n      commands.push(cmdHelper.updateBusinessObject(element, loopCharacteristics, {\n        extensionElements: extensionElements\n      }));\n    }\n\n    // ensure zeebe:LoopCharacteristics\n    let zeebeLoopCharacteristics = getZeebeLoopCharacteristics(loopCharacteristics);\n    if (!zeebeLoopCharacteristics) {\n      zeebeLoopCharacteristics = elementHelper.createElement('zeebe:LoopCharacteristics', {}, extensionElements, bpmnFactory);\n      commands.push(cmdHelper.addAndRemoveElementsFromList(element, extensionElements, 'values', 'extensionElements', [zeebeLoopCharacteristics], []));\n    }\n    commands.push(cmdHelper.updateBusinessObject(element, zeebeLoopCharacteristics, values));\n    return commands;\n  }\n  let entries = [];\n\n  // input collection //////////////////////////////////////////////////////////////\n  entries.push(entryFactory.textField(translate, {\n    id: 'multiInstance-inputCollection',\n    label: translate('Input Collection'),\n    modelProperty: 'inputCollection',\n    get: function (element) {\n      return {\n        inputCollection: getProperty(element, 'inputCollection')\n      };\n    },\n    set: function (element, values) {\n      return setProperties(element, {\n        inputCollection: values.inputCollection || undefined\n      });\n    },\n    validate: function (element, values) {\n      const loopCharacteristics = getLoopCharacteristics(element),\n        zeebeLoopCharacteristics = getZeebeLoopCharacteristics(loopCharacteristics);\n      let validation = {};\n      if (zeebeLoopCharacteristics) {\n        const {\n          inputCollection\n        } = values;\n        if (!inputCollection) {\n          validation = {\n            inputCollection: 'input collection must not be empty'\n          };\n        }\n      }\n      return validation;\n    }\n  }));\n\n  // input element //////////////////////////////////////////////////////////////////\n  entries.push(entryFactory.textField(translate, {\n    id: 'multiInstance-inputElement',\n    label: translate('Input Element'),\n    modelProperty: 'inputElement',\n    get: function (element) {\n      return {\n        inputElement: getProperty(element, 'inputElement')\n      };\n    },\n    set: function (element, values) {\n      return setProperties(element, {\n        inputElement: values.inputElement || undefined\n      });\n    }\n  }));\n\n  // output collection ////////////////////////////////////////////////////////////\n  entries.push(entryFactory.textField(translate, {\n    id: 'multiInstance-outputCollection',\n    label: translate('Output Collection'),\n    modelProperty: 'outputCollection',\n    get: function (element) {\n      return {\n        outputCollection: getProperty(element, 'outputCollection')\n      };\n    },\n    set: function (element, values) {\n      return setProperties(element, {\n        outputCollection: values.outputCollection || undefined\n      });\n    }\n  }));\n\n  // output element //////////////////////////////////////////////////////\n  entries.push(entryFactory.textField(translate, {\n    id: 'multiInstance-outputElement',\n    label: translate('Output Element'),\n    modelProperty: 'outputElement',\n    get: function (element) {\n      return {\n        outputElement: getProperty(element, 'outputElement')\n      };\n    },\n    set: function (element, values) {\n      return setProperties(element, {\n        outputElement: values.outputElement || undefined\n      });\n    }\n  }));\n  return entries;\n}\n\n// helper /////////\n\nfunction getExtensionElements(bo, type, prop) {\n  const elements = extensionElementsHelper.getExtensionElements(bo, type) || [];\n  return !prop ? elements : (elements[0] || {})[prop] || [];\n}\nfunction getZeebeLoopCharacteristics(loopCharacteristics) {\n  const extensionElements = getExtensionElements(loopCharacteristics, 'zeebe:LoopCharacteristics');\n  return extensionElements && extensionElements[0];\n}\nfunction getLoopCharacteristics(element) {\n  const bo = getBusinessObject(element);\n  return bo.loopCharacteristics;\n}","map":null,"metadata":{},"sourceType":"module"}