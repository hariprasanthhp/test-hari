{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { requestType } from '../../../model/files-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/custom-translate.service\";\nimport * as i3 from \"src/app/sys-admin/services/common.service\";\nimport * as i4 from \"src/app/support/netops-management/netops-management.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"../../../services/files.service\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/common/http\";\nimport * as i10 from \"src/app/shared-utils/date-utils.service\";\nimport * as i11 from \"src/app/cco/issues/service/issue.service\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"../../../../../shared/custom-directives/custom-negetive-val.directive\";\nimport * as i15 from \"../../../custom-directives/custom-negetive.directive\";\nimport * as i16 from \"primeng/calendar\";\nfunction WrkflowAlarmWizardOprParametersComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"span\", 32);\n    i0.ɵɵelement(2, \"img\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 34);\n    i0.ɵɵelementStart(4, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.closeAlert();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r0.errorInfo, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language.Ok, \" \");\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_em_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" please enter value starting from 1 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_em_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" please enter value starting from 1 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵelementStart(2, \"label\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37);\n    i0.ɵɵelement(5, \"ng-select\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.language.SelectAlarm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r3.language.SelectAlarm);\n    i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx_r3.inputAlarms)(\"clearable\", false)(\"searchable\", true);\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_img_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 49);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_50_img_8_Template_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.addParams();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_img_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 50);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_50_img_9_Template_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ind_r8 = i0.ɵɵnextContext().index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.removeAddParams(ind_r8);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_11_em_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" please select a value \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelementStart(1, \"label\", 52);\n    i0.ɵɵtext(2, \"Service Impacting \");\n    i0.ɵɵelementStart(3, \"img\", 50);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_50_div_11_Template_img_click_3_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ind_r8 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.removeSingleParams(ind_r8, \"Service Impacting\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"label\", 53);\n    i0.ɵɵelement(6, \"input\", 54);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 53);\n    i0.ɵɵelement(9, \"input\", 55);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, WrkflowAlarmWizardOprParametersComponent_div_50_div_11_em_11_Template, 2, 0, \"em\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ind_r8 = i0.ɵɵnextContext().index;\n    const ctx_r11 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ServiceImpacting\", ind_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.language.Yes, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ServiceImpacting\", ind_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.language.No, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r11.filtersForm.get(\"ServiceImpacting\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.required);\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_12_em_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" please select a value \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelementStart(1, \"label\", 52);\n    i0.ɵɵtext(2, \"Service Affecting \");\n    i0.ɵɵelementStart(3, \"img\", 50);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_50_div_12_Template_img_click_3_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ind_r8 = i0.ɵɵnextContext().index;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.removeSingleParams(ind_r8, \"Service Affecting\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"label\", 53);\n    i0.ɵɵelement(6, \"input\", 56);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 53);\n    i0.ɵɵelement(9, \"input\", 57);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, WrkflowAlarmWizardOprParametersComponent_div_50_div_12_em_11_Template, 2, 0, \"em\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ind_r8 = i0.ɵɵnextContext().index;\n    const ctx_r12 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ServiceAffecting\", ind_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language.Yes, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"ServiceAffecting\", ind_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language.No, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r12.filtersForm.get(\"ServiceAffecting\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.required);\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_13_em_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" please select a value \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelementStart(1, \"label\", 58);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"img\", 50);\n    i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_div_50_div_13_Template_img_click_3_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ind_r8 = i0.ɵɵnextContext().index;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.removeSingleParams(ind_r8, \"Severity\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 59);\n    i0.ɵɵelementStart(5, \"ng-select\", 60);\n    i0.ɵɵlistener(\"change\", function WrkflowAlarmWizardOprParametersComponent_div_50_div_13_Template_ng_select_change_5_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.changeSeverity();\n    });\n    i0.ɵɵelementStart(6, \"ng-option\", 61);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ng-option\", 62);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ng-option\", 63);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ng-option\", 64);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ng-option\", 65);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ng-option\", 66);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, WrkflowAlarmWizardOprParametersComponent_div_50_div_13_em_18_Template, 2, 0, \"em\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    let tmp_9_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r13.language[\"Severity\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r13.language[\"Severity\"]);\n    i0.ɵɵproperty(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.All);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.critical);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.major);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.minor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.Warning);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.language.Info);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_9_0 = ctx_r13.filtersForm.get(\"Severity\")) == null ? null : tmp_9_0.errors == null ? null : tmp_9_0.errors.required);\n  }\n}\nfunction WrkflowAlarmWizardOprParametersComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵelementStart(1, \"div\", 40);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"label\", 41);\n    i0.ɵɵtext(4, \"Select Parameter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 42);\n    i0.ɵɵelementStart(6, \"ng-select\", 43);\n    i0.ɵɵlistener(\"change\", function WrkflowAlarmWizardOprParametersComponent_div_50_Template_ng_select_change_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r35);\n      const ind_r8 = restoredCtx.index;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.selectAdditionalParam($event, ind_r8);\n    })(\"add\", function WrkflowAlarmWizardOprParametersComponent_div_50_Template_ng_select_add_6_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.addAdditionalParam($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 44);\n    i0.ɵɵtemplate(8, WrkflowAlarmWizardOprParametersComponent_div_50_img_8_Template, 1, 0, \"img\", 45);\n    i0.ɵɵtemplate(9, WrkflowAlarmWizardOprParametersComponent_div_50_img_9_Template, 1, 0, \"img\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 47);\n    i0.ɵɵtemplate(11, WrkflowAlarmWizardOprParametersComponent_div_50_div_11_Template, 12, 5, \"div\", 48);\n    i0.ɵɵtemplate(12, WrkflowAlarmWizardOprParametersComponent_div_50_div_12_Template, 12, 5, \"div\", 48);\n    i0.ɵɵtemplate(13, WrkflowAlarmWizardOprParametersComponent_div_50_div_13_Template, 19, 10, \"div\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ind_r8 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", ind_r8);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearOnBackspace\", true)(\"multiple\", false)(\"items\", ctx_r4.additionalParameters)(\"clearable\", true)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ind_r8 == (ctx_r4.filtersForm == null ? null : ctx_r4.filtersForm.value[\"additionalParams\"] == null ? null : ctx_r4.filtersForm.value[\"additionalParams\"].length) - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ind_r8 != (ctx_r4.filtersForm == null ? null : ctx_r4.filtersForm.value[\"additionalParams\"] == null ? null : ctx_r4.filtersForm.value[\"additionalParams\"].length) - 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.selectedAddParams[ind_r8] && ctx_r4.selectedAddParams[ind_r8].includes(\"Service Impacting\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.selectedAddParams[ind_r8] && ctx_r4.selectedAddParams[ind_r8].includes(\"Service Affecting\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.selectedAddParams[ind_r8] && ctx_r4.selectedAddParams[ind_r8].includes(\"Severity\"));\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\n/* new imports ends */\nexport let WrkflowAlarmWizardOprParametersComponent = /*#__PURE__*/(() => {\n  class WrkflowAlarmWizardOprParametersComponent {\n    /* new Variables ends */\n    constructor(translateService, customTranslateService, commonOrgService, api, router, sso, fileService, fb, http, dateUtilsService, issueService) {\n      this.translateService = translateService;\n      this.customTranslateService = customTranslateService;\n      this.commonOrgService = commonOrgService;\n      this.api = api;\n      this.router = router;\n      this.sso = sso;\n      this.fileService = fileService;\n      this.fb = fb;\n      this.http = http;\n      this.dateUtilsService = dateUtilsService;\n      this.issueService = issueService;\n      this.workflowOprData = new EventEmitter();\n      this.activeTab = new EventEmitter();\n      this.inputLocations = [{\n        label: 'location1'\n      }, {\n        label: 'location2'\n      }, {\n        label: 'location3'\n      }];\n      this.dropdownPeriod = ['Bandwidth', 'Data Service', 'Video Service', 'Voice Service'];\n      this.inputOperationType = [{\n        name: 'Configuration File Download',\n        id: 'Configuration File Download'\n      }, {\n        name: 'Download SW/FW Image',\n        id: 'Download SW/FW Image'\n      }, {\n        name: 'Reboot',\n        id: 'Reboot'\n      }, {\n        name: 'Apply Configuration Profile',\n        id: 'Apply Configuration Profile'\n      }, {\n        name: 'Replace Service Profile',\n        id: \"Replace Service Profile\"\n      }, {\n        name: 'Add to Static Device Group',\n        id: \"Add Static Device Group\"\n      }, {\n        name: 'Edge Suites Provision',\n        id: 'Edge Suites Provision'\n      }];\n      this.configFileDnwld = ['Name', 'Description', 'Software Version', 'Type'];\n      this.commonHeader = ['Name', 'Description'];\n      this.replaceService = ['Name', 'Description', 'Type'];\n      this.actionType = 'Download Configuration File';\n      this.categoryChoosed = 'Bandwidth';\n      this.tableHeader = [];\n      this.replaceProfile = false;\n      this.loading = true;\n      this.isRerender = false;\n      this.newOprtn = false;\n      this.doneActive = false;\n      this.newProfileShow = false;\n      this.selectedDevices = [];\n      this.errorInfo = '';\n      this.successInfo = '';\n      this.IQtemp = [];\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        dom: 't',\n        ordering: false,\n        columnDefs: [{\n          targets: [1, 2, 3, 4],\n          orderable: false\n        }, {\n          targets: [0],\n          orderable: true\n        }],\n        order: [0, 'asc'],\n        drawCallback: settings => {\n          let total = settings.aoData.length;\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#opr-table_last').addClass('disabled');\n          }\n        }\n      };\n      this.dtTrigger = new Subject();\n      this.sysAdminRoute = 'systemAdministration';\n      this.doneClicked = false;\n      this.groupOfCategory = [\"Service Attributes\", \"Services\"];\n      this.IQSuitesData = [];\n      this.showEditButton = false;\n      /* new variables */\n      this.filtersForm = this.fb.group({\n        region: [''],\n        location: [''],\n        system: [''],\n        duration: ['', [Validators.min(1)]],\n        count: ['', [Validators.min(1)]],\n        additionalParams: this.fb.array([this.createItem()]),\n        startDate: [''],\n        endDate: [''],\n        SelectedAlarm: ['']\n      });\n      this.regionsDataArray = [\"All\"];\n      this.locationDataArray = [\"All\"];\n      this.systemDataArray = [\"All\"];\n      this.categories = [];\n      this.baseUrl = `${environment.API_BASE_URL}analytics-engine/`;\n      this.ServiceAffecting = \"Yes\";\n      this.ServiceImpacting = \"Yes\";\n      this.clickedSystem = '';\n      this.inputAlarms = [{\n        label: 'device_sync_failure'\n      }, {\n        label: 'post_i2c'\n      }, {\n        label: 'dhcp-server-detected'\n      }];\n      this.maxDate = new Date();\n      this.maxForStartDate = new Date();\n      this.additionalParameters = [{\n        label: \"Service Impacting\"\n      }, {\n        label: \"Service Affecting\"\n      }, {\n        label: \"Severity\"\n      }];\n      this.todayDate = new Date();\n      this.selectedAddParams = [];\n      this.oprData = {};\n      this.orgId = this.sso.getOrgId();\n      this.frTable = this.customTranslateService.fr;\n      this.sysAdminRoute = environment.SYS_ADMIN_ROUTE;\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.tableHeader = this.configFileDnwld;\n      if (this.workflowInputData) {\n        this.workflowInputData.actions.forEach(e => {\n          if (e.actionType === 'Edge Suites Provision') {\n            let obj = e;\n            obj[\"actionType\"] = \"Edge Suites Bulk Activation\";\n          }\n        });\n      }\n      if (this.router.url.includes('cco-foundation')) {\n        this.oprTypeValueSelected = 'Download SW/FW Image';\n        if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n          this.inputOperationType = [{\n            name: 'Download SW/FW Image',\n            id: 'Download SW/FW Image'\n          }, {\n            name: 'Reboot',\n            id: 'Reboot'\n          }, {\n            name: 'Apply Configuration Profile',\n            id: 'Apply Configuration Profile'\n          }, {\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }, {\n            name: 'Add to Static Device Group',\n            id: \"Add Static Device Group\"\n          }, {\n            name: 'Edge Suites Provision',\n            id: 'Edge Suites Provision'\n          }];\n        } else {\n          this.inputOperationType = [{\n            name: 'Download SW/FW Image',\n            id: 'Download SW/FW Image'\n          }, {\n            name: 'Reboot',\n            id: 'Reboot'\n          }, {\n            name: 'Apply Configuration Profile',\n            id: 'Apply Configuration Profile'\n          }, {\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }, {\n            name: 'Add to Static Device Group',\n            id: \"Add Static Device Group\"\n          }];\n        }\n        this.optTypeValueChoose();\n      } else {\n        this.oprTypeValueSelected = 'Configuration File Download';\n        this.optTypeValueChoose();\n        if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n          this.inputOperationType = [{\n            name: 'Configuration File Download',\n            id: 'Configuration File Download'\n          }, {\n            name: 'Download SW/FW Image',\n            id: 'Download SW/FW Image'\n          }, {\n            name: 'Reboot',\n            id: 'Reboot'\n          }, {\n            name: 'Apply Configuration Profile',\n            id: 'Apply Configuration Profile'\n          }, {\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }, {\n            name: 'Add to Static Device Group',\n            id: \"Add Static Device Group\"\n          }, {\n            name: 'Edge Suites Provision',\n            id: 'Edge Suites Provision'\n          }];\n        } else {\n          this.inputOperationType = [{\n            name: 'Configuration File Download',\n            id: 'Configuration File Download'\n          }, {\n            name: 'Download SW/FW Image',\n            id: 'Download SW/FW Image'\n          }, {\n            name: 'Reboot',\n            id: 'Reboot'\n          }, {\n            name: 'Apply Configuration Profile',\n            id: 'Apply Configuration Profile'\n          }, {\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }, {\n            name: 'Add to Static Device Group',\n            id: \"Add Static Device Group\"\n          }];\n        }\n      }\n      this.checkSwCondition();\n      /* new code */\n      this.Severity = 'all';\n      this.filtersForm.patchValue({\n        region: ['All'],\n        location: ['All'],\n        system: ['All'],\n        severity: ['All']\n      });\n      this.initData();\n      this.regionsApiLoader();\n      this.getCategories();\n      /* new code ends */\n    }\n\n    initData() {\n      if (this.workflowInputData) {\n        if (this.workflowInputData.region) {\n          this.filtersForm.get('region').setValue(this.workflowInputData.region);\n          this.loadLocationValue(this.workflowInputData.region);\n        }\n        if (this.workflowInputData.location) {\n          this.filtersForm.get('location').setValue(this.workflowInputData.location);\n          this.loadSystemValue(this.workflowInputData.location);\n        }\n        if (this.workflowInputData.system) {\n          this.filtersForm.get('system').setValue(this.workflowInputData.system);\n        }\n        if (this.workflowInputData.count) {\n          this.filtersForm.get('count').setValue(this.workflowInputData.count);\n        }\n        if (this.workflowInputData.duration) {\n          this.filtersForm.get('duration').setValue(this.workflowInputData.duration);\n        }\n        if (this.workflowInputData.additionalParams.length != 0) {\n          this.addAvailableSystems(this.workflowInputData.additionalParams);\n          this.updateSelectedValues(this.workflowInputData.additionalParams);\n        }\n        if (this.workflowInputData.startDate) {\n          this.filtersForm.get('startDate').setValue(new Date(this.workflowInputData.startDate));\n        }\n        if (this.workflowInputData.endDate) {\n          this.filtersForm.get('endDate').setValue(new Date(this.workflowInputData.endDate));\n        }\n        if (this.workflowInputData.alarmName) {\n          this.filtersForm.get('SelectedAlarm').setValue(this.workflowInputData.alarmName);\n        }\n      }\n    }\n    createItem(data) {\n      return this.fb.group({\n        Severity: (data === null || data === void 0 ? void 0 : data.Severity) || undefined,\n        ServiceImpacting: (data === null || data === void 0 ? void 0 : data.ServiceImpacting) || undefined,\n        ServiceAffecting: (data === null || data === void 0 ? void 0 : data.ServiceAffecting) || undefined\n      });\n    }\n    updateSelectedValues(list) {\n      list.forEach((e, i) => {\n        if (e.Severity) {\n          if (this.selectedAddParams[i]) {\n            this.selectedAddParams[i] = this.selectedAddParams[i] + \",Severity\";\n          } else {\n            this.selectedAddParams[i] = \"Severity\";\n          }\n        }\n        if (e.ServiceImpacting) {\n          if (this.selectedAddParams[i]) {\n            this.selectedAddParams[i] = this.selectedAddParams[i] + \",Service Impacting\";\n          } else {\n            this.selectedAddParams[i] = \"Service Impacting\";\n          }\n        }\n        if (e.ServiceAffecting) {\n          if (this.selectedAddParams[i]) {\n            this.selectedAddParams[i] = this.selectedAddParams[i] + \",Service Affecting\";\n          } else {\n            this.selectedAddParams[i] = \"Service Affecting\";\n          }\n        }\n      });\n    }\n    removeSingleParams(ind, name) {\n      let str = this.selectedAddParams[ind];\n      let splitted = str.split(\",\");\n      splitted = splitted.filter(val => val != name).join();\n      this.selectedAddParams[ind] = splitted;\n      if (name == \"Severity\") {\n        this.filtersForm.get('additionalParams').at(ind).get('Severity').patchValue(undefined);\n      }\n      if (name == \"Service Impacting\") {\n        this.filtersForm.get('additionalParams').at(ind).get('ServiceImpacting').patchValue(undefined);\n      }\n      if (name == \"Service Affecting\") {\n        this.filtersForm.get('additionalParams').at(ind).get('ServiceAffecting').patchValue(undefined);\n      }\n      /* let val = [];\r\n      Object.keys(this.paramList.value).forEach(res=>{\r\n        if( res == name  ){\r\n            this.paramList.removeAt()\r\n        }\r\n      }) */\n    }\n\n    addAvailableSystems(list) {\n      this.paramList = this.filtersForm.get('additionalParams');\n      while (this.paramList.length !== 0) {\n        this.paramList.removeAt(0);\n      }\n      list.forEach((e, i) => {\n        this.paramList.push(this.createItem(e));\n      });\n    }\n    removeAddParams(ind) {\n      this.paramList.removeAt(ind);\n      delete this.selectedAddParams[ind];\n      this.selectedAddParams = this.selectedAddParams.filter(val => val);\n      this.addAvailableSystems(this.paramList.value);\n    }\n    addParams() {\n      this.paramList = this.filtersForm.get('additionalParams');\n      this.paramList.push(this.createItem());\n    }\n    selectSystem(event) {\n      let systemid = this.filtersForm.get('system').value;\n      this.systemName = systemid;\n      if (systemid == 'All') {\n        this.systemName = null;\n      }\n    }\n    validateRegion(event) {\n      let regions = this.filtersForm.get('region').value;\n      if (event === 'All') {\n        this.workflowInputData.regionName = \"All\";\n        regions = ['All'];\n      } else {\n        this.workflowInputData.regionName = event.name;\n        let index = regions.indexOf('All');\n        if (index > -1) {\n          regions.splice(index, 1);\n        }\n      }\n      this.filtersForm.get('region').setValue(regions);\n      this.loadLocationValue('');\n    }\n    validateLocation(event) {\n      let locations = this.filtersForm.get('location').value;\n      if (event === 'All') {\n        this.workflowInputData.locationName = 'All';\n        locations = ['All'];\n      } else {\n        this.workflowInputData.locationName = event.name;\n        let index = locations.indexOf('All');\n        if (index > -1) {\n          locations.splice(index, 1);\n        }\n      }\n      this.filtersForm.get('location').setValue(locations);\n      this.loadSystemValue('');\n    }\n    changeSeverity() {\n      this.clickedSeverity = '';\n    }\n    validateSystem(event) {\n      let systems = this.filtersForm.get('system').value;\n      if (event === 'All') {\n        this.workflowInputData.systemName = 'All';\n        systems = ['All'];\n      } else {\n        this.workflowInputData.systemName = event.name;\n        let index = systems.indexOf('All');\n        if (index > -1) {\n          systems.splice(index, 1);\n        }\n      }\n      this.filtersForm.get('system').setValue(systems);\n    }\n    addAdditionalParam(event) {}\n    selectAdditionalParam(event, index) {\n      if (this.selectedAddParams[index]) {\n        let tempSelected = this.selectedAddParams[index];\n        this.selectedAddParams[index] = tempSelected + ',' + event.label;\n      } else {\n        this.selectedAddParams[index] = event.label;\n      }\n    }\n    loadSystemValue(event) {\n      this.clickedLocation = '';\n      let regionids = this.filtersForm.get('region').value;\n      let locationids = this.filtersForm.get('location').value;\n      this.systemSelected = [\"All\"];\n      if (regionids.length && locationids.length && locationids.indexOf('All') === -1) {\n        let regionQuery = '';\n        regionids.forEach(element => {\n          if (element == 'All') {\n            return;\n          }\n          regionQuery += `&region=${element}`;\n        });\n        let locationQuery = '';\n        locationids.forEach(element => {\n          if (element == 'All') {\n            return;\n          }\n          locationQuery += `&location=${element}`;\n        });\n        this.http.get(`${environment.API_BASE_URL}nfa/systems?tenant=0&org-id=${this.sso.getOrgId()}${regionQuery}${locationQuery}`).subscribe(res => {\n          this.systemDataArray = res;\n          this.systemDataArray.push(\"All\");\n        }, error => {});\n        let locations = [];\n        this.locationDataArray.forEach(element => {\n          if (locationids.indexOf(element['id']) !== -1) {\n            locations.push(element.name);\n          }\n        });\n        this.locationName = locations;\n      } else {\n        if (!locationids.length) {\n          this.filtersForm.get('system').setValue(['All']);\n          //this.filtersForm.get('location').setValue(['All']);\n          this.locationName = null;\n          this.systemName = null;\n          this.systemDataArray = [\"All\"];\n        }\n      }\n    }\n    loadLocationValue(event) {\n      this.clickedRegion = '';\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      let ids = this.filtersForm.get('region').value;\n      this.regionSelected = ids;\n      if (this.regionSelected && this.regionSelected != ['All']) {\n        let regionQuery = '';\n        if (ids.length && ids !== ['All']) {\n          if (ids.indexOf('All') !== -1) {\n            this.regionName = null;\n            this.locationName = null;\n            this.systemName = null;\n            this.locationDataArray = [\"All\"];\n            this.systemDataArray = [\"All\"];\n            return;\n          }\n          ids.forEach(element => {\n            if (element == 'All') {\n              return;\n            }\n            regionQuery += `&region=${element}`;\n          });\n          this.http.get(`${environment.API_BASE_URL}nfa/locations?tenant=0&org-id=${this.sso.getOrgId()}${regionQuery}`).subscribe(res => {\n            this.locationDataArray = res;\n            this.locationDataArray.push(\"All\");\n          }, error => {});\n          let regions = [];\n          this.regionsDataArray.forEach(element => {\n            if (ids.indexOf(element['id']) !== -1) {\n              regions.push(element.name);\n            }\n          });\n          this.regionName = regions;\n        } else {\n          this.filtersForm.get('location').setValue(['All']);\n          this.filtersForm.get('system').setValue(['All']);\n          //this.filtersForm.get('region').setValue(['All']);\n          this.regionName = null;\n          this.locationName = null;\n          this.systemName = null;\n          this.locationDataArray = [\"All\"];\n          this.systemDataArray = [\"All\"];\n        }\n      }\n    }\n    /* new code */\n    regionsApiLoader() {\n      this.regionSelected = 'All';\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.regionsSubject = this.issueService.getRegions().subscribe(res => {\n        res.sort();\n        this.regionsDataArray = [...this.regionsDataArray, ...res];\n      }, error => {});\n    }\n    getCategories() {\n      let fields = this.filtersForm.value;\n      let params = {\n        //date: `${this.dateUtilsService.getUtCMilliSecByDateObj(fields['startDate'])},${this.dateUtilsService.getUtCMilliSecByDateObj(fields['endDate'], true)}`,\n        historyReport: false\n      };\n      /*  if (fields['startDate']) {\r\n         if (!fields['endDate']) {\r\n           fields['endDate'] = new Date();\r\n         }\r\n         params['date'] = `${this.dateUtilsService.getUtCMilliSecByDateObj(fields['startDate'])},${this.dateUtilsService.getUtCMilliSecByDateObj(fields['endDate'], true)}`;\r\n       }\r\n      */\n      let query = \"\";\n      for (var key in params) {\n        if (params[key] == undefined || params[key] == \"\" || params[key] === []) {\n          continue;\n        }\n        if (query != \"\") {\n          query += \"&\";\n        }\n        query += key + \"=\" + encodeURIComponent(params[key]);\n      }\n      query += '&historyReport=false';\n      this.http.get(`${this.baseUrl}category?${query}`).subscribe(json => {\n        let categories = [{\n          id: \"All\",\n          name: \"All\"\n        }];\n        if (json) {\n          json.forEach(element => {\n            if (!element) {\n              return;\n            }\n            categories.push({\n              id: element,\n              name: element\n            });\n          });\n        }\n        this.categories = categories;\n      });\n    }\n    /* new code ends */\n    checkSwCondition() {\n      if (this.workflowInputData) {\n        for (let i = 0; i < this.workflowInputData.actions.length; i++) {\n          if (this.workflowInputData.actions[i].actionType == \"Download SW/FW Image\" && this.workflowInputData.execPolicy.initialTrigger.type == \"CPE Event\" && this.workflowInputData.state != \"Suspended\") {\n            this.actionType = this.workflowInputData.actions[0].actionType;\n            this.showEditButton = true;\n            break;\n          }\n          this.showEditButton = false;\n        }\n      }\n    }\n    newOprtnAdd(type, index) {\n      this.newOprtn = true;\n      if (type === 'new') {\n        this.operationCondition = '';\n        this.categoryChoosed = 'Bandwidth';\n        this.doneActive = false;\n        this.actionType = '';\n      }\n      if (this.workflowInputData.groups.length) {\n        if (this.workflowInputData.actions.length != 0 && this.workflowInputData.actions[0].actionType) {\n          if (type === 'edit') {\n            this.editIndex = index;\n            this.oprTypeValueSelected = this.workflowInputData.actions[index].actionType;\n            this.optTypeValueChoose();\n          } else {\n            this.oprTypeValueSelected = this.workflowInputData.actions[0].actionType;\n            let indexOfES = this.workflowInputData.actions.findIndex(i => i.actionType === \"Edge Suites Bulk Activation\");\n            if (this.router.url.includes('cco-foundation')) {\n              this.oprTypeValueSelected = 'Download SW/FW Image';\n              if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n                this.inputOperationType = [{\n                  name: 'Download SW/FW Image',\n                  id: 'Download SW/FW Image'\n                }, {\n                  name: 'Reboot',\n                  id: 'Reboot'\n                }, {\n                  name: 'Apply Configuration Profile',\n                  id: 'Apply Configuration Profile'\n                }, {\n                  name: 'Replace Service Profile',\n                  id: \"Replace Service Profile\"\n                }, {\n                  name: 'Add to Static Device Group',\n                  id: \"Add Static Device Group\"\n                }, {\n                  name: 'Edge Suites Provision',\n                  id: 'Edge Suites Provision'\n                }];\n              } else {\n                this.inputOperationType = [{\n                  name: 'Download SW/FW Image',\n                  id: 'Download SW/FW Image'\n                }, {\n                  name: 'Reboot',\n                  id: 'Reboot'\n                }, {\n                  name: 'Apply Configuration Profile',\n                  id: 'Apply Configuration Profile'\n                }, {\n                  name: 'Replace Service Profile',\n                  id: \"Replace Service Profile\"\n                }, {\n                  name: 'Add to Static Device Group',\n                  id: \"Add Static Device Group\"\n                }];\n              }\n            }\n            this.optTypeValueChoose();\n          }\n        } else {\n          let indexOfES = this.workflowInputData.actions.findIndex(i => i.actionType === \"Edge Suites Bulk Activation\");\n          if (this.router.url.includes('cco-foundation')) {\n            this.oprTypeValueSelected = 'Download SW/FW Image';\n            if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n              this.inputOperationType = [{\n                name: 'Download SW/FW Image',\n                id: 'Download SW/FW Image'\n              }, {\n                name: 'Reboot',\n                id: 'Reboot'\n              }, {\n                name: 'Apply Configuration Profile',\n                id: 'Apply Configuration Profile'\n              }, {\n                name: 'Replace Service Profile',\n                id: \"Replace Service Profile\"\n              }, {\n                name: 'Add to Static Device Group',\n                id: \"Add Static Device Group\"\n              }, {\n                name: 'Edge Suites Provision',\n                id: 'Edge Suites Provision'\n              }];\n            } else {\n              this.inputOperationType = [{\n                name: 'Download SW/FW Image',\n                id: 'Download SW/FW Image'\n              }, {\n                name: 'Reboot',\n                id: 'Reboot'\n              }, {\n                name: 'Apply Configuration Profile',\n                id: 'Apply Configuration Profile'\n              }, {\n                name: 'Replace Service Profile',\n                id: \"Replace Service Profile\"\n              }, {\n                name: 'Add to Static Device Group',\n                id: \"Add Static Device Group\"\n              }];\n            }\n            this.optTypeValueChoose();\n          } else {\n            this.oprTypeValueSelected = 'Configuration File Download';\n            if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n              this.inputOperationType = [{\n                name: 'Configuration File Download',\n                id: 'Configuration File Download'\n              }, {\n                name: 'Download SW/FW Image',\n                id: 'Download SW/FW Image'\n              }, {\n                name: 'Reboot',\n                id: 'Reboot'\n              }, {\n                name: 'Apply Configuration Profile',\n                id: 'Apply Configuration Profile'\n              }, {\n                name: 'Replace Service Profile',\n                id: \"Replace Service Profile\"\n              }, {\n                name: 'Add to Static Device Group',\n                id: \"Add Static Device Group\"\n              }, {\n                name: 'Edge Suites Provision',\n                id: 'Edge Suites Provision'\n              }];\n            } else {\n              this.inputOperationType = [{\n                name: 'Configuration File Download',\n                id: 'Configuration File Download'\n              }, {\n                name: 'Download SW/FW Image',\n                id: 'Download SW/FW Image'\n              }, {\n                name: 'Reboot',\n                id: 'Reboot'\n              }, {\n                name: 'Apply Configuration Profile',\n                id: 'Apply Configuration Profile'\n              }, {\n                name: 'Replace Service Profile',\n                id: \"Replace Service Profile\"\n              }, {\n                name: 'Add to Static Device Group',\n                id: \"Add Static Device Group\"\n              }];\n            }\n            this.optTypeValueChoose();\n          }\n        }\n      } else {\n        let indexOfES = this.workflowInputData.actions.findIndex(i => i.actionType === \"Edge Suites Bulk Activation\");\n        this.oprTypeValueSelected = 'Replace Service Profile';\n        if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n          this.inputOperationType = [{\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }, {\n            name: 'Edge Suites Provision',\n            id: 'Edge Suites Provision'\n          }];\n        } else {\n          this.inputOperationType = [{\n            name: 'Replace Service Profile',\n            id: \"Replace Service Profile\"\n          }];\n        }\n        this.tableHeader = this.replaceService;\n        this.replaceProfile = true;\n        this.actionType = 'Replace Service Profile';\n        this.getReplaceService(this.categoryChoosed);\n        this.getConfigFile();\n      }\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n      if (this.getConfigFileSubscribe) {\n        this.getConfigFileSubscribe.unsubscribe();\n      }\n      if (this.getSwImageSubscribe) {\n        this.getSwImageSubscribe.unsubscribe();\n      }\n      if (this.getConfigProfileSubscribe) {\n        this.getConfigProfileSubscribe.unsubscribe();\n      }\n      if (this.getStaticSubscribe) {\n        this.getStaticSubscribe.unsubscribe();\n      }\n      if (this.getReplaceServiceSubscribe) {\n        this.getReplaceServiceSubscribe.unsubscribe();\n      }\n      if (this.getNewProfileSubscribe) {\n        this.getNewProfileSubscribe.unsubscribe();\n      }\n    }\n    setTableOptions(type) {\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        rowId: 'id',\n        searching: false,\n        lengthChange: false,\n        paging: false,\n        ordering: false,\n        dom: 't',\n        columnDefs: [{\n          targets: [1, 2, 3, 4],\n          orderable: false\n        }, {\n          targets: [0],\n          orderable: true\n        }],\n        order: [0, 'asc'],\n        drawCallback: settings => {\n          let total = settings.aoData.length;\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#opr-table_last').addClass('disabled');\n          }\n        }\n      };\n      // this.tableLanguageOptions();\n      if (type && type == 'language') {\n        setTimeout(() => {\n          this.rerender();\n          setTimeout(() => {\n            this.dataAvailable = true;\n            this.loading = false;\n          }, 100);\n        }, 100);\n      } else {\n        setTimeout(() => {\n          this.dataAvailable = true;\n          // this.hideSearch();\n          this.loading = false;\n        }, 500);\n      }\n    }\n    rerender() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        // Destroy the table first\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    }\n    // tableLanguageOptions() {\n    //   if (localStorage.getItem('defaultLanguage') && localStorage.getItem('defaultLanguage') == 'fr') {\n    //     this.tableOptions.language = this.frTable;\n    //   } else if (localStorage.getItem('defaultLanguage') && localStorage.getItem('defaultLanguage') == 'en' && this.tableOptions.language) {\n    //     delete this.tableOptions.language;\n    //   }\n    // }\n    chooseCategory() {\n      if (this.categoryChoosed === 'Data Service') {\n        this.getReplaceService('Data Service');\n        this.newProfileShow = false;\n      } else if (this.categoryChoosed === 'Voice Service') {\n        this.getReplaceService('Voice Service');\n        this.newProfileShow = false;\n      } else if (this.categoryChoosed === 'Video Service') {\n        this.getReplaceService('Video Service');\n        this.newProfileShow = false;\n      } else {\n        this.getReplaceService('Bandwidth');\n        this.newProfileShow = false;\n      }\n    }\n    optTypeValueChoose() {\n      if (this.workflowInputData) if (this.workflowInputData.source) delete this.workflowInputData.source;\n      if (this.oprTypeValueSelected === 'Configuration File Download') {\n        this.tableHeader = this.configFileDnwld;\n        this.replaceProfile = false;\n        this.actionType = 'Download Configuration File';\n        this.getConfigFile();\n      } else if (this.oprTypeValueSelected === 'Download SW/FW Image') {\n        this.tableHeader = this.commonHeader;\n        this.replaceProfile = false;\n        this.actionType = 'Download SW/FW Image';\n        if (this.router.url.includes(\"/cco-foundation/foundation-operations/foundation-system-operation/workflows/workflow-wizard\")) {\n          this.workflowInputData.fullGroupExecute = true;\n          this.workflowInputData.source = \"Foundation\";\n        }\n        this.getSwImgFile();\n      } else if (this.oprTypeValueSelected === 'Apply Configuration Profile') {\n        this.tableHeader = this.commonHeader;\n        this.replaceProfile = false;\n        this.actionType = 'Apply Configuration Profile';\n        this.getConfigProfile();\n      } else if (this.oprTypeValueSelected === 'Add Static Device Group') {\n        this.tableHeader = this.commonHeader;\n        this.replaceProfile = false;\n        this.actionType = 'Add to Static Device Group';\n        this.getStaticDevice();\n      } else if (this.oprTypeValueSelected === 'Reboot') {\n        this.actionType = 'Reboot';\n        this.doneActive = true;\n        this.oprData = {};\n      } else if (this.oprTypeValueSelected === 'Edge Suites Provision') {\n        this.IQtemp.length = 0;\n        this.IQSuitesData.length = 0;\n        this.tableHeader = this.commonHeader;\n        this.replaceProfile = false;\n        this.actionType = 'Edge Suites Bulk Activation';\n        if (this.sso.getEntitlementsArr().indexOf('203') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n          this.IQSuitesData.push({\n            _id: '2',\n            name: 'ProtectIQ',\n            checked: false,\n            description: \"ProtectIQ\"\n          });\n        }\n        if (this.sso.getEntitlementsArr().indexOf('204') > -1 || this.sso.getEntitlementsArr().indexOf('205') > -1) {\n          this.IQSuitesData.push({\n            _id: '1',\n            name: 'ExperienceIQ',\n            checked: false,\n            description: \"ExperienceIQ\"\n          });\n        }\n        /*this.api.getIqSuites(this.orgId).subscribe((res: any) => {\r\n          for (let key in res) {\r\n            if( key=='subscribedToExperienceIq'&&res[key]){\r\n              this.IQSuitesData.push({ _id: '1', name: 'ExperienceIQ', checked: false, description: \"ExperienceIQ\" })\r\n            } else if(key=='subscribedToProtectIq'&&res[key]){\r\n              this.IQSuitesData.push( { _id: '2', name: 'ProtectIQ', checked: false, description: \"ProtectIQ\" })\r\n            }\r\n          }\r\n        })*/\n      } else {\n        this.oprData = {};\n        this.tableHeader = this.replaceService;\n        this.replaceProfile = true;\n        this.actionType = 'Replace Service Profile';\n        this.getReplaceService(this.categoryChoosed);\n      }\n    }\n    bindConfigData(event, value) {\n      if (event.target.checked) {\n        this.oprData = {};\n        if (this.actionType === 'Add to Static Device Group') {\n          this.doneActive = true;\n          let data = {};\n          data['staticGroupId'] = value._id;\n          data['actionType'] = this.actionType;\n          data['profileName'] = value.name;\n          if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n          this.oprData = data;\n        } else if (this.actionType === 'Apply Configuration Profile') {\n          this.doneActive = true;\n          let data = {};\n          data['profileId'] = value._id;\n          data['actionType'] = this.actionType;\n          data['profileName'] = value.name;\n          if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n          this.oprData = data;\n        } else if (this.actionType === 'Edge Suites Bulk Activation') {\n          this.doneActive = true;\n          let data = {};\n          this.IQtemp.push(value.name);\n          data['actionType'] = this.actionType;\n          data['appType'] = this.IQtemp.join(',');\n          if (this.router.url.includes(\"/cco-foundation\")) {\n            this.workflowInputData.source = \"Foundation\";\n          }\n          if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n          this.oprData = data;\n        } else {\n          this.doneActive = true;\n          let data = {};\n          data['fileId'] = value._id;\n          data['actionType'] = this.actionType;\n          data['profileName'] = value.name;\n          if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n          this.oprData = data;\n        }\n      } else {\n        if (this.actionType === 'Edge Suites Bulk Activation') {\n          let indexVal = this.IQtemp.indexOf(value.name);\n          if (indexVal != -1) {\n            this.IQtemp.splice(indexVal, 1);\n          }\n          let data = {};\n          data['actionType'] = this.actionType;\n          data['appType'] = this.IQtemp.join(',');\n          if (!data['appType']) {\n            this.doneActive = false;\n          }\n          if (this.router.url.includes(\"/cco-foundation\")) {\n            this.workflowInputData.source = \"Foundation\";\n          }\n          if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n          this.oprData = data;\n        }\n      }\n    }\n    findObjIndex(nameKey, myArray) {\n      for (var i = 0; i < myArray.length; i++) {\n        if (myArray[i]._id === nameKey) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    checkErrors(formGroup, errors = {}) {\n      // IF not populated correctly - you could get aggregated FormGroup errors object\n      let retrnVal = false;\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field);\n        if (control instanceof FormControl) {\n          errors[field] = control.errors;\n        } else if (control instanceof FormGroup) {\n          errors[field] = this.checkErrors(control);\n        }\n      });\n      if (Object.keys(errors).length != 0) {\n        Object.keys(errors).forEach(element => {\n          if (errors[element] instanceof Object) {\n            retrnVal = true;\n          }\n        });\n      }\n      return retrnVal;\n    }\n    go_next() {\n      if (this.workflowInputData.actions.length > 0) {\n        if (this.workflowInputData.levelPassed <= 3) {\n          this.workflowInputData.levelPassed = 3;\n        }\n        this.workflowOprData.emit(this.workflowInputData);\n        this.activeTab.emit('Select Schedule Parameters');\n        return true;\n      } else {\n        if (this.checkErrors(this.filtersForm)) {\n          return;\n        }\n        if (this.workflowInputData.levelPassed <= 3) {\n          this.workflowInputData.levelPassed = 3;\n        }\n        this.workflowInputData.region = this.filtersForm.get('region').value;\n        this.workflowInputData.location = this.filtersForm.get('location').value;\n        this.workflowInputData.system = this.filtersForm.get('system').value;\n        this.workflowInputData.duration = this.filtersForm.get('duration').value;\n        this.workflowInputData.count = this.filtersForm.get('count').value;\n        this.workflowInputData.additionalParams = [];\n        this.workflowInputData.additionalParams = this.filtersForm.get('additionalParams').value;\n        if (this.filtersForm.get('startDate').value) {\n          this.workflowInputData.startDate = new Date(this.filtersForm.get('startDate').value).toUTCString();\n        }\n        if (this.filtersForm.get('endDate').value) {\n          this.workflowInputData.endDate = new Date(this.filtersForm.get('endDate').value).toUTCString();\n        }\n        this.workflowInputData.alarmName = this.filtersForm.get('SelectedAlarm').value;\n        this.workflowOprData.emit(this.workflowInputData);\n        this.activeTab.emit('Select Schedule Parameters');\n        return true;\n      }\n    }\n    go_previous() {\n      this.workflowOprData.emit(this.workflowInputData);\n      if (this.router.url.endsWith(\"official-workflow-wizard\")) {\n        this.activeTab.emit('Start');\n      } else {\n        this.activeTab.emit('Select Device Groups');\n      }\n    }\n    deleteWrkflw(data) {\n      this.workflowInputData.actions.splice(data, 1);\n      // let indexVal = this.findObjIndex(data,this.workflowInputData.actions)\n      //     if(indexVal != -1){\n      // this.workflowInputData.actions.splice(indexVal,1)\n      //     }\n    }\n\n    getConfigFile() {\n      this.getConfigFileSubscribe = this.api.getConfigFile(this.orgId, 'Configuration File').subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.fileId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i]._id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j]._id) != -1) {\n              delete optData[res[j]._id];\n            }\n          }\n          this.cofigFileData = Object.values(optData);\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.sso.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n    }\n    closeAlert() {\n      this.error = false;\n      this.success = false;\n    }\n    getSwImgFile() {\n      this.getSwImageSubscribe = this.fileService.getSwFilesList(String(this.orgId), \"\", requestType.SW_FW_Image).subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.fileId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i]._id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j]._id) != -1) {\n              delete optData[res[j]._id];\n            }\n          }\n          this.swFileData = Object.values(optData);\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    getConfigProfile() {\n      this.getConfigProfileSubscribe = this.api.getConfigProfile(this.orgId).subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.profileId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i]._id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j]._id) != -1) {\n              delete optData[res[j]._id];\n            }\n          }\n          this.configProFileData = Object.values(optData);\n          this.configProFileData = this.configProFileData.filter(e => !e.innerProfileCategory);\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    getStaticDevice() {\n      this.getStaticSubscribe = this.api.getStaticDevice(this.orgId).subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.staticGroupId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i]._id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j]._id) != -1) {\n              delete optData[res[j]._id];\n            }\n          }\n          this.staticDeviceData = Object.values(optData);\n          this.staticDeviceTable = this.staticDeviceData.filter(data => data.type === 'static');\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    getReplaceService(category) {\n      this.loading = true;\n      this.getReplaceServiceSubscribe = this.api.getReplaceService(this.orgId, category).subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.profileId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i].id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j].id) != -1) {\n              delete optData[res[j].id];\n            }\n          }\n          this.originalProfile = Object.values(optData);\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    getNewProfileData(category, profileId, mode, framingType, voicetype) {\n      this.loading = true;\n      this.getNewProfileSubscribe = this.api.getReplaceService(this.orgId, category, profileId, mode, framingType, voicetype).subscribe(res => {\n        if (res) {\n          let selectedOper = [];\n          if (this.workflowInputData.actions) {\n            this.workflowInputData.actions.forEach(element => {\n              selectedOper.push(element.replacedByProfileId);\n            });\n          }\n          let optData = {};\n          for (var i = 0; i < res.length; i++) {\n            optData[res[i].id] = res[i];\n          }\n          for (var j = 0; j < res.length; j++) {\n            if (selectedOper.indexOf(res[j].id) != -1) {\n              delete optData[res[j].id];\n            }\n          }\n          this.NewProfile = Object.values(optData);\n          this.setTableOptions();\n          this.newProfileShow = true;\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n          this.isRerender = false;\n        } else {\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n        this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      }, () => {\n        //this.loading = false;\n      });\n    }\n    bindReplaceData(event, value) {\n      if (event.target.checked) {\n        this.oldProData = value;\n        if (this.categoryChoosed === 'Data Service') {\n          this.getNewProfileData('Data Service', value.id, value.mode, value.framingtype);\n        } else if (this.categoryChoosed === 'Voice Service') {\n          this.getNewProfileData('Voice Service', value.id, value.mode, null, value.voicetype);\n        } else if (this.categoryChoosed === 'Video Service') {\n          this.getNewProfileData('Video Service', value.id, value.mode);\n        } else {\n          this.getNewProfileData('Bandwidth', value.id, value.mode, value.framingtype);\n        }\n      }\n    }\n    bindReplaceNewData(event, value) {\n      if (event.target.checked) {\n        this.newProValue = value;\n        this.doneActive = true;\n      }\n    }\n    doneClick() {\n      this.doneClicked = true;\n      this.newOprtn = false;\n      this.error = false;\n      if (this.actionType === 'Reboot') {\n        let data = {};\n        data['actionType'] = this.actionType;\n        if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n        this.workflowInputData.actions.push(data);\n      }\n      if (this.actionType === 'Replace Service Profile') {\n        let data = {};\n        data['actionType'] = this.actionType;\n        data['profileId'] = this.oldProData.id;\n        data['replacedByProfileId'] = this.newProValue.id;\n        data['profileName'] = this.oldProData.name + \" is replaced by \" + this.newProValue.name;\n        if (this.operationCondition) data['conditionLogic'] = this.operationCondition;\n        this.workflowInputData.actions.push(data);\n      }\n      if (this.actionType === 'Download Official Image') {\n        let data = {};\n        data['actionType'] = this.actionType;\n        this.workflowInputData.actions.push(data);\n      }\n      if (Object.keys(this.oprData).length) {\n        if (this.operationCondition) this.oprData['conditionLogic'] = this.operationCondition;\n        if (this.showEditButton) {\n          this.workflowInputData.actions[this.editIndex] = this.oprData;\n        } else {\n          this.workflowInputData.actions.push(this.oprData);\n        }\n      }\n      if (this.oprTypeValueSelected === 'Apply Configuration Profile') this.getConfigProfile();\n      if (this.oprTypeValueSelected === 'Configuration File Download') this.getConfigFile();\n      if (this.oprTypeValueSelected === 'Download SW/FW Image') this.getSwImgFile();\n      if (this.oprTypeValueSelected === 'Add Static Device Group') this.getStaticDevice();\n      if (this.oprTypeValueSelected === 'Replace Service Profile') this.getReplaceService(this.categoryChoosed);\n      if (this.oprTypeValueSelected === 'Replace Service Profile') this.getNewProfileData(this.categoryChoosed);\n    }\n  }\n  WrkflowAlarmWizardOprParametersComponent.ɵfac = function WrkflowAlarmWizardOprParametersComponent_Factory(t) {\n    return new (t || WrkflowAlarmWizardOprParametersComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.CustomTranslateService), i0.ɵɵdirectiveInject(i3.CommonService), i0.ɵɵdirectiveInject(i4.NetopsServiceService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.FileService), i0.ɵɵdirectiveInject(i8.FormBuilder), i0.ɵɵdirectiveInject(i9.HttpClient), i0.ɵɵdirectiveInject(i10.DateUtilsService), i0.ɵɵdirectiveInject(i11.IssueService));\n  };\n  WrkflowAlarmWizardOprParametersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WrkflowAlarmWizardOprParametersComponent,\n    selectors: [[\"app-alarm-wrkflow-wizard-opr-parameters\"]],\n    viewQuery: function WrkflowAlarmWizardOprParametersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    inputs: {\n      workflowInputData: \"workflowInputData\"\n    },\n    outputs: {\n      workflowOprData: \"workflowOprData\",\n      activeTab: \"activeTab\"\n    },\n    decls: 58,\n    vars: 37,\n    consts: [[\"class\", \"w-100 alert alert-danger mt-4 fade show\", 4, \"ngIf\"], [1, \"wizard-form\"], [3, \"formGroup\"], [1, \"net-ops-secondary-title\"], [1, \"w-100\", \"row\", \"form-group\"], [1, \"current-issue-menu-item\", \"col-12\", \"col-sm-12\", \"col-md-3\", \"col-lg-3\"], [\"for\", \"Name\", 1, \"col-form-label\", \"select-font\"], [\"id\", \"current-issues-interval\", 1, \"w-100\"], [\"formControlName\", \"region\", \"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"multiple\", \"items\", \"clearable\", \"searchable\", \"placeholder\", \"add\", \"remove\"], [\"formControlName\", \"location\", \"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"multiple\", \"items\", \"placeholder\", \"clearable\", \"searchable\", \"add\", \"remove\"], [\"formControlName\", \"system\", \"bindValue\", \"fqn\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"multiple\", \"items\", \"placeholder\", \"clearable\", \"searchable\", \"change\", \"add\"], [1, \"w-100\", \"form-group\"], [1, \"form-group\", \"ccl-form\", \"row\", 3, \"ngClass\"], [1, \"col-2\", \"control-label\"], [1, \"col-md-5\"], [\"min\", \"1\", \"customNeg\", \"\", \"id\", \"wk-count\", \"name\", \"name_input\", \"type\", \"number\", \"formControlName\", \"count\", \"aria-describedby\", \"count-error\", \"placeholder\", \"Enter Number of Count\"], [4, \"ngIf\"], [\"min\", \"0\", \"id\", \"wk-duration_input\", \"name\", \"seconds_input\", \"type\", \"number\", \"formControlName\", \"duration\", \"aria-describedby\", \"duration-error\", \"placeholder\", \"Enter Duration in seconds\"], [1, \"form-group\", \"ccl-form\", \"row\"], [\"for\", \"startDate\", 1, \"col-2\", \"control-label\"], [\"name\", \"startDate\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Start Date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", \"readonlyInput\", \"true\", \"aria-required\", \"true\", \"aria-describedby\", \"startTime-error\", \"aria-invalid\", \"true\", 3, \"showIcon\", \"minDate\", \"maxDate\"], [\"for\", \"endDate\", 1, \"col-2\", \"control-label\"], [\"name\", \"endDate\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"End Date\", \"id\", \"endDate\", \"formControlName\", \"endDate\", \"readonlyInput\", \"true\", \"aria-required\", \"true\", \"aria-describedby\", \"endTime-error\", \"aria-invalid\", \"true\", 3, \"showIcon\", \"minDate\"], [\"class\", \"form-group ccl-form row\", 4, \"ngIf\"], [1, \"form-group\"], [\"class\", \"border-bottom my-2\", \"formArrayName\", \"additionalParams\", 4, \"ngFor\", \"ngForOf\"], [1, \"workflow-next-previous\"], [\"type\", \"button\", \"id\", \"previous\", 1, \"btn-arrow\", \"btn-arr-prev\", \"btn-grey\", \"mr-2\", 3, \"click\"], [\"src\", \"assets/img/ic_chevronleft_grey.svg\"], [\"type\", \"button\", \"id\", \"next\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"primary\", 3, \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"mt-4\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [\"id\", \"wk-opr-err-ok\", 1, \"btn-default\", \"px-3\", \"ok-btn\", \"float-right\", 3, \"click\"], [1, \"current-issue-menu-item\", \"col-sm-12\", \"col-md-2\", \"col-lg-2\"], [\"id\", \"current-issues-interval\", 1, \"col-sm-12\", \"col-md-5\", \"col-lg-5\"], [\"formControlName\", \"SelectedAlarm\", \"bindValue\", \"label\", \"bindLabel\", \"label\", 1, \"selectboxwidth\", 3, \"multiple\", \"items\", \"clearable\", \"searchable\", \"placeholder\"], [\"formArrayName\", \"additionalParams\", 1, \"border-bottom\", \"my-2\"], [3, \"formGroupName\"], [\"for\", \"Name\", 1, \"col-2\", \"control-label\"], [\"id\", \"current-issues-interval\", 1, \"col-md-5\"], [\"bindValue\", \"label\", \"bindLabel\", \"label\", \"placeholder\", \"Select Parameter\", 1, \"selectboxwidth\", 3, \"clearOnBackspace\", \"multiple\", \"items\", \"clearable\", \"searchable\", \"change\", \"add\"], [1, \"add-remove\"], [\"class\", \"pointer mr-3\", \"src\", \"assets/img/Icon_Circle-Plus.svg\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"pointer\", \"src\", \"assets/img/ic_minus_sign_circle.svg\", 3, \"click\", 4, \"ngIf\"], [1, \"row\"], [\"class\", \"form-group col ccl-form col-md-3\", 4, \"ngIf\"], [\"src\", \"assets/img/Icon_Circle-Plus.svg\", 1, \"pointer\", \"mr-3\", 3, \"click\"], [\"src\", \"assets/img/ic_minus_sign_circle.svg\", 1, \"pointer\", 3, \"click\"], [1, \"form-group\", \"col\", \"ccl-form\", \"col-md-3\"], [1, \"control-label\"], [1, \"radio-inline\", \"col-2\"], [\"type\", \"radio\", \"value\", \"Yes\", \"formControlName\", \"ServiceImpacting\", 1, \"mr-2\", 3, \"id\"], [\"type\", \"radio\", \"value\", \"No\", \"formControlName\", \"ServiceImpacting\", 1, \"mr-2\", 3, \"id\"], [\"type\", \"radio\", \"value\", \"Yes\", \"formControlName\", \"ServiceAffecting\", 1, \"mr-2\", 3, \"id\"], [\"type\", \"radio\", \"value\", \"No\", \"formControlName\", \"ServiceAffecting\", 1, \"mr-2\", 3, \"id\"], [\"for\", \"current-issues-interval\", 1, \"col-md-12\", \"select-font\"], [\"id\", \"current-issues-interval\", 1, \"custom-selectbox\"], [\"formControlName\", \"Severity\", 3, \"searchable\", \"placeholder\", \"change\"], [\"value\", \"All\"], [\"value\", \"Critical\"], [\"value\", \"Major\"], [\"value\", \"Minor\"], [\"value\", \"Warning\"], [\"value\", \"Info\"]],\n    template: function WrkflowAlarmWizardOprParametersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WrkflowAlarmWizardOprParametersComponent_div_0_Template, 6, 2, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Filter By Region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"ng-select\", 8);\n        i0.ɵɵlistener(\"add\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_add_10_listener($event) {\n          return ctx.validateRegion($event);\n        })(\"remove\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_remove_10_listener($event) {\n          return ctx.loadLocationValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵelementStart(12, \"label\", 6);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelementStart(15, \"ng-select\", 9);\n        i0.ɵɵlistener(\"add\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_add_15_listener($event) {\n          return ctx.validateLocation($event);\n        })(\"remove\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_remove_15_listener($event) {\n          return ctx.loadSystemValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5);\n        i0.ɵɵelementStart(17, \"label\", 6);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7);\n        i0.ɵɵelementStart(20, \"ng-select\", 10);\n        i0.ɵɵlistener(\"change\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_change_20_listener($event) {\n          return ctx.selectSystem($event);\n        })(\"add\", function WrkflowAlarmWizardOprParametersComponent_Template_ng_select_add_20_listener($event) {\n          return ctx.validateSystem($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"span\", 3);\n        i0.ɵɵtext(22, \"Filter By Count\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 11);\n        i0.ɵɵelementStart(24, \"div\", 12);\n        i0.ɵɵelementStart(25, \"label\", 13);\n        i0.ɵɵtext(26, \" No of Count \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 14);\n        i0.ɵɵelement(28, \"input\", 15);\n        i0.ɵɵtemplate(29, WrkflowAlarmWizardOprParametersComponent_em_29_Template, 2, 0, \"em\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 12);\n        i0.ɵɵelementStart(31, \"label\", 13);\n        i0.ɵɵtext(32, \" Duration (Seconds) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 14);\n        i0.ɵɵelement(34, \"input\", 17);\n        i0.ɵɵtemplate(35, WrkflowAlarmWizardOprParametersComponent_em_35_Template, 2, 0, \"em\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 18);\n        i0.ɵɵelementStart(37, \"label\", 19);\n        i0.ɵɵtext(38, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 14);\n        i0.ɵɵelement(40, \"p-calendar\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 18);\n        i0.ɵɵelementStart(42, \"label\", 21);\n        i0.ɵɵtext(43, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 14);\n        i0.ɵɵelement(45, \"p-calendar\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, WrkflowAlarmWizardOprParametersComponent_div_46_Template, 6, 6, \"div\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"span\", 3);\n        i0.ɵɵtext(48, \"Filter By Additional Parameters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 24);\n        i0.ɵɵtemplate(50, WrkflowAlarmWizardOprParametersComponent_div_50_Template, 14, 11, \"div\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 26);\n        i0.ɵɵelementStart(52, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_Template_button_click_52_listener() {\n          return ctx.go_previous();\n        });\n        i0.ɵɵelement(53, \"img\", 28);\n        i0.ɵɵtext(54);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"button\", 29);\n        i0.ɵɵlistener(\"click\", function WrkflowAlarmWizardOprParametersComponent_Template_button_click_55_listener() {\n          return ctx.go_next();\n        });\n        i0.ɵɵtext(56);\n        i0.ɵɵelement(57, \"img\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_21_0;\n        let tmp_23_0;\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.filtersForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.language.region);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.region);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.regionsDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Location);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.Location);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.locationDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.System);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.System);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.systemDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c0, ctx.filtersForm.get(\"count\") && ctx.filtersForm.get(\"count\").errors && ctx.filtersForm.get(\"count\").errors.min ? \"errorMessage\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_21_0 = ctx.filtersForm.get(\"count\")) == null ? null : tmp_21_0.errors == null ? null : tmp_21_0.errors.min);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx.filtersForm.get(\"duration\") && ctx.filtersForm.get(\"duration\").errors && ctx.filtersForm.get(\"duration\").errors.min ? \"errorMessage\" : \"\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_23_0 = ctx.filtersForm.get(\"duration\")) == null ? null : tmp_23_0.errors == null ? null : tmp_23_0.errors.min);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"showIcon\", true)(\"minDate\", ctx.todayDate)(\"maxDate\", ctx.filtersForm.get(\"endDate\").value);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"showIcon\", true)(\"minDate\", ctx.filtersForm.get(\"startDate\").value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.workflowInputData == null ? null : ctx.workflowInputData.selectedCategories) == \"No\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filtersForm.get(\"additionalParams\")[\"controls\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Previous, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Next, \" \");\n      }\n    },\n    directives: [i12.NgIf, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i13.NgSelectComponent, i8.NgControlStatus, i8.FormControlName, i12.NgClass, i8.MinValidator, i8.NumberValueAccessor, i8.DefaultValueAccessor, i14.CustomNegDirective, i15.CustomNegDirective, i16.Calendar, i12.NgForOf, i8.FormArrayName, i8.FormGroupName, i8.RadioControlValueAccessor, i13.ɵr],\n    styles: [\"div.checkbox.switcher[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]{float:right}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding:0;cursor:pointer}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{vertical-align:middle}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{position:relative;display:inline-block;width:45px;height:25px;background:#ffffff;border:1px solid #0279ff;border-radius:50px;transition:all .3s ease-in-out;padding:5px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{position:absolute;display:block;width:20px;height:19px;background:#0279ff;border-radius:50%;transition:all .3s ease-in-out;left:2px;top:2px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]{background:#269bff;border-color:#269bff}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{left:50%;background:#ffffff}form[_ngcontent-%COMP%]{width:100%}.f-w-600[_ngcontent-%COMP%]{font-weight:600}[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){position:relative!important;left:unset!important;cursor:pointer}.pr-46[_ngcontent-%COMP%]{padding-right:46px}.br-26[_ngcontent-%COMP%]{border-radius:26px}.new-profile-table[_ngcontent-%COMP%]{margin:10px 0}.profile-table[_ngcontent-%COMP%]{margin:10px 0}.delete-org-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]:hover{color:red}.custom-selectbox-opr[_ngcontent-%COMP%]   .ng-dropdown-panel[_ngcontent-%COMP%]{z-index:1;width:100%;padding-top:10px;padding-bottom:10px;border-radius:10px!important;min-height:auto;max-height:260px;overflow-y:auto;font-size:14px;transition:.5s ease}.errorMessage[_ngcontent-%COMP%]{padding-left:0!important}\"]\n  });\n  return WrkflowAlarmWizardOprParametersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}