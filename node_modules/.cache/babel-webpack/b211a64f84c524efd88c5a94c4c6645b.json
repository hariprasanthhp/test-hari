{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { EmptyDataComponent } from '../shared/components/dummy-component/dummy.component';\nimport { RgComponent } from '../support/support-wifi/rg/rg.component';\nimport { CcoSystemSearchComponent } from './cco-system-search/cco-system-search.component';\nimport { CcoComponent } from './cco.component';\nimport { NetworkTopologyComponent } from './network-topology/network-topology.component';\nimport { RecordViewComponent } from './traffic/record-view/record-view.component';\nimport { RecordListComponent } from './traffic/record-list/record-list.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from '../shared/services/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: CcoComponent,\n  children: [{\n    path: 'home',\n    loadChildren: () => import('./cco-home/cco-home.module').then(m => m.CcoHomeModule)\n  }, {\n    path: 'issues',\n    loadChildren: () => import('./issues/issues.module').then(m => m.IssuesModule)\n  }, {\n    path: 'health',\n    loadChildren: () => import('./health/health.module').then(m => m.HealthModule)\n  }, {\n    path: 'traffic',\n    loadChildren: () => import('./traffic/traffic.module').then(m => m.TrafficModule)\n  }, {\n    path: 'system',\n    loadChildren: () => import('./system/system.module').then(m => m.SystemModule)\n  }, {\n    path: 'operations',\n    loadChildren: () => import('./operations/operations.module').then(m => m.OperationsModule)\n  }, {\n    path: 'alarm-notifications/new',\n    loadChildren: () => import('./alarm-notifications/alarm-notifications.module').then(m => m.AlarmNotificationsModule)\n  }, {\n    path: 'alarm-notifications/edit/:workflowId',\n    loadChildren: () => import('./alarm-notifications/alarm-notifications.module').then(m => m.AlarmNotificationsModule)\n  },\n  // { path: 'new-traffic-workflow', loadChildren: () => import('./new-traffic-workflow/new-traffic-workflow.module').then(m => m.NewTrafficWorkflowModule) },\n  {\n    path: 'network-topology',\n    component: NetworkTopologyComponent\n  }, {\n    path: 'search-system-list',\n    component: CcoSystemSearchComponent\n  }, {\n    path: 'overview',\n    loadChildren: () => import('../support/support-overview/support-overview.module').then(m => m.SupportOverviewModule)\n  }, {\n    path: 'service',\n    loadChildren: () => import('../support/support-service/support-service.module').then(m => m.SupportServiceModule)\n  }, {\n    path: 'router',\n    loadChildren: () => import('../support/support-system/support-system.module').then(m => m.SupportSystemModule)\n  }, {\n    path: 'wifi',\n    loadChildren: () => import('../support/support-wifi/support-wifi.module').then(m => m.SupportWifiModule)\n  },\n  //{ path: 'wifi', loadChildren: () => import('./cco-wifi/cco-wifi.module').then(m => m.CcoWifiModule) },\n  {\n    path: 'device',\n    loadChildren: () => import('../support/support-device/support-device.module').then(m => m.SupportDeviceModule)\n  }, {\n    path: 'application',\n    loadChildren: () => import('../support/support-application/support-application.module').then(m => m.SupportApplicationModule)\n  }, {\n    path: 'netops-management',\n    loadChildren: () => import('../support/netops-management/netops-management.module').then(m => m.NetopsManagementModule)\n  }, {\n    path: 'traffic-reports',\n    loadChildren: () => import('../support/support-traffic-reports/support-traffic-reports.module').then(m => m.SupportTrafficReportsModule)\n  }, {\n    path: 'dummy',\n    component: EmptyDataComponent\n  }, {\n    path: 'rg/:fsan',\n    component: RgComponent\n  }, {\n    path: 'record',\n    component: RecordViewComponent\n  }, {\n    path: 'record/list',\n    component: RecordListComponent\n  }, {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'outliers-workflow',\n    loadChildren: () => import('./outliers-workflow/outliers-workflow.module').then(m => m.OutliersWorkflowModule)\n  }, {\n    path: 'outage-workflow',\n    loadChildren: () => import('./outage-workflow/outage-workflow.module').then(m => m.OutageWorkflowModule)\n  }, {\n    path: 'services',\n    loadChildren: () => import('./services/services.module').then(m => m.ServicesModule)\n  }, {\n    path: 'notifications/health/:type',\n    loadChildren: () => import('./outliers-workflow/outliers-workflow.module').then(m => m.OutliersWorkflowModule)\n  }, {\n    path: 'alerts/:type',\n    loadChildren: () => import('./alerts/alerts.module').then(m => m.AlertsModule)\n  }, {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }]\n}];\nexport let CcoRoutingModule = /*#__PURE__*/(() => {\n  class CcoRoutingModule {}\n  CcoRoutingModule.ɵfac = function CcoRoutingModule_Factory(t) {\n    return new (t || CcoRoutingModule)();\n  };\n  CcoRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CcoRoutingModule\n  });\n  CcoRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forChild(routes)], RouterModule]\n  });\n  return CcoRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}