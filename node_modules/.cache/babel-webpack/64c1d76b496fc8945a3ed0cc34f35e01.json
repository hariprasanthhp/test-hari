{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/health.service\";\nimport * as i4 from \"src/app/shared-utils/date-utils.service\";\nimport * as i5 from \"src/app/sys-admin/services/common.service\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"primeng/calendar\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../timeserieschart/timeserieschart.component\";\nconst _c0 = [\"showInfoModal\"];\nfunction AetimeseriesComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[ctx_r0.timeseriesname] || ctx_r0.timeseriesname, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"(\", ctx_r0.system, \", \", ctx_r0.fsan, \")\");\n  }\n}\nfunction AetimeseriesComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[ctx_r1.timeseriesname] || ctx_r1.timeseriesname, \" \");\n  }\n}\nfunction AetimeseriesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[ctx_r2.timeseriesname] || ctx_r2.timeseriesname, \" \");\n  }\n}\nfunction AetimeseriesComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵelementStart(3, \"span\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.language.Loading);\n  }\n}\nfunction AetimeseriesComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 29);\n  }\n}\nfunction AetimeseriesComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"span\", 31);\n    i0.ɵɵelement(2, \"img\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AetimeseriesComponent_div_28_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.timeseriesDatamsg = \"\";\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r5.timeseriesDatamsg, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AetimeseriesComponent_div_29_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 37);\n  }\n}\nfunction AetimeseriesComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"app-timeserieschart\", 35);\n    i0.ɵɵlistener(\"valueChange\", function AetimeseriesComponent_div_29_Template_app_timeserieschart_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.clearChartContainer($event);\n    })(\"selectedlegend\", function AetimeseriesComponent_div_29_Template_app_timeserieschart_selectedlegend_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.selectedlegend($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AetimeseriesComponent_div_29_div_2_Template, 1, 0, \"div\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const i_r12 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"wholedata\", item_r11)(\"params\", item_r11.params)(\"paramname\", item_r11.paramname)(\"charttype\", item_r11.charttype)(\"divid\", item_r11.divid)(\"chartname\", item_r11.chartname)(\"page\", item_r11.page)(\"chartdata\", item_r11.chartdata);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r12 < ctx_r6.MultipleTimeseriesChartList.length - 1);\n  }\n}\nfunction AetimeseriesComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelementStart(1, \"h5\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function AetimeseriesComponent_ng_template_30_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const modal_r17 = restoredCtx.$implicit;\n      return modal_r17.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelement(6, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 41);\n    i0.ɵɵelementStart(8, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function AetimeseriesComponent_ng_template_30_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const modal_r17 = restoredCtx.$implicit;\n      return modal_r17.close(\"Save click\");\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[ctx_r8.modalTitle]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language[ctx_r8.modalInfo], \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.Ok, \" \");\n  }\n}\nconst _c1 = function () {\n  return {\n    width: \"100%\",\n    height: \"38px\"\n  };\n};\nconst _c2 = function () {\n  return {\n    height: \"36px\"\n  };\n};\nconst _c3 = function () {\n  return {\n    standalone: true\n  };\n};\nexport let AetimeseriesComponent = /*#__PURE__*/(() => {\n  class AetimeseriesComponent {\n    constructor(translateService, activeRoute, healthService, dateUtilsService, commonOrgService, dialogService) {\n      this.translateService = translateService;\n      this.activeRoute = activeRoute;\n      this.healthService = healthService;\n      this.dateUtilsService = dateUtilsService;\n      this.commonOrgService = commonOrgService;\n      this.dialogService = dialogService;\n      this.MultipleTimeseriesChartList = [];\n      this.fsan_status = false;\n      this.count = 0;\n      this.selectedfsan = [];\n      this.fsanMultipleTimeseriesChartList = [];\n      this.minDateForstart = new Date(new Date().setDate(new Date().getDate() - 727));\n      this.maxDate = new Date();\n      this.selectedlegendlist = {};\n      this.valueChange = new EventEmitter();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\n      let date = new Date();\n      this.last24hours = ((_a = this.wholedata) === null || _a === void 0 ? void 0 : _a.last24hours) ? (_b = this.wholedata) === null || _b === void 0 ? void 0 : _b.last24hours : false;\n      this.lowFromDate = ((_d = (_c = this.wholedata) === null || _c === void 0 ? void 0 : _c.params) === null || _d === void 0 ? void 0 : _d.startTime) ? (_f = (_e = this.wholedata) === null || _e === void 0 ? void 0 : _e.params) === null || _f === void 0 ? void 0 : _f.startTime : new Date(date.getTime() - 1 * 24 * 60 * 60 * 1000);\n      this.maxForStartDate = this.lowToDate = ((_h = (_g = this.wholedata) === null || _g === void 0 ? void 0 : _g.params) === null || _h === void 0 ? void 0 : _h.endTime) ? (_k = (_j = this.wholedata) === null || _j === void 0 ? void 0 : _j.params) === null || _k === void 0 ? void 0 : _k.endTime : new Date();\n      this.ChartType = ((_l = this.wholedata) === null || _l === void 0 ? void 0 : _l.charttype) == 'ae_General' ? 'ae_General' : 'ae';\n      if (((_m = this.wholedata) === null || _m === void 0 ? void 0 : _m.charttype) == 'General') this.timeseriesname = this.title ? this.title : 'AE Health By Timeseries';else if (((_o = this.wholedata) === null || _o === void 0 ? void 0 : _o.charttype) == 'ae_General') {\n        this.timeseriesname = this.title ? this.title : \"AE Interface Health\";\n      } else this.timeseriesname = ((_p = this.wholedata) === null || _p === void 0 ? void 0 : _p.charttype) == \"ae_packet\" ? 'Packets Error By Timeseries' : \"Threshold Exceeded By Timeseries\";\n      this.divid = (_r = (_q = this.wholedata) === null || _q === void 0 ? void 0 : _q.params) === null || _r === void 0 ? void 0 : _r.divid;\n      this.chartname = (_s = this.wholedata) === null || _s === void 0 ? void 0 : _s.chartname;\n      this.getlistoffsan();\n      this.paramname = (_t = this.wholedata) === null || _t === void 0 ? void 0 : _t.paramname;\n      this.subTitle = `${this.language[\"region\"]}: ${(_u = this.paramname) === null || _u === void 0 ? void 0 : _u.regionname},\n    ${this.language['location']}: ${(_v = this.paramname) === null || _v === void 0 ? void 0 : _v.locationname}, ${this.language['System']}: ${(_w = this.paramname) === null || _w === void 0 ? void 0 : _w.systemname}, ${this.language['interface']}: ${(_x = this.paramname) === null || _x === void 0 ? void 0 : _x.interfacename}`;\n    }\n    dropdownopen() {\n      this.fsan_status = true;\n    }\n    getlistoffsan() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n      this.Timeseriesloader = true;\n      let params = {\n        tenant: \"0\",\n        startTime: this.last24hours ? `${Math.ceil((this.dateUtilsService.getStartUtcTimeByDaysseconds(0) - 86400000) / 1000)}` : `${this.dateUtilsService.getUtCSecondsByDateObj(this.lowFromDate)}`,\n        endTime: this.last24hours ? `${Math.ceil(this.dateUtilsService.getStartUtcTimeByDaysseconds(0) / 1000)}` : `${this.dateUtilsService.getUtCSecondsByDateObj(this.lowToDate, true)}`,\n        region: (_b = (_a = this.wholedata) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.region,\n        location: (_d = (_c = this.wholedata) === null || _c === void 0 ? void 0 : _c.params) === null || _d === void 0 ? void 0 : _d.location,\n        system: (_f = (_e = this.wholedata) === null || _e === void 0 ? void 0 : _e.params) === null || _f === void 0 ? void 0 : _f.system,\n        interface: (_h = (_g = this.wholedata) === null || _g === void 0 ? void 0 : _g.params) === null || _h === void 0 ? void 0 : _h.interface,\n        ont: ((_k = (_j = this.wholedata) === null || _j === void 0 ? void 0 : _j.params) === null || _k === void 0 ? void 0 : _k.ont) ? (_m = (_l = this.wholedata) === null || _l === void 0 ? void 0 : _l.params) === null || _m === void 0 ? void 0 : _m.ont : \"\",\n        fsan: ((_p = (_o = this.wholedata) === null || _o === void 0 ? void 0 : _o.params) === null || _p === void 0 ? void 0 : _p.fsan) ? (_r = (_q = this.wholedata) === null || _q === void 0 ? void 0 : _q.params) === null || _r === void 0 ? void 0 : _r.fsan : \"\"\n      };\n      params[\"granularity\"] = this.healthService.getGranularity(params.startTime, params.endTime);\n      let query = \"\";\n      for (var key in params) {\n        if (params[key] == undefined || params[key] == \"undefined\" || params[key] == \"\") {\n          continue;\n        }\n        if (query != \"\") {\n          query += \"&\";\n        }\n        query += key + \"=\" + encodeURIComponent(params[key]);\n      }\n      this.MultipleTimeseriesChartList = [];\n      this.fsanlist = this.healthService.timeseries(query, this.ChartType).subscribe(res => {\n        var _a, _b, _c;\n        this.listoffsan = res;\n        this.MultipleTimeseriesChartList = [];\n        this.Timeseriesloader = false;\n        this.timeseriesDatamsg = \"\";\n        if (res.length) {\n          (_a = this.listoffsan) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n            this.count = this.count + 1;\n            let data = JSON.parse(JSON.stringify(this.wholedata));\n            data.params[\"startTime\"] = this.lowFromDate;\n            data.params[\"endTime\"] = this.lowToDate;\n            data.params[\"fsan\"] = element[\"fsan\"];\n            data.paramname[\"ont\"] = element[\"fsan\"];\n            data.paramname['regionname'] = element['region'];\n            data.paramname['locationname'] = element['location'];\n            data.paramname['systemname'] = element['system'];\n            data.paramname['interfacename'] = element['interface'];\n            data.paramname['deleted'] = element['deleted'] == true ? true : \"\";\n            setTimeout(() => {\n              var _a, _b;\n              this.MultipleTimeseriesChartList.push({\n                params: data.params,\n                paramname: data.paramname,\n                charttype: data.charttype == \"ae_General\" ? \"General\" : data.charttype,\n                chartname: element[\"fsan\"] + Math.floor(Math.random() * 100),\n                divid: element[\"fsan\"] + Math.floor(Math.random() * 100),\n                page: 'ae',\n                chartdata: element[\"timeseries\"],\n                legendselected: this.selectedlegendlist ? this.selectedlegendlist[element[\"fsan\"]] : []\n              });\n              // this.loadedMultipleTimeseriesChart = [...this.loadedMultipleTimeseriesChart];\n              console.log(this.MultipleTimeseriesChartList);\n              if (((_a = this.MultipleTimeseriesChartList) === null || _a === void 0 ? void 0 : _a.length) !== 0) this.fsan = (_b = this.MultipleTimeseriesChartList[0].params) === null || _b === void 0 ? void 0 : _b.fsan;\n            }, 100);\n          });\n        } else {\n          let data = JSON.parse(JSON.stringify(this.wholedata));\n          data.params[\"startTime\"] = this.lowFromDate;\n          data.params[\"endTime\"] = this.lowToDate;\n          data.params[\"fsan\"] = (_c = (_b = this.wholedata) === null || _b === void 0 ? void 0 : _b.params) === null || _c === void 0 ? void 0 : _c.fsan;\n          data.paramname[\"ont\"] = \"\";\n          setTimeout(() => {\n            this.MultipleTimeseriesChartList.push({\n              params: data.params,\n              paramname: data.paramname,\n              charttype: data.charttype == \"ae_General\" ? \"General\" : data.charttype,\n              chartname: \"fsan\" + Math.floor(Math.random() * 100),\n              divid: Math.floor(Math.random() * 100) + 1,\n              page: 'ae',\n              chartdata: []\n            });\n            // this.loadedMultipleTimeseriesChart = [...this.loadedMultipleTimeseriesChart];\n            console.log(this.MultipleTimeseriesChartList);\n          }, 100);\n        }\n      }, err => {\n        this.Timeseriesloader = false;\n        if (err.status == 401) {\n          this.timeseriesDatamsg = this.language['Access Denied'];\n        } else {\n          this.timeseriesDatamsg = this.commonOrgService.pageErrorHandle(err);\n        }\n      });\n    }\n    clearChartContainer(values) {\n      var findindex = this.MultipleTimeseriesChartList.findIndex(x => x.chartname === values.chartname);\n      if (findindex > -1) {\n        this.MultipleTimeseriesChartList.splice(findindex, 1);\n      }\n    }\n    selectedlegend(values) {\n      if (this.selectedlegendlist.length > 0) {\n        Object.keys(this.selectedlegendlist).includes(Object.keys(values)[0]);\n        delete this.selectedlegendlist.Object.keys(values)[0];\n      }\n      this.selectedlegendlist = Object.assign(this.selectedlegendlist, values);\n    }\n    applyfilter() {\n      var _a;\n      if ((_a = this.fsanMultipleTimeseriesChartList) === null || _a === void 0 ? void 0 : _a.length) {\n        let element_to_remove = [];\n        this.fsanMultipleTimeseriesChartList.forEach(element => {\n          //console.log(this.selectedfsan.includes(element.chartname))\n          if (!this.selectedfsan.includes(element.chartname)) {\n            element_to_remove.push(element);\n          }\n        });\n        element_to_remove.forEach(element => {\n          this.fsanclearChartContainer(element);\n        });\n      }\n      this.selectedfsan.forEach(element => {\n        var _a;\n        this.count = this.count + 1;\n        let data = JSON.parse(JSON.stringify(this.wholedata));\n        data.params[\"startTime\"] = this.wholedata.params['startTime'];\n        data.params[\"endTime\"] = this.wholedata.params['endTime'];\n        data.params[\"fsan\"] = element;\n        data.paramname[\"ont\"] = element;\n        let IsDuplicate = false;\n        if ((_a = this.fsanMultipleTimeseriesChartList) === null || _a === void 0 ? void 0 : _a.length) {\n          this.fsanMultipleTimeseriesChartList.forEach(ele => {\n            if (ele.chartname == element) {\n              IsDuplicate = true;\n              // var elmnt = document.getElementById(element.fsan);\n              // elmnt.scrollIntoView({ behavior: 'smooth' });\n            }\n          });\n        }\n\n        if (IsDuplicate) return;\n        setTimeout(() => {\n          this.fsanMultipleTimeseriesChartList.push({\n            params: data.params,\n            paramname: data.paramname,\n            charttype: data.charttype,\n            chartname: element,\n            divid: element + Math.floor(Math.random() * 100),\n            page: 'ae'\n          });\n          // this.loadedMultipleTimeseriesChart = [...this.loadedMultipleTimeseriesChart];\n          console.log(this.fsanMultipleTimeseriesChartList);\n        }, 100);\n      });\n    }\n    fsanclearChartContainer(values) {\n      var findindex = this.fsanMultipleTimeseriesChartList.findIndex(x => x.chartname === values.chartname);\n      if (findindex > -1) {\n        this.fsanMultipleTimeseriesChartList.splice(findindex, 1);\n        // this.selectedfsan.splice(findindex, 1);\n      }\n\n      this.selectedfsan = this.selectedfsan.filter(id => id !== values.chartname);\n      console.log(this.selectedfsan);\n    }\n    closeChart() {\n      this.singletimeseries = !this.singletimeseries;\n      // this.doubleTimeseries = !this.doubleTimeseries\n      let obj = {\n        \"chartname\": this.chartname\n      };\n      this.valueChange.emit(obj);\n    }\n    lowapplyfilter() {\n      if (!this.validateStartEndDates()) {\n        this.modalTitle = 'Time Period';\n        // this.modalInfo = this.language['Time range not valid, end time should be later than start time.']\n        this.openModalInfo();\n        return;\n      }\n      ;\n      this.getlistoffsan();\n    }\n    changeDate() {\n      this.maxForStartDate = this.lowToDate;\n      if (!this.validateStartEndDates()) {\n        this.modalTitle = 'Time Period';\n        //this.modalInfo = this.language['Time range not valid, end time should be later than start time.']\n        this.openModalInfo();\n        return;\n      }\n      ;\n    }\n    openModalInfo() {\n      this.modalRef = this.dialogService.open(this.showInfoModal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'custom-modal'\n      });\n    }\n    validateStartEndDates() {\n      let currentdate = new Date();\n      if (!this.lowFromDate) {\n        this.modalInfo = 'Time range not valid, end time should be later than start time.';\n        return false;\n      }\n      if (this.lowFromDate > currentdate || this.lowToDate > currentdate) {\n        this.modalInfo = 'Time range not valid, End Date and Start Date should not above current Date';\n        return false;\n      }\n      if (this.lowFromDate && this.lowToDate) {\n        if (this.dateUtilsService.getUtCSecondsByDateObj(this.lowFromDate) > this.dateUtilsService.getUtCSecondsByDateObj(this.lowToDate, true)) {\n          this.modalInfo = 'Time range not valid, end time should be later than start time.';\n          return false;\n        } else if (this.dateUtilsService.getUtCSecondsByDateObj(this.lowFromDate) == this.dateUtilsService.getUtCSecondsByDateObj(this.lowToDate, true)) {\n          this.modalInfo = 'Time range not valid, Start Date and End Date should not be same.';\n          return false;\n        }\n        return true;\n      } else {\n        return true;\n      }\n    }\n  }\n  AetimeseriesComponent.ɵfac = function AetimeseriesComponent_Factory(t) {\n    return new (t || AetimeseriesComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HealthService), i0.ɵɵdirectiveInject(i4.DateUtilsService), i0.ɵɵdirectiveInject(i5.CommonService), i0.ɵɵdirectiveInject(i6.NgbModal));\n  };\n  AetimeseriesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AetimeseriesComponent,\n    selectors: [[\"app-aetimeseries\"]],\n    viewQuery: function AetimeseriesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showInfoModal = _t.first);\n      }\n    },\n    inputs: {\n      wholedata: \"wholedata\",\n      title: \"title\",\n      system: \"system\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 32,\n    vars: 39,\n    consts: [[1, \"subscriber-trends-wrapper\", \"my-2\", 3, \"id\"], [1, \"w-100\"], [1, \"d-flex\", \"justify-content-between\", \"border-bottom\"], [1, \"\"], [\"class\", \"cco-secondary-title chrat-secondary-title\", \"id\", \"app-timeseries-title\", 4, \"ngIf\"], [1, \"mwc-btns\", \"row\", \"align-items-center\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"m-2\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"img\", \"my-2\"], [1, \"d-flex\"], [1, \"current-issue-menu-item\", \"mr-2\"], [\"for\", \"Name\", 1, \"col-form-label\", \"select-font\"], [1, \"ccl-form\", \"col-filter\"], [\"id\", \"start_date1\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"autoZIndex\", \"selectOtherMonths\", \"placeholder\", \"ngModel\", \"showIcon\", \"ngModelOptions\", \"minDate\", \"maxDate\", \"ngModelChange\", \"onSelect\"], [\"id\", \"start_date1\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"autoZIndex\", \"selectOtherMonths\", \"placeholder\", \"ngModel\", \"showIcon\", \"ngModelOptions\", \"maxDate\", \"minDate\", \"ngModelChange\", \"onSelect\"], [2, \"margin-top\", \"40px\"], [1, \"d-inline-flex\", \"mr-3\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"col-md-12\"], [\"showInfoModal\", \"\"], [\"id\", \"app-timeseries-title\", 1, \"cco-secondary-title\", \"chrat-secondary-title\"], [1, \"mt-3\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"row\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [3, \"wholedata\", \"params\", \"paramname\", \"charttype\", \"divid\", \"chartname\", \"page\", \"chartdata\", \"valueChange\", \"selectedlegend\"], [\"class\", \"border-bottom\", 4, \"ngIf\"], [1, \"border-bottom\"], [1, \"modal-header\", \"d-block\"], [\"id\", \"showInfoModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [1, \"modal-body\", \"add-device-model\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"primary\", \"px-3\", \"px-3\", 3, \"click\"]],\n    template: function AetimeseriesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, AetimeseriesComponent_div_4_Template, 4, 3, \"div\", 4);\n        i0.ɵɵtemplate(5, AetimeseriesComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵtemplate(6, AetimeseriesComponent_div_6_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function AetimeseriesComponent_Template_button_click_8_listener() {\n          return ctx.closeChart();\n        });\n        i0.ɵɵelement(9, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"label\", 11);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"p-calendar\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AetimeseriesComponent_Template_p_calendar_ngModelChange_16_listener($event) {\n          return ctx.lowFromDate = $event;\n        })(\"onSelect\", function AetimeseriesComponent_Template_p_calendar_onSelect_16_listener() {\n          return ctx.changeDate();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"label\", 11);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelementStart(21, \"p-calendar\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AetimeseriesComponent_Template_p_calendar_ngModelChange_21_listener($event) {\n          return ctx.lowToDate = $event;\n        })(\"onSelect\", function AetimeseriesComponent_Template_p_calendar_onSelect_21_listener() {\n          return ctx.changeDate();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 15);\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵelementStart(24, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function AetimeseriesComponent_Template_button_click_24_listener() {\n          return ctx.lowapplyfilter();\n        });\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, AetimeseriesComponent_div_26_Template, 5, 1, \"div\", 18);\n        i0.ɵɵtemplate(27, AetimeseriesComponent_div_27_Template, 1, 0, \"div\", 19);\n        i0.ɵɵtemplate(28, AetimeseriesComponent_div_28_Template, 6, 1, \"div\", 20);\n        i0.ɵɵtemplate(29, AetimeseriesComponent_div_29_Template, 3, 9, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, AetimeseriesComponent_ng_template_30_Template, 10, 3, \"ng-template\", 22, 23, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.divid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.title && ctx.system);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title && !ctx.system);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.title);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.language[\"START_DATE\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(33, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"START_DATE\"]);\n        i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(34, _c2))(\"autoZIndex\", true)(\"selectOtherMonths\", true)(\"ngModel\", ctx.lowFromDate)(\"showIcon\", true)(\"ngModelOptions\", i0.ɵɵpureFunction0(35, _c3))(\"minDate\", ctx.minDateForstart)(\"maxDate\", ctx.maxForStartDate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"END_DATE\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(36, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"END_DATE\"]);\n        i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(37, _c2))(\"autoZIndex\", true)(\"selectOtherMonths\", true)(\"ngModel\", ctx.lowToDate)(\"showIcon\", true)(\"ngModelOptions\", i0.ɵɵpureFunction0(38, _c3))(\"maxDate\", ctx.maxDate)(\"minDate\", ctx.lowFromDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.apply, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.Timeseriesloader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.Timeseriesloader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.timeseriesDatamsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.MultipleTimeseriesChartList);\n      }\n    },\n    directives: [i7.NgIf, i8.Calendar, i9.NgControlStatus, i9.NgModel, i7.NgForOf, i10.TimeserieschartComponent],\n    styles: [\"@charset \\\"UTF-8\\\";.health-pon-menu-wrapper[_ngcontent-%COMP%]{display:flex;width:100%;flex-wrap:wrap;justify-content:space-between;align-items:center}.health-pon-menu-item[_ngcontent-%COMP%]{flex-grow:1;border-left:3px solid #cdcdcd;width:calc(100% / 6)}.health-pon-menu-item[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-weight:600}.health-pon-menu-item[_ngcontent-%COMP%]   .menu-title[_ngcontent-%COMP%]{font-size:14px;font-weight:500}.health-pon-menu-item[_ngcontent-%COMP%]   .red[_ngcontent-%COMP%]{color:#ff3600}.health-pon-menu-item[_ngcontent-%COMP%]   .orange[_ngcontent-%COMP%]{color:#fc7235}.health-pon-menu-item[_ngcontent-%COMP%]   .blue[_ngcontent-%COMP%]{color:#72b4ff}.health-pon-menu-item[_ngcontent-%COMP%]   .yellow[_ngcontent-%COMP%]{color:#f3b426}.health-pon-menu-item[_ngcontent-%COMP%]   .green[_ngcontent-%COMP%]{color:#82bf00}.btn-secondary[_ngcontent-%COMP%]{color:#5f6165!important;background-color:#f8f8fa!important;border-color:#f8f8fa!important;padding:3px \\\\200b 10px}.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.subscriber-trends-item[_ngcontent-%COMP%]{width:50%}.subscriber-trend[_ngcontent-%COMP%]{width:100%}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:3%}.all-icon[_ngcontent-%COMP%]{font-size:10px;color:#9c9c9c;line-height:31px}.undo-icon[_ngcontent-%COMP%]{background-color:#f8f8fa;padding:3px;color:#9e9e9e;border-radius:15px;margin:2px;font-size:17px;cursor:pointer;width:30px;height:30px;text-align:center}.current-issue-menu-container[_ngcontent-%COMP%]{margin:0;display:flex;width:100%;flex-wrap:wrap;justify-content:space-between;align-items:center}.current-issue-menu-item[_ngcontent-%COMP%]{flex-grow:0;width:16%}button.btn-dload[_ngcontent-%COMP%]{margin-right:6px;background-image:url(ic_download_grey.9f487628f7100a5a71b9.svg);display:none!important}button.btn-dload[_ngcontent-%COMP%]:hover{background-image:url(ic_download_grey.9f487628f7100a5a71b9.svg)}button.btn-dload[_ngcontent-%COMP%]:focus{background-image:url(ic_download_grey.9f487628f7100a5a71b9.svg)}button.btn-expand[_ngcontent-%COMP%]{margin-right:6px;background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}button.btn-expand[_ngcontent-%COMP%]:hover{background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}button.btn-expand[_ngcontent-%COMP%]:focus{background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}button.btn-expand-inv[_ngcontent-%COMP%]{margin-right:6px;background-image:url(ic_expand_inverted_grey.044960530517ee37a1a9.svg)}button.btn-expand-inv[_ngcontent-%COMP%]:hover{background-image:url(ic_expand_inverted_grey.044960530517ee37a1a9.svg)}button.btn-expand-inv[_ngcontent-%COMP%]:focus{background-image:url(ic_expand_inverted_grey.044960530517ee37a1a9.svg)}.btn-dload.spinnershow[_ngcontent-%COMP%]{background-image:url(spinnersmall.8539076b5d15004b8953.svg)!important}.health-pon-report-filter[_ngcontent-%COMP%]   .col-filter[_ngcontent-%COMP%]{width:100%}.ccl-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{min-height:36px!important}@media screen and (max-width: 767px){.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:block}.mp-0[_ngcontent-%COMP%]{padding:0!important}.subscriber-trends-item[_ngcontent-%COMP%]{width:100%}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:0%!important}}@media screen and (min-width: 768px) and (max-width: 1140px){.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:block}.mp-0[_ngcontent-%COMP%]{padding:0!important}.subscriber-trends-item[_ngcontent-%COMP%]{width:100%}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:0%!important}.chart-box[_ngcontent-%COMP%]{width:100%!important}}.Ont-chart-area-info[_ngcontent-%COMP%]{overflow-x:scroll;white-space:nowrap;width:385.8px}.Ont-chart-area[_ngcontent-%COMP%]{width:1000px}.Ont-chart-area-info[_ngcontent-%COMP%]::-webkit-scrollbar{width:3px}.Ont-chart-area-info[_ngcontent-%COMP%]::-webkit-scrollbar-track{width:3px;background:#f1f1f1}.Ont-chart-area-info[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{width:3px;background:#ddd}.subtitle[_ngcontent-%COMP%]{text-align:center;margin:10px;color:#666;font-size:14px;line-height:18px;font-weight:normal}.mt-42p[_ngcontent-%COMP%]{margin-top:42px}.chrat-secondary-title[_ngcontent-%COMP%]{font-weight:400;font-size:24px;line-height:30px}.chrat-secondary-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-left:6px;font-weight:400;font-size:18px;line-height:23px;color:#4c4c4c}\"]\n  });\n  return AetimeseriesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}