{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"src/app/sys-admin/services/common.service\";\nimport * as i5 from \"src/app-services/translate.service\";\nimport * as i6 from \"../../services/endpoint-management.service\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"@angular/forms\";\nconst _c0 = [\"infoModal\"];\nfunction FlowDataComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"span\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction FlowDataComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"span\", 15);\n    i0.ɵɵelement(2, \"img\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function FlowDataComponent_div_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.success = false;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[\"Changes saved successfully\"], \" \");\n  }\n}\nfunction FlowDataComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r5.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", item_r5.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.content, \" \");\n  }\n}\nexport let FlowDataComponent = /*#__PURE__*/(() => {\n  class FlowDataComponent {\n    constructor(router, dialogService, sso, commonOrgService, translateService, service, titleService) {\n      this.router = router;\n      this.dialogService = dialogService;\n      this.sso = sso;\n      this.commonOrgService = commonOrgService;\n      this.translateService = translateService;\n      this.service = service;\n      this.titleService = titleService;\n      this.loading = false;\n      this.showButton = false;\n      this.languageChange = false;\n      this.useAsmApplication = true;\n      this.success = false;\n      this.dataSourceItems = [];\n      const url = this.router.url;\n      this.ORG_ID = this.sso.getOrganizationID(url);\n      this.language = this.translateService.defualtLanguage;\n      this.translateSubscribe = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language['ASM Application']} - ${this.language['Configurations']} - ${this.language['flowconfiguration']} - ${this.MODULE === 'systemAdministration' ? this.language['System Administration'] : this.language['administration']} - ${this.language['Calix Cloud']}`);\n      });\n      this.MODULE = this.sso.getRedirectModule(url);\n      this.titleService.setTitle(`${this.language['ASM Application']} - ${this.language['Configurations']} - ${this.language['flowconfiguration']} - ${this.MODULE === 'systemAdministration' ? this.language['System Administration'] : this.language['administration']} - ${this.language['Calix Cloud']}`);\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.dataSourceItems = [{\n        name: this.language['Use ASM applications data'],\n        value: true,\n        content: this.language['Uses information detected in IPFIX data provided from AXOS systems']\n      }, {\n        name: this.language['Use application data defined by my organization'],\n        value: false,\n        content: this.language['Uses definitions from the Applications > Definitions tab']\n      }];\n      this.getData();\n    }\n    ngOnDestroy() {\n      if (this.translateSubscribe) {\n        this.translateSubscribe.unsubscribe();\n      }\n      if (this.listSubs) {\n        this.listSubs.unsubscribe();\n      }\n      if (this.updateSubs) {\n        this.updateSubs.unsubscribe();\n      }\n    }\n    getData() {\n      this.loading = true;\n      this.listSubs = this.service.getOrg(this.ORG_ID).subscribe(res => {\n        if (res) {\n          this.orgData = res;\n          this.useAsmApplication = res === null || res === void 0 ? void 0 : res.useAsmApplications;\n        } else {\n          this.showButton = true;\n        }\n        this.loading = false;\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    closeModal() {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n    }\n    openInfoModal() {\n      this.closeModal();\n      this.modalRef = this.dialogService.open(this.infoModal);\n    }\n    save() {\n      this.loading = true;\n      this.commonOrgService.closeAlert();\n      const params = {\n        useAsmApplications: this.useAsmApplication\n      };\n      this.updateSubs = this.service.updateOrgPatch(this.ORG_ID, params).subscribe(res => {\n        this.useAsmApplication = res === null || res === void 0 ? void 0 : res.useAsmApplications;\n        if (!this.useAsmApplication) {\n          this.routeToRealTimeDelay();\n        }\n        this.loading = false;\n        this.showButton = false;\n        this.success = true;\n        this.getData();\n      }, err => {\n        // this.getData();\n        this.closeModal();\n        this.pageErrorHandle(err);\n        //this.warningmsg = false;\n      });\n    }\n\n    detectChange(event) {\n      var _a;\n      if (this.useAsmApplication === ((_a = this.orgData) === null || _a === void 0 ? void 0 : _a.useAsmApplications)) {\n        this.showButton = false;\n      } else {\n        this.showButton = true;\n      }\n    }\n    pageErrorHandle(err, value) {\n      let errorInfo = '';\n      if (err.status == 400) {\n        if (err.error === null) {\n          this.infoBody = this.language['Invalid Request'];\n        } else {\n          this.infoBody = this.commonOrgService.pageInvalidRqstErrorHandle(err);\n        }\n        this.infoTitle = 'Error';\n        this.openInfoModal();\n        this.loading = false;\n      } else {\n        if (err.status == 401) {\n          errorInfo = this.language['Access Denied'];\n        } else {\n          errorInfo = this.commonOrgService.pageErrorHandle(err);\n          /* if (err.status == 404 && errorInfo == \"Invalid organization provided for update\") {\r\n            errorInfo = this.language[\"Invalid Late Delay value provided for update\"];\r\n          } */\n        }\n\n        this.commonOrgService.openErrorAlert(errorInfo);\n        this.commonOrgService.pageScrollTop();\n        this.loading = false;\n      }\n    }\n    routeToRealTimeDelay() {\n      this.service.flowDataSync.next({\n        flowDataTab: false\n      });\n      this.router.navigateByUrl(`/${this.MODULE}/flowAnalyze/configurations/realtime-delay`);\n    }\n  }\n  FlowDataComponent.ɵfac = function FlowDataComponent_Factory(t) {\n    return new (t || FlowDataComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.CommonService), i0.ɵɵdirectiveInject(i5.TranslateService), i0.ɵɵdirectiveInject(i6.EndpointManagementService), i0.ɵɵdirectiveInject(i7.Title));\n  };\n  FlowDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlowDataComponent,\n    selectors: [[\"app-flow-data\"]],\n    viewQuery: function FlowDataComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infoModal = _t.first);\n      }\n    },\n    decls: 12,\n    vars: 9,\n    consts: [[1, \"container\", \"px-0\", \"position-relative\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-6\", \"ccl-form\", \"mt-3\"], [\"class\", \"w-100 alert alert-success fade show my-3\", 4, \"ngIf\"], [1, \"mb-0\"], [\"width\", \"100%\", \"bindValue\", \"value\", \"bindLabel\", \"name\", 1, \"ng-select-datasource\", 3, \"items\", \"clearable\", \"searchable\", \"ngModel\", \"ngModelChange\", \"change\"], [\"ng-option-tmp\", \"\"], [1, \"col-12\"], [\"type\", \"button\", 1, \"btn-default\", \"btn-primary\", \"mt-3\", 3, \"disabled\", \"click\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert-success\", \"fade\", \"show\", \"my-3\"], [1, \"mr-3\"], [\"src\", \"../../../../assets/img/ic_success-circle-outline.svg\", \"width\", \"24px\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\"], [1, \"text-truncate\", 3, \"title\"], [1, \"text-truncate\", \"select-muted-text\", 3, \"title\"]],\n    template: function FlowDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FlowDataComponent_div_1_Template, 5, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, FlowDataComponent_div_4_Template, 7, 1, \"div\", 4);\n        i0.ɵɵelementStart(5, \"label\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ng-select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function FlowDataComponent_Template_ng_select_ngModelChange_7_listener($event) {\n          return ctx.useAsmApplication = $event;\n        })(\"change\", function FlowDataComponent_Template_ng_select_change_7_listener($event) {\n          return ctx.detectChange($event);\n        });\n        i0.ɵɵtemplate(8, FlowDataComponent_ng_template_8_Template, 4, 4, \"ng-template\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FlowDataComponent_Template_button_click_10_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.success);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language[\"Data Source\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"items\", ctx.dataSourceItems)(\"clearable\", false)(\"searchable\", false)(\"ngModel\", ctx.useAsmApplication);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.showButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"save\"], \" \");\n      }\n    },\n    directives: [i8.NgIf, i9.NgSelectComponent, i10.NgControlStatus, i10.NgModel, i9.ɵf],\n    styles: [\".select-muted-text[_ngcontent-%COMP%]{color:gray}  .ng-select-datasource .ng-dropdown-panel .ng-dropdown-panel-items .ng-option{height:auto!important}\"]\n  });\n  return FlowDataComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}