{"ast":null,"code":"import { append as svgAppend, attr as svgAttr, create as svgCreate } from 'tiny-svg';\nvar CROSS_COLOR = '#CCC',\n  BORDER_COLOR = 'rgba(0,0,0,0.1)';\n\n/**\n * A diagram-js extension that shows a (0, 0) origin indicator\n * on the canvas as well as (optionally) the canvas borders.\n *\n * @param {Object} [config]\n * @param {Canvas} canvas\n */\nexport default function ConfigureOrigin(config, canvas) {\n  config = config || {};\n  var borderColor = config.borderColor || BORDER_COLOR,\n    crossColor = config.crossColor || CROSS_COLOR;\n  var w = 30,\n    h = 2,\n    w_half = w / 2,\n    s = -h / 2,\n    lineStart = w_half + 7;\n  var parent = canvas.getLayer('djs-origin', -1);\n  var g, line, cross, label;\n  g = createEl('g', {\n    'pointer-events': 'none'\n  });\n  svgAppend(parent, g);\n  if (config.showBorder !== false) {\n    // the dashed lines, marking positive document coordinates\n    line = createEl('path', {\n      'class': cls('border'),\n      'd': path(['M', -lineStart, s, 'H', -1000, 'M', lineStart, s, 'H', 6000, 'M', s, -lineStart, 'V', -1000, 'M', s, lineStart, 'V', 3000]),\n      'fill': 'none',\n      'stroke': borderColor,\n      'stroke-width': h + 'px',\n      'stroke-dasharray': '6, 6',\n      'shape-rendering': 'crispedges'\n    });\n    svgAppend(g, line);\n  }\n\n  // the cross that marks the diagram origin\n  cross = createEl('path', {\n    d: path(['M', -w_half, s, 'H', w_half, 'M', s, -w_half, 'V', w_half]),\n    'class': cls('cross'),\n    'fill': 'none',\n    'stroke': crossColor,\n    'stroke-width': h + 'px',\n    'stroke-linecap': 'round'\n  });\n  svgAppend(g, cross);\n  label = createEl('text', {\n    x: -40,\n    y: -10,\n    fill: crossColor,\n    'class': cls('label')\n  });\n  label.textContent = '(0, 0)';\n  svgAppend(g, label);\n}\nConfigureOrigin.$inject = ['config.origin', 'canvas'];\n\n// helpers ///////////////////////////////////\n\nfunction path(parts) {\n  return parts.join(' ');\n}\nfunction cls(name) {\n  return 'djs-origin-' + name;\n}\nfunction createEl(type, attrs) {\n  var el = svgCreate(type);\n  svgAttr(el, attrs);\n  return el;\n}","map":null,"metadata":{},"sourceType":"module"}