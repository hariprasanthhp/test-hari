{"ast":null,"code":"export default function CreateConnectionHandler(canvas, layouter) {\n  this._canvas = canvas;\n  this._layouter = layouter;\n}\nCreateConnectionHandler.$inject = ['canvas', 'layouter'];\n\n// api //////////////////////\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.element.Base} context.source the source object\n * @param {djs.element.Base} context.target the parent object\n * @param {Point} context.position position of the new element\n */\nCreateConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n    source = context.source,\n    target = context.target,\n    parent = context.parent,\n    parentIndex = context.parentIndex,\n    hints = context.hints;\n  if (!source || !target) {\n    throw new Error('source and target required');\n  }\n  if (!parent) {\n    throw new Error('parent required');\n  }\n  connection.source = source;\n  connection.target = target;\n  if (!connection.waypoints) {\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\n  }\n\n  // add connection\n  this._canvas.addConnection(connection, parent, parentIndex);\n  return connection;\n};\nCreateConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection;\n  this._canvas.removeConnection(connection);\n  connection.source = null;\n  connection.target = null;\n  return connection;\n};","map":null,"metadata":{},"sourceType":"module"}