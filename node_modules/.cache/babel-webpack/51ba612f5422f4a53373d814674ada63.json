{"ast":null,"code":"import { BackgroundSiteScanModel } from '../../shared/model/background-site-scan.model';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../../shared/service/background-site-scan.service\";\nimport * as i3 from \"../../../../shared/services/sso-auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction BackgroundSiteScanComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"span\", 14);\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function BackgroundSiteScanComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.hideError();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r0.errorMsg, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction BackgroundSiteScanComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelementStart(2, \"div\", 20);\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.language.Loading);\n  }\n}\nfunction BackgroundSiteScanComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[\"Note: To view Site Scan results, go to a subscriber record in Support Cloud and select the Wi-Fi tile.\"], \" \");\n  }\n}\nexport let BackgroundSiteScanComponent = /*#__PURE__*/(() => {\n  class BackgroundSiteScanComponent {\n    constructor(translateService, backgroundSiteScanService, sso, router, titleService) {\n      this.translateService = translateService;\n      this.backgroundSiteScanService = backgroundSiteScanService;\n      this.sso = sso;\n      this.router = router;\n      this.titleService = titleService;\n      this.backgroundSiteScanObj = new BackgroundSiteScanModel();\n      this.showError = false;\n      this.showSuccess = false;\n      this.loading = false;\n      this.hasWriteAccess = false;\n      this.show = false;\n      this.allowSubnetConfig = true;\n      let enttlmnts = this.sso.getEntitlements();\n      this.orgId = this.sso.getOrgId();\n      this.scopes = this.sso.getScopes();\n      if (this.router.url.includes('cco/operations/cco-subscriber-operations')) {\n        // this.titleService.setTitle(' Site Scan - Configurations - Subscriber Operations - Operations - Operations - Calix Cloud');\n        if (!(enttlmnts[118] || enttlmnts[120]) && this.scopes['cloud.rbac.coc.operations.subscriber.configurations']) {\n          this.router.navigate(['/cco/operations/cco-subscriber-operations/configurations/dial-plan']);\n          return;\n        }\n        if (!(enttlmnts[118] || enttlmnts[120]) && !this.scopes['cloud.rbac.coc.operations.subscriber.configurations']) {\n          this.router.navigate(['/cco']);\n          return;\n        }\n        if (!(this.scopes && this.scopes['cloud.rbac.csc.netops.config.site_scan'] !== undefined && this.scopes['cloud.rbac.csc.netops.config.site_scan'].indexOf('read') !== -1) && this.scopes['cloud.rbac.coc.operations.subscriber.configurations']) {\n          this.router.navigate(['/cco/operations/cco-subscriber-operations/configurations/dial-plan']);\n          return;\n        }\n        if (!(this.scopes && this.scopes['cloud.rbac.csc.netops.config.site_scan'] !== undefined && this.scopes['cloud.rbac.csc.netops.config.site_scan'].indexOf('read') !== -1) && !this.scopes['cloud.rbac.coc.operations.subscriber.configurations']) {\n          this.router.navigate(['/cco']);\n          return;\n        }\n      } else if (this.router.url.includes('/support/netops-management')) {\n        // this.titleService.setTitle('Site Scan - Configurations - Netops - Support - Calix Cloud');\n      }\n    }\n    setTitle(url) {\n      if (this.router.url.includes('cco/operations/cco-subscriber-operations')) {\n        this.titleService.setTitle(`${this.language['Site_Scan']} - ${this.language['Configurations']} - ${this.language['Subscriber_Operations']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else if (this.router.url.includes('/support/netops-management')) {\n        this.titleService.setTitle(`${this.language['Site_Scan']} - ${this.language['Configurations']} - ${this.language['NetOps']} - ${this.language['Support']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      console.log(\"language\", this.language);\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.successMsg = this.language['successfully updated'];\n        this.setTitle(this.router.url);\n      });\n      this.setTitle(this.router.url);\n      this.getScopes();\n      let entitlementsObj = this.sso.getEntitlements();\n      if (entitlementsObj[118] || entitlementsObj[120]) {\n        this.getBackGroundsiteScan();\n      }\n      if (!this.router.url.includes('cco/operations/cco-subscriber-operations')) {\n        this.show = false;\n      } else {\n        this.show = true;\n      }\n      if (environment.VALIDATE_SCOPE) {\n        this.scopes['cloud.rbac.csc.netops.config.site_scan'] = this.scopes['cloud.rbac.csc.netops.config.site_scan'] ? this.scopes['cloud.rbac.csc.netops.config.site_scan'] : [];\n        if (this.scopes && this.scopes['cloud.rbac.csc.netops.config.site_scan'] && this.scopes['cloud.rbac.csc.netops.config.site_scan'].indexOf('write') !== -1) {\n          this.hasWriteAccess = true;\n        }\n      } else {\n        this.hasWriteAccess = true;\n      }\n      let enttlmnts = this.sso.getEntitlements();\n      if (this.router.url.includes('cco/operations') && enttlmnts[210] && !enttlmnts[102]) {\n        this.allowSubnetConfig = false;\n      }\n    }\n    getBackGroundsiteScan() {\n      this.loading = true;\n      this.backgroundSiteScanService.getAutositeScanStatus(this.orgId).subscribe(res => {\n        this.backgroundSiteScanObj = res;\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n        this.errorMsg = error.statusText;\n        this.showError = true;\n      });\n    }\n    onSubmit() {\n      this.loading = true;\n      this.backgroundSiteScanService.updateAutoSiteScanStatus(this.backgroundSiteScanObj, this.orgId).subscribe(res => {\n        this.showSuccess = true;\n        this.successMsg = this.language['successfully updated'];\n        this.getBackGroundsiteScan();\n      }, error => {\n        this.loading = false;\n        this.errorMsg = error.statusText;\n        this.showError = true;\n      });\n    }\n    onCancel() {\n      this.getBackGroundsiteScan();\n    }\n    hideError() {\n      this.showError = false;\n      this.errorMsg = '';\n    }\n    hideSuccess() {\n      this.showSuccess = false;\n      this.successMsg = '';\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n    }\n    getScopes() {\n      let scopes = this.scopes;\n      if (environment.VALIDATE_SCOPE) {\n        scopes['cloud.rbac.csc.netops.config.site_scan'] = scopes['cloud.rbac.csc.netops.config.site_scan'] ? scopes['cloud.rbac.csc.netops.config.site_scan'] : [];\n        scopes['cloud.rbac.csc.netops.config.dial_plan'] = scopes['cloud.rbac.csc.netops.config.dial_plan'] ? scopes['cloud.rbac.csc.netops.config.dial_plan'] : [];\n        scopes['cloud.rbac.csc.netops.config.ext_file_server'] = scopes['cloud.rbac.csc.netops.config.ext_file_server'] ? scopes['cloud.rbac.csc.netops.config.ext_file_server'] : [];\n        scopes['cloud.rbac.csc.netops.config.secure_onboarding'] = scopes['cloud.rbac.csc.netops.config.secure_onboarding'] ? scopes['cloud.rbac.csc.netops.config.secure_onboarding'] : [];\n        scopes['cloud.rbac.csc.netops.config.self_heal'] = scopes['cloud.rbac.csc.netops.config.self_heal'] ? scopes['cloud.rbac.csc.netops.config.self_heal'] : [];\n        scopes['cloud.rbac.csc.netops.config.stale_purge'] = scopes['cloud.rbac.csc.netops.config.stale_purge'] ? scopes['cloud.rbac.csc.netops.config.stale_purge'] : [];\n        scopes['cloud.rbac.csc.netops.config.subnet_config'] = scopes['cloud.rbac.csc.netops.config.subnet_config'] ? scopes['cloud.rbac.csc.netops.config.subnet_config'] : [];\n        scopes['cloud.rbac.csc.netops.config.edgesuitesbulkprovisioning'] = scopes['cloud.rbac.csc.netops.config.edgesuitesbulkprovisioning'] ? scopes['cloud.rbac.csc.netops.config.edgesuitesbulkprovisioning'] : [];\n        scopes['cloud.rbac.csc.netops.config.speed_test'] = scopes['cloud.rbac.csc.netops.config.speed_test'] ? scopes['cloud.rbac.csc.netops.config.speed_test'] : [];\n        let scopeFlagCheck = {};\n        if (scopes && scopes['cloud.rbac.csc.netops.config.dial_plan'] !== undefined && scopes['cloud.rbac.csc.netops.config.dial_plan'].indexOf('read') !== -1) {\n          scopeFlagCheck.showDialPlan = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.ext_file_server'] !== undefined && scopes['cloud.rbac.csc.netops.config.ext_file_server'].indexOf('read') !== -1) {\n          scopeFlagCheck.showExtrnlFileSrvr = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.secure_onboarding'] !== undefined && scopes['cloud.rbac.csc.netops.config.secure_onboarding'].indexOf('read') !== -1) {\n          scopeFlagCheck.showSecureOnboarding = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.self_heal'] !== undefined && scopes['cloud.rbac.csc.netops.config.self_heal'].indexOf('read') !== -1) {\n          scopeFlagCheck.showSelfHeal = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.stale_purge'] !== undefined && scopes['cloud.rbac.csc.netops.config.stale_purge'].indexOf('read') !== -1) {\n          scopeFlagCheck.showStaleDevicePurge = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.subnet_config'] !== undefined && scopes['cloud.rbac.csc.netops.config.subnet_config'].indexOf('read') !== -1) {\n          scopeFlagCheck.showSubnetConfig = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.site_scan'] !== undefined && scopes['cloud.rbac.csc.netops.config.site_scan'].indexOf('read') !== -1) {\n          scopeFlagCheck.showAutoSiteScan = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.edgesuitesbulkprovisioning'] !== undefined && scopes['cloud.rbac.csc.netops.config.edgesuitesbulkprovisioning'].indexOf('read') !== -1) {\n          scopeFlagCheck.showEdgeSuite = true;\n        }\n        if (scopes && scopes['cloud.rbac.csc.netops.config.speed_test'] !== undefined && scopes['cloud.rbac.csc.netops.config.speed_test'].indexOf('read') !== -1) {\n          scopeFlagCheck.showSpeedTest = true;\n        }\n        if (this.router.url.includes('support/netops-management')) {\n          if (scopeFlagCheck.showAutoSiteScan && this.sso.getCscType() !== 'DME') {} else if (scopeFlagCheck.showDialPlan) {\n            this.router.navigate(['./support/netops-management/configuration/dial-plan']);\n          } else if (scopeFlagCheck.showExtrnlFileSrvr) {\n            this.router.navigate(['./support/netops-management/configuration/external-file-server-list']);\n          } else if (scopeFlagCheck.showSecureOnboarding && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/configuration/secure-onboarding']);\n          } else if (scopeFlagCheck.showSelfHeal && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/configuration/self-heal']);\n          } else if (scopeFlagCheck.showStaleDevicePurge) {\n            this.router.navigate(['./support/netops-management/configuration/stale-device-purge']);\n          } else if (scopeFlagCheck.showSubnetConfig) {\n            this.router.navigate(['./support/netops-management/configuration/subnet-configuration']);\n          } else if (scopeFlagCheck.showSpeedTest && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/configuration/speed-test']);\n          } else if (scopeFlagCheck.showEdgeSuite) {\n            this.router.navigate(['./support/netops-management/configuration/edge-suites']);\n          }\n        }\n      } else if (this.sso.getCscType() === 'DME' && this.router.url.includes('support/netops-management')) {\n        this.router.navigate(['./support/netops-management/configuration/dial-plan']);\n      }\n    }\n  }\n  BackgroundSiteScanComponent.ɵfac = function BackgroundSiteScanComponent_Factory(t) {\n    return new (t || BackgroundSiteScanComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.BackgroundSiteScanService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.Title));\n  };\n  BackgroundSiteScanComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BackgroundSiteScanComponent,\n    selectors: [[\"app-background-site-scan\"]],\n    decls: 17,\n    vars: 9,\n    consts: [[\"id\", \"background-site-scan\", 1, \"tab-pane\", \"position-relative\"], [1, \"pb-2\"], [\"class\", \"w-100 alert alert alert-danger  fade show\", 4, \"ngIf\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"d-block\", \"d-sm-none\", \"ccl-Secondary-title\", \"mb-2\", \"col-md-12\", \"border-bottom\"], [\"class\", \"mt-2 note-site-scan\", 4, \"ngIf\"], [\"id\", \"self-heal-form\"], [1, \"row\", \"p-0\", \"my-3\"], [1, \"float-left\", \"px-3\"], [1, \"checkbox\", \"switcher\"], [\"for\", \"backgroundSiteScanCheckBox\", 3, \"ngClass\"], [\"type\", \"checkbox\", \"name\", \"backgroundSiteScan\", \"id\", \"backgroundSiteScanCheckBox\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\", \"change\"], [1, \"mx-2\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", \"id\", \"hide-error-btn\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"mt-2\", \"note-site-scan\"]],\n    template: function BackgroundSiteScanComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, BackgroundSiteScanComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, BackgroundSiteScanComponent_div_3_Template, 5, 1, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, BackgroundSiteScanComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"label\", 10);\n        i0.ɵɵelementStart(12, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function BackgroundSiteScanComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.backgroundSiteScanObj.backgroundSiteScanEnabled = $event;\n        })(\"change\", function BackgroundSiteScanComponent_Template_input_change_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"span\");\n        i0.ɵɵelement(14, \"small\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"span\", 12);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Site_Scan, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.show);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", !ctx.allowSubnetConfig || !ctx.hasWriteAccess ? \"switch-disabled\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"checked\", ctx.backgroundSiteScanObj.backgroundSiteScanEnabled)(\"ngModel\", ctx.backgroundSiteScanObj.backgroundSiteScanEnabled)(\"disabled\", !ctx.hasWriteAccess || !ctx.allowSubnetConfig ? true : null);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.backgroundSiteScanObj.backgroundSiteScanEnabled ? ctx.language[\"Enabled\"] : ctx.language[\"Disabled\"], \" \");\n      }\n    },\n    directives: [i6.NgIf, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, i6.NgClass, i7.CheckboxControlValueAccessor, i7.NgControlStatus, i7.NgModel],\n    styles: [\"div.checkbox.switcher[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]{float:right}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding:0;cursor:pointer}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{vertical-align:middle}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{position:relative;display:inline-block;width:45px;height:25px;background:#ffffff;border:1px solid #0279ff;border-radius:50px;transition:all .3s ease-in-out;padding:5px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{position:absolute;display:block;width:20px;height:19px;background:#0279ff;border-radius:50%;transition:all .3s ease-in-out;left:2px;top:2px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]{background:#269bff;border-color:#269bff}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{left:50%;background:#ffffff}form[_ngcontent-%COMP%]{width:100%}.ng-select[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:26px!important;background:#f8f8fa!important;border:1px solid #dfdfdf!important}.opacity-50[_ngcontent-%COMP%]{opacity:.5}.note-site-scan[_ngcontent-%COMP%]{color:#212529}.switch-disabled[_ngcontent-%COMP%]{opacity:.5}.switch-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{cursor:not-allowed}\"]\n  });\n  return BackgroundSiteScanComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}