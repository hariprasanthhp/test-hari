{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/sys-admin/services/common.service\";\nimport * as i5 from \"src/app/cco/issues/service/issue.service\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../workflow-shared/summary-recepients/summary-recepients.component\";\nfunction SummaryComponent_section_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 18);\n    i0.ɵɵelementStart(5, \"a\", 19);\n    i0.ɵɵelement(6, \"img\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r2.workflowObj == null ? null : ctx_r2.workflowObj.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.workflowObj == null ? null : ctx_r2.workflowObj.name, \" \");\n  }\n}\nfunction SummaryComponent_section_0_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 7);\n    i0.ɵɵelementStart(5, \"span\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵelementStart(8, \"span\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.language[\"All Regions\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.language[\"All Locations\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.language[\"All Systems\"] ? ctx_r3.language[\"All Systems\"] : \"All Systems\");\n  }\n}\nfunction SummaryComponent_section_0_div_20_div_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lgeo_r7 = i0.ɵɵnextContext().$implicit;\n    const geo_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.geoInfo[geo_r5 == null ? null : geo_r5.key][lgeo_r7 == null ? null : lgeo_r7.key] == null ? null : ctx_r8.geoInfo[geo_r5 == null ? null : geo_r5.key][lgeo_r7 == null ? null : lgeo_r7.key].length, \" System(s)\");\n  }\n}\nfunction SummaryComponent_section_0_div_20_div_5_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sys_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sys_r12);\n  }\n}\nfunction SummaryComponent_section_0_div_20_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"span\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtemplate(6, SummaryComponent_section_0_div_20_div_5_div_6_Template, 3, 1, \"div\", 0);\n    i0.ɵɵtemplate(7, SummaryComponent_section_0_div_20_div_5_div_7_Template, 3, 1, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lgeo_r7 = ctx.$implicit;\n    const geo_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r6.loctionsObj[lgeo_r7 == null ? null : lgeo_r7.key]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r6.geoInfo[geo_r5 == null ? null : geo_r5.key][lgeo_r7 == null ? null : lgeo_r7.key] == null ? null : ctx_r6.geoInfo[geo_r5 == null ? null : geo_r5.key][lgeo_r7 == null ? null : lgeo_r7.key].indexOf(\"All Systems\")) == -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.geoInfo[geo_r5 == null ? null : geo_r5.key][lgeo_r7 == null ? null : lgeo_r7.key]);\n  }\n}\nfunction SummaryComponent_section_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3);\n    i0.ɵɵtemplate(5, SummaryComponent_section_0_div_20_div_5_Template, 8, 3, \"div\", 21);\n    i0.ɵɵpipe(6, \"keyvalue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const geo_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.regionsObj[geo_r5 == null ? null : geo_r5.key]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 2, ctx_r4.geoInfo[geo_r5 == null ? null : geo_r5.key]));\n  }\n}\nfunction SummaryComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵtemplate(1, SummaryComponent_section_0_div_1_Template, 7, 2, \"div\", 1);\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵelementStart(7, \"div\", 6);\n    i0.ɵɵelementStart(8, \"div\", 7);\n    i0.ɵɵelementStart(9, \"span\", 8);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 3);\n    i0.ɵɵelementStart(12, \"div\", 9);\n    i0.ɵɵelementStart(13, \"div\", 10);\n    i0.ɵɵelementStart(14, \"span\", 8);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 10);\n    i0.ɵɵelementStart(17, \"span\", 8);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, SummaryComponent_section_0_div_19_Template, 10, 3, \"div\", 11);\n    i0.ɵɵtemplate(20, SummaryComponent_section_0_div_20_Template, 7, 4, \"div\", 12);\n    i0.ɵɵpipe(21, \"keyvalue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 7);\n    i0.ɵɵelementStart(23, \"div\", 4);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 13);\n    i0.ɵɵelement(26, \"app-summary-recepients\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showTitle);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"OLT System\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"Region(s)\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"Location(s)\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"System(s)\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.workflowObj == null ? null : ctx_r0.workflowObj.regions == null ? null : ctx_r0.workflowObj.regions.indexOf(\"All\")) !== -1 || !(ctx_r0.workflowObj == null ? null : ctx_r0.workflowObj.regions == null ? null : ctx_r0.workflowObj.regions.length));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(21, 9, ctx_r0.geoInfo));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"Recipients\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"workflowObj\", ctx_r0.workflowObj);\n  }\n}\nfunction SummaryComponent_section_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"div\", 24);\n    i0.ɵɵelementStart(3, \"div\", 25);\n    i0.ɵɵelementStart(4, \"div\", 26);\n    i0.ɵɵelementStart(5, \"div\", 27);\n    i0.ɵɵelementStart(6, \"div\", 28);\n    i0.ɵɵelementStart(7, \"span\", 29);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.language.Loading);\n  }\n}\nexport let SummaryComponent = /*#__PURE__*/(() => {\n  class SummaryComponent {\n    constructor(translateService, http, route, commonOrgService, issueService, titleService) {\n      this.translateService = translateService;\n      this.http = http;\n      this.route = route;\n      this.commonOrgService = commonOrgService;\n      this.issueService = issueService;\n      this.titleService = titleService;\n      this.regionsObj = {};\n      this.loctionsObj = {\n        'All': 'All Locations'\n      };\n      this.geoInfo = {};\n      this.showAllRegions = false;\n      this.regLocSysMapInfo = [];\n    }\n    set workflowObj(data) {\n      var _a;\n      console.log(data);\n      if (((_a = data === null || data === void 0 ? void 0 : data.regions) === null || _a === void 0 ? void 0 : _a.indexOf('All')) !== -1) {\n        this.showAllRegions = true;\n      }\n      this._workflowObj = data;\n    }\n    get workflowObj() {\n      return this._workflowObj;\n    }\n    ngOnInit() {\n      this.loader = true;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      let notificationId = this.route.snapshot.paramMap.get(\"notificationId\");\n      if (notificationId) {\n        this.titleService.setTitle('Optical Outliers Notifications - Email Notifications - Network Operations - Operations - Operations - Calix Cloud');\n        this.showTitle = true;\n        this.getRecordById(notificationId);\n      } else {\n        this.getRegions();\n      }\n    }\n    getRegions() {\n      this.regionsSubject = this.issueService.getRegions().subscribe(res => {\n        var _a, _b;\n        if (res) {\n          res = this.issueService.appendFqn(res);\n          let data = {};\n          res === null || res === void 0 ? void 0 : res.forEach(element => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            data[element === null || element === void 0 ? void 0 : element.id] = element === null || element === void 0 ? void 0 : element.name;\n            if (((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.regions) === null || _b === void 0 ? void 0 : _b.length) && ((_d = (_c = this.workflowObj) === null || _c === void 0 ? void 0 : _c.regions) === null || _d === void 0 ? void 0 : _d.indexOf(element === null || element === void 0 ? void 0 : element.id)) !== -1) {\n              //this.geoInfo[element?.id] = [];\n              this.geoInfo[element === null || element === void 0 ? void 0 : element.id] = {};\n            }\n            if (((_f = (_e = this.workflowObj) === null || _e === void 0 ? void 0 : _e.locations) === null || _f === void 0 ? void 0 : _f.length) && ((_h = (_g = this.workflowObj) === null || _g === void 0 ? void 0 : _g.locations) === null || _h === void 0 ? void 0 : _h.indexOf('All')) !== -1) {\n              let rdata = this.geoInfo;\n              for (let rkey in rdata) {\n                this.geoInfo[rkey]['All'] = ['All Systems'];\n              }\n            }\n          });\n          this.regionsObj = data;\n          if ((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.regions) === null || _b === void 0 ? void 0 : _b.length) {\n            this.loadLocationSystem();\n          } else {\n            this.loader = false;\n          }\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n    loadLocationValue() {\n      let ids = this.workflowObj.regions;\n      if (ids === null || ids === void 0 ? void 0 : ids.length) {\n        let regionQuery = '';\n        if (ids.length) {\n          if (ids.indexOf('All') !== -1) {\n            return;\n          }\n          ids.forEach(element => {\n            if (element == 'All') {\n              return;\n            }\n            regionQuery += `&region=${element}`;\n          });\n          this.locationsSubject = this.http.get(`${environment.API_BASE_URL}nfa/locations?${regionQuery}`).subscribe(res => {\n            var _a, _b;\n            if ((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.location) === null || _b === void 0 ? void 0 : _b.length) {\n              let dataMap = this.geoInfo;\n              res === null || res === void 0 ? void 0 : res.forEach(element => {\n                var _a, _b;\n                if (((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.location) === null || _b === void 0 ? void 0 : _b.indexOf(element === null || element === void 0 ? void 0 : element.id)) !== -1) {\n                  // if (dataMap[element?.regionId]?.indexOf('All') !== -1) {\n                  //   let index = dataMap[element?.regionId]?.indexOf('All');\n                  //   dataMap[element?.regionId]?.splice(index, 1);\n                  // }\n                  if (dataMap[element === null || element === void 0 ? void 0 : element.regionId]) {\n                    dataMap[element === null || element === void 0 ? void 0 : element.regionId].push(element === null || element === void 0 ? void 0 : element.name);\n                  } else {\n                    dataMap[element === null || element === void 0 ? void 0 : element.regionId] = [element === null || element === void 0 ? void 0 : element.name];\n                  }\n                }\n              });\n              console.log(dataMap);\n              this.geoInfo = dataMap;\n            }\n          }, error => {});\n        }\n      }\n    }\n    generateSystemDetails() {\n      let regionids = this.workflowObj.regions;\n      let locationids = this.workflowObj.locations;\n      let regionQuery = '';\n      regionids === null || regionids === void 0 ? void 0 : regionids.forEach(element => {\n        if (element == 'All') {\n          return;\n        }\n        if (regionQuery) {\n          regionQuery += `&`;\n        }\n        regionQuery += `region=${element}`;\n      });\n      let locationQuery = '';\n      locationids === null || locationids === void 0 ? void 0 : locationids.forEach(element => {\n        if (element == 'All') {\n          return;\n        }\n        locationQuery += `&location=${element}`;\n      });\n      return this.http.get(`${environment.API_BASE_URL}nfa/systems/details?${regionQuery}${locationQuery}&includeDeleted=true`).pipe(catchError(err => {\n        err['api-error'] = true;\n        return of(err);\n      }));\n    }\n    mapRegLocSysInfo(data) {\n      var _a, _b, _c, _d;\n      //data = data.filter();\n      console.log(data);\n      let map = {};\n      let regions = {},\n        locations = {};\n      if ((_a = data === null || data === void 0 ? void 0 : data.devices) === null || _a === void 0 ? void 0 : _a.length) {\n        data.devices = (_b = data === null || data === void 0 ? void 0 : data.devices) === null || _b === void 0 ? void 0 : _b.filter(element => {\n          var _a;\n          return ((_a = this.workflowObj.systems) === null || _a === void 0 ? void 0 : _a.indexOf(element === null || element === void 0 ? void 0 : element.uuid)) !== -1;\n        });\n      }\n      (_c = data === null || data === void 0 ? void 0 : data.devices) === null || _c === void 0 ? void 0 : _c.sort((a, b) => {\n        var _a;\n        return (_a = a === null || a === void 0 ? void 0 : a.regionName) === null || _a === void 0 ? void 0 : _a.localeCompare(b === null || b === void 0 ? void 0 : b.regionName);\n      });\n      (_d = data === null || data === void 0 ? void 0 : data.devices) === null || _d === void 0 ? void 0 : _d.forEach(element => {\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid] == 'undefined') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid] = {};\n          regions[element === null || element === void 0 ? void 0 : element.regionuuid] = element === null || element === void 0 ? void 0 : element.regionName;\n        }\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] == 'undefined') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] = [];\n          locations[element === null || element === void 0 ? void 0 : element.locationuuid] = element === null || element === void 0 ? void 0 : element.locationName;\n        }\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] == 'object') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid].push(element === null || element === void 0 ? void 0 : element.name);\n        }\n      });\n      return map;\n    }\n    mapRegLocSysInfoOld(data) {\n      var _a, _b, _c;\n      //data = data.filter();\n      console.log(data);\n      let map = {};\n      let regions = {},\n        locations = {};\n      (_a = data === null || data === void 0 ? void 0 : data.devices) === null || _a === void 0 ? void 0 : _a.sort((a, b) => {\n        var _a;\n        return (_a = a === null || a === void 0 ? void 0 : a.regionName) === null || _a === void 0 ? void 0 : _a.localeCompare(b === null || b === void 0 ? void 0 : b.regionName);\n      });\n      (_b = data === null || data === void 0 ? void 0 : data.devices) === null || _b === void 0 ? void 0 : _b.forEach(element => {\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid] == 'undefined') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid] = {};\n          regions[element === null || element === void 0 ? void 0 : element.regionuuid] = element === null || element === void 0 ? void 0 : element.regionName;\n        }\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] == 'undefined') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] = [];\n          locations[element === null || element === void 0 ? void 0 : element.locationuuid] = element === null || element === void 0 ? void 0 : element.locationName;\n        }\n        if (typeof map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid] == 'object') {\n          map[element === null || element === void 0 ? void 0 : element.regionuuid][element === null || element === void 0 ? void 0 : element.locationuuid].push({\n            id: element === null || element === void 0 ? void 0 : element.uuid,\n            name: element === null || element === void 0 ? void 0 : element.name\n          });\n        }\n      });\n      console.log(map);\n      let fData = [],\n        groupSystemIds = [];\n      for (let rkey in map) {\n        let tmp = {};\n        tmp = {\n          name: regions[rkey] ? regions[rkey] : rkey,\n          locations: []\n        };\n        for (let lKey in map[rkey]) {\n          let lTmp = {};\n          if (map[rkey][lKey]) {\n            lTmp = {\n              name: locations[lKey] ? locations[lKey] : lKey,\n              systems: []\n            };\n            (_c = map[rkey][lKey]) === null || _c === void 0 ? void 0 : _c.forEach(system => {\n              lTmp['systems'].push(system);\n            });\n          }\n          tmp.locations.push(lTmp);\n        }\n        fData.push(tmp);\n      }\n      console.log(fData);\n      /**\r\n       * sort logic\r\n       */\n      fData === null || fData === void 0 ? void 0 : fData.forEach((region, rkey) => {\n        var _a, _b;\n        region.locations = (_a = region === null || region === void 0 ? void 0 : region.locations) === null || _a === void 0 ? void 0 : _a.sort((a, b) => {\n          var _a;\n          return (_a = a === null || a === void 0 ? void 0 : a.name) === null || _a === void 0 ? void 0 : _a.localeCompare(b === null || b === void 0 ? void 0 : b.name);\n        });\n        (_b = region === null || region === void 0 ? void 0 : region.locations) === null || _b === void 0 ? void 0 : _b.forEach((location, lkey) => {\n          var _a, _b;\n          location.systems = (_a = location === null || location === void 0 ? void 0 : location.systems) === null || _a === void 0 ? void 0 : _a.sort((a, b) => {\n            var _a;\n            return (_a = a === null || a === void 0 ? void 0 : a.name) === null || _a === void 0 ? void 0 : _a.localeCompare(b === null || b === void 0 ? void 0 : b.name);\n          });\n          let systems = [];\n          (_b = location === null || location === void 0 ? void 0 : location.systems) === null || _b === void 0 ? void 0 : _b.forEach(system => {\n            groupSystemIds.push(system.id);\n            systems.push(system.name);\n          });\n          location.systems = systems;\n        });\n      });\n      console.log(fData);\n      this.regLocSysMapInfo = fData;\n    }\n    loadLocationSystem() {\n      var _a, _b, _c, _d;\n      let ids = this.workflowObj.regions;\n      if (ids === null || ids === void 0 ? void 0 : ids.length) {\n        let regionQuery = '';\n        if (ids.length) {\n          if (ids.indexOf('All') !== -1) {\n            return;\n          }\n          ids.forEach(element => {\n            if (element == 'All') {\n              return;\n            }\n            if (regionQuery) {\n              regionQuery += `&`;\n            }\n            regionQuery += `region=${element}`;\n          });\n          const requests = {};\n          requests['locations'] = this.http.get(`${environment.API_BASE_URL}nfa/locations?${regionQuery}`).pipe(catchError(err => {\n            err['api-error'] = true;\n            return of(err);\n          }));\n          if (((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.systems) === null || _b === void 0 ? void 0 : _b.length) && ((_d = (_c = this.workflowObj) === null || _c === void 0 ? void 0 : _c.systems) === null || _d === void 0 ? void 0 : _d.indexOf()) == -1) {\n            requests['systems'] = this.generateSystemDetails();\n          }\n          forkJoin(requests).subscribe(res => {\n            var _a, _b, _c, _d, _e;\n            let regLocSysMap;\n            if (res['systems']) {\n              regLocSysMap = this.mapRegLocSysInfo(res['systems']);\n              console.log(regLocSysMap);\n            }\n            let dataMap = this.geoInfo;\n            if ((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.locations) === null || _b === void 0 ? void 0 : _b.length) {\n              res['locations'] = this.issueService.appendFqn(res['locations']);\n              (_c = res['locations']) === null || _c === void 0 ? void 0 : _c.forEach(element => {\n                var _a, _b, _c;\n                this.loctionsObj[element === null || element === void 0 ? void 0 : element.id] = element === null || element === void 0 ? void 0 : element.name;\n                if (((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.locations) === null || _b === void 0 ? void 0 : _b.indexOf(element === null || element === void 0 ? void 0 : element.id)) !== -1) {\n                  dataMap[element === null || element === void 0 ? void 0 : element.regionId][element === null || element === void 0 ? void 0 : element.id] = [];\n                  if (regLocSysMap && regLocSysMap[element === null || element === void 0 ? void 0 : element.regionId] && regLocSysMap[element === null || element === void 0 ? void 0 : element.regionId][element === null || element === void 0 ? void 0 : element.id]) {\n                    dataMap[element === null || element === void 0 ? void 0 : element.regionId][element === null || element === void 0 ? void 0 : element.id] = regLocSysMap[element === null || element === void 0 ? void 0 : element.regionId][element === null || element === void 0 ? void 0 : element.id];\n                  } else {\n                    dataMap[element === null || element === void 0 ? void 0 : element.regionId][element === null || element === void 0 ? void 0 : element.id] = ['All Systems'];\n                  }\n                } else if (((_c = this.workflowObj.regions) === null || _c === void 0 ? void 0 : _c.indexOf(element === null || element === void 0 ? void 0 : element.regionId)) !== -1) {\n                  //dataMap[element?.regionId]['All'] = ['All Systems'];\n                }\n              });\n            }\n            (_d = res['locations']) === null || _d === void 0 ? void 0 : _d.forEach(element => {\n              var _a, _b, _c, _d;\n              this.loctionsObj[element === null || element === void 0 ? void 0 : element.id] = element === null || element === void 0 ? void 0 : element.name;\n              if (((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.locations) === null || _b === void 0 ? void 0 : _b.indexOf(element === null || element === void 0 ? void 0 : element.id)) === -1 && ((_c = this.workflowObj.regions) === null || _c === void 0 ? void 0 : _c.indexOf(element === null || element === void 0 ? void 0 : element.regionId)) !== -1 && !((_d = Object.keys(dataMap[element === null || element === void 0 ? void 0 : element.regionId])) === null || _d === void 0 ? void 0 : _d.length)) {\n                dataMap[element === null || element === void 0 ? void 0 : element.regionId]['All'] = ['All Systems'];\n              }\n            });\n            for (let key in dataMap) {\n              if (!((_e = Object.keys(dataMap[key])) === null || _e === void 0 ? void 0 : _e.length)) {\n                dataMap[key]['All'] = ['All Systems'];\n              }\n            }\n            console.log(dataMap);\n            this.geoInfo = dataMap;\n            this.loader = false;\n          });\n        }\n      }\n    }\n    getRecordById(id) {\n      this.loader = true;\n      let url = `${environment.API_BASE_URL}health/config/notifications/${encodeURIComponent(id)}`;\n      this.http.get(url).subscribe(json => {\n        if (json && Object.keys(json).length) {\n          this.workflowObj = Object.assign(Object.assign({}, this.workflowObj), json);\n        }\n        this.getRegions();\n        this.loader = false;\n      }, err => {\n        console.log(err);\n        this.pageErrorHandle(err);\n      });\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.error = true;\n      this.loader = false;\n    }\n  }\n  SummaryComponent.ɵfac = function SummaryComponent_Factory(t) {\n    return new (t || SummaryComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.CommonService), i0.ɵɵdirectiveInject(i5.IssueService), i0.ɵɵdirectiveInject(i6.Title));\n  };\n  SummaryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SummaryComponent,\n    selectors: [[\"app-summary\"]],\n    inputs: {\n      workflowObj: \"workflowObj\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"row mb-2\", 4, \"ngIf\"], [1, \"row\", \"mt-3\"], [1, \"col-md-8\"], [1, \"border-bottom\", \"cco-secondary-title\", \"pb-1\"], [1, \"summary-info-table\", \"summary-olt-table\", \"px-3\"], [1, \"row\", \"border-bottom\"], [1, \"col-md-4\"], [1, \"summary-label\"], [1, \"row\"], [1, \"col-md-6\"], [\"class\", \"row border-bottom\", 4, \"ngIf\"], [\"class\", \"row border-bottom\", 4, \"ngFor\", \"ngForOf\"], [1, \"summary-info-table\"], [3, \"workflowObj\"], [1, \"row\", \"mb-2\"], [1, \"col-md-12\", \"pb-1\", \"position-relative\"], [1, \"ccl-admin-title\", \"text-truncate\", \"pr-3\", 3, \"title\"], [1, \"close-page\"], [\"routerLink\", \"/cco/operations/alarms/health-alarm-notifications\", \"routerLinkActive\", \"active\", 1, \"cursor-pointer\"], [\"src\", \"assets/img/ic_close-44px.svg\", \"alt\", \"\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-12\"], [1, \"loader\", \"mt-5\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"]],\n    template: function SummaryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SummaryComponent_section_0_Template, 27, 11, \"section\", 0);\n        i0.ɵɵtemplate(1, SummaryComponent_section_1_Template, 9, 1, \"section\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loader);\n      }\n    },\n    directives: [i7.NgIf, i7.NgForOf, i8.SummaryRecepientsComponent, i3.RouterLinkWithHref, i3.RouterLinkActive],\n    pipes: [i7.KeyValuePipe],\n    styles: [\".summary-info-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;margin-bottom:0}.summary-info-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #EBEAEF!important}.summary-info-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:15px;font-style:normal;font-weight:400!important;line-height:24px;letter-spacing:0em;text-align:left;color:#4c4c4c;border:none!important;padding:0 10px 0 0}.summary-info-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #EBEAEF!important}.summary-info-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-size:15px;font-style:normal;font-weight:400!important;line-height:24px;letter-spacing:0em;text-align:left;color:gray;width:50%;border:none!important;padding:0 10px;word-break:break-word!important}.monitored[_ngcontent-%COMP%]{max-height:300px;overflow:auto}.monitored[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{width:50%}.alarm-title[_ngcontent-%COMP%]{font-family:Source Sans Pro;font-size:42px;font-style:normal;font-weight:300;line-height:53px;letter-spacing:0em;text-align:left;overflow:hidden;text-overflow:ellipsis}.subgroups-but[_ngcontent-%COMP%]{background-color:#fff;border:none}.modal.fade[_ngcontent-%COMP%]   .modal-dialog[_ngcontent-%COMP%]{border-radius:26px;max-width:950px!important}.modal-title[_ngcontent-%COMP%]{font-weight:300;font-size:42px;line-height:53px;word-wrap:break-word;color:#1a1f22}.alarm-name-list[_ngcontent-%COMP%]{text-overflow:ellipsis;overflow:hidden;height:26px}.alarm-name-list-box[_ngcontent-%COMP%]{max-height:550px;overflow-y:scroll}.hover-row[_ngcontent-%COMP%]{color:#0279ff!important}.hover-row[_ngcontent-%COMP%]:hover{text-decoration:underline}.width-60[_ngcontent-%COMP%]{width:60%!important}.min-height-div[_ngcontent-%COMP%]{min-height:15px}.marg-b-38px[_ngcontent-%COMP%]{margin-bottom:38px}.close-page[_ngcontent-%COMP%]{position:absolute;right:15px;top:10px}.summary-label[_ngcontent-%COMP%]{font-size:15px;font-style:normal;font-weight:400;line-height:24px;text-align:left;color:gray}.summary-olt-table[_ngcontent-%COMP%]   .row.border-bottom[_ngcontent-%COMP%]{margin-bottom:-1px}.summary-olt-table[_ngcontent-%COMP%]   .row.border-bottom[_ngcontent-%COMP%]:last-child{margin-bottom:0}\"]\n  });\n  return SummaryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}