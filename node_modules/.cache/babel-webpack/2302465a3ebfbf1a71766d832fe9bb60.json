{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let SortDeviceDataPipe = /*#__PURE__*/(() => {\n  class SortDeviceDataPipe {\n    transform(value, showSerialNumberFirst) {\n      var _a, _b, _c, _d;\n      /* {\r\n        \"_id\": \"152650-487746-CXNK007D3FC5\",\r\n        \"serialNumber\": \"CXNK007D3FC5\",\r\n        \"macAddress\": \"48:77:46:cf:6d:6c\",\r\n        \"registrationId\": \"reg4220\",\r\n        \"ipAddress\": \"192.168.37.219\",\r\n        \"modelName\": \"GS4220E\",\r\n        \"softwareVersion\": \"20.4.500.108\",\r\n        \"opMode\": \"RG\",\r\n        \"manufacturer\": \"Calix\",\r\n        \"deviceId\": \"CXNK007D3FC5\"\r\n      } */\n      if (showSerialNumberFirst && showSerialNumberFirst == 'show') {\n        let deviceArray = [];\n        let deviceInfo = '';\n        deviceInfo += `${value.serialNumber ? value.serialNumber : value.registrationId ? value.registrationId : value.macAddress ? value.macAddress : value.deviceId} - `;\n        deviceArray.push(value.pppUsername && value.pppUsername.trim() ? value.pppUsername : '');\n        deviceArray.push(value.registrationId && value.registrationId.trim() ? value.registrationId : '');\n        deviceArray.push(value.ipAddress && value.ipAddress.trim() ? value.ipAddress : '');\n        deviceArray.push(value.manufacturer && value.manufacturer.trim() ? value.manufacturer : '');\n        deviceArray.push(value.modelName && value.modelName.trim() ? value.modelName : ((_a = value === null || value === void 0 ? void 0 : value.ont) === null || _a === void 0 ? void 0 : _a.modelName) ? (_b = value === null || value === void 0 ? void 0 : value.ont) === null || _b === void 0 ? void 0 : _b.modelName : '');\n        if (value.macAddress && value.deviceId !== value.macAddress || value.serialNumber || value.registrationId) deviceArray.push(value.macAddress && value.macAddress.trim() ? value.macAddress : '');\n        deviceInfo += deviceArray.filter(value => value).join(\" | \");\n        return deviceInfo;\n      } else {\n        let deviceArray = [];\n        let deviceInfo = value.deviceId;\n        if (value.deviceId === value.serialNumber && value.registrationId && value.registrationId.trim()) {\n          deviceInfo += ` - ${value.registrationId} | `;\n        } else if (value.deviceId === value.registrationId && value.serialNumber && value.serialNumber.trim()) {\n          deviceInfo += ` - ${value.serialNumber} | `;\n        } else deviceInfo += ` - `;\n        deviceArray.push(value.pppUsername && value.pppUsername.trim() ? value.pppUsername : '');\n        // deviceArray.push((value.registrationId && value.registrationId.trim()) ? value.registrationId : '');\n        deviceArray.push(value.ipAddress && value.ipAddress.trim() ? value.ipAddress : '');\n        deviceArray.push(value.manufacturer && value.manufacturer.trim() ? value.manufacturer : '');\n        deviceArray.push(value.modelName && value.modelName.trim() ? value.modelName : ((_c = value === null || value === void 0 ? void 0 : value.ont) === null || _c === void 0 ? void 0 : _c.modelName) ? (_d = value === null || value === void 0 ? void 0 : value.ont) === null || _d === void 0 ? void 0 : _d.modelName : '');\n        deviceArray.push(value.macAddress && value.macAddress.trim() ? value.macAddress : '');\n        deviceInfo += deviceArray.filter(value => value).join(\" | \");\n        return deviceInfo;\n      }\n    }\n  }\n  SortDeviceDataPipe.ɵfac = function SortDeviceDataPipe_Factory(t) {\n    return new (t || SortDeviceDataPipe)();\n  };\n  SortDeviceDataPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"sortDeviceData\",\n    type: SortDeviceDataPipe,\n    pure: true\n  });\n  return SortDeviceDataPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}