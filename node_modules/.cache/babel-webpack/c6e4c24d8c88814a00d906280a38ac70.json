{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport moment from 'moment';\nimport { forkJoin, of, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"src/app/shared/services/export-excel.service\";\nimport * as i5 from \"../cco-operations-reports.service\";\nimport * as i6 from \"src/app/sys-admin/services/common.service\";\nimport * as i7 from \"src/app/flow-config/services/common-functions.service\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"@angular/router\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"angular-datatables\";\nfunction UnmappedIpsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelementStart(3, \"span\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"Loading\"]);\n  }\n}\nfunction UnmappedIpsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \"\\n\");\n  }\n}\nfunction UnmappedIpsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"span\", 23);\n    i0.ɵɵelement(2, \"img\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function UnmappedIpsComponent_div_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r2.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction UnmappedIpsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language[\"Unmapped IPs\"], \" \");\n  }\n}\nfunction UnmappedIpsComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nfunction UnmappedIpsComponent_div_33_table_3_tbody_11_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 36);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r12.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r12.ipAddress ? item_r12.ipAddress : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.convertToDateTime(item_r12.createTime), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.convertToDateTime(item_r12.updateTime), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r12.isSource ? item_r12.isSource : \"No\", \" \");\n  }\n}\nfunction UnmappedIpsComponent_div_33_table_3_tbody_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, UnmappedIpsComponent_div_33_table_3_tbody_11_tr_1_Template, 9, 5, \"tr\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.unmappedIPsData);\n  }\n}\nfunction UnmappedIpsComponent_div_33_table_3_tbody_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r10.language[\"No data available in table\"], \" \");\n  }\n}\nfunction UnmappedIpsComponent_div_33_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 33);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, UnmappedIpsComponent_div_33_table_3_tbody_11_Template, 2, 1, \"tbody\", 34);\n    i0.ɵɵtemplate(12, UnmappedIpsComponent_div_33_table_3_tbody_12_Template, 4, 1, \"tbody\", 34);\n    i0.ɵɵelement(13, \"tbody\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r8.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r8.language.IP_Address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Created_On);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Updated_On);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"Solicited\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r8.unmappedIPsData == null ? null : ctx_r8.unmappedIPsData.length) != 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.unmappedIPsData.length === 0);\n  }\n}\nfunction UnmappedIpsComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"div\", 30);\n    i0.ɵɵelementStart(2, \"div\", 31);\n    i0.ɵɵtemplate(3, UnmappedIpsComponent_div_33_table_3_Template, 14, 7, \"table\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.tableCountAvailable);\n  }\n}\nconst $ = require('jquery');\nclass DataTablesResponse {}\nexport let UnmappedIpsComponent = /*#__PURE__*/(() => {\n  class UnmappedIpsComponent {\n    constructor(translateService, sso, http, exportExcel, apiService, commonOrgService, commonFunctionsService, titleService, router) {\n      this.translateService = translateService;\n      this.sso = sso;\n      this.http = http;\n      this.exportExcel = exportExcel;\n      this.apiService = apiService;\n      this.commonOrgService = commonOrgService;\n      this.commonFunctionsService = commonFunctionsService;\n      this.titleService = titleService;\n      this.router = router;\n      this.unmappedIPsData = [];\n      this.dtOptions = {};\n      this.loading = true;\n      this.allUnMappedIPsData = [];\n      this.hasScopeAccess = false;\n      this.errorInfo = '';\n      this.showTable = true;\n      this.dtTrigger = new Subject();\n      this.isCcoReports = true;\n      this.discoveredCount = 0;\n      this.solicitedCount = 0;\n      this.unsolicitedCount = 0;\n      this.solicitedPercentage = 0;\n      this.unsolicitedPercentage = 0;\n      this.ORG_ID = this.sso.getOrganizationID(this.router.url);\n      this.language = this.translateService.defualtLanguage;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.tableLanguageOptions();\n      this.translateSubscribe = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.tableLanguageOptions();\n        this.showTable = false;\n        setTimeout(() => {\n          this.showTable = true;\n          this.tableCount = 0;\n          this.unmappedIPsData = [];\n          this.getTableCount();\n        }, 100);\n        // this.redraw();\n        this.setTitle(this.router.url);\n      });\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n    }\n    setTitle(url) {\n      if (window.location.pathname.indexOf('/cco/operations/') > -1) {\n        this.titleService.setTitle(`${this.language['Unmapped IPs']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.isCcoReports = false;\n        this.titleService.setTitle(`${this.language['Unmapped IPs']} - ${this.language['Reports']} - ${this.language['Traffic']} - ${this.language['flowconfiguration']} - ${this.language['administration']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      this.setTitle(this.router.url);\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE && window.location.pathname.indexOf('/cco/operations/') > -1) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.operations.report.unmappedips') !== -1) {\n              this.hasScopeAccess = true;\n              break;\n            }\n          }\n        }\n      } else {\n        this.hasScopeAccess = true;\n      }\n      if (!this.hasScopeAccess) {\n        this.sso.setPageAccess(false);\n        return;\n      }\n      this.getPercentage();\n      this.getTableCount();\n      this.tableLanguageOptions();\n    }\n    ngOnDestroy() {\n      if (this.translateSubscribe) {\n        this.translateSubscribe.unsubscribe();\n      }\n      if (this.listObs) {\n        this.listObs.unsubscribe();\n      }\n      if (this.expSubscription) {\n        this.expSubscription.unsubscribe();\n      }\n    }\n    getTableCount() {\n      this.countSubs = this.apiService.getUnMappedIPsCount(this.ORG_ID).subscribe(data => {\n        this.tableCount = data;\n        this.tableCountAvailable = true;\n        this.tableRender();\n      }, err => {\n        this.tableCountAvailable = true;\n        this.tableRender();\n        this.pageErrorHandle(err);\n      });\n    }\n    tableRender() {\n      this.showTable = true;\n      const that = this;\n      let pageNumber;\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint`;\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 20,\n        serverSide: true,\n        searching: false,\n        processing: false,\n        order: [0, 'asc'],\n        dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          that.loading = true;\n          this.sortBy = dataTablesParameters.order[0].column;\n          this.sortType = dataTablesParameters.order[0].dir;\n          if (dataTablesParameters.start == 0) {\n            pageNumber = 0;\n          } else {\n            pageNumber = dataTablesParameters.start / dataTablesParameters.length;\n          }\n          url = `${environment.faAdminCorrelatorURL}flowendpoint/unmapped?org-id=${this.ORG_ID}&pagenumber=${pageNumber}&pagesize=${dataTablesParameters.length}`;\n          that.http.get(url).subscribe(resp => {\n            resp.forEach(element => {\n              element.isSource = element.isSource === true ? 'Yes' : 'No';\n            });\n            const isArray = Array.isArray(resp);\n            // that.unmappedIPsData = resp;\n            that.unmappedIPsData = [];\n            if (isArray) {\n              that.unmappedIPsData = this.sortData(resp, that.sortBy, that.sortType);\n            } else {\n              that.unmappedIPsData = [resp];\n            }\n            that.commonOrgService.closeAlert();\n            that.loading = false;\n            setTimeout(() => {\n              callback({\n                recordsTotal: that.tableCount ? that.tableCount : 0,\n                recordsFiltered: that.tableCount ? that.tableCount : 0,\n                data: []\n              });\n            }, 100);\n          }, err => {\n            if (err.status == 404) {\n              that.unmappedIPsData = [];\n              that.loading = false;\n              callback({\n                recordsTotal: that.tableCount ? that.tableCount : 0,\n                recordsFiltered: that.tableCount ? that.tableCount : 0,\n                data: []\n              });\n            } else {\n              this.pageErrorHandle(err);\n            }\n          });\n        },\n        drawCallback: Settings => {\n          this.tableLanguageOptions();\n        },\n        columns: [{\n          data: 'ipAddress'\n        }, {\n          data: 'createTime'\n        }, {\n          data: 'updateTime'\n        }, {\n          data: 'isSource'\n        }]\n      };\n      this.tableLanguageOptions();\n    }\n    redraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    getAllUnMappedIPsData() {\n      this.tableCount = this.tableCount > 0 ? this.tableCount : 1;\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint/unmapped?org-id=${this.ORG_ID}&pagesize=${this.tableCount}`;\n      this.expSubscription = this.http.get(url).subscribe(data => {\n        this.allUnMappedIPsData = data;\n        this.exportAllData();\n      }, err => {\n        this.pageErrorHandle(err);\n        this.exportAllData();\n      });\n      // const calls: Observable<any>[] = [];\n      // let pageLength = 1;\n      // if (this.tableCount > 1000) {\n      //   pageLength = Math.ceil(this.tableCount / 1000);\n      // }\n      // for (let i = 0; i < pageLength; i++) {\n      //   calls.push(this.apiService.getAllUnMappedIPs(this.ORG_ID, i));\n      // }\n      // forkJoin(calls).pipe(delay(500)).subscribe(\n      //   results => {\n      //     results.forEach((el) => {\n      //       this.allUnMappedIPsData = [...this.allUnMappedIPsData, ...el];\n      //     });\n      //     this.exportAllData();\n      //   },\n      //   (err: HttpErrorResponse) => {\n      //     this.pageErrorHandle(err);\n      //     this.exportAllData();\n      //   }\n      // );\n    }\n\n    export() {\n      if (this.exportLoading) {\n        return;\n      }\n      this.exportLoading = true;\n      this.getAllUnMappedIPsData();\n    }\n    exportAllData() {\n      // let name = this.commonFunctionsService.generateExportName('Unmapped_IPs');\n      let name = 'Unmapped_IPs';\n      let exportData = this.allUnMappedIPsData ? this.exportDataConvertor(this.allUnMappedIPsData) : [];\n      let extraData = `Unmapped IPs\\n\\r`;\n      if (exportData.length) {\n        this.exportExcel.downLoadCSV(name, exportData, extraData);\n      } else {\n        this.exportExcel.downLoadCSV(name, [], extraData);\n      }\n      setTimeout(() => {\n        this.exportLoading = false;\n      }, 3000);\n    }\n    exportDataConvertor(array) {\n      let exportData = [];\n      array.forEach(el => {\n        exportData.push({\n          'IP Address': el.ipAddress ? el.ipAddress : '',\n          'Created On': el.createTime ? this.convertToDateTime(el.createTime) : '',\n          'Updated On': el.updateTime ? this.convertToDateTime(el.updateTime) : '',\n          'Solicited': el.isSource === true ? 'Yes' : 'No'\n        });\n      });\n      return exportData;\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.dtOptions.language = this.translateService.fr;\n      } else if (this.language.fileLanguage == 'es') {\n        this.dtOptions.language = this.translateService.es;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.dtOptions.language = this.translateService.de_DE;\n      } else if (this.language.fileLanguage == 'en' && this.dtOptions.language) {\n        delete this.dtOptions.language;\n      }\n    }\n    sortData(data, by, type) {\n      let sorted = [];\n      if (by == 0) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'ipAddress');\n      } else if (by == 1) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'createTime');\n      } else if (by == 2) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'updateTime');\n      } else {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'isSource');\n      }\n      return sorted;\n    }\n    // convertToDateTime(dt: any) {\n    //   if(!dt){\n    //     return '';\n    //   }\n    //   let date = dt.split(\".\");\n    //   let pipe = new DatePipe('en-US');\n    //   return pipe.transform(new Date(date[0]), 'short')\n    // }\n    convertToDateTime(dt) {\n      if (!dt) {\n        return '';\n      }\n      return moment(new Date(dt)).format(\"MM/DD/YY, HH:mm A\");\n      // let timeZone = new Date(dt).toString()?.split(\" \")[5]?.replace(/(.{2})$/, ':$1');\n      // return moment(new Date(dt)).format(\"YYYY-MM-DD HH:mm A\") + ' (' + timeZone + ')';\n    }\n\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.showError(this.errorInfo);\n      this.loading = false;\n    }\n    closeAlert() {\n      this.error = false;\n    }\n    showError(msg) {\n      this.closeAlert();\n      this.errorInfo = msg;\n      this.error = true;\n      $(\"html, body\").animate({\n        scrollTop: 0\n      }, \"slow\");\n    }\n    getPercentage() {\n      let types = ['discovered', 'solicited', 'unsolicited'];\n      const requests = {};\n      let obj = {\n        discovered: `${environment.faAdminCorrelatorURL}flowendpoint/count?discovered=true&org-id=${this.ORG_ID}`,\n        solicited: `${environment.faAdminCorrelatorURL}flowendpoint/unmapped/count?org-id=${this.ORG_ID}&source=true`,\n        unsolicited: `${environment.faAdminCorrelatorURL}flowendpoint/unmapped/count?org-id=${this.ORG_ID}&source=false`\n      };\n      types.forEach(type => {\n        const req = this.http.get(`${obj[type]}`).pipe(catchError(err => {\n          err['api-error'] = true;\n          return of(err);\n        }));\n        requests[type] = req;\n      });\n      this.listObs = forkJoin(requests).subscribe(response => {\n        this.discoveredCount = response['discovered'].toLocaleString();\n        this.solicitedCount = response['solicited'].toLocaleString();\n        this.unsolicitedCount = response['unsolicited'].toLocaleString();\n        let total = parseFloat(response['discovered']) + parseFloat(response['solicited']) + parseFloat(response['unsolicited']);\n        this.solicitedPercentage = this.solicitedCount / total ? this.solicitedCount / total * 100 : 0;\n        this.unsolicitedPercentage = this.unsolicitedCount / total ? this.unsolicitedCount / total * 100 : 0;\n        if (!Number.isInteger(this.solicitedPercentage) || this.solicitedPercentage == 'Infinity') {\n          this.solicitedPercentage = this.solicitedPercentage.toFixed(2);\n        }\n        if (!Number.isInteger(this.unsolicitedPercentage) || this.unsolicitedPercentage == 'Infinity') {\n          this.unsolicitedPercentage = this.unsolicitedPercentage.toFixed(2);\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n  }\n  UnmappedIpsComponent.ɵfac = function UnmappedIpsComponent_Factory(t) {\n    return new (t || UnmappedIpsComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.ExportExcelService), i0.ɵɵdirectiveInject(i5.CcoOperationsReportsService), i0.ɵɵdirectiveInject(i6.CommonService), i0.ɵɵdirectiveInject(i7.CommonFunctionsService), i0.ɵɵdirectiveInject(i8.Title), i0.ɵɵdirectiveInject(i9.Router));\n  };\n  UnmappedIpsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnmappedIpsComponent,\n    selectors: [[\"app-unmapped-ips\"]],\n    viewQuery: function UnmappedIpsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 34,\n    vars: 15,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"container\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [1, \"row\"], [\"class\", \"col-md-12 px-0\", 4, \"ngIf\"], [1, \"test-container\"], [\"id\", \"mapped-discovered-count\", 1, \"item\"], [1, \"stats-label\"], [1, \"d-flex\", \"align-content-around\", \"flex-wrap\"], [1, \"stats-value\"], [\"id\", \"unmapped-solicited-count\", 1, \"item\"], [\"id\", \"unmapped-unsolicited-count\", 1, \"item\"], [1, \"row\", \"justify-content-end\"], [1, \"col-md-2\", \"text-right\"], [\"type\", \"button\", \"id\", \"export\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [\"class\", \"spinner-border spinner-border-sm\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"col-md-12\", \"px-0\"], [1, \"cco-secondary-title\"], [\"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"row\", \"my-3\", \"min-h-65\"], [1, \"col\"], [\"id\", \"unmapped_IPs\", \"width\", \"100%\", \"datatable\", \"\", \"class\", \"row-border hover table-alter\", 3, \"dtOptions\", 4, \"ngIf\"], [\"id\", \"unmapped_IPs\", \"width\", \"100%\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\"], [4, \"ngIf\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [\"colspan\", \"2\", 1, \"no-data-available\"]],\n    template: function UnmappedIpsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, UnmappedIpsComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, UnmappedIpsComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"section\");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, UnmappedIpsComponent_div_4_Template, 6, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, UnmappedIpsComponent_div_6_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"span\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"span\", 8);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 9);\n        i0.ɵɵelementStart(19, \"span\", 10);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 12);\n        i0.ɵɵelementStart(22, \"span\", 8);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵelementStart(25, \"span\", 10);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 13);\n        i0.ɵɵelementStart(28, \"div\", 14);\n        i0.ɵɵelementStart(29, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function UnmappedIpsComponent_Template_button_click_29_listener() {\n          return ctx.export();\n        });\n        i0.ɵɵtext(30);\n        i0.ɵɵtemplate(31, UnmappedIpsComponent_span_31_Template, 1, 0, \"span\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 4);\n        i0.ɵɵtemplate(33, UnmappedIpsComponent_div_33_Template, 4, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCcoReports);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.language[\"Mapped Discovered Count\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.discoveredCount);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Unmapped Solicited\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.solicitedCount, \" (\", ctx.solicitedPercentage, \"%)\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Unmapped Unsolicited\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.unsolicitedCount, \" (\", ctx.unsolicitedPercentage, \"%)\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Export, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exportLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTable);\n      }\n    },\n    directives: [i10.NgIf, i11.DataTableDirective, i10.NgForOf],\n    styles: [\"@charset \\\"UTF-8\\\";.current-issue-menu-container[_ngcontent-%COMP%]{display:flex;margin:20px 0;justify-self:start}.current-issue-menu-item[_ngcontent-%COMP%]{flex-grow:0}.current-issue-menu-item[_ngcontent-%COMP%] + .current-issue-menu-item[_ngcontent-%COMP%]{margin-left:1%}.btn-secondary[_ngcontent-%COMP%]{color:#5f6165!important;background-color:#f8f8fa!important;border-color:#f8f8fa!important;padding:3px \\\\200b 10px}.options-menu-container[_ngcontent-%COMP%]{display:flex;margin:10px 0;justify-self:start;width:100%}.options-menu-item[_ngcontent-%COMP%]{flex-grow:0}.options-menu-item[_ngcontent-%COMP%] + .options-menu-item[_ngcontent-%COMP%]{margin-left:4%}.undo-icon[_ngcontent-%COMP%]{background-color:#f8f8fa;padding:3px;color:#9e9e9e;border-radius:15px;margin:2px;font-size:17px;cursor:pointer;width:30px;height:30px;text-align:center}.report-container[_ngcontent-%COMP%]{display:flex}.report-item[_ngcontent-%COMP%]{flex-grow:1;height:100px;width:100%}.report-item[_ngcontent-%COMP%] + .report-item[_ngcontent-%COMP%]{margin-left:2%}.ccl-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;min-height:34px!important;max-height:40px!important}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{height:38px!important}.min-h-65[_ngcontent-%COMP%]{min-height:65vh}.test-container[_ngcontent-%COMP%]{display:flex;width:100%;flex-wrap:wrap;margin-top:15px}.item[_ngcontent-%COMP%]{border-left:1px solid #cdcdcd;padding-left:22px;width:-moz-max-content;width:max-content;padding-right:15px}.item[_ngcontent-%COMP%]   .d-flex[_ngcontent-%COMP%]{align-items:baseline}\"]\n  });\n  return UnmappedIpsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}