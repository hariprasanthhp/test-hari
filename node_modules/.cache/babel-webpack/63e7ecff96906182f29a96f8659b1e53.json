{"ast":null,"code":"import { getBusinessObject, is } from 'bpmn-js/lib/util/ModelUtil';\nimport { isEventSubProcess } from 'bpmn-js/lib/util/DiUtil';\nimport eventDefinitionHelper from 'bpmn-js-properties-panel/lib/helper/EventDefinitionHelper';\nimport message from 'bpmn-js-properties-panel/lib/provider/bpmn/parts/implementation/MessageEventDefinition';\nimport referenceExtensionElementProperty from './implementation/ElementReferenceExtensionElementProperty';\nexport default function (group, element, bpmnFactory, translate) {\n  const messageEventDefinition = eventDefinitionHelper.getMessageEventDefinition(element),\n    parent = element.parent;\n  if (is(element, 'bpmn:ReceiveTask')) {\n    message(group, element, bpmnFactory, getBusinessObject(element), translate);\n    group.entries = group.entries.concat(referenceExtensionElementProperty(element, getBusinessObject(element), bpmnFactory, translate, {\n      id: 'message-element-subscription',\n      label: translate('Subscription Correlation Key'),\n      referenceProperty: 'messageRef',\n      modelProperty: 'correlationKey',\n      extensionElement: 'zeebe:Subscription',\n      shouldValidate: true\n    }));\n  } else if (messageEventDefinition) {\n    message(group, element, bpmnFactory, messageEventDefinition, translate);\n    if (!is(element, 'bpmn:StartEvent') || isEventSubProcess(parent)) {\n      group.entries = group.entries.concat(referenceExtensionElementProperty(element, messageEventDefinition, bpmnFactory, translate, {\n        id: 'message-element-subscription',\n        label: translate('Subscription Correlation Key'),\n        referenceProperty: 'messageRef',\n        modelProperty: 'correlationKey',\n        extensionElement: 'zeebe:Subscription',\n        shouldValidate: true\n      }));\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}