{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n  entryFactory = require('../../../factory/EntryFactory'),\n  participantHelper = require('../../../helper/ParticipantHelper'),\n  getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n  nameEntryFactory = require('./implementation/Name'),\n  utils = require('../../../Utils');\nmodule.exports = function (group, element, translate, options) {\n  var businessObject = getBusinessObject(element);\n  var processIdDescription = options && options.processIdDescription;\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    /**\n     * processId\n     */\n    if (is(element, 'bpmn:Participant')) {\n      var idEntry = entryFactory.validationAwareTextField(translate, {\n        id: 'process-id',\n        label: translate('Process Id'),\n        description: processIdDescription && translate(processIdDescription),\n        modelProperty: 'processId'\n      });\n\n      // in participants we have to change the default behavior of set and get\n      idEntry.get = function (element) {\n        var properties = participantHelper.getProcessBusinessObject(element, 'id');\n        return {\n          processId: properties.id\n        };\n      };\n      idEntry.set = function (element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'id', {\n          id: values.processId\n        });\n      };\n      idEntry.validate = function (element, values) {\n        var idValue = values.processId;\n        var bo = getBusinessObject(element);\n        var processIdError = utils.isIdValid(bo.processRef, idValue, translate);\n        return processIdError ? {\n          processId: processIdError\n        } : {};\n      };\n      group.entries.push(idEntry);\n\n      /**\n       * process name\n       */\n      var processNameEntry = nameEntryFactory(element, {\n        id: 'process-name',\n        label: translate('Process Name')\n      })[0];\n\n      // in participants we have to change the default behavior of set and get\n      processNameEntry.get = function (element) {\n        return participantHelper.getProcessBusinessObject(element, 'name');\n      };\n      processNameEntry.set = function (element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'name', values);\n      };\n      group.entries.push(processNameEntry);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}