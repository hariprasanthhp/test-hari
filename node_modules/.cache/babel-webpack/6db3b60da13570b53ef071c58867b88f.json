{"ast":null,"code":"import { isArray } from 'min-dash';\n\n/**\n * Reconnect connection handler\n */\nexport default function ReconnectConnectionHandler(modeling) {\n  this._modeling = modeling;\n}\nReconnectConnectionHandler.$inject = ['modeling'];\nReconnectConnectionHandler.prototype.execute = function (context) {\n  var newSource = context.newSource,\n    newTarget = context.newTarget,\n    connection = context.connection,\n    dockingOrPoints = context.dockingOrPoints;\n  if (!newSource && !newTarget) {\n    throw new Error('newSource or newTarget required');\n  }\n  if (isArray(dockingOrPoints)) {\n    context.oldWaypoints = connection.waypoints;\n    connection.waypoints = dockingOrPoints;\n  }\n  if (newSource) {\n    context.oldSource = connection.source;\n    connection.source = newSource;\n  }\n  if (newTarget) {\n    context.oldTarget = connection.target;\n    connection.target = newTarget;\n  }\n  return connection;\n};\nReconnectConnectionHandler.prototype.postExecute = function (context) {\n  var connection = context.connection,\n    newSource = context.newSource,\n    newTarget = context.newTarget,\n    dockingOrPoints = context.dockingOrPoints,\n    hints = context.hints || {};\n  var layoutConnectionHints = {};\n  if (hints.connectionStart) {\n    layoutConnectionHints.connectionStart = hints.connectionStart;\n  }\n  if (hints.connectionEnd) {\n    layoutConnectionHints.connectionEnd = hints.connectionEnd;\n  }\n  if (hints.layoutConnection === false) {\n    return;\n  }\n  if (newSource && (!newTarget || hints.docking === 'source')) {\n    layoutConnectionHints.connectionStart = layoutConnectionHints.connectionStart || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[0] : dockingOrPoints);\n  }\n  if (newTarget && (!newSource || hints.docking === 'target')) {\n    layoutConnectionHints.connectionEnd = layoutConnectionHints.connectionEnd || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[dockingOrPoints.length - 1] : dockingOrPoints);\n  }\n  if (hints.newWaypoints) {\n    layoutConnectionHints.waypoints = hints.newWaypoints;\n  }\n  this._modeling.layoutConnection(connection, layoutConnectionHints);\n};\nReconnectConnectionHandler.prototype.revert = function (context) {\n  var oldSource = context.oldSource,\n    oldTarget = context.oldTarget,\n    oldWaypoints = context.oldWaypoints,\n    connection = context.connection;\n  if (oldSource) {\n    connection.source = oldSource;\n  }\n  if (oldTarget) {\n    connection.target = oldTarget;\n  }\n  if (oldWaypoints) {\n    connection.waypoints = oldWaypoints;\n  }\n  return connection;\n};\n\n// helpers //////////\n\nfunction getDocking(point) {\n  return point.original || point;\n}","map":null,"metadata":{},"sourceType":"module"}