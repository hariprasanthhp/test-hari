{"ast":null,"code":"import { assign } from 'min-dash';\nvar DEFAULT_CONFIG = {\n  moveSpeed: 1,\n  moveSpeedAccelerated: 10\n};\nvar HIGHER_PRIORITY = 1500;\nvar LEFT = 'left';\nvar UP = 'up';\nvar RIGHT = 'right';\nvar DOWN = 'down';\nvar KEY_TO_DIRECTION = {\n  ArrowLeft: LEFT,\n  Left: LEFT,\n  ArrowUp: UP,\n  Up: UP,\n  ArrowRight: RIGHT,\n  Right: RIGHT,\n  ArrowDown: DOWN,\n  Down: DOWN\n};\nvar DIRECTIONS_DELTA = {\n  left: function (speed) {\n    return {\n      x: -speed,\n      y: 0\n    };\n  },\n  up: function (speed) {\n    return {\n      x: 0,\n      y: -speed\n    };\n  },\n  right: function (speed) {\n    return {\n      x: speed,\n      y: 0\n    };\n  },\n  down: function (speed) {\n    return {\n      x: 0,\n      y: speed\n    };\n  }\n};\n\n/**\n * Enables to move selection with keyboard arrows.\n * Use with Shift for modified speed (default=1, with Shift=10).\n * Pressed Cmd/Ctrl turns the feature off.\n *\n * @param {Object} config\n * @param {number} [config.moveSpeed=1]\n * @param {number} [config.moveSpeedAccelerated=10]\n * @param {Keyboard} keyboard\n * @param {Modeling} modeling\n * @param {Selection} selection\n */\nexport default function KeyboardMoveSelection(config, keyboard, modeling, rules, selection) {\n  var self = this;\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n  keyboard.addListener(HIGHER_PRIORITY, function (event) {\n    var keyEvent = event.keyEvent;\n    var direction = KEY_TO_DIRECTION[keyEvent.key];\n    if (!direction) {\n      return;\n    }\n    if (keyboard.isCmd(keyEvent)) {\n      return;\n    }\n    var accelerated = keyboard.isShift(keyEvent);\n    self.moveSelection(direction, accelerated);\n    return true;\n  });\n\n  /**\n   * Move selected elements in the given direction,\n   * optionally specifying accelerated movement.\n   *\n   * @param {string} direction\n   * @param {boolean} [accelerated=false]\n   */\n  this.moveSelection = function (direction, accelerated) {\n    var selectedElements = selection.get();\n    if (!selectedElements.length) {\n      return;\n    }\n    var speed = this._config[accelerated ? 'moveSpeedAccelerated' : 'moveSpeed'];\n    var delta = DIRECTIONS_DELTA[direction](speed);\n    var canMove = rules.allowed('elements.move', {\n      shapes: selectedElements\n    });\n    if (canMove) {\n      modeling.moveElements(selectedElements, delta);\n    }\n  };\n}\nKeyboardMoveSelection.$inject = ['config.keyboardMoveSelection', 'keyboard', 'modeling', 'rules', 'selection'];","map":null,"metadata":{},"sourceType":"module"}