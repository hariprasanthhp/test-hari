{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DEVICE_MANAGE_MODEL_COLLECTIONS, DEVICE_MODAM_MODEL_COLLECTIONS, DEVICE_MODELS_COLLECTIONS, DEVICE_RG_MODEL_COLLECTIONS, DEVICE_WEP_MODEL_COLLECTIONS, SubscriberManagement } from '../../subscriber.constants';\nimport { environment } from 'src/environments/environment';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/support/data.service\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"../../service/management.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/cco-foundation/foundation-systems/foundation-manage/foundation-manage.service\";\nimport * as i8 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"../../../../../shared/directives/autofocus.directive\";\nconst _c0 = [\"replaceConfirm\"];\nfunction DeviceWizardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵelementStart(1, \"div\", 49);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Device_Reboot_warning);\n  }\n}\nfunction DeviceWizardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵelementStart(1, \"span\", 51);\n    i0.ɵɵelement(2, \"img\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DeviceWizardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵelementStart(1, \"div\", 56);\n    i0.ɵɵelementStart(2, \"div\", 57);\n    i0.ɵɵelementStart(3, \"span\", 58);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Loading);\n  }\n}\nfunction DeviceWizardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵelementStart(1, \"span\", 60);\n    i0.ɵɵelement(2, \"img\", 61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.successInfo = \"\";\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r3.language[ctx_r3.successInfo] || ctx_r3.successInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DeviceWizardComponent_a_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 62);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_a_19_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.assignDeviceReplace(ctx_r17.addDeviceObj == null ? null : ctx_r17.addDeviceObj.device == null ? null : ctx_r17.addDeviceObj.device.regId, ctx_r17.addDeviceObj == null ? null : ctx_r17.addDeviceObj.device == null ? null : ctx_r17.addDeviceObj.device.subscriberId, ctx_r17.addDeviceObj == null ? null : ctx_r17.addDeviceObj.device, ctx_r17.addDeviceObj);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.Replace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Replace);\n  }\n}\nfunction DeviceWizardComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.language[\"Please enter a number up to 36 characters\"]);\n  }\n}\nfunction DeviceWizardComponent_ng_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mode_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", mode_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mode_r19);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"cursornotallow\": a0\n  };\n};\nfunction DeviceWizardComponent_section_31_label_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 66);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_5_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_5_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.isONT ? false : (ctx_r31.addDeviceObj == null ? null : ctx_r31.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r20.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r20.bSmbMode)(\"ngModel\", ctx_r20.isONT ? false : ctx_r20.addDeviceObj == null ? null : ctx_r20.addDeviceObj.device.deviceMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r20.language.RG, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 67);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_6_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.isONT ? false : (ctx_r34.addDeviceObj == null ? null : ctx_r34.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r21.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r21.isRgBtnShow && ctx_r21.hideRadioButton)(\"ngModel\", ctx_r21.isONT ? false : ctx_r21.addDeviceObj == null ? null : ctx_r21.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r21.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r21.language.RG, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 68);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_7_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return ctx_r35.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_7_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return (ctx_r37.addDeviceObj == null ? null : ctx_r37.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r22.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r22.addDeviceObj == null ? null : ctx_r22.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r22.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r22.language.WAP, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 69);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_8_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return ctx_r38.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_8_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return (ctx_r40.addDeviceObj == null ? null : ctx_r40.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r23.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r23.isWapBtnShow && ctx_r23.hideRadioButton)(\"ngModel\", ctx_r23.addDeviceObj == null ? null : ctx_r23.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r23.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r23.language.WAP, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 70);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_9_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_9_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return (ctx_r43.addDeviceObj == null ? null : ctx_r43.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r24.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r24.addDeviceObj == null ? null : ctx_r24.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r24.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r24.language.WAP, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 71);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_10_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return ctx_r44.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_10_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return (ctx_r46.addDeviceObj == null ? null : ctx_r46.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r25.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r25.isWapIGMPBtnShow && ctx_r25.hideRadioButton)(\"ngModel\", ctx_r25.addDeviceObj == null ? null : ctx_r25.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r25.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r25.language.WAP, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 72);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_11_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return ctx_r47.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return (ctx_r49.addDeviceObj == null ? null : ctx_r49.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r26.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r26.addDeviceObj == null ? null : ctx_r26.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r26.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r26.language.Managed_ONT, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 73);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_12_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return ctx_r50.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_12_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return (ctx_r52.addDeviceObj == null ? null : ctx_r52.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r27.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r27.addDeviceObj == null ? null : ctx_r27.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r27.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r27.language.Modem, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_label_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 65);\n    i0.ɵɵelementStart(1, \"input\", 74);\n    i0.ɵɵlistener(\"change\", function DeviceWizardComponent_section_31_label_13_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r53 = i0.ɵɵnextContext(2);\n      return ctx_r53.handleModeChange($event);\n    })(\"ngModelChange\", function DeviceWizardComponent_section_31_label_13_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return (ctx_r55.addDeviceObj == null ? null : ctx_r55.addDeviceObj.device).deviceMode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r28.bSmbMode));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r28.isModemBtnShow && ctx_r28.hideRadioButton)(\"ngModel\", ctx_r28.addDeviceObj == null ? null : ctx_r28.addDeviceObj.device.deviceMode)(\"disabled\", ctx_r28.bSmbMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r28.language.Modem, \" \");\n  }\n}\nfunction DeviceWizardComponent_section_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵelementStart(2, \"label\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 25);\n    i0.ɵɵtemplate(5, DeviceWizardComponent_section_31_label_5_Template, 3, 6, \"label\", 64);\n    i0.ɵɵtemplate(6, DeviceWizardComponent_section_31_label_6_Template, 3, 7, \"label\", 64);\n    i0.ɵɵtemplate(7, DeviceWizardComponent_section_31_label_7_Template, 3, 6, \"label\", 64);\n    i0.ɵɵtemplate(8, DeviceWizardComponent_section_31_label_8_Template, 3, 7, \"label\", 64);\n    i0.ɵɵtemplate(9, DeviceWizardComponent_section_31_label_9_Template, 3, 6, \"label\", 64);\n    i0.ɵɵtemplate(10, DeviceWizardComponent_section_31_label_10_Template, 3, 7, \"label\", 64);\n    i0.ɵɵtemplate(11, DeviceWizardComponent_section_31_label_11_Template, 3, 6, \"label\", 64);\n    i0.ɵɵtemplate(12, DeviceWizardComponent_section_31_label_12_Template, 3, 6, \"label\", 64);\n    i0.ɵɵtemplate(13, DeviceWizardComponent_section_31_label_13_Template, 3, 7, \"label\", 64);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.language.Mode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isRgBtnShow && !ctx_r7.hideRadioButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isRgBtnShow && ctx_r7.hideRadioButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isWapBtnShow && !ctx_r7.hideRadioButton && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isWapBtnShow && ctx_r7.hideRadioButton && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isWapIGMPBtnShow && !ctx_r7.hideRadioButton && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isWapIGMPBtnShow && ctx_r7.hideRadioButton && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isMangeBtnShow && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isModemBtnShow && !ctx_r7.hideRadioButton && !ctx_r7.isONT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isModemBtnShow && ctx_r7.hideRadioButton && !ctx_r7.isONT);\n  }\n}\nfunction DeviceWizardComponent_div_45_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r56 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r56.language[\"Please add at least one static group\"]);\n  }\n}\nfunction DeviceWizardComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 75);\n    i0.ɵɵelementStart(1, \"label\", 76);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 77);\n    i0.ɵɵelementStart(4, \"ng-select\", 78);\n    i0.ɵɵlistener(\"ngModelChange\", function DeviceWizardComponent_div_45_Template_ng_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r58);\n      const ctx_r57 = i0.ɵɵnextContext();\n      return (ctx_r57.addDeviceObj == null ? null : ctx_r57.addDeviceObj.device).selectedStaticGroup = $event;\n    })(\"change\", function DeviceWizardComponent_div_45_Template_ng_select_change_4_listener() {\n      i0.ɵɵrestoreView(_r58);\n      const ctx_r59 = i0.ɵɵnextContext();\n      return ctx_r59.staticGrpError = (ctx_r59.addDeviceObj == null ? null : ctx_r59.addDeviceObj.device == null ? null : ctx_r59.addDeviceObj.device.selectedStaticGroup.length) >= 1 ? false : true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DeviceWizardComponent_div_45_span_5_Template, 2, 1, \"span\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language.Static_Groups);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"searchable\", false)(\"clearable\", false)(\"items\", ctx_r8.staticGroupList)(\"ngModel\", ctx_r8.addDeviceObj == null ? null : ctx_r8.addDeviceObj.device.selectedStaticGroup)(\"multiple\", true)(\"searchable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.staticGrpError);\n  }\n}\nfunction DeviceWizardComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 79);\n    i0.ɵɵelementStart(1, \"span\", 51);\n    i0.ɵɵelement(2, \"img\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 80);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_div_56_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r60 = i0.ɵɵnextContext();\n      return ctx_r60.isModalError = !ctx_r60.isModalError;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r9.modalWarningMessage, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DeviceWizardComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵelementStart(1, \"div\", 56);\n    i0.ɵɵelementStart(2, \"div\", 57);\n    i0.ɵɵelementStart(3, \"span\", 58);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r10.language.Loading);\n  }\n}\nfunction DeviceWizardComponent_ng_template_71_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelementStart(1, \"button\", 81);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_ng_template_71_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const modal_r62 = restoredCtx.$implicit;\n      return modal_r62.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelement(2, \"span\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 82);\n    i0.ɵɵelementStart(4, \"div\", 83);\n    i0.ɵɵelementStart(5, \"div\", 84);\n    i0.ɵɵelement(6, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 85);\n    i0.ɵɵelementStart(8, \"div\", 86);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 87);\n    i0.ɵɵelementStart(11, \"p\", 88);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 89);\n    i0.ɵɵelementStart(14, \"button\", 90);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_ng_template_71_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const modal_r62 = restoredCtx.$implicit;\n      const ctx_r65 = i0.ɵɵnextContext();\n      ctx_r65.doPerformReplaceDevice(ctx_r65.addDeviceObj == null ? null : ctx_r65.addDeviceObj.device == null ? null : ctx_r65.addDeviceObj.device.subscriberId, ctx_r65.addDeviceObj == null ? null : ctx_r65.addDeviceObj.device == null ? null : ctx_r65.addDeviceObj.device.regId, ctx_r65.replaceDeviceId.trim(), true);\n      return modal_r62.close(\"Close click\");\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 91);\n    i0.ɵɵlistener(\"click\", function DeviceWizardComponent_ng_template_71_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const modal_r62 = restoredCtx.$implicit;\n      return modal_r62.close(\"Close click\");\n    });\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Unable to Apply Wi-Fi Configurations\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.language[\"Wi-Fi Configurations msg\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Continue\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Cancel\"], \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"inp-disabled\": a0\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    \"btn-notallowed\": a0\n  };\n};\nconst _c4 = function (a0) {\n  return {\n    disableDropDown: a0\n  };\n};\nexport let DeviceWizardComponent = /*#__PURE__*/(() => {\n  class DeviceWizardComponent {\n    constructor(translateService, service, ssoService, http, managementService, router, route, foundationService, dialogService) {\n      var _a;\n      this.translateService = translateService;\n      this.service = service;\n      this.ssoService = ssoService;\n      this.http = http;\n      this.managementService = managementService;\n      this.router = router;\n      this.route = route;\n      this.foundationService = foundationService;\n      this.dialogService = dialogService;\n      this.showMode = false;\n      this.onValidateExistingDevice = new EventEmitter();\n      this.changedOpMode = new EventEmitter();\n      this.tabChange = new EventEmitter();\n      this.wifiSsidMngrStngs = new EventEmitter();\n      this.bSmbModeEmit = new EventEmitter();\n      this.isModalError = false;\n      this.modalWarningMessage = '';\n      this.modalLoader = false;\n      this.searchText = \"\";\n      this.macAddressLength = 10;\n      this.isRgBtnShow = false;\n      this.isWapBtnShow = false;\n      this.isWapIGMPBtnShow = false;\n      this.hasWriteAccessForDevice = false;\n      this.showResult = false;\n      this.isMangeBtnShow = false;\n      this.isModemBtnShow = false;\n      this.isONT = false;\n      this.isStaticGroup = false;\n      this.deviceMode = 'RG';\n      this._staticGroupList = [];\n      this.modelList = DEVICE_MODELS_COLLECTIONS;\n      this.showFilterCount = false;\n      this.editDeviceObj = {};\n      this.wapModeWarning = false;\n      this.isLan5Support = false;\n      this.rgBtnArray = DEVICE_RG_MODEL_COLLECTIONS;\n      this.wapBtnArray = DEVICE_WEP_MODEL_COLLECTIONS;\n      this.manageBtnArray = DEVICE_MANAGE_MODEL_COLLECTIONS;\n      this.modemBtnArray = DEVICE_MODAM_MODEL_COLLECTIONS;\n      this.opModeWritable = [];\n      this.undiscoveredDevice = 0;\n      this.error = false;\n      this.errorInfo = '';\n      this.modelNameReadOnly = false;\n      this.loader = false;\n      this.replaceDeviceBtn = false;\n      this.replaceDeviceId = '';\n      this.replaceModelNumber = '';\n      this.isReplaceModelNumberReadonly = false;\n      this.showReplaceModelNumber = false;\n      this.fpLoader = false;\n      this.editDeviceObj = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.editDeviceObj;\n      this.orgId = this.ssoService.getOrgId();\n    }\n    set _staticGrpError(value) {\n      this.staticGrpError = value;\n    }\n    set addDeviceObj(value) {\n      var _a, _b, _c, _d, _e;\n      this._addDeviceObj = value;\n      /**\r\n       * fix https://calix.atlassian.net/browse/CCL-27725\r\n       */\n      //this.onModeRadioBtnDisplay(value.device.selectedModel);\n      if (value && (value === null || value === void 0 ? void 0 : value.device) && ((_a = value === null || value === void 0 ? void 0 : value.device) === null || _a === void 0 ? void 0 : _a.isStaticGroup) === \"Yes\") {\n        this.isStaticGroup = true;\n      }\n      this.undiscoveredDevice = (((_c = (_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.subscriberData) === null || _c === void 0 ? void 0 : _c.devices) || []).filter(obj => {\n        var _a, _b;\n        return [(obj.deviceId || '').toLowerCase(), (obj.serialNumber || '').toLowerCase()].includes((_b = (_a = value === null || value === void 0 ? void 0 : value.device) === null || _a === void 0 ? void 0 : _a.regId) === null || _b === void 0 ? void 0 : _b.toLowerCase()) && !obj._id;\n      }).length;\n      console.log('56', history === null || history === void 0 ? void 0 : history.state);\n      if (((_e = (_d = history === null || history === void 0 ? void 0 : history.state) === null || _d === void 0 ? void 0 : _d.editDeviceObj) === null || _e === void 0 ? void 0 : _e.opModeWithOnt) == 'ONT') {\n        this.isONT = true;\n      } else {\n        this.isONT = false;\n      }\n      console.log(value);\n      this.getDeviceInfo();\n    }\n    get addDeviceObj() {\n      return this._addDeviceObj;\n    }\n    set staticGroupList(value) {\n      this._staticGroupList = [];\n      if (value && value.length > 0) {\n        this._staticGroupList = value.filter(device => {\n          return device.type === 'static';\n        });\n        // if(this.addDeviceObj.device.selectedStaticGroup.length === 0) {\n        //   this._staticGroupList.forEach( group => {\n        //     if(this.addDeviceObj.configurationObj.selectedStaticGroup.indexOf(group._id) !== -1 && group.memberInfo) {\n        //       this.addDeviceObj.device.selectedStaticGroup.push(group._id);\n        //     }\n        //   });\n        // }\n      }\n    }\n\n    get staticGroupList() {\n      return this._staticGroupList;\n    }\n    ngOnChanges(changes) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      let data = changes['addDeviceObj'];\n      let devicediscovered = changes['checkDeviceDiscovery'];\n      if (changes['checkDeviceDiscovery'] && changes['checkDeviceDiscovery'].currentValue) {\n        this.getFeatureProperties((_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.selectedModel, true, null, (_d = (_c = this.addDeviceObj) === null || _c === void 0 ? void 0 : _c.device) === null || _d === void 0 ? void 0 : _d.regId);\n      }\n      if (changes['addDeviceObj'] && changes['addDeviceObj'].currentValue) {\n        if (changes['addDeviceObj'].currentValue.device && ((_f = (_e = changes['addDeviceObj'].currentValue) === null || _e === void 0 ? void 0 : _e.device) === null || _f === void 0 ? void 0 : _f.selectedModel)) {\n          this.addDeviceObj.device.selectedModel = (_h = (_g = changes['addDeviceObj'].currentValue) === null || _g === void 0 ? void 0 : _g.device) === null || _h === void 0 ? void 0 : _h.selectedModel;\n          this.showMode = true;\n        }\n      }\n      if (this.addDeviceObj) {\n        if (this.addDeviceObj.device) {\n          if (this.addDeviceObj.device.deviceMode == \"WAP-IGMP\") {\n            this.changedOpMode.emit(\"WAP-IGMP\");\n            //this.addDeviceObj.device.deviceMode = this.addDeviceObj?.device?.deviceMode ? this.addDeviceObj.device.deviceMode.split(\"-\")[0] : '';\n          } else {\n            this.changedOpMode.emit(null);\n          }\n        }\n      }\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      if (this.getScopes()) return;\n      if (this.hasWriteAccessForDevice) this.getDeviceModels();\n      $(\"#search\").val(\"  \");\n      $(\".asso-search-dropdown\").hide();\n      this.route.queryParams.subscribe(params => {\n        var _a, _b;\n        this.searchText = params['searchText'] || ((_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.searchText) || ((_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.subscriberId);\n        if (this.searchText || this.searchText == \"\") {\n          setTimeout(() => {\n            this.redraw();\n          }, 1000);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n    }\n    onModelChange(event) {\n      var _a, _b;\n      this.wapModeWarning = false;\n      if (event) {\n        this.addDeviceObj.showModeErrorMsg = false;\n        this.addDeviceObj.device.deviceMode = undefined;\n        //this.onModeRadioBtnDisplay(event, true);\n        this.getFeatureProperties((_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.selectedModel, true);\n      } else {\n        this.isRgBtnShow = false;\n        this.isMangeBtnShow = false;\n        this.isWapBtnShow = false;\n        this.isWapIGMPBtnShow = false;\n      }\n    }\n    handleModeChange(event) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      this.wapModeWarning = false;\n      this.addDeviceObj.showModelErrorMsg = false;\n      if (((_b = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.editDeviceObj) === null || _b === void 0 ? void 0 : _b.opModeWithOnt) == 'ONT') {\n        this.addDeviceObj.device.deviceMode = 'RG';\n      }\n      if (((_c = event === null || event === void 0 ? void 0 : event.target) === null || _c === void 0 ? void 0 : _c.value) === 'Managed ONT' || event === 'Managed ONT') {\n        this.wapModeWarning = false;\n        this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL, SubscriberManagement.SETTINGS_LABEL];\n        this.addDeviceObj.settings = {\n          \"isPowerSaving\": true,\n          \"lanPortOne\": {\n            \"adminState\": \"Enable\",\n            \"powerSaving\": true,\n            \"speed\": \"Auto\",\n            \"duplex\": \"Auto\",\n            \"DHCPLeaseLimit\": 0\n          },\n          \"lanPortTwo\": {\n            \"adminState\": \"Enable\",\n            \"powerSaving\": true,\n            \"speed\": \"Auto\",\n            \"duplex\": \"Auto\",\n            \"DHCPLeaseLimit\": 0\n          },\n          \"lanPortThree\": {\n            \"adminState\": \"Enable\",\n            \"powerSaving\": true,\n            \"speed\": \"Auto\",\n            \"duplex\": \"Auto\",\n            \"DHCPLeaseLimit\": 0\n          },\n          \"lanPortFour\": {\n            \"adminState\": \"Enable\",\n            \"powerSaving\": true,\n            \"speed\": \"Auto\",\n            \"duplex\": \"Auto\",\n            \"DHCPLeaseLimit\": 0\n          }\n        };\n        if (this.isLan5Support) {\n          this.addDeviceObj.settings[\"lanPortFive\"] = {\n            \"adminState\": \"Enable\",\n            \"powerSaving\": true,\n            \"speed\": \"Auto\",\n            \"duplex\": \"Auto\",\n            \"DHCPLeaseLimit\": 0\n          };\n        }\n        this.changedOpMode.emit(\"Managed ONT\");\n      } else {\n        if ((_d = this.addDeviceObj.settings) === null || _d === void 0 ? void 0 : _d.lanPortFive) {\n          delete this.addDeviceObj.settings.lanPortFive;\n        }\n        // this.wapModeWarning = (event?.target?.value === 'WAP' || event === 'WAP');\n        if (((_e = event === null || event === void 0 ? void 0 : event.target) === null || _e === void 0 ? void 0 : _e.value) === 'WAP') {\n          this.wapModeWarning = true;\n          this.changedOpMode.emit(\"WAP\");\n        }\n        if (((_f = event === null || event === void 0 ? void 0 : event.target) === null || _f === void 0 ? void 0 : _f.value) === 'WAP-IGMP') {\n          this.wapModeWarning = true;\n          this.changedOpMode.emit(\"WAP-IGMP\");\n        } else if (event === 'WAP') {\n          this.wapModeWarning = false;\n        } else if (event === 'RG') {\n          this.wapModeWarning = false;\n        }\n        if (this.addDeviceObj.addDeviceTab.length > 2) {\n          this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL];\n        }\n        if (((_g = event === null || event === void 0 ? void 0 : event.target) === null || _g === void 0 ? void 0 : _g.value) === 'RG' || event === 'RG') {\n          this.wapModeWarning = false;\n          this.changedOpMode.emit(\"RG\");\n        }\n      }\n    }\n    /**\r\n       * fix https://calix.atlassian.net/browse/CCL-27725\r\n       */\n    // onModeRadioBtnDisplay(selectedModel: string, eventChange = false) {\n    //   this.addDeviceObj.device.deviceMode = eventChange ? undefined : this.addDeviceObj.device.deviceMode;\n    //   this.isRgBtnShow = this.rgBtnArray.indexOf(selectedModel) !== -1;\n    //   this.isWapBtnShow = this.wapBtnArray.indexOf(selectedModel) !== -1;\n    //   this.isMangeBtnShow = this.manageBtnArray.indexOf(selectedModel) !== -1;\n    //   this.isModemBtnShow = this.modemBtnArray.indexOf(selectedModel) !== -1;\n    //   if (this.isRgBtnShow) {\n    //     this.addDeviceObj.device.deviceMode = !this.addDeviceObj.device.deviceMode ? 'RG' : this.addDeviceObj.device.deviceMode;\n    //     if (this.addDeviceObj.device.deviceMode === 'Managed ONT') {\n    //       this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL, SubscriberManagement.SETTINGS_LABEL];\n    //     } else {\n    //       if (this.addDeviceObj.addDeviceTab.length > 2) {\n    //         this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL];\n    //       }\n    //     }\n    //   }\n    //   if (this.addDeviceObj.device.deviceMode !== 'RG') {\n    //     this.addDeviceObj.device.deviceMode = this.isWapBtnShow ? 'WAP' : this.isModemBtnShow ? 'Modem' : this.isMangeBtnShow ? 'Managed ONT' : 'RG';\n    //   }\n    // }\n    onModeRadioBtnDisplayNew(opmodes, selectedModel, eventChange = false, deviceNotFound = false) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z;\n      this.error = false;\n      this.onModelChange(false);\n      this.addDeviceObj.device.deviceMode = eventChange ? undefined : this.addDeviceObj.device.deviceMode;\n      this.reassignMode(opmodes);\n      this.isRgBtnShow = opmodes['RG'] ? true : false;\n      this.isWapBtnShow = opmodes['WAP'] ? true : false;\n      //this.isWapBtnShow = (opmodes['WAP'] || opmodes['WAP-IGMP']) ? true : false;\n      this.isWapIGMPBtnShow = opmodes['WAP-IGMP'] ? true : false;\n      this.isMangeBtnShow = opmodes['Managed ONT'] ? true : false;\n      this.isModemBtnShow = opmodes['Modem'] || this.modemBtnArray.indexOf(selectedModel) !== -1;\n      if (this.isRgBtnShow) {\n        this.addDeviceObj.device.deviceMode = !this.addDeviceObj.device.deviceMode ? 'RG' : this.addDeviceObj.device.deviceMode;\n        if (this.addDeviceObj.device.deviceMode == \"RG\") this.changedOpMode.emit(\"RG\");\n        if (this.addDeviceObj.device.deviceMode === 'Managed ONT') {\n          this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL, SubscriberManagement.SETTINGS_LABEL];\n        } else {\n          if (this.addDeviceObj.addDeviceTab.length > 2) {\n            this.addDeviceObj.addDeviceTab = [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL];\n          }\n        }\n      }\n      /* if (this.addDeviceObj.device.deviceMode !== 'RG') {\r\n        this.addDeviceObj.device.deviceMode = this.isWapBtnShow ? 'WAP' : this.isModemBtnShow ? 'Modem' : this.isMangeBtnShow ? 'Managed ONT' : 'RG';\r\n      } */\n      if (!this.addDeviceObj.device.deviceMode && selectedModel && opmodes['WAP'] && this.isWapBtnShow) {\n        this.addDeviceObj.device.deviceMode = 'WAP';\n      }\n      if (!this.addDeviceObj.device.deviceMode && selectedModel && opmodes['Modem'] && this.isModemBtnShow) {\n        this.addDeviceObj.device.deviceMode = 'Modem';\n      }\n      if (((_b = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.editDeviceObj) === null || _b === void 0 ? void 0 : _b.opModeWithOnt) == 'ONT') {\n        this.addDeviceObj.device.deviceMode = '';\n      }\n      if (((_d = (_c = history === null || history === void 0 ? void 0 : history.state) === null || _c === void 0 ? void 0 : _c.editDeviceObj) === null || _d === void 0 ? void 0 : _d.subscriberId) != \"\") {\n        this.addDeviceObj.device.subscriberId = ((_f = (_e = history === null || history === void 0 ? void 0 : history.state) === null || _e === void 0 ? void 0 : _e.editDeviceObj) === null || _f === void 0 ? void 0 : _f.subscriberId) ? (_h = (_g = history === null || history === void 0 ? void 0 : history.state) === null || _g === void 0 ? void 0 : _g.editDeviceObj) === null || _h === void 0 ? void 0 : _h.subscriberId : '';\n      }\n      if (((_k = (_j = history === null || history === void 0 ? void 0 : history.state) === null || _j === void 0 ? void 0 : _j.subscriberData) === null || _k === void 0 ? void 0 : _k.name) != \"\") {\n        this.name = ((_m = (_l = history === null || history === void 0 ? void 0 : history.state) === null || _l === void 0 ? void 0 : _l.subscriberData) === null || _m === void 0 ? void 0 : _m.name) ? (_p = (_o = history === null || history === void 0 ? void 0 : history.state) === null || _o === void 0 ? void 0 : _o.subscriberData) === null || _p === void 0 ? void 0 : _p.name : '';\n      }\n      let showWarningMessage = true;\n      Object.keys(opmodes).forEach(key => {\n        if (this.addDeviceObj.device.deviceMode == key) {\n          showWarningMessage = false;\n        }\n      });\n      //CCL-37251 fix\n      if (showWarningMessage && ((_r = (_q = this.addDeviceObj) === null || _q === void 0 ? void 0 : _q.device) === null || _r === void 0 ? void 0 : _r.deviceMode) && (((_t = (_s = this.addDeviceObj) === null || _s === void 0 ? void 0 : _s.device) === null || _t === void 0 ? void 0 : _t.deviceMode) == 'WAP' || ((_v = (_u = this.addDeviceObj) === null || _u === void 0 ? void 0 : _u.device) === null || _v === void 0 ? void 0 : _v.deviceMode) == 'WAP-IGMP')) {\n        if (((_x = (_w = this.addDeviceObj) === null || _w === void 0 ? void 0 : _w.device) === null || _x === void 0 ? void 0 : _x.deviceMode) == 'WAP' && opmodes['WAP-IGMP'] && !opmodes['WAP']) {\n          this.addDeviceObj.device.deviceMode = 'WAP-IGMP';\n          showWarningMessage = false;\n          this.changedOpMode.emit(\"WAP-IGMP\");\n        } else if (((_z = (_y = this.addDeviceObj) === null || _y === void 0 ? void 0 : _y.device) === null || _z === void 0 ? void 0 : _z.deviceMode) == 'WAP-IGMP' && opmodes['WAP'] && !opmodes['WAP-IGMP']) {\n          this.addDeviceObj.device.deviceMode = 'WAP';\n          showWarningMessage = false;\n          this.changedOpMode.emit(\"WAP\");\n        }\n      }\n      this.error = false;\n      if (showWarningMessage && this.addDeviceObj.device.deviceMode && !deviceNotFound) {\n        this.error = true;\n        this.errorInfo = \"Please select the different Mode as Router doesn't support \" + this.addDeviceObj.device.deviceMode;\n      }\n    }\n    onValidateExisitingDevice() {\n      let oldRegId = this.addDeviceObj.device.regId;\n      this.addDeviceObj.device.regId = this.regId;\n      this.regId = this.addDeviceObj.device.regId ? this.addDeviceObj.device.regId.trim() : '';\n      this.regId = this.addDeviceObj.device.regId.replace(/[^0-9A-Za-z:\\-]/g, '').replace(/(\\..?)\\../g, '$1');\n      this.onValidateExistingDevice.emit(this.addDeviceObj.device.regId.trim());\n      if (this.addDeviceObj.isNewRecord && this.addDeviceObj.device.regId !== oldRegId) {\n        this.wapModeWarning = false;\n        this.addDeviceObj.device.selectedModel = '';\n        this.addDeviceObj.device.isDisableModel = false;\n        this.addDeviceObj.device.deviceMode = '';\n        this.addDeviceObj.device.selectedStaticGroup = [];\n        this.addDeviceObj.device.isStaticGroup = 'No';\n      }\n    }\n    checkIsStaticGroup() {\n      var _a, _b;\n      console.log(this.addDeviceObj);\n      this.closeAlert();\n      if (this.isStaticGroup && ((_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device.selectedStaticGroup.length) > 0 && ((_b = this.addDeviceObj) === null || _b === void 0 ? void 0 : _b.device.isStaticGroup) === 'No') {\n        this.errorInfo = 'Static Group Memberships will be removed.';\n        this.error = true;\n      }\n    }\n    closeAlert() {\n      this.error = false;\n      this.errorInfo = '';\n    }\n    getDeviceInfo() {\n      var _a, _b, _c;\n      this.modelNameReadOnly = false;\n      this.regId = (_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.regId;\n      if ((_c = this.regId) === null || _c === void 0 ? void 0 : _c.trim()) {\n        this.loader = true;\n        this.service.getDeviceDetails(this.orgId, this.regId).subscribe(res => {\n          var _a;\n          // this.service.getDeviceInfo(this.regId).subscribe((res: any) => {\n          //console.log(res);\n          this.loader = false;\n          this.deviceInfo = res ? res : {};\n          if (res) {\n            if (res.opMode === 'WAP') {\n              this.isRgBtnShow = false;\n              this.isWapBtnShow = true;\n              this.isWapIGMPBtnShow = false;\n              this.isMangeBtnShow = false;\n              this.isModemBtnShow = false;\n            }\n            if (res.opMode === 'WAP-IGMP') {\n              this.isRgBtnShow = false;\n              this.isWapBtnShow = false;\n              this.isWapIGMPBtnShow = true;\n              this.isMangeBtnShow = false;\n              this.isModemBtnShow = false;\n            }\n            if (res.bSmbMode) {\n              this.bSmbMode = true;\n              this.bSmbModeEmit.emit(true);\n            }\n            ;\n            if (res.modelName) {\n              this.addDeviceObj.device.selectedModel = res.modelName;\n              this.addDeviceObj.device.manufacturer = res.manufacturer;\n              this.addDeviceObj.device.isDisableModel = true;\n              this.modelNameReadOnly = true;\n            }\n            /**\r\n             * remove CCL-25830\r\n             */\n            // if (res.opMode) {\n            //   this.addDeviceObj.device.deviceMode = res.opMode;\n            // }\n            // if (!this.addDeviceObj?.device?.selectedModel) {\n            //   this.deviceMode = res.opMode;\n            //   this.modelNumberReadOnly = true;\n            // }\n            if ((_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device.selectedModel) {\n              let params = {\n                // orgId: this.ssoService.getOrgId(),\n                serialNumber: res.serialNumber ? encodeURIComponent(res.serialNumber) : undefined\n                //modelName: encodeURIComponent(this.addDeviceObj.device.selectedModel),\n                //wanAccessType: res['wanAccessType'],\n                //softwareVersion: res['softwareVersion']\n              };\n\n              let query = \"\";\n              for (var key in params) {\n                if (params[key] == undefined) {\n                  continue;\n                }\n                if (query != \"\") {\n                  query += \"&\";\n                }\n                query += key + \"=\" + encodeURIComponent(params[key]);\n              }\n              this.getFeatureProperties(this.addDeviceObj.device.selectedModel, false, query);\n              if (this.isProvision) {\n                // this.isProvision = true\n                this.tabChange.emit(1);\n              }\n            }\n          } else {\n            this.undiscoveredDevice = true;\n            if (this.addDeviceObj.device.selectedModel) {\n              this.getFeatureProperties(this.addDeviceObj.device.selectedModel, false);\n            }\n          }\n          this.managementService.setDiscoveredDeviceInfo(res || {});\n        }, error => {\n          this.loader = false;\n          this.deviceInfo = {};\n          if (this.addDeviceObj.device.selectedModel) {\n            this.getFeatureProperties(this.addDeviceObj.device.selectedModel, false);\n          }\n          console.log(error);\n          this.managementService.setDiscoveredDeviceInfo({});\n        });\n      }\n    }\n    replaceDevice(subscriberId, oldDeviceId) {\n      if (!this.replaceDeviceId.trim()) {\n        this.pageModalErrorHandle(this.language['Please enter Registered ID/FSAN/MAC Address /SN']);\n        return;\n      }\n      //this.isReplaceModelNumberReadonly = false;\n      this.replaceDeviceBtn = true;\n      this.modalLoader = true;\n      const newDeviceId = this.replaceDeviceId.trim();\n      this.doPerformReplaceDevice(this.addDeviceObj.device.subscriberId, oldDeviceId, newDeviceId);\n    }\n    doPerformReplaceDevice(subscriberId, oldDeviceId, newDeviceId, skipSSID) {\n      let system = {\n        \"oldSystemId\": oldDeviceId,\n        \"newSystemId\": newDeviceId\n      };\n      this.service.performSearch(this.orgId, newDeviceId, 1, 1).subscribe(res => {\n        var _a, _b, _c, _d;\n        if ((res === null || res === void 0 ? void 0 : res.records) && ((_a = res.records[0]) === null || _a === void 0 ? void 0 : _a.devices) && ((_b = res.records[0]) === null || _b === void 0 ? void 0 : _b.subscriberId) && ((_d = (_c = res.records[0]) === null || _c === void 0 ? void 0 : _c.devices) === null || _d === void 0 ? void 0 : _d.deviceId) == newDeviceId) {\n          this.modalLoader = false;\n          this.replaceDeviceBtn = false;\n          this.pageModalErrorHandle(this.language['The new device selected is already associated with a different subscriber.']);\n          return;\n        } else {\n          /**\r\n           * to fix the CCL-27011, change new device FSAN to Uppercase\r\n           */\n          let params = {\n            orgId: this.orgId,\n            newDeviceId: /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/.test(newDeviceId) ? newDeviceId : newDeviceId.toUpperCase(),\n            modelName: this.replaceModelNumber,\n            opMode: this.deviceMode,\n            type: /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/.test(newDeviceId) ? 'MAC Address' : 'FSAN'\n          };\n          this.foundationService.updateNewSystem(this.orgId, system, skipSSID).subscribe(res => {\n            this.regId = system.newSystemId;\n            this.addDeviceObj.device.regId = this.regId;\n            this.editDeviceObj.deviceId = this.regId;\n            this.successInfo = 'Old system replaced by New system successfully';\n            setTimeout(() => {\n              this.modalLoader = false;\n              this.replaceDeviceBtn = false;\n              //  newSystemId = system.newSystemId\n              $(document.elementFromPoint(0, 0)).trigger('click');\n              this.searchText && this.searchText.length > 2 ? this.search(this.searchText) : this.keupEnter();\n            }, 3000);\n          }, err => {\n            var _a;\n            this.modalLoader = false;\n            this.replaceDeviceBtn = false;\n            if (err.status === 400 && [err[\"errorCode\"], (_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.errorCode].includes(\"FAILED_RELOAD_SSID\")) {\n              this.dialogService.open(this.replaceConfirm, {\n                windowClass: 'custom-warning-modal clx-custom-modal',\n                size: 'lg',\n                centered: true\n              });\n            } else {\n              this.pageModalErrorHandle(err);\n            }\n          });\n          //this.modalLoader = false;\n        }\n      }, err => {\n        this.replaceDeviceBtn = false;\n        this.modalLoader = false;\n        this.pageModalErrorHandle(err);\n      });\n    }\n    assignDeviceReplace(deviceId, subscriberId, device, data) {\n      this.isModalError = false;\n      this.modalWarningMessage = '';\n      this.replaceModelNumber = '';\n      this.deviceMode = '';\n      this.replaceDeviceId = '';\n      this.isReplaceModelNumberReadonly = false;\n      this.showReplaceModelNumber = false;\n      $('.replaceDeviceField').val('');\n      this.deviceInfo.replaceDeviceId = deviceId;\n      this.addDeviceObj.device.subscriberId = subscriberId;\n      this.cloneSubscriberData = data;\n    }\n    pageModalErrorHandle(err, showError = true) {\n      if (err.status === 401) {\n        this.modalWarningMessage = this.language['Access Denied'];\n      } else if ((!err.status || !err.error) && typeof err == 'string') {\n        this.modalWarningMessage = err;\n      } else {\n        this.modalWarningMessage = this.ssoService.pageErrorHandle(err);\n      }\n      if (showError) this.isModalError = true;\n      return this.modalWarningMessage;\n    }\n    getDeviceModels() {\n      let params = {\n        orgId: this.ssoService.getOrgId()\n      };\n      return this.http.get(`${environment.SUPPORT_URL}/netops-device/device-type?matcher=${JSON.stringify(params)}`).subscribe(json => {\n        let obj = {};\n        if (json) {\n          json.forEach(element => {\n            if (element && element.modelName) {\n              obj[element['modelName'].trim()] = true;\n            }\n          });\n          this.deviceModels = Object.keys(obj);\n          this.managementService.setDeviceModels(this.ssoService.getOrgId(), this.deviceModels);\n        }\n      }, err => {\n        this.pageModalErrorHandle(err);\n      });\n    }\n    isValidOntModel(device) {\n      if (device.opModeWithOnt == \"ONT\") {\n        return this.deviceModels.filter(name => name == device.modelName).length == 0;\n      }\n      return false;\n    }\n    search(term) {\n      var _a;\n      if (term.length < 2) this.keupEnter();\n      (_a = this.dtElement) === null || _a === void 0 ? void 0 : _a.dtInstance.then(dtInstance => {\n        this.service.performSearch(this.orgId, term, 0, 0).subscribe(res => {\n          this.filterCount = res.metadata.totalHits;\n          this.showResult = true;\n          this.showFilterCount = true;\n          dtInstance.search(term).draw();\n        }, error => {\n          this.loader = false;\n        });\n      });\n    }\n    keupEnter() {\n      this.searchText = this.searchText ? this.searchText : '';\n      if (this.searchText.length == 0) {\n        this.showFilterCount = false;\n        this.dtElement.dtInstance.then(dtInstance => {\n          this.service.performSearch(this.orgId, this.searchText, 0, 0).subscribe(res => {\n            this.filterCount = res.metadata.totalHits;\n            this.count = res.metadata.totalHits;\n            this.showResult = true;\n            dtInstance.draw();\n          }, error => {\n            this.loader = false;\n          });\n        });\n      }\n    }\n    getScopes() {\n      let isntSubscriber = false;\n      let scopes = this.ssoService.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        let validScopes = Object.keys(scopes);\n        const scopeCheck = {};\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.csc.netops.mgmt') !== -1) {\n              scopeCheck.showSubscriberMngmnt = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.csc.netops.operations') !== -1) {\n              scopeCheck.showOperations = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.csc.netops.reports') !== -1) {\n              scopeCheck.showReports = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.csc.netops.config') !== -1) {\n              scopeCheck.showConfiguration = true;\n              continue;\n            }\n          }\n        }\n        if (scopeCheck.showSubscriberMngmnt || scopeCheck.showOperations || scopeCheck.showReports || scopeCheck.showConfiguration) {\n          if (scopeCheck.showSubscriberMngmnt) {} else if (scopeCheck.showReports) {\n            isntSubscriber = true;\n            this.router.navigate([\"./support/netops-management/reports\"]);\n          } else if (scopeCheck.showOperations) {\n            isntSubscriber = true;\n            this.router.navigate([\"./support/netops-management/operations\"]);\n          } else if (scopeCheck.showConfiguration) {\n            isntSubscriber = true;\n            this.router.navigate([\"./support/netops-management/configuration\"]);\n          }\n        }\n        scopes['cloud.rbac.csc.netops.mgmt.subscribers'] = scopes['cloud.rbac.csc.netops.mgmt.subscribers'] ? scopes['cloud.rbac.csc.netops.mgmt.subscribers'] : [];\n        scopes['cloud.rbac.csc.netops.mgmt.devices'] = scopes['cloud.rbac.csc.netops.mgmt.devices'] ? scopes['cloud.rbac.csc.netops.mgmt.devices'] : [];\n        if (scopes && scopes['cloud.rbac.csc.netops.mgmt.devices'] && scopes['cloud.rbac.csc.netops.mgmt.devices'].indexOf('write') !== -1) {\n          this.hasWriteAccessForDevice = true;\n        }\n      } else {\n        this.hasWriteAccessForDevice = true;\n      }\n      this.route.queryParams.subscribe(params => {\n        var _a, _b;\n        this.searchText = params['searchText'] || ((_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.searchText) || ((_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.subscriberId);\n        if (this.searchText || this.searchText == \"\") {\n          setTimeout(() => {\n            this.redraw();\n          }, 1000);\n        }\n      });\n      return isntSubscriber;\n    }\n    findObjByKeyValue(value, myArray) {\n      for (var i = 0; i < myArray.length; i++) {\n        if (myArray[i] && myArray[i]['featureName'] === value) {\n          return myArray[i];\n        }\n      }\n      return false;\n    }\n    redraw() {\n      if (this.searchText && this.searchText.length < 2) {\n        this.dtElement.dtInstance.then(dtInstance => {\n          dtInstance.draw();\n        });\n      } else {\n        this.search(this.searchText);\n      }\n    }\n    getFeatureProperties(modelName, eventChange = false, query = \"\", serialNumber) {\n      this.fpLoader = true;\n      if (!query) {\n        query = `${this.ssoService.getOrg(this.orgId)}modelName=${encodeURIComponent(modelName)}`;\n      }\n      if (serialNumber) {\n        query = `${this.ssoService.getOrg(this.orgId)}serialNumber=${encodeURIComponent(serialNumber)}`;\n      }\n      this.http.get(`${environment.CALIX_URL}support/device/feature-properties?${query}`).subscribe(json => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n        console.log(json);\n        // this.wapModeWarning = false;\n        this.replaceCheck = json;\n        if (json && json.properties) {\n          let obj = {};\n          if (this.findObjByKeyValue('SSID1', json.properties)) {\n            obj['2DOT4GHZ_PRIMARY'] = true;\n          }\n          if (this.findObjByKeyValue('SSID2', json.properties)) {\n            obj['2DOT4GHZ_GUEST'] = true;\n          }\n          if (this.findObjByKeyValue('SSID9', json.properties)) {\n            obj['5GHZ_PRIMARY'] = true;\n          }\n          if (this.findObjByKeyValue('SSID10', json.properties)) {\n            obj['5GHZ_GUEST'] = true;\n          }\n          this.wifiSsidMngrStngs.emit(obj);\n          let opmodes = {};\n          let opmodesObj = this.findObjByKeyValue('OpModeOptions', json.properties);\n          this.opModeWritable = [];\n          let opmodeData = Object.keys(opmodesObj['configuration']);\n          // CCL-41475\n          if ((opmodeData === null || opmodeData === void 0 ? void 0 : opmodeData.length) === 1) {\n            this.hideRadioButton = true;\n            this.handleModeChange(opmodeData[0]);\n            this.addDeviceObj.device.deviceMode = opmodeData[0];\n          } else {\n            this.hideRadioButton = false;\n          }\n          console.log(opmodesObj);\n          let writableCheck,\n            isOpmodeAvailInOptions = false;\n          let opmodeAvail = ((_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.deviceMode) ? (_d = (_c = this.addDeviceObj) === null || _c === void 0 ? void 0 : _c.device) === null || _d === void 0 ? void 0 : _d.deviceMode : json.opMode;\n          console.log(opmodeAvail, \"opmodeAvail\");\n          if (opmodesObj && opmodesObj['configuration'] && opmodeAvail && opmodeAvail in opmodesObj['configuration']) {\n            writableCheck = (_e = opmodesObj['configuration'][opmodeAvail]) === null || _e === void 0 ? void 0 : _e.writable;\n            isOpmodeAvailInOptions = true;\n            if (((_f = opmodesObj['configuration'].RG) === null || _f === void 0 ? void 0 : _f.writable) != undefined && ((_g = opmodesObj['configuration'].RG) === null || _g === void 0 ? void 0 : _g.writable) === writableCheck) {\n              opmodes['RG'] = true;\n            }\n            if (((_h = opmodesObj['configuration'].WAP) === null || _h === void 0 ? void 0 : _h.writable) != undefined && ((_j = opmodesObj['configuration'].WAP) === null || _j === void 0 ? void 0 : _j.writable) === writableCheck) {\n              opmodes['WAP'] = true;\n            }\n            if (((_k = opmodesObj['configuration']['Managed ONT']) === null || _k === void 0 ? void 0 : _k.writable) != undefined && ((_l = opmodesObj['configuration']['Managed ONT']) === null || _l === void 0 ? void 0 : _l.writable) === writableCheck) {\n              opmodes['Managed ONT'] = true;\n            }\n            if (((_m = opmodesObj['configuration']['WAP-IGMP']) === null || _m === void 0 ? void 0 : _m.writable) != undefined && ((_o = opmodesObj['configuration']['WAP-IGMP']) === null || _o === void 0 ? void 0 : _o.writable) === writableCheck) {\n              opmodes['WAP-IGMP'] = true;\n            }\n            if (((_p = opmodesObj['configuration']['Modem']) === null || _p === void 0 ? void 0 : _p.writable) != undefined && ((_q = opmodesObj['configuration']['Modem']) === null || _q === void 0 ? void 0 : _q.writable) === writableCheck) {\n              opmodes['Modem'] = true;\n            }\n          } else {\n            if (((_r = opmodesObj['configuration'].RG) === null || _r === void 0 ? void 0 : _r.writable) != undefined || ((_s = opmodesObj['configuration'].RG) === null || _s === void 0 ? void 0 : _s.writable)) {\n              opmodes['RG'] = true;\n            }\n            if (((_t = opmodesObj['configuration'].WAP) === null || _t === void 0 ? void 0 : _t.writable) != undefined || ((_u = opmodesObj['configuration'].WAP) === null || _u === void 0 ? void 0 : _u.writable)) {\n              opmodes['WAP'] = true;\n            }\n            if (((_v = opmodesObj['configuration']['Managed ONT']) === null || _v === void 0 ? void 0 : _v.writable) != undefined || ((_w = opmodesObj['configuration']['Managed ONT']) === null || _w === void 0 ? void 0 : _w.writable)) {\n              opmodes['Managed ONT'] = true;\n            }\n            if (((_x = opmodesObj['configuration']['WAP-IGMP']) === null || _x === void 0 ? void 0 : _x.writable) != undefined || ((_y = opmodesObj['configuration']['WAP-IGMP']) === null || _y === void 0 ? void 0 : _y.writable)) {\n              opmodes['WAP-IGMP'] = true;\n            }\n            if (((_z = opmodesObj['configuration']['Modem']) === null || _z === void 0 ? void 0 : _z.writable) != undefined || ((_0 = opmodesObj['configuration']['Modem']) === null || _0 === void 0 ? void 0 : _0.writable)) {\n              opmodes['Modem'] = true;\n            }\n          }\n          if ((json === null || json === void 0 ? void 0 : json.properties.filter(obj => (obj === null || obj === void 0 ? void 0 : obj.featureName) == \"lanPort5\" && (obj === null || obj === void 0 ? void 0 : obj.supported)).length) > 0) {\n            this.isLan5Support = true;\n          } else {\n            this.isLan5Support = false;\n          }\n          // Commented for CCL-37523\n          // if (opmodesObj && opmodesObj['configuration']) {\n          //   if (opmodesObj['configuration'].RG) {\n          //     opmodes['RG'] = true;\n          //     if (!opmodesObj['configuration'].RG?.writable) this.opModeWritable.push('RG');\n          //   }\n          //   if (opmodesObj['configuration'].WAP) {\n          //     opmodes['WAP'] = true;\n          //     if (!opmodesObj['configuration'].WAP?.writable) this.opModeWritable.push('WAP');\n          //   }\n          //   if (opmodesObj['configuration']['Managed ONT']) {\n          //     opmodes['Managed ONT'] = true;\n          //     if (!opmodesObj['configuration']['Managed ONT']?.writable) this.opModeWritable.push('Managed ONT');\n          //   }\n          //   if (opmodesObj['configuration']['WAP-IGMP']) {\n          //     opmodes['WAP-IGMP'] = true;\n          //     if (!opmodesObj['configuration']['WAP-IGMP']?.writable) this.opModeWritable.push('WAP-IGMP');\n          //   }\n          //   if (opmodesObj['configuration']['Modem']) {\n          //     opmodes['Modem'] = true;\n          //     if (!opmodesObj['configuration'].Modem?.writable) this.opModeWritable.push('Modem');\n          //   }\n          // }\n          /* this.fpLoader = true;\r\n          this.service.getDevicePR(this.ssoService.getOrgId(), this.addDeviceObj.device.regId).subscribe((res: any) => {\r\n            this.fpLoader = false;\r\n            this.addDeviceObj.device.deviceMode = res?.opMode || 'RG';\r\n            this.onModeRadioBtnDisplayNew(opmodes, modelName, eventChange);\r\n          }, err => {\r\n            this.fpLoader = false;\r\n          }); */\n          this.onModeRadioBtnDisplayNew(opmodes, modelName, eventChange);\n        }\n        // let opmodeData = Object.keys( opmodesObj['configuration']);\n        //   if(opmodeData?.length === 1){\n        //     this.hideRadioButton=true;\n        //     this.systemInfoForm.patchValue({opMode:opmodeData[0]})\n        //     this.handleModeChange(opmodeData[0]);\n        //     this.systemInfochange();\n        //   }else{\n        //     this.hideRadioButton=false;\n        //   }\n        this.fpLoader = false;\n      }, err => {\n        var _a, _b;\n        //this.pageErrorHandle(err);\n        if (((_a = err.error) === null || _a === void 0 ? void 0 : _a.error) && ((_b = err.error) === null || _b === void 0 ? void 0 : _b.error.indexOf(\"Device not found\")) > -1) {\n          this.onModeRadioBtnDisplayNew({}, modelName, false, true);\n        } else {\n          this.onModeRadioBtnDisplayNew({}, modelName, false);\n        }\n        this.fpLoader = false;\n      });\n    }\n    reassignMode(opModes) {\n      let mode = this.addDeviceObj.device.deviceMode;\n      if (mode && !Object.keys(opModes).filter(obj => obj.includes(mode))) {\n        this.addDeviceObj.device.deviceMode = opModes['RG '] ? 'RG' : opModes['WAP'] ? 'WAP' : 'Managed ONT';\n      }\n    }\n    removeTagOnBackspace(event) {\n      console.log(\"backspace event\", event);\n    }\n    maxLength1(event) {\n      if (event.target.value.length <= 36) {\n        this.showError1 = false;\n      } else if (event.target.value.length > 36) {\n        this.showError1 = true;\n      }\n    }\n    maxLength(regId, event) {\n      regId = this.addDeviceObj.device.regId;\n      if (event.target.value.length <= 9) {\n        this.showError1 = false;\n      } else if (event.target.value.length > 9) {\n        this.showError1 = true;\n      }\n    }\n    onPasteValidation(event) {\n      if (event.clipboardData.getData('text').length > 36) {\n        this.showError1 = true;\n      } else {\n        this.showError1 = false;\n      }\n    }\n    preventKeypress(event, regId) {\n      if ((regId === null || regId === void 0 ? void 0 : regId.length) >= 36) {\n        if (event.key !== 'Backspace') event.preventDefault();\n      }\n    }\n    clsAlphaNoOnly(e) {\n      var regex = new RegExp(\"^[a-zA-Z0-9:\\-]+$\");\n      var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);\n      if (regex.test(str)) {\n        return true;\n      }\n      e.preventDefault();\n      return false;\n    }\n    notONT1(data) {\n      return data.hasOwnProperty(\"ont\");\n    }\n  }\n  DeviceWizardComponent.ɵfac = function DeviceWizardComponent_Factory(t) {\n    return new (t || DeviceWizardComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.DataServiceService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.ManagementService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.FoundationManageService), i0.ɵɵdirectiveInject(i8.NgbModal));\n  };\n  DeviceWizardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceWizardComponent,\n    selectors: [[\"app-device-wizard\"]],\n    viewQuery: function DeviceWizardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.replaceConfirm = _t.first);\n      }\n    },\n    inputs: {\n      editMode: \"editMode\",\n      checkDeviceDiscovery: \"checkDeviceDiscovery\",\n      dataObj: \"dataObj\",\n      bSmbMode: \"bSmbMode\",\n      _staticGrpError: \"_staticGrpError\",\n      addDeviceObj: \"addDeviceObj\",\n      staticGroupList: \"staticGroupList\",\n      deviceModels: \"deviceModels\",\n      isProvision: \"isProvision\"\n    },\n    outputs: {\n      onValidateExistingDevice: \"onValidateExistingDevice\",\n      changedOpMode: \"changedOpMode\",\n      tabChange: \"tabChange\",\n      wifiSsidMngrStngs: \"wifiSsidMngrStngs\",\n      bSmbModeEmit: \"bSmbModeEmit\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 73,\n    vars: 43,\n    consts: [[\"id\", \"deviceWizard\", 1, \"device-wizard\", \"p-0\"], [\"class\", \"wap-alert modal-warning alert-warning alert-dismissible fade show\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-danger fade show my-3\", 4, \"ngIf\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"margin-top-20\"], [\"class\", \"w-100 alert alert-success fade show\", 4, \"ngIf\"], [1, \"pb-2\"], [1, \"form-group\", \"ccl-form\", \"row\"], [1, \"col-12\", \"col-lg-3\"], [1, \"pt-20\"], [1, \"error\"], [1, \"col-12\", \"col-lg-9\", \"pt-3\"], [\"type\", \"text\", \"id\", \"fsan\", \"name\", \"fsan\", 3, \"disabled\", \"ngClass\", \"ngModel\", \"placeholder\", \"blur\", \"keypress\", \"keyup\", \"paste\", \"keydown\", \"ngModelChange\"], [1, \"sm-text\"], [1, \"gotorouter\"], [\"data-toggle\", \"modal\", \"data-target\", \"#replaceDevice\", 3, \"title\", \"click\", 4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"pb-4\"], [1, \"row\"], [\"for\", \"deviceModel\", 1, \"col-12\", \"col-lg-3\"], [1, \"col-12\", \"col-lg-9\", \"state-success\", 3, \"ngClass\"], [\"name\", \"deviceModel\", 3, \"disabled\", \"ngClass\", \"ngModel\", \"placeholder\", \"change\", \"ngModelChange\"], [\"autofocus\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pb-4\", 4, \"ngIf\"], [1, \"col-12\", \"col-lg-3\", \"control-label\"], [1, \"col-12\", \"col-lg-9\", \"pl-0\"], [1, \"radio-inline\", \"col-3\"], [\"type\", \"radio\", \"name\", \"optionGroupsRadios\", \"value\", \"Yes\", 1, \"mr-2\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"radio\", \"name\", \"optionGroupsRadios\", \"value\", \"No\", 1, \"mr-2\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"class\", \"ccl-form row\", 4, \"ngIf\"], [\"id\", \"replaceDevice\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"replaceDevice\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\", \"padl-m\"], [1, \"modal-header\"], [\"id\", \"replaceDevice\", 1, \"net-ops-modal-title\", \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"progressbar-wrapper\"], [1, \"modal-body\"], [\"class\", \"py-3 alert alert-danger\", 4, \"ngIf\"], [\"for\", \"registered-id\", 1, \"col-12\", \"col-form-label\"], [1, \"col-12\"], [\"type\", \"text\", \"id\", \"registered-id\", \"name\", \"replaceDeviceId\", 1, \"replaceDeviceField\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"ccl-form\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"px-3\", \"m-2\", 3, \"click\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"transparant\", \"px-3\", \"m-2\"], [\"class\", \"col-md-12\"], [\"replaceConfirm\", \"\"], [1, \"wap-alert\", \"modal-warning\", \"alert-warning\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"Warning-content\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert-success\", \"fade\", \"show\"], [1, \"success-img\"], [\"src\", \"./assets/img/success-icon.svg\"], [\"data-toggle\", \"modal\", \"data-target\", \"#replaceDevice\", 3, \"title\", \"click\"], [\"autofocus\", \"\", 3, \"value\"], [\"class\", \"radio-inline col-3\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"radio-inline\", \"col-3\", 3, \"ngClass\"], [\"type\", \"radio\", \"value\", \"RG\", 1, \"mr-2\", 3, \"disabled\", \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"RG\", 1, \"mr-2\", 3, \"hidden\", \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"WAP\", 1, \"mr-2\", 3, \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"value\", \"WAP\", 1, \"mr-2\", 3, \"hidden\", \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"WAP-IGMP\", 1, \"mr-2\", 3, \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"value\", \"WAP-IGMP\", 1, \"mr-2\", 3, \"hidden\", \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"optionGroupDeviceMode\", \"value\", \"Managed ONT\", 1, \"mr-2\", 3, \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"Modem\", 1, \"mr-2\", 3, \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [\"value\", \"Modem\", 1, \"mr-2\", 3, \"hidden\", \"ngModel\", \"disabled\", \"change\", \"ngModelChange\"], [1, \"ccl-form\", \"row\"], [\"for\", \"staticGroups\", 1, \"col-3\", \"control-label\"], [1, \"col-9\"], [\"bindLabel\", \"name\", \"bindValue\", \"_id\", \"id\", \"staticGroups\", 1, \"custom\", 3, \"searchable\", \"clearable\", \"items\", \"ngModel\", \"multiple\", \"ngModelChange\", \"change\"], [1, \"py-3\", \"alert\", \"alert-danger\"], [\"type\", \"button\", \"id\", \"close-error-btn\", \"data-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"clx-modal-dismiss\", 3, \"click\"], [1, \"modal-body-content\"], [1, \"clx-warning-wrapper\"], [1, \"clx-warning-icon\"], [1, \"clx-warning-content\"], [\"id\", \"DevicereplaceConfirmTitle\", 1, \"text-break\", \"cco-secondary-title\", \"mb-3\"], [1, \"d-flex\", \"w-100\"], [1, \"m-0\"], [1, \"mt-3\"], [\"type\", \"button\", \"id\", \"DeviceconfirmContinuBtn\", 1, \"btn-default\", \"btn-primary\", \"mr-3\", 3, \"click\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"]],\n    template: function DeviceWizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DeviceWizardComponent_div_1_Template, 4, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, DeviceWizardComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, DeviceWizardComponent_div_3_Template, 5, 1, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, DeviceWizardComponent_div_5_Template, 6, 1, \"div\", 5);\n        i0.ɵɵelementStart(6, \"section\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"label\", 8);\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementStart(11, \"span\", 10);\n        i0.ɵɵtext(12, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵelementStart(14, \"input\", 12);\n        i0.ɵɵlistener(\"blur\", function DeviceWizardComponent_Template_input_blur_14_listener() {\n          return ctx.onValidateExisitingDevice();\n        })(\"keypress\", function DeviceWizardComponent_Template_input_keypress_14_listener($event) {\n          return ctx.clsAlphaNoOnly($event);\n        })(\"keyup\", function DeviceWizardComponent_Template_input_keyup_14_listener($event) {\n          return ctx.maxLength1($event);\n        })(\"paste\", function DeviceWizardComponent_Template_input_paste_14_listener($event) {\n          return ctx.onPasteValidation($event);\n        })(\"keydown\", function DeviceWizardComponent_Template_input_keydown_14_listener($event) {\n          return ctx.preventKeypress($event, ctx.regId);\n        })(\"ngModelChange\", function DeviceWizardComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.regId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵelementStart(16, \"small\", 13);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementStart(18, \"span\", 14);\n        i0.ɵɵtemplate(19, DeviceWizardComponent_a_19_Template, 2, 2, \"a\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵtemplate(21, DeviceWizardComponent_span_21_Template, 2, 1, \"span\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"section\", 17);\n        i0.ɵɵelementStart(23, \"div\", 18);\n        i0.ɵɵelementStart(24, \"label\", 19);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementStart(26, \"span\", 10);\n        i0.ɵɵtext(27, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 20);\n        i0.ɵɵelementStart(29, \"ng-select\", 21);\n        i0.ɵɵlistener(\"change\", function DeviceWizardComponent_Template_ng_select_change_29_listener($event) {\n          return ctx.onModelChange($event);\n        })(\"ngModelChange\", function DeviceWizardComponent_Template_ng_select_ngModelChange_29_listener($event) {\n          return (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device).selectedModel = $event;\n        });\n        i0.ɵɵtemplate(30, DeviceWizardComponent_ng_option_30_Template, 2, 2, \"ng-option\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, DeviceWizardComponent_section_31_Template, 14, 10, \"section\", 23);\n        i0.ɵɵelementStart(32, \"section\", 17);\n        i0.ɵɵelementStart(33, \"div\", 18);\n        i0.ɵɵelementStart(34, \"label\", 24);\n        i0.ɵɵtext(35);\n        i0.ɵɵelementStart(36, \"span\", 10);\n        i0.ɵɵtext(37, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 25);\n        i0.ɵɵelementStart(39, \"label\", 26);\n        i0.ɵɵelementStart(40, \"input\", 27);\n        i0.ɵɵlistener(\"ngModelChange\", function DeviceWizardComponent_Template_input_ngModelChange_40_listener($event) {\n          return (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device).isStaticGroup = $event;\n        })(\"change\", function DeviceWizardComponent_Template_input_change_40_listener() {\n          ctx.checkIsStaticGroup();\n          return ctx.isStaticGroup = true;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"label\", 26);\n        i0.ɵɵelementStart(43, \"input\", 28);\n        i0.ɵɵlistener(\"ngModelChange\", function DeviceWizardComponent_Template_input_ngModelChange_43_listener($event) {\n          return (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device).isStaticGroup = $event;\n        })(\"change\", function DeviceWizardComponent_Template_input_change_43_listener() {\n          return ctx.checkIsStaticGroup();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, DeviceWizardComponent_div_45_Template, 6, 8, \"div\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 30);\n        i0.ɵɵelementStart(47, \"div\", 31);\n        i0.ɵɵelementStart(48, \"div\", 32);\n        i0.ɵɵelementStart(49, \"div\", 33);\n        i0.ɵɵelementStart(50, \"span\", 34);\n        i0.ɵɵtext(51);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 35);\n        i0.ɵɵelement(53, \"span\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"div\", 37);\n        i0.ɵɵelementStart(55, \"div\", 38);\n        i0.ɵɵtemplate(56, DeviceWizardComponent_div_56_Template, 6, 1, \"div\", 39);\n        i0.ɵɵtemplate(57, DeviceWizardComponent_div_57_Template, 5, 1, \"div\", 3);\n        i0.ɵɵelementStart(58, \"form\");\n        i0.ɵɵelementStart(59, \"div\", 7);\n        i0.ɵɵelementStart(60, \"label\", 40);\n        i0.ɵɵtext(61);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 41);\n        i0.ɵɵelementStart(63, \"input\", 42);\n        i0.ɵɵlistener(\"ngModelChange\", function DeviceWizardComponent_Template_input_ngModelChange_63_listener($event) {\n          return ctx.replaceDeviceId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"small\");\n        i0.ɵɵtext(65);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"div\", 43);\n        i0.ɵɵelementStart(67, \"button\", 44);\n        i0.ɵɵlistener(\"click\", function DeviceWizardComponent_Template_button_click_67_listener() {\n          return ctx.replaceDevice(ctx.addDeviceObj.device == null ? null : ctx.addDeviceObj.device.subscriberId, ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device == null ? null : ctx.addDeviceObj.device.regId);\n        });\n        i0.ɵɵtext(68);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"button\", 45);\n        i0.ɵɵtext(70);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(71, DeviceWizardComponent_ng_template_71_Template, 18, 4, \"ng-template\", 46, 47, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wapModeWarning);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loader || ctx.fpLoader);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.successInfo);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate2(\"\", ctx.language.Reg, \"ID/FSAN/\", ctx.language.MAC_Address, \"/SN \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", ctx.language.Enter, \" Reg ID/FSAN/\", ctx.language.MAC_Address, \"/SN\");\n        i0.ɵɵproperty(\"disabled\", ctx.editMode)(\"ngClass\", i0.ɵɵpureFunction1(37, _c2, ctx.editMode))(\"ngModel\", ctx.regId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.language.Reg_Id, \"\\u00A0 & \\u00A0\", ctx.language.EXOS, \"\\u00A0 \\u00A0\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasWriteAccessForDevice && (ctx.name || (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device == null ? null : ctx.addDeviceObj.device.subscriberId)) && ((ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.deviceMode) === \"RG\" || (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.deviceMode) === \"Managed ONT\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Model, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c3, ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.isDisableModel));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"System Model\"]);\n        i0.ɵɵproperty(\"disabled\", ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.isDisableModel)(\"ngClass\", i0.ɵɵpureFunction1(41, _c4, ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.isDisableModel))(\"ngModel\", ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.selectedModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.deviceModels);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device == null ? null : ctx.addDeviceObj.device.selectedModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Add_Staticgrps, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.isStaticGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Yes, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device.isStaticGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.No, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.addDeviceObj == null ? null : ctx.addDeviceObj.device == null ? null : ctx.addDeviceObj.device.isStaticGroup) === \"Yes\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Replace_Device, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isModalError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.modalLoader);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Registered, \" ID/FSAN/MAC Address /SN\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.replaceDeviceId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Registered_Exos);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Replace, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.cancel, \" \");\n      }\n    },\n    directives: [i9.NgIf, i10.DefaultValueAccessor, i9.NgClass, i10.NgControlStatus, i10.NgModel, i11.NgSelectComponent, i9.NgForOf, i10.RadioControlValueAccessor, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.NgForm, i11.ɵr, i12.AutofocusDirective],\n    styles: [\"[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){position:relative!important;left:unset!important}.f-w-600[_ngcontent-%COMP%]{font-weight:600}[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){position:relative!important;left:0!important}select[_ngcontent-%COMP%]{border-radius:20px;background:#F8F8FA}.gotorouter[_ngcontent-%COMP%]{cursor:pointer;text-decoration:underline;color:#00f}.ccl-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:14px}.sm-text[_ngcontent-%COMP%]{font-size:12px}#deviceWizard[_ngcontent-%COMP%]{padding:0 20px}.ng-select.custom[_ngcontent-%COMP%]     .ng-select-container .ng-value-container .ng-input>input{height:26px}#staticGroups[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:26px}.wap-alert[_ngcontent-%COMP%]{position:relative;padding:.75rem .25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.disableDropDown[_ngcontent-%COMP%]{cursor:not-allowed!important}.ng-select.disableDropDown[_ngcontent-%COMP%]:hover{cursor:not-allowed!important}input.disableDropDown[_ngcontent-%COMP%]:hover{cursor:not-allowed!important}  .btn-notallowed .ng-select .ng-select-container{cursor:not-allowed!important;width:100%;pointer-events:none}  .btn-notallowed.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{cursor:not-allowed!important;position:relative!important}input.inp-disabled[_ngcontent-%COMP%]:hover{cursor:not-allowed!important}.pt-20[_ngcontent-%COMP%]{padding-top:20px}.check[_ngcontent-%COMP%]{max-width:13px;max-height:15px;min-height:15px;cursor:pointer}.padl-m[_ngcontent-%COMP%]{padding-left:30px!important;padding-right:30px!important}\"]\n  });\n  return DeviceWizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}