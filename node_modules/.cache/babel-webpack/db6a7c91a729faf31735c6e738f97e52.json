{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/sso-auth.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"@angular/common\";\nfunction NewProspectsComponent_iframe_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"iframe\", 1);\n    i0.ɵɵlistener(\"load\", function NewProspectsComponent_iframe_0_Template_iframe_load_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.resizeIframe($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.Url, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nexport let NewProspectsComponent = /*#__PURE__*/(() => {\n  class NewProspectsComponent {\n    constructor(ssoAuthService, sanitizer, translateService, titleService) {\n      this.ssoAuthService = ssoAuthService;\n      this.sanitizer = sanitizer;\n      this.translateService = translateService;\n      this.titleService = titleService;\n      this.counter = false;\n      this.isRefreshing = false;\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language[\"prospects\"]} - ${this.language[\"Explore_Data\"]}- ${this.language[\"Marketing_Cloud\"]}- ${this.language[\"Calix Cloud\"]}`);\n      });\n      if (this.language) {\n        this.titleService.setTitle(`${this.language[\"prospects\"]} - ${this.language[\"Explore_Data\"]}- ${this.language[\"Marketing_Cloud\"]}- ${this.language[\"Calix Cloud\"]}`);\n      }\n      this.translateService.selectedLanguage.subscribe(data => {\n        if (this.ticketId) this.formFrameUrl();\n      });\n      this.qlikTicketURL();\n    }\n    qlikTicketURL() {\n      let entitlement = this.ssoAuthService.getEntitlements();\n      let cmcType = !entitlement['209'] ? 'CMC' : 'CMC-Pro';\n      // https://clouddashboards-stg.calix.com/ticket/extensions/InfoXD_New/InfoXD_New.html?qlikTicket=TmEALHgjSu80GLoP#/?appId=y6b2per1608308687294&boardId=2cbuhe01608205645836&lang=fr&select=%25LANGUAGE,French%20Canadian\n      this.ssoAuthService.getQlikTOkenByAppType(cmcType).subscribe(res => {\n        this.ticketId = res ? res === null || res === void 0 ? void 0 : res.Ticket : '';\n        if (this.ticketId) this.formFrameUrl();\n      });\n    }\n    formFrameUrl() {\n      this.bookmark = this.segmentId ? `&bookmarkId=${this.segmentId}` : '';\n      const selectedLang = sessionStorage.getItem('defaultLanguage') == 'en' ? `&lang=en&select=clearall&select=%25LANGUAGE,English&stream_id=id8s6v51626783900713` : sessionStorage.getItem('defaultLanguage') == 'fr' ? `&lang=fr&select=clearall&select=%25LANGUAGE,French%20Canadian&stream_id=id8s6v51626783900713` : sessionStorage.getItem('defaultLanguage') == 'de_DE' ? `&lang=de&select=clearall&select=%25LANGUAGE,German&stream_id=id8s6v51626783900713` : `&lang=es&select=clearall&select=%25LANGUAGE,Spanish%20Latin%20America&stream_id=id8s6v51626783900713`;\n      this.pocURL = `${environment.ADVANCED_URL.replace('?', '')}`;\n      this.Url = this.sanitizer.bypassSecurityTrustResourceUrl(`${this.pocURL}?qlikTicket=${this.ticketId}#/?appId=${environment.APP_ID_PRO}&boardId=${environment.BOARD_ID_PRO}${this.bookmark}${selectedLang}`);\n      this.refreshIframe();\n    }\n    resizeIframe(obj) {\n      let iFrameID = document.getElementById('prospect-iframe');\n      if (iFrameID && !this.counter) {\n        this.counter = true;\n        // here you can make the height, I delete it first, then I make it again\n        iFrameID.height = \"\";\n        let height = iFrameID.contentWindow.document.body.scrollHeight;\n        iFrameID.height = height ? height + \"px\" : 1200 + 'px';\n      }\n      // iFrameID.height = \"\";\n      // let height = iFrameID.contentWindow.document.body.scrollHeight + 'px';\n      // iFrameID.height = height;\n      // console.log(iFrameID.height, 'height1')\n      // $('.myIframe').css('height', $(window).height() + 'px');\n      // obj.style.height = obj.contentWindow.document.documentElement.scrollHeight + 'px';\n    }\n\n    refreshIframe() {\n      this.isRefreshing = true;\n      setTimeout(() => {\n        this.isRefreshing = false;\n      }, 50);\n    }\n  }\n  NewProspectsComponent.ɵfac = function NewProspectsComponent_Factory(t) {\n    return new (t || NewProspectsComponent)(i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i2.Title));\n  };\n  NewProspectsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewProspectsComponent,\n    selectors: [[\"app-new-prospects\"]],\n    inputs: {\n      segmentId: \"segmentId\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"prospect-iframe\", \"frameborder\", \"0\", \"width\", \"100%\", 3, \"src\", \"load\", 4, \"ngIf\"], [\"id\", \"prospect-iframe\", \"frameborder\", \"0\", \"width\", \"100%\", 3, \"src\", \"load\"]],\n    template: function NewProspectsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NewProspectsComponent_iframe_0_Template, 1, 1, \"iframe\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRefreshing && ctx.Url);\n      }\n    },\n    directives: [i4.NgIf],\n    styles: [\"#prospect-iframe[_ngcontent-%COMP%]{min-height:1200px}\"]\n  });\n  return NewProspectsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}