{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"@angular/forms\";\nexport let ProfileService = /*#__PURE__*/(() => {\n  class ProfileService {\n    constructor(http, sso, formBuilder) {\n      this.http = http;\n      this.sso = sso;\n      this.formBuilder = formBuilder;\n    }\n    addProfile(orgId, request) {\n      const ID = this.sso.getOrg(orgId);\n      return this.http.post(`${environment.SUPPORT_URL}/netops-config/configuration-profile?${ID}`, request);\n    }\n    getProfileCount() {\n      return this.http.get(`${environment.SUPPORT_URL}/netops-config/configuration-category/count`);\n    }\n    getProfileList(orgId) {\n      const ID = this.sso.getOrg(orgId);\n      return this.http.get(`${environment.SUPPORT_URL}/netops-config/configuration-profile${ID}`);\n    }\n    getProfileDataById(editId) {\n      return this.http.get(`${environment.SUPPORT_URL}/netops-config/configuration-profile/${editId}`);\n    }\n    deleteProfileById(deleteId) {\n      return this.http.delete(`${environment.SUPPORT_URL}/netops-config/configuration-profile/${deleteId}`);\n    }\n    updateProfile(updateId, orgId, request) {\n      const ID = this.sso.getOrg(orgId);\n      return this.http.put(`${environment.SUPPORT_URL}/netops-config/configuration-profile/${updateId}?${ID}`, request);\n    }\n    getAclForRemoteAccessForm() {\n      return this.formBuilder.group({\n        RemoteAcl: [false],\n        list4: this.formBuilder.array([]),\n        list6: this.formBuilder.array([])\n      });\n    }\n    getAclForVoipForm() {\n      return this.formBuilder.group({\n        SipAcl: [false],\n        list4: this.formBuilder.array([]),\n        list6: this.formBuilder.array([])\n      });\n    }\n  }\n  ProfileService.ɵfac = function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService), i0.ɵɵinject(i3.FormBuilder));\n  };\n  ProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProfileService;\n})();","map":null,"metadata":{},"sourceType":"module"}