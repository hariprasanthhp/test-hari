{"ast":null,"code":"import elementHelper from 'bpmn-js-properties-panel/lib/helper/ElementHelper';\nimport cmdHelper from 'bpmn-js-properties-panel/lib/helper/CmdHelper';\nimport { isIdValid } from 'bpmn-js-properties-panel/lib/Utils';\nimport { getCalledElement } from '../../../helper/CalledElementHelper';\nimport { is, getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\nimport entryFactory from 'bpmn-js-properties-panel/lib/factory/EntryFactory';\nexport default function (group, element, bpmnFactory, translate) {\n  if (!is(element, 'bpmn:CallActivity')) {\n    return;\n  }\n  function getProperty(element, propertyName) {\n    const businessObject = getBusinessObject(element),\n      calledElement = getCalledElement(businessObject);\n    return calledElement ? calledElement.get(propertyName) : '';\n  }\n  function setProperties(element, values) {\n    const businessObject = getBusinessObject(element),\n      commands = [];\n\n    // ensure extensionElements\n    let extensionElements = businessObject.get('extensionElements');\n    if (!extensionElements) {\n      extensionElements = elementHelper.createElement('bpmn:ExtensionElements', {\n        values: []\n      }, businessObject, bpmnFactory);\n      commands.push(cmdHelper.updateBusinessObject(element, businessObject, {\n        extensionElements: extensionElements\n      }));\n    }\n\n    // ensure zeebe:calledElement\n    let calledElement = getCalledElement(businessObject);\n    if (!calledElement) {\n      calledElement = elementHelper.createElement('zeebe:CalledElement', {}, extensionElements, bpmnFactory);\n      commands.push(cmdHelper.addAndRemoveElementsFromList(element, extensionElements, 'values', 'extensionElements', [calledElement], []));\n    }\n\n    // update properties\n    commands.push(cmdHelper.updateBusinessObject(element, calledElement, values));\n    return commands;\n  }\n\n  // properties /////////////////////////////////////////////////////////////////\n\n  group.entries.push(entryFactory.validationAwareTextField(translate, {\n    id: 'process-id',\n    label: translate('Process Id'),\n    modelProperty: 'processId',\n    getProperty: function (element) {\n      return getProperty(element, 'processId');\n    },\n    setProperty: function (element, values) {\n      return setProperties(element, {\n        processId: values.processId || undefined\n      });\n    },\n    validate: function (element, values) {\n      var idValue = values.processId;\n      var bo = getBusinessObject(element);\n      var idError = isIdValid(bo, idValue, translate);\n      return idError ? {\n        processId: idError\n      } : {};\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}