{"ast":null,"code":"'use strict';\n\n/**\n * The label factory provides a label entry. For the label text\n * it expects either a string provided by the options.labelText\n * parameter or it could be generated programmatically using a\n * function passed as the options.get parameter.\n *\n * @param  {Object} options\n * @param  {string} options.id\n * @param  {string} [options.labelText]\n * @param  {Function} [options.get]\n * @param  {Function} [options.showLabel]\n * @param  {Boolean} [options.divider] adds a divider at the top of the label if true; default: false\n */\nvar label = function (options) {\n  return {\n    id: options.id,\n    html: '<label data-value=\"label\" ' + 'data-show=\"showLabel\" ' + 'class=\"entry-label' + (options.divider ? ' divider' : '') + '\">' + '</label>',\n    get: function (element, node) {\n      if (typeof options.get === 'function') {\n        return options.get(element, node);\n      }\n      return {\n        label: options.labelText\n      };\n    },\n    showLabel: function (element, node) {\n      if (typeof options.showLabel === 'function') {\n        return options.showLabel(element, node);\n      }\n      return true;\n    }\n  };\n};\nmodule.exports = label;","map":null,"metadata":{},"sourceType":"script"}