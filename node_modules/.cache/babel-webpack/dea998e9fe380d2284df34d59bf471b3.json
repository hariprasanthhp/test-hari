{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { WindowRefService } from '../shared/services/window-ref.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../shared/services/sso-auth.service\";\nimport * as i4 from \"./health/service/health.service\";\nimport * as i5 from \"./shared/services/websocket.service\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"./cco-header/cco-header.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"./cco-footer/cco-footer.component\";\nfunction CcoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    dashboardFrame: a0\n  };\n};\nexport let CcoComponent = /*#__PURE__*/(() => {\n  class CcoComponent {\n    constructor(translateService, router, sso, healthService, webSocketService, titleService) {\n      this.translateService = translateService;\n      this.router = router;\n      this.sso = sso;\n      this.healthService = healthService;\n      this.webSocketService = webSocketService;\n      this.titleService = titleService;\n      this.tosAgreed = false;\n      this.menus = {\n        home: false,\n        issues: false,\n        health: false,\n        traffic: false,\n        services: false,\n        operations: false,\n        dashboard: false\n      };\n      this.noScopes = true;\n      this.baseUrl = WindowRefService.prototype.nativeWindow.split('//')[1].split('.')[0];\n      if (this.router.url.split(\"/\")[1] == 'cco') {\n        (function (apiKey) {\n          (function (p, e, n, d, o) {\n            var v, w, x, y, z;\n            o = p[d] = p[d] || {};\n            o._q = [];\n            v = [\"initialize\", \"identify\", \"updateOptions\", \"pageLoad\", \"track\"];\n            for (w = 0, x = v.length; w < x; ++w) (function (m) {\n              o[m] = o[m] || function () {\n                o._q[m === v[0] ? \"unshift\" : \"push\"]([m].concat([].slice.call(arguments, 0)));\n              };\n            })(v[w]);\n            y = e.createElement(n);\n            y.async = !0;\n            y.src = \"https://cdn.pendo.io/agent/static/\" + apiKey + \"/pendo.js\";\n            z = e.getElementsByTagName(n)[0];\n            z.parentNode.insertBefore(y, z);\n          })(window, document, \"script\", \"pendo\");\n        })(\"c68f6635-46a2-4b81-497f-30da53e4a7a6\");\n        if (localStorage.getItem(\"calix.userId\") && localStorage.getItem('calix.spid')) {\n          pendo.initialize({\n            visitor: {\n              id: localStorage.getItem(\"calix.userId\"),\n              lang: sessionStorage.getItem(\"defaultLanguage\"),\n              url: this.getUrl(),\n              orgId: JSON.parse(localStorage.getItem(\"calix.login_data\")).OrgId,\n              userType: JSON.parse(localStorage.getItem(\"calix.login_data\")).user_type\n              // language: \"fr_CA\",\n              // visitor_lang: \"FR_CS\",\n            },\n\n            account: {\n              id: localStorage.getItem(\"calix.spid\")\n              // language: localStorage.getItem(\"defaultLanguage\"), // Highly recommended\n            }\n          });\n        }\n      }\n\n      this.titleService.setTitle('Calix Cloud - Operations');\n      this.sso.setRelativeUrl('cco');\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n    ngOnInit() {\n      this.sso.isFromCcoModule = true;\n      if (!this.router.url.includes(\"/health\")) {\n        this.healthService.previousUrl = \"\";\n        this.healthService.isReport = false;\n      }\n      if (!this.router.url.includes(\"/traffic\")) {\n        this.webSocketService.previousURL = \"\";\n      }\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.insights') !== -1) {\n              this.menus['home'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.issues') !== -1) {\n              this.menus['issues'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.health') !== -1) {\n              this.menus['health'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.traffic') !== -1) {\n              this.menus['traffic'] = true;\n              continue;\n            }\n            // if (validScopes[i].indexOf('cloud.rbac.coc.systems') !== -1) {\n            //   this.menus['systems'] = true;\n            //   continue;\n            // }\n            if (validScopes[i].indexOf('cloud.rbac.coc.services') !== -1) {\n              this.menus['services'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.operations') !== -1) {\n              this.menus['operations'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.dashboard') !== -1) {\n              this.menus['dashboard'] = true;\n              continue;\n            }\n          }\n        }\n      } else {\n        this.menus = {\n          home: true,\n          issues: true,\n          health: true,\n          traffic: true,\n          services: true,\n          operations: true,\n          dashboard: true\n        };\n      }\n      let keys = Object.keys(this.menus);\n      keys.forEach(key => {\n        if (this.menus[key]) {\n          this.noScopes = false;\n        }\n      });\n      this.verifyTOS();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    verifyTOS() {\n      if (this.sso.isCcoTermsAccept()) {\n        this.tosAgreed = true;\n      }\n      this.sso.ccoTos$.subscribe(data => {\n        // console.log('subscribe from cco ', data);\n        this.tosAgreed = true;\n      });\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n    }\n    getUrl() {\n      if (this.baseUrl == 'cloud-stg') {\n        return 'stage';\n      } else if (this.baseUrl == 'calixcloud-ca') {\n        return 'prod_ca';\n      } else if (this.baseUrl == 'stage') {\n        return 'stage_local';\n      } else if (this.baseUrl.split(':')[0] == 'localhost') {\n        return 'local';\n      } else if (this.baseUrl == 'calixcloud') {\n        return 'prod';\n      } else if (this.baseUrl == 'cloud-dev') {\n        return 'dev';\n      } else {\n        return 'contact admin';\n      }\n    }\n  }\n  CcoComponent.ɵfac = function CcoComponent_Factory(t) {\n    return new (t || CcoComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.HealthService), i0.ɵɵdirectiveInject(i5.WebsocketService), i0.ɵɵdirectiveInject(i6.Title));\n  };\n  CcoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CcoComponent,\n    selectors: [[\"app-cco\"]],\n    decls: 7,\n    vars: 7,\n    consts: [[1, \"page-wrapper\", 3, \"hidden\"], [1, \"maximus\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"maximus\", 3, \"ngClass\", \"hidden\"], [3, \"hidden\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n    template: function CcoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-cco-header\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CcoComponent_div_3_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelement(5, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-cco-footer\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"hidden\", !ctx.tosAgreed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.noScopes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.router.url == \"/cco/dashboard\"))(\"hidden\", ctx.noScopes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.tosAgreed);\n      }\n    },\n    directives: [i7.CcoHeaderComponent, i8.NgIf, i8.NgClass, i2.RouterOutlet, i9.CcoFooterComponent],\n    styles: [\".dashboardFrame[_ngcontent-%COMP%]{width:100%!important}\"]\n  });\n  return CcoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}