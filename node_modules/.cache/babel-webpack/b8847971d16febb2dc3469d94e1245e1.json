{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/common-functions.service\";\nimport * as i2 from \"../../../shared/services/export-excel.service\";\nimport * as i3 from \"../../services/data-tablecreator.service\";\nimport * as i4 from \"src/app/shared/services/sso-auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../services/endpoint-subnet.service\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i8 from \"src/app/sys-admin/services/common.service\";\nimport * as i9 from \"src/app-services/translate.service\";\nimport * as i10 from \"@angular/platform-browser\";\nimport * as i11 from \"src/app/shared/services/common-functions.service\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"angular-datatables\";\nimport * as i14 from \"@angular/forms\";\nconst _c0 = [\"infoModal\"];\nconst _c1 = [\"deleteModal\"];\nconst _c2 = [\"multiDeleteModal\"];\nconst _c3 = [\"importModal\"];\nconst _c4 = [\"fullImportInput\"];\nconst _c5 = [\"incImportInput\"];\nfunction SubnetComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22);\n    i0.ɵɵelementStart(3, \"span\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction SubnetComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelementStart(2, \"div\", 26);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵelementStart(4, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.create();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵelementStart(7, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_div_2_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.export();\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 29);\n    i0.ɵɵelementStart(10, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_div_2_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.fullImportUpload();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 31, 32);\n    i0.ɵɵlistener(\"change\", function SubnetComponent_div_2_Template_input_change_12_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.fullImport($event, true);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 29);\n    i0.ɵɵelementStart(15, \"label\", 33);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 34, 35);\n    i0.ɵɵlistener(\"change\", function SubnetComponent_div_2_Template_input_change_17_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.fullImport($event, false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 36);\n    i0.ɵɵelementStart(20, \"div\", 37);\n    i0.ɵɵelement(21, \"input\", 38);\n    i0.ɵɵelementStart(22, \"button\", 39);\n    i0.ɵɵelement(23, \"i\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.create, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.export, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.fullImport, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.language.incrementalImport, \" \");\n  }\n}\nfunction SubnetComponent_section_3_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵelementStart(1, \"span\", 60);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r21.language.addSubnets);\n  }\n}\nfunction SubnetComponent_section_3_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵelementStart(1, \"span\", 60);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 61);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_3_div_20_Template_span_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const i_r24 = restoredCtx.index;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.removeSubnet(i_r24);\n    });\n    i0.ɵɵelement(4, \"i\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subnet_r23 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subnet_r23);\n  }\n}\nfunction SubnetComponent_section_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelementStart(1, \"div\", 41);\n    i0.ɵɵelementStart(2, \"div\", 42);\n    i0.ɵɵelementStart(3, \"form\");\n    i0.ɵɵelementStart(4, \"div\", 43);\n    i0.ɵɵelementStart(5, \"div\", 44);\n    i0.ɵɵelementStart(6, \"label\", 45);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"span\", 46);\n    i0.ɵɵtext(9, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 47);\n    i0.ɵɵelementStart(11, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function SubnetComponent_section_3_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.createName = $event;\n    })(\"blur\", function SubnetComponent_section_3_Template_input_blur_11_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.removeUnwantedSpace(\"createName\", ctx_r29.createName);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 43);\n    i0.ɵɵelementStart(13, \"div\", 44);\n    i0.ɵɵelementStart(14, \"label\", 45);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementStart(16, \"span\", 46);\n    i0.ɵɵtext(17, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 47);\n    i0.ɵɵtemplate(19, SubnetComponent_section_3_div_19_Template, 3, 1, \"div\", 49);\n    i0.ɵɵtemplate(20, SubnetComponent_section_3_div_20_Template, 5, 1, \"div\", 50);\n    i0.ɵɵelement(21, \"label\", 51);\n    i0.ɵɵelementStart(22, \"input\", 52);\n    i0.ɵɵlistener(\"ngModelChange\", function SubnetComponent_section_3_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.createSubnet = $event;\n    })(\"blur\", function SubnetComponent_section_3_Template_input_blur_22_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.removeUnwantedSpace(\"createSubnet\", ctx_r31.createSubnet);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_3_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.addSubnet();\n    });\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 54);\n    i0.ɵɵelementStart(26, \"div\", 55);\n    i0.ɵɵelement(27, \"label\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_3_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.submit();\n    });\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_3_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.cancel();\n    });\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language.name, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.createName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language.subnets, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.createSubnetsList.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.createSubnetsList);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.createSubnet);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Add, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.submit, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Cancel, \" \");\n  }\n}\nfunction SubnetComponent_section_4_div_1_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 70);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const obj_r37 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"id\", obj_r37._id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r37.action);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r37.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r37.subnets);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r37.subnets_old ? obj_r37.subnets_old : \"\");\n  }\n}\nfunction SubnetComponent_section_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 68);\n    i0.ɵɵelementStart(2, \"table\", 69);\n    i0.ɵɵelementStart(3, \"thead\");\n    i0.ɵɵelementStart(4, \"tr\");\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, SubnetComponent_section_4_div_1_tr_14_Template, 9, 5, \"tr\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r35.importTableOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r35.language.action);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r35.language.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r35.language.subnets);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r35.language.old, \" \", ctx_r35.language.subnets, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r35.importTableData);\n  }\n}\nfunction SubnetComponent_section_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵtemplate(1, SubnetComponent_section_4_div_1_Template, 15, 7, \"div\", 63);\n    i0.ɵɵelementStart(2, \"div\", 64);\n    i0.ɵɵelementStart(3, \"div\", 65);\n    i0.ɵɵelementStart(4, \"button\", 66);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_4_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.submitImport();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_section_4_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.cancel();\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.tablePreview);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.disabledSubmitBtn());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.submit, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Cancel, \" \");\n  }\n}\nfunction SubnetComponent_tr_24_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 74);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"span\", 75);\n    i0.ɵɵelementStart(3, \"div\", 76);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_2_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const item_r41 = i0.ɵɵnextContext().$implicit;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.edit(item_r41);\n    });\n    i0.ɵɵelement(4, \"i\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 75);\n    i0.ɵɵelementStart(6, \"input\", 78);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_2_Template_input_click_6_listener($event) {\n      i0.ɵɵrestoreView(_r49);\n      const item_r41 = i0.ɵɵnextContext().$implicit;\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.getDeleteIds($event, item_r41);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 75);\n    i0.ɵɵelementStart(8, \"div\", 79);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_2_Template_div_click_8_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const item_r41 = i0.ɵɵnextContext().$implicit;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.delete(item_r41);\n    });\n    i0.ɵɵelement(9, \"i\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r41 = i0.ɵɵnextContext().$implicit;\n    const ctx_r42 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r42.language[\"Edit\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"delete_id_\", item_r41._id, \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", item_r41._id);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r41._id);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"delete_id_\", item_r41._id, \"\");\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r42.language[\"Select\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r42.language[\"Delete\"]);\n  }\n}\nfunction SubnetComponent_tr_24_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 80);\n    i0.ɵɵelementStart(1, \"div\", 81);\n    i0.ɵɵelementStart(2, \"span\", 82);\n    i0.ɵɵelementStart(3, \"div\", 83);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_3_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const item_r41 = i0.ɵɵnextContext().$implicit;\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.updateSave(item_r41._id);\n    });\n    i0.ɵɵelement(4, \"i\", 84);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 82);\n    i0.ɵɵelementStart(6, \"div\", 85);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_3_Template_div_click_6_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r58 = i0.ɵɵnextContext(2);\n      return ctx_r58.updateCancel();\n    });\n    i0.ɵɵelement(7, \"i\", 86);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubnetComponent_tr_24_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r41 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r41.newSubnets[0] ? item_r41.newSubnets[0] : \"\", \" \");\n  }\n}\nfunction SubnetComponent_tr_24_div_8_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const subs_r61 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subs_r61, \"\");\n  }\n}\nfunction SubnetComponent_tr_24_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 87);\n    i0.ɵɵelement(2, \"i\", 88);\n    i0.ɵɵelement(3, \"i\", 89);\n    i0.ɵɵtext(4, \" \\u00A0\\u00A0( \");\n    i0.ɵɵelementStart(5, \"span\", 90);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" ) \");\n    i0.ɵɵelementStart(8, \"span\", 91);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 92);\n    i0.ɵɵtemplate(11, SubnetComponent_tr_24_div_8_ng_container_11_Template, 3, 1, \"ng-container\", 93);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r41 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", \"collapse-btn-v4-\" + item_r41._id)(\"data-target\", \"#collapse-subs-\" + item_r41._id)(\"aria-controls\", \"collapse-subs-\" + item_r41._id);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(item_r41.newSubnets.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"id\", \"collapse-address-v4-\" + item_r41._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\u00A0\\u00A0\", item_r41.newSubnets[0], \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", \"collapse-subs-\" + item_r41._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r41.newSubnets);\n  }\n}\nfunction SubnetComponent_tr_24_div_9_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r70 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 104);\n    i0.ɵɵelementStart(1, \"span\", 105);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_9_ul_3_li_1_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r70);\n      const i_r65 = i0.ɵɵnextContext().index;\n      const ctx_r68 = i0.ɵɵnextContext(3);\n      return ctx_r68.showEditDataInput(i_r65, \"subnet\");\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 106);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_9_ul_3_li_1_Template_span_click_3_listener() {\n      i0.ɵɵrestoreView(_r70);\n      const i_r65 = i0.ɵɵnextContext().index;\n      const ctx_r71 = i0.ɵɵnextContext(3);\n      return ctx_r71.removeEditSubnet(i_r65);\n    });\n    i0.ɵɵelement(4, \"i\", 107);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subnet_r64 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", subnet_r64, \"\");\n  }\n}\nfunction SubnetComponent_tr_24_div_9_ul_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r75 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 108);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelementStart(2, \"input\", 109);\n    i0.ɵɵlistener(\"ngModelChange\", function SubnetComponent_tr_24_div_9_ul_3_div_2_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r74 = i0.ɵɵnextContext(4);\n      return ctx_r74.newEditDataValue = $event;\n    })(\"blur\", function SubnetComponent_tr_24_div_9_ul_3_div_2_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r76 = i0.ɵɵnextContext(4);\n      return ctx_r76.removeUnwantedSpace(\"newEditDataValue\", ctx_r76.newEditDataValue);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 110);\n    i0.ɵɵelementStart(4, \"i\", 111);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_9_ul_3_div_2_Template_i_click_4_listener() {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r77 = i0.ɵɵnextContext(4);\n      return ctx_r77.modifyEditData();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"i\", 112);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_9_ul_3_div_2_Template_i_click_5_listener() {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r78 = i0.ɵɵnextContext(4);\n      return ctx_r78.hideEditDataInput();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r67 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r67.newEditDataValue);\n  }\n}\nfunction SubnetComponent_tr_24_div_9_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 101);\n    i0.ɵɵtemplate(1, SubnetComponent_tr_24_div_9_ul_3_li_1_Template, 5, 1, \"li\", 102);\n    i0.ɵɵtemplate(2, SubnetComponent_tr_24_div_9_ul_3_div_2_Template, 6, 1, \"div\", 103);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r65 = ctx.index;\n    const ctx_r63 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r63.modifyDataInfo == null ? null : ctx_r63.modifyDataInfo.index) == undefined || (ctx_r63.modifyDataInfo == null ? null : ctx_r63.modifyDataInfo.index) != i_r65);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r63.modifyDataInfo == null ? null : ctx_r63.modifyDataInfo.index) == i_r65);\n  }\n}\nfunction SubnetComponent_tr_24_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r80 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 94);\n    i0.ɵɵelementContainerStart(2);\n    i0.ɵɵtemplate(3, SubnetComponent_tr_24_div_9_ul_3_Template, 3, 2, \"ul\", 95);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 96);\n    i0.ɵɵelementStart(5, \"div\", 97);\n    i0.ɵɵelementStart(6, \"input\", 98);\n    i0.ɵɵlistener(\"ngModelChange\", function SubnetComponent_tr_24_div_9_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r79 = i0.ɵɵnextContext(2);\n      return ctx_r79.editSubnet = $event;\n    })(\"blur\", function SubnetComponent_tr_24_div_9_Template_input_blur_6_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r81 = i0.ɵɵnextContext(2);\n      return ctx_r81.removeUnwantedSpace(\"editSubnet\", ctx_r81.editSubnet);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 99);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_tr_24_div_9_Template_span_click_7_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r82 = i0.ɵɵnextContext(2);\n      return ctx_r82.addEditSubnet();\n    });\n    i0.ɵɵelement(8, \"i\", 100);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r46.editSubnetsList);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r46.editSubnet);\n  }\n}\nfunction SubnetComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 70);\n    i0.ɵɵelementStart(1, \"td\", 71);\n    i0.ɵɵtemplate(2, SubnetComponent_tr_24_div_2_Template, 10, 9, \"div\", 72);\n    i0.ɵɵtemplate(3, SubnetComponent_tr_24_div_3_Template, 8, 0, \"div\", 73);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtemplate(7, SubnetComponent_tr_24_div_7_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(8, SubnetComponent_tr_24_div_8_Template, 12, 8, \"div\", 3);\n    i0.ɵɵtemplate(9, SubnetComponent_tr_24_div_9_Template, 9, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r41 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"id\", item_r41._id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.editOnValue != item_r41._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.editOnValue == item_r41._id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r41.name ? item_r41.name : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.editOnValue != item_r41._id && item_r41.newSubnets.length == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.editOnValue != item_r41._id && item_r41.newSubnets.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.editOnValue == item_r41._id);\n  }\n}\nfunction SubnetComponent_ng_template_25_ul_11_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 124);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subnet_r87 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(subnet_r87.name);\n  }\n}\nfunction SubnetComponent_ng_template_25_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 122);\n    i0.ɵɵtemplate(1, SubnetComponent_ng_template_25_ul_11_li_1_Template, 2, 1, \"li\", 123);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r85 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r85.invalidImportSubnet);\n  }\n}\nfunction SubnetComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r89 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 113);\n    i0.ɵɵelementStart(1, \"h4\", 114);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 115);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_25_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r89);\n      const ctx_r88 = i0.ɵɵnextContext();\n      return ctx_r88.closeModal();\n    });\n    i0.ɵɵelement(4, \"span\", 116);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 117);\n    i0.ɵɵelementStart(6, \"p\", 118);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 59);\n    i0.ɵɵelementStart(9, \"p\", 118);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, SubnetComponent_ng_template_25_ul_11_Template, 2, 1, \"ul\", 119);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 120);\n    i0.ɵɵelementStart(13, \"button\", 121);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_25_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r89);\n      const ctx_r90 = i0.ɵɵnextContext();\n      return ctx_r90.closeModal();\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.infoTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.invalidImportSubnet.length ? ctx_r6.language[\"Note\"] + \" - \" + ctx_r6.language[\"No subnet imported\"] : \"\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r6.infoBody);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.invalidImportSubnet.length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language[\"Okay\"], \" \");\n  }\n}\nfunction SubnetComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r94 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 113);\n    i0.ɵɵelementStart(2, \"h4\", 114);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 115);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_27_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r94);\n      const ctx_r93 = i0.ɵɵnextContext();\n      return ctx_r93.closeModal();\n    });\n    i0.ɵɵelement(5, \"span\", 116);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 125);\n    i0.ɵɵelementStart(7, \"table\", 59);\n    i0.ɵɵelementStart(8, \"tr\");\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 120);\n    i0.ɵɵelementStart(12, \"button\", 121);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_27_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r94);\n      const ctx_r95 = i0.ɵɵnextContext();\n      return ctx_r95.confirmDelete();\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 126);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_27_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r94);\n      const ctx_r96 = i0.ɵɵnextContext();\n      return ctx_r96.closeModal();\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r8.infoTitle);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r8.deleteData.name ? ctx_r8.deleteData.name : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language[\"Okay\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language[\"Cancel\"], \" \");\n  }\n}\nfunction SubnetComponent_ng_template_29_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const delete_r100 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(delete_r100 ? delete_r100 : \"\");\n  }\n}\nfunction SubnetComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r103 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 113);\n    i0.ɵɵelementStart(1, \"h4\", 114);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 115);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_29_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return ctx_r102.closeModal();\n    });\n    i0.ɵɵelement(4, \"span\", 116);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 117);\n    i0.ɵɵelementStart(6, \"table\", 59);\n    i0.ɵɵtemplate(7, SubnetComponent_ng_template_29_tr_7_Template, 3, 1, \"tr\", 93);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 120);\n    i0.ɵɵelementStart(9, \"button\", 121);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_29_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r104 = i0.ɵɵnextContext();\n      return ctx_r104.confirmDeleteSecleted();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 126);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_29_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r105 = i0.ɵɵnextContext();\n      return ctx_r105.closeModal();\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.infoTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.deleteSubnets);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language[\"Okay\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language[\"Cancel\"], \" \");\n  }\n}\nfunction SubnetComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r109 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 113);\n    i0.ɵɵelementStart(1, \"h4\", 114);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 115);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_31_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r109);\n      const ctx_r108 = i0.ɵɵnextContext();\n      return ctx_r108.closeModal();\n    });\n    i0.ɵɵelement(4, \"span\", 116);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 125);\n    i0.ɵɵelement(6, \"table\", 127);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 120);\n    i0.ɵɵelementStart(8, \"button\", 121);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_31_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r109);\n      const ctx_r110 = i0.ɵɵnextContext();\n      return ctx_r110.proceedImport();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 126);\n    i0.ɵɵlistener(\"click\", function SubnetComponent_ng_template_31_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r109);\n      const ctx_r111 = i0.ɵɵnextContext();\n      return ctx_r111.closeModal();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.infoTitle);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r12.infoBody, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Okay\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Cancel\"], \" \");\n  }\n}\nconst $ = require('jquery');\nexport let SubnetComponent = /*#__PURE__*/(() => {\n  class SubnetComponent {\n    constructor(commonFunctionsService, exportExcel,\n    //private dialogService: NbDialogService,\n    dataTablecreatorService,\n    // private customTranslateService: CustomTranslateService,\n    sso, router, service, dialogService, commonOrgService, translateService, titleService, common) {\n      this.commonFunctionsService = commonFunctionsService;\n      this.exportExcel = exportExcel;\n      this.dataTablecreatorService = dataTablecreatorService;\n      this.sso = sso;\n      this.router = router;\n      this.service = service;\n      this.dialogService = dialogService;\n      this.commonOrgService = commonOrgService;\n      this.translateService = translateService;\n      this.titleService = titleService;\n      this.common = common;\n      this.pageAvailable = false;\n      this.formVisible = false;\n      this.buttonVisible = true;\n      this.currentTableRowCount = 0;\n      this.selectOptions = ['No', 'Yes'];\n      this.selectedSubnet = 'No';\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        order: [1, 'asc'],\n        columnDefs: [{\n          targets: [0],\n          orderable: false\n        }],\n        stateSave: true,\n        drawCallback: settings => {\n          let col = settings.aaSorting[0][0] ? settings.aaSorting[0][0] : 1;\n          let type = settings.aaSorting[0][1] ? settings.aaSorting[0][1] : 'asc';\n          this.sortData = {\n            column: col,\n            type: type\n          };\n          setTimeout(() => {\n            this.resetDelete();\n          }, 0);\n          this.currentTableRowCount = settings.aiDisplay.length;\n          let total = settings.aoData.length;\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find(`#${settings.sTableId}_last`).addClass('disabled');\n          }\n        }\n      };\n      this.newSubnet = '';\n      this.empty = {\n        'Subnets': '',\n        'Name': ''\n      };\n      this.add = {\n        name: '',\n        subnets: ''\n        //orgId: '0',\n        //recordId: 'test',\n      };\n\n      this.importTableOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        order: [0, 'asc'],\n        //\"scrollX\": true,\n        dom: 'tipr'\n      };\n      this.tablePreview = false;\n      this.fullLoader = true;\n      this.isFullImport = true;\n      this.subnetError = false;\n      this.isIPv4 = true;\n      this.dtTrigger = new Subject();\n      this.isRerender = false;\n      this.deleteIds = [];\n      this.deleteSubnets = [];\n      this.subnetVersions = ['SubnetIPV4', 'SubnetIPV6'];\n      this.subnetVersionsSelected = 'SubnetIPV4';\n      this.loading = true;\n      this.createSubnetsList = [];\n      this.editSubnet = '';\n      this.editSubnetsList = [];\n      this.storageData = {};\n      this.importDeleteData = [];\n      this.importData = [];\n      this.importTableData = [];\n      this.importUpdateASCreate = [];\n      this.sortData = {\n        column: 1,\n        type: 'asc'\n      };\n      this.modifyDataInfo = {};\n      this.newEditDataValue = '';\n      this.columnName = {\n        subnets: 'Subnets',\n        name: 'Name'\n      };\n      this.invalidImportSubnet = [];\n      this.disableIcImportSubmitBtn = false;\n      this.language = this.translateService.defualtLanguage;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.translateSubscribe = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language['Subnet']} - ${this.language['end']} - ${this.language['flowconfiguration']} - ${MODULE === 'systemAdministration' ? this.language['System Administration'] : this.language['administration']} - ${this.language['Calix Cloud']}`);\n        this.dataAvailable = false;\n        this.isRerender = true;\n        this.setTableOptions('language');\n      });\n      this.commonOrgService.closeAlert(); //*Imp\n      let url = this.router.url;\n      this.ORG_ID = this.sso.getOrganizationID(url);\n      this.frTable = this.translateService.fr;\n      let MODULE = this.sso.getRedirectModule(url);\n      this.titleService.setTitle(`${this.language['Subnet']} - ${this.language['end']} - ${this.language['flowconfiguration']} - ${MODULE === 'systemAdministration' ? this.language['System Administration'] : this.language['administration']} - ${this.language['Calix Cloud']}`);\n    }\n    ngOnInit() {\n      this.removeState();\n      this.getSubnets();\n      this.tableLanguageOptions();\n      this.compareJSONSubs = this.dataTablecreatorService.jsonDataOfCSV.subscribe(res => {\n        this.invalidImportSubnet = [];\n        try {\n          let importValidationFlag = true;\n          (res || []).forEach(el => {\n            this.commonFunctionsService.keysFromColumnName(el, this.columnName);\n            /* CCL-42080 */\n            if (el.name && el.name.length > 64) {\n              this.invalidImportSubnet.push(el);\n              this.infoTitle = this.language['Invalid Value'];\n              this.infoBody = `${this.language['Invalid Name - Name should not exceed 64 characters.']}`;\n              importValidationFlag = false;\n              this.openInfoModal(true);\n              return;\n            }\n          });\n          if (importValidationFlag) {\n            this.recreateTable = res;\n            //this.submitImport(true);\n            this.compareJsonToTableData(res);\n          }\n        } catch (ex) {}\n      });\n      this.setStorageData();\n    }\n    ngAfterViewInit() {\n      //this.dtTrigger.next();\n      this.loaded = true;\n    }\n    ngOnDestroy() {\n      // Do not forget to unsubscribe the event\n      this.dtTrigger.unsubscribe();\n      if (this.translateSubscribe) {\n        this.translateSubscribe.unsubscribe();\n      }\n      if (this.getSubnetsSubs) {\n        this.getSubnetsSubs.unsubscribe();\n      }\n      if (this.addSubs) {\n        this.addSubs.unsubscribe();\n      }\n      if (this.editSubs) {\n        this.editSubs.unsubscribe();\n      }\n      if (this.deleteSubs) {\n        this.deleteSubs.unsubscribe();\n      }\n      if (this.fileChangeSubs) {\n        this.fileChangeSubs.unsubscribe();\n      }\n      if (this.exportCSVSubs) {\n        this.exportCSVSubs.unsubscribe();\n      }\n      if (this.exportPDFSubs) {\n        this.exportPDFSubs.unsubscribe();\n      }\n      if (this.importSubs) {\n        this.importSubs.unsubscribe();\n      }\n      if (this.compareJSONSubs) {\n        this.compareJSONSubs.unsubscribe();\n      }\n    }\n    create() {\n      this.buttonVisible = false;\n      this.formVisible = true;\n      this.reset();\n    }\n    getSubnets() {\n      this.getSubnetsSubs = this.service.getSubnets(this.ORG_ID).subscribe(data => {\n        this.subnetResponseData = data;\n        if (data) {\n          this.subnetData = [...this.processData(data)];\n          this.setTableOptions();\n          if (this.isRerender) {\n            this.rerender();\n            this.isRerender = false;\n          } else {\n            this.dtTrigger.next();\n          }\n          setTimeout(() => {\n            this.resetDelete();\n          }, 100);\n        }\n      }, err => {\n        this.setTableOptions();\n        if (this.isRerender) {\n          this.rerender();\n        } else {\n          this.dtTrigger.next();\n        }\n        this.pageErrorHandle(err);\n      });\n    }\n    setTableOptions(type) {\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        order: [this.sortData.column, this.sortData.type],\n        columnDefs: [{\n          targets: [0],\n          orderable: false\n        }],\n        stateSave: true,\n        drawCallback: settings => {\n          let col = settings.aaSorting[0][0] ? settings.aaSorting[0][0] : 1;\n          let type = settings.aaSorting[0][1] ? settings.aaSorting[0][1] : 'asc';\n          this.sortData = {\n            column: col,\n            type: type\n          };\n          setTimeout(() => {\n            this.resetDelete();\n          }, 0);\n          this.currentTableRowCount = settings.aiDisplay.length;\n          let total = settings.aoData.length;\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find(`#${settings.sTableId}_last`).addClass('disabled');\n          }\n        }\n      };\n      this.tableLanguageOptions();\n      if (type && type == 'language') {\n        setTimeout(() => {\n          this.rerender();\n          this.dataAvailable = true;\n          this.loading = false;\n        }, 200);\n      } else {\n        setTimeout(() => {\n          this.dataAvailable = true;\n          this.loading = false;\n        }, 200);\n      }\n    }\n    rerender() {\n      var _a;\n      (_a = this === null || this === void 0 ? void 0 : this.dtElement.dtInstance) === null || _a === void 0 ? void 0 : _a.then(dtInstance => {\n        // Destroy the table first\n        dtInstance.destroy();\n        this.tableOptions.order = [this.sortData.column, this.sortData.type], setTimeout(() => {\n          this.dtTrigger.next();\n        }, 10);\n      });\n    }\n    processData(data) {\n      data.forEach(obj => {\n        obj['newSubnets'] = this.commonFunctionsService.splitData(obj.subnets, '|');\n        obj['_id'] = this.uuidv4();\n      });\n      return data;\n    }\n    addSubnet() {\n      this.createSubnet = this.createSubnet.trim();\n      if (this.createSubnet == '') {\n        return;\n      }\n      if (this.createSubnet != '') {\n        if (!this.subnetValidatorIpv4(this.createSubnet) && !this.subnetValidatorIpv6(this.createSubnet)) {\n          this.infoTitle = this.language['Invalid request'];\n          this.infoBody = `${this.createSubnet}`;\n          this.openInfoModal(false);\n          return;\n        }\n        if (this.createSubnetsList.includes(this.createSubnet)) {\n          this.infoTitle = this.language['Invalid request'];\n          this.infoBody = this.language['Duplicate Subnet'];\n          this.openInfoModal(false);\n          return;\n        }\n        this.createSubnetsList.push(this.createSubnet);\n        this.createSubnet = '';\n      }\n    }\n    removeSubnet(rid) {\n      this.createSubnetsList.splice(rid, 1);\n    }\n    submit() {\n      this.commonOrgService.closeAlert();\n      this.createName = this.createName ? this.createName.trim() : '';\n      if (!this.createName) {\n        this.infoTitle = this.language['Name Cannot be empty'];\n        this.infoBody = '';\n        this.openInfoModal(false);\n        return;\n      } else if (this.createName.length > 64) {\n        this.infoTitle = this.language['Invalid Value'];\n        this.infoBody = `${this.language['Invalid Name']} - Name should not exceed 64 characters.`;\n        this.openInfoModal(false);\n        return;\n      } else if (this.subnetData.filter(el => el.name == this.createName).length) {\n        this.infoTitle = 'Name Cannot be duplicate';\n        this.infoBody = '';\n        this.openInfoModal(false);\n        return;\n      }\n      this.createSubnet = this.createSubnet ? this.createSubnet.trim() : '';\n      if (this.createSubnet == '' && !this.createSubnetsList.length) {\n        this.infoTitle = this.language['Invalid subnet'];\n        this.infoBody = \"\";\n        this.openInfoModal(false);\n        return;\n      }\n      let subnets = this.createSubnetsList;\n      if (this.createSubnet != '') {\n        if (!this.subnetValidatorIpv4(this.createSubnet) && !this.subnetValidatorIpv6(this.createSubnet)) {\n          this.infoTitle = this.language['Invalid subnet'];\n          this.infoBody = `${this.createSubnet}`;\n          this.openInfoModal(false);\n          return;\n        }\n        if (subnets.includes(this.createSubnet)) {\n          this.infoTitle = this.language['Invalid request'];\n          this.infoBody = this.language['Duplicate Subnet'];\n          this.openInfoModal(false);\n          return;\n        }\n        subnets = [this.createSubnet, ...subnets];\n      }\n      let params = this.add;\n      params.name = this.createName ? encodeURI(this.createName).replace(/-/g, '%2D') : '';\n      params.subnets = subnets.length != 0 ? subnets.join('|') : '';\n      params.orgId = this.ORG_ID;\n      this.loading = true;\n      this.addSubs = this.service.addSubnet(params, this.ORG_ID).subscribe(json => {\n        this.addSubnetResponse = json;\n        this.isRerender = true;\n        this.cancel();\n        this.getSubnets();\n      }, err => {\n        let errTitle = this.language['Create Fail!'];\n        this.pageErrorHandle(err, errTitle);\n      });\n    }\n    edit(item) {\n      this.editData = item;\n      this.editOnValue = item._id;\n      this.editName = item.name;\n      this.editSubnetsList = this.commonFunctionsService.splitData(item.subnets, '|');\n      if (this.deleteIds.indexOf(item._id) !== -1) {\n        this.deleteIds.splice(this.deleteIds.indexOf(item._id), 1);\n        this.deleteSubnets.splice(this.deleteSubnets.indexOf(item.name), 1);\n        let tot = $('input[name^=\"delete_id_\"]').length;\n        if (this.deleteIds.length) {\n          if (this.deleteIds.length != tot) {\n            $('#selectDeselectAll').prop('checked', false);\n            $('#selectDeselectAll-span').show();\n          } else {\n            $('#selectDeselectAll-span').hide();\n          }\n        } else {\n          $('#selectDeselectAll').prop('checked', false);\n          $('#selectDeselectAll-span').hide();\n        }\n      }\n      // this.editSubnetv4 = item.subnet; // using this editSubnetv4 var as common for edit ipv4  ipv6\n      // // this.editSubnetv6 = item.subnetIP6;\n      // this.editSelectedExcluded = item.excluded;\n      // this.editSubnetVersionsSelected = item.isv4 ? 'SubnetIPV4' : 'SubnetIPV6';\n      const indexOfObject = this.deleteSubnets.findIndex(object => {\n        return object == item.subnets;\n      });\n      this.deleteSubnets.splice(indexOfObject, 1);\n      this.hideEditDataInput();\n    }\n    updateSave(id) {\n      var _a;\n      if (this.editName && this.editName == '') {\n        this.infoTitle = this.language['Invalid name'];\n        this.infoBody = '';\n        this.openInfoModal(false);\n        return;\n      }\n      if (((_a = this.editName) === null || _a === void 0 ? void 0 : _a.length) > 64) {\n        this.infoTitle = this.language['Invalid Value'];\n        this.infoBody = `${this.language['Invalid Name']} - Name should not exceed 64 characters.`;\n        this.openInfoModal(false);\n        return;\n      }\n      this.editSubnet = this.editSubnet.trim();\n      if (this.editSubnet == '' && !this.editSubnetsList.length) {\n        this.infoTitle = this.language['Invalid subnet'];\n        this.infoBody = \"\";\n        this.openInfoModal(false);\n        return;\n      }\n      let subnets = this.editSubnetsList;\n      if (this.editSubnet != '') {\n        if (!this.subnetValidatorIpv4(this.editSubnet) && !this.subnetValidatorIpv6(this.editSubnet)) {\n          this.infoTitle = this.language['Invalid subnet'];\n          this.infoBody = `${this.editSubnet}`;\n          this.openInfoModal(false);\n          return;\n        }\n        if (subnets.includes(this.editSubnet)) {\n          this.infoTitle = this.language['Invalid request'];\n          this.infoBody = this.language['Duplicate Subnet'];\n          this.openInfoModal(false);\n          return;\n        }\n        subnets = [this.editSubnet, ...subnets];\n      }\n      let params = {\n        name: this.editName ? this.editName : '',\n        subnets: subnets.length != 0 ? subnets.join('|') : ''\n      };\n      this.loading = true;\n      this.editSubs = this.service.updateSubnet(this.editData._id, params, this.ORG_ID).subscribe(res => {\n        this.updateResponse = res;\n        this.isRerender = true;\n        this.cancel();\n        this.getSubnets();\n        this.editOnValue = undefined;\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    updateCancel() {\n      this.editOnValue = undefined;\n    }\n    validateSubnetv4(subnet) {\n      this.subnetError = false;\n      if (!subnet) {\n        this.subnetError = true;\n        return;\n      }\n      let ip = this.service.trimSubnet(subnet);\n      if (ip) {\n        if (this.commonFunctionsService.isValidSubnetV4(ip)) {\n          this.isIPv4 = true;\n          this.subnet = ip;\n          return true;\n        } else {\n          this.subnetError = true;\n          return;\n        }\n      } else {\n        this.subnetError = true;\n        return;\n      }\n    }\n    validateSubnetv6(subnet) {\n      this.subnetError = false;\n      if (!subnet) {\n        this.subnetError = true;\n        return;\n      }\n      let ip = this.service.trimSubnet(subnet);\n      if (ip) {\n        if (this.commonFunctionsService.isValidSubnetV6(ip)) {\n          this.isIPv4 = false;\n          this.subnet = ip;\n          return;\n        } else {\n          this.subnetError = true;\n          return;\n        }\n      } else {\n        this.subnetError = true;\n        return;\n      }\n    }\n    cancel() {\n      this.formVisible = false;\n      this.buttonVisible = true;\n      this.tablePreview = false;\n      this.disableIcImportSubmitBtn = false;\n      this.reset();\n    }\n    getDeleteIds(e, item) {\n      if (e.target.checked) {\n        this.deleteIds.push(item._id);\n        this.deleteSubnets.push(item.name);\n        let tot = $('input[name^=\"delete_id_\"]').length;\n        if (this.deleteIds.length == tot) {\n          $('#selectDeselectAll').prop('checked', true);\n          $('#selectDeselectAll-span').hide();\n        } else {\n          $('#selectDeselectAll-span').show();\n        }\n      } else {\n        this.deleteIds.splice(this.deleteIds.indexOf(item._id), 1);\n        this.deleteSubnets.splice(this.deleteSubnets.indexOf(item.name), 1);\n        let tot = $('input[name^=\"delete_id_\"]').length;\n        if (this.deleteIds.length) {\n          if (this.deleteIds.length != tot) {\n            $('#selectDeselectAll').prop('checked', false);\n            $('#selectDeselectAll-span').show();\n          } else {\n            $('#selectDeselectAll-span').hide();\n          }\n        } else {\n          $('#selectDeselectAll').prop('checked', false);\n          $('#selectDeselectAll-span').hide();\n        }\n      }\n    }\n    delete(item) {\n      this.deleteData = item;\n      this.infoTitle = this.language['Delete endpoint subnet rule?'];\n      this.infoBody = `${item.name}`;\n      this.closeModal();\n      this.modalRef = this.dialogService.open(this.deleteModal, {\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    confirmDelete() {\n      // let id = this.deleteData?._id;\n      let params = [{\n        name: this.deleteData.name,\n        subnets: this.deleteData.subnets\n      }];\n      this.deleteSubs = this.service.deleteSubnet(this.ORG_ID, params).subscribe(res => {\n        this.deleteResponse = res;\n        this.isRerender = true;\n        this.getSubnets();\n        this.closeDeleteModal();\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    cancelDelete() {\n      this.deleteData = undefined;\n    }\n    closeDeleteModal() {\n      this.deleteData = undefined;\n      this.closeModal();\n    }\n    selectDeselectAll(isChecked) {\n      this.deleteIds = [];\n      this.deleteSubnets = [];\n      let i = 0;\n      let tot = $('input[name^=\"delete_id_\"]').length;\n      var that = this;\n      if (isChecked) {\n        $('input[name^=\"delete_id_\"]').each(function () {\n          if (i >= tot) {\n            return false;\n          }\n          $(this).prop('checked', true);\n          var classes = $(this).attr('class').split(' ');\n          let id = classes[0].substring('delete_id_'.length);\n          let d = that.subnetData.filter(el => el._id === id);\n          that.deleteIds.push(id);\n          that.deleteSubnets.push(d[0].name);\n          i++;\n        });\n      } else {\n        $('input[name^=\"delete_id_\"]').each(function () {\n          if (i >= tot) {\n            return false;\n          }\n          $(this).prop('checked', false);\n          that.deleteIds = [];\n          that.deleteSubnets = [];\n          i++;\n        });\n      }\n    }\n    showAllInnerCheckBox(event) {\n      $('#' + event.target.id).hide();\n      $('#selectDeselectAll').prop(\"checked\", true);\n      this.deleteIds = [];\n      this.deleteSubnets = [];\n      this.selectDeselectAll(true);\n    }\n    deleteAllSelected() {\n      if (this.deleteSubnets) {\n        this.deleteSubnets.sort();\n        this.deleteIds.sort();\n        this.infoTitle = this.language[this.deleteSubnets.length === 1 ? 'Delete selected endpoint subnet rule?' : 'Delete selected endpoint subnet rules?'];\n        this.infoBody = this.deleteSubnets.join(\", <br>\");\n        this.closeModal();\n        this.modalRef = this.dialogService.open(this.multiDeleteModal, {\n          backdrop: 'static',\n          keyboard: false\n        });\n      }\n    }\n    confirmDeleteSecleted() {\n      var _a;\n      let params = [];\n      (_a = this.subnetData) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n        if (this.deleteIds.includes(element._id)) {\n          params.push({\n            name: element.name,\n            subnets: element.subnets\n          });\n        }\n      });\n      this.deleteSubs = this.service.deleteSubnet(this.ORG_ID, params).subscribe(res => {\n        this.selectedDelete = res;\n        this.isRerender = true;\n        this.deleteIds = [];\n        this.deleteSubnets = [];\n        this.getSubnets();\n        this.closeMultiDeleteModal();\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    closeMultiDeleteModal() {\n      this.deleteIds = [];\n      this.deleteSubnets = [];\n      this.closeModal();\n    }\n    //CCL-52025\n    // fullImportFileUpload(ev) {\n    //   this.fileChangeSubs = this.commonFunctionsService.onFileChange(ev).subscribe(data => {\n    //   });\n    // }\n    export() {\n      let name = this.commonFunctionsService.generateExportName('subnet_rule', true);\n      this.exportCSVSubs = this.service.Export(this.ORG_ID).subscribe(res => {\n        this.exportData = this.exportDataConvertor(res);\n        if (this.exportData && this.exportData.length) {\n          this.exportExcel.downLoadCSV(name, this.exportData);\n        } else {\n          this.exportExcel.downLoadCSV(name, [this.empty]);\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    //exportPdf() {\n    // this.exportPDFSubs = this.service.Export(this.ORG_ID).subscribe((res: any) => {\n    //   let name = this.commonFunctionsService.generateExportName('subnet_rule');\n    //   let exportData = this.exportDataConvertor(res);\n    //   const doc = new jsPDF();\n    //   let headerArray = [], bodyData = [];\n    //   exportData.forEach(obj => {\n    //     for (let key in obj) {\n    //       if (headerArray.indexOf(key) == -1) headerArray.push(key);\n    //     }\n    //   });\n    //   exportData.forEach(obj => {\n    //     let rowData = [];\n    //     headerArray.forEach(key => {\n    //       rowData.push(obj.hasOwnProperty(key) ? obj[key] : '');\n    //     });\n    //     bodyData.push(rowData);\n    //   });\n    //   doc.autoTable({\n    //     margin: { top: 0, right: 0, bottom: 0, left: 0 },\n    //     pageBreak: 'auto',\n    //     theme: 'striped',\n    //     head: [headerArray],\n    //     body: bodyData,\n    //   })\n    //   doc.save(`${name}.pdf`);\n    // });\n    //}\n    exportDataConvertor(array) {\n      if (Array.isArray(array)) {\n        if (array.length === 0) {\n          array.push({\n            name: '',\n            subnets: ''\n          });\n        }\n        array.forEach(el => {\n          el = this.commonFunctionsService.columnNameFromKeys(el, this.columnName);\n          delete el._id;\n          for (const key in el) {\n            if (typeof el[key] == 'boolean') {\n              if (el[key] == true) {\n                el[key] = 'Yes';\n              } else {\n                el[key] = 'No';\n              }\n            }\n          }\n        });\n      }\n      return array;\n    }\n    //cancelImport() { }\n    fullImportUpload() {\n      this.infoTitle = this.language.fullImport;\n      this.infoBody = this.language.fullImportPrompt;\n      this.closeModal();\n      this.modalRef = this.dialogService.open(this.importModal, {\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    proceedImport() {\n      $(\"#fullImportUpload\").click();\n      this.closeModal();\n    }\n    fullImport(file, full) {\n      this.isFullImport = full;\n      const input = [...file.target.files];\n      if (input[0].name.split('.').pop() == 'csv') {\n        this.dataTablecreatorService.getJsonFromCsv(file);\n        file.target.value = '';\n      } else {\n        file.target.value = '';\n        this.infoTitle = this.language.noAvailableChange;\n        this.infoBody = '';\n        this.openInfoModal(false);\n        this.loading = false;\n        this.cancel();\n        return;\n      }\n    }\n    //COMMENT FOR CCL-52025 \n    // tableDataRecreate(excelData, staticSubnets, locationSubnets) {\n    //   let tempRecreateTable, existingIPs = [], checkedIPs = [], tempSubnetData = Object.assign([], this.subnetData);\n    //   const importType = sessionStorage.getItem('importType');\n    //   tempSubnetData.forEach(obj => {\n    //     if (obj.subnet && obj.subnet.trim()) existingIPs.push(obj.subnet);\n    //   });\n    //   excelData.forEach((excelObj, i) => {\n    //     let index = existingIPs.indexOf(excelObj.subnet);\n    //     const ip = this.service.trimSubnet(excelObj.subnet);\n    //     const isValid = this.commonFunctionsService.isValidSubnetV4(ip) || this.commonFunctionsService.isValidSubnetV6(ip);\n    //     if (excelObj.subnet.trim() != \"\" && (index + 1) && importType != \"IncImport\") {\n    //       if (staticSubnets.includes(excelObj.subnet) && locationSubnets.includes(excelObj.subnet))\n    //         excelObj[\"action\"] = \"Can not delete as static subnet and location is linked to it\";\n    //       else if (staticSubnets.includes(excelObj.subnet))\n    //         excelObj[\"action\"] = \"Can not delete as static subnet is linked to it\";\n    //       else if (excelObj.subnet.trim() != \"\" && isValid)\n    //         excelObj[\"action\"] = \"InvalidSubnet\";\n    //       else if (checkedIPs.includes(excelObj[\"subnet\"]))\n    //         excelObj[\"action\"] = \"Duplication subnet name. this line will be ignored.\";\n    //       else\n    //         excelObj[\"action\"] = \"Delete\";\n    //       excelObj[`old_excluded`] = tempSubnetData[index][\"excluded\"];\n    //       if (tempSubnetData[index][\"subnet\"].trim()) checkedIPs.push(tempSubnetData[index][\"subnet\"]);\n    //       existingIPs.splice(index, 1);\n    //       tempSubnetData.splice(index, 1);\n    //     } else {\n    //       if (excelObj.subnet.trim() != \"\" && isValid)\n    //         excelObj[\"action\"] = \"InvalidSubnet\";\n    //       else if (checkedIPs.includes(excelObj[\"subnet\"]))\n    //         excelObj[\"action\"] = \"Duplication subnet name. this line will be ignored.\";\n    //       else\n    //         excelObj[\"action\"] = \"Create\";\n    //       excelObj[`old_excluded`] = \"\";\n    //       if (excelObj[\"subnet\"].trim()) checkedIPs.push(excelObj[\"subnet\"]);\n    //     }\n    //     for (const [key, value] of Object.entries(excelObj)) {\n    //       if (value === true) excelObj[key] = \"Yes\"\n    //       else if (value === false) excelObj[key] = \"No\"\n    //     }\n    //   });\n    //   tempRecreateTable = Object.assign([], excelData);\n    //   let previewResult = Object.assign([], excelData);\n    //   if (tempSubnetData.length && importType != \"IncImport\") {\n    //     tempSubnetData.forEach(element => {\n    //       element[\"action\"] = \"Delete\"\n    //       for (const [key, value] of Object.entries(element)) {\n    //         if (value === true) element[key] = \"Yes\"\n    //         else if (value === false) element[key] = \"No\"\n    //       }\n    //       previewResult.push(element);\n    //     });\n    //   }\n    //   this.recreateTable = tempRecreateTable;\n    //   return previewResult;\n    // }\n    disabledSubmitBtn() {\n      if (!this.isFullImport && this.disableIcImportSubmitBtn) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    compareJsonToTableData(json) {\n      let tableData = this.subnetData.length ? this.subnetData : [];\n      let comparedData = [];\n      let isAvailable = false;\n      json.forEach(imp => {\n        let action = 'Create';\n        isAvailable = false;\n        if (tableData.filter(tbl => tbl.subnets == imp.subnets).length) {\n          isAvailable = true;\n          action = 'Update';\n          if (this.isFullImport) {\n            action = \"Create\";\n            imp.action = action;\n            this.importUpdateASCreate.push(imp);\n          } else {\n            action = \"Update\";\n          }\n        }\n        if (imp.subnets || imp.name) {\n          comparedData.push({\n            \"action\": action,\n            \"subnets\": imp.subnets,\n            \"name\": imp.name\n          });\n        }\n      });\n      if (!comparedData.length) {\n        this.infoTitle = this.language.noAvailableChange;\n        this.infoBody = '';\n        this.openInfoModal(false);\n        this.loading = false;\n        this.cancel();\n        return;\n      }\n      if (this.isFullImport) {\n        let deleteData = [];\n        tableData.forEach(tbl => {\n          isAvailable = false;\n          if (comparedData.filter(cmp => cmp.subnets == tbl.subnets).length == 0) {\n            deleteData.push({\n              \"action\": \"Delete\",\n              \"subnets\": tbl.subnets,\n              \"name\": tbl.name\n            });\n          }\n        });\n        this.importDeleteData = deleteData;\n        //comparedData = [...comparedData, ...deleteData];\n      }\n      /* CCL-50376 */\n      /* Check duplicate name if exist merge ip with single object */\n      let temp = {};\n      const lookup = comparedData.reduce((a, e) => {\n        if (temp[e.name]) {\n          temp[e.name].subnets = `${temp[e.name].subnets}|${e.subnets}`;\n        } else {\n          temp[e.name] = e;\n        }\n        return temp;\n      }, {});\n      comparedData = Object.values(temp);\n      this.loading = true;\n      this.submitImport(true, comparedData);\n    }\n    submitImport(isDryRun = false, comparedData) {\n      this.disableIcImportSubmitBtn = false;\n      let importRows;\n      let importParams = {\n        clientIP: this.storageData[\"clientIp\"],\n        dry_run: isDryRun,\n        full_import: this.isFullImport,\n        import_data: [],\n        orgId: this.ORG_ID ? this.ORG_ID : 50,\n        userId: this.sso.getUserId()\n      };\n      let data = isDryRun ? comparedData : [];\n      if (!isDryRun) {\n        this.importData.forEach(element => {\n          if (['Create', 'Update'].includes(element.action)) {\n            data.push({\n              \"action\": this.isFullImport ? 'Create' : element.action,\n              \"subnets\": element.subnets,\n              \"name\": element.name\n              // \"orgId\": this.ORG_ID,\n              // \"tenantId\": 0\n            });\n          }\n        });\n\n        if (!data.length) {\n          this.infoTitle = this.language.noAvailableChange;\n          this.infoBody = '';\n          this.openInfoModal(false);\n          this.loading = false;\n          this.cancel();\n          return;\n        }\n        if (!this.isFullImport) {\n          const keys = this.subnetData.map(e => String(e.subnets));\n          data = data.filter(e => !keys.includes(String(e.subnets)));\n        }\n      }\n      importParams.import_data = data;\n      this.importSubs = this.service.importSubnets(importParams, this.ORG_ID).subscribe(res => {\n        //if (isDryRun) {\n        //   res = res.map(obj => {\n        //     obj[\"action\"] = obj[\"validationResult\"].toLowerCase() == \"ok\" ? obj[\"action\"] : obj[\"validationResult\"];\n        //     return obj;\n        //   });\n        //   this.recreateTable = res;\n        //   this.previewOrder([...res, ...deleteObj]);\n        //   this.buttonVisible = false;\n        //   this.tablePreview = true;\n        // } else {\n        //   this.cancel();\n        //   this.isRerender = true;\n        //   this.getSubnets();\n        // }\n        if (isDryRun) {\n          if (res && res.data && res.data.length == 0) {\n            this.infoTitle = this.language.noAvailableChange;\n            this.infoBody = '';\n            this.openInfoModal(false);\n            this.loading = false;\n          }\n          this.importData = res ? res : [];\n          this.checkDryRunData(res);\n          this.loading = false;\n        } else {\n          this.cancel();\n          this.isRerender = true;\n          this.getSubnets();\n        }\n      }, err => {\n        if (err.status == 400) {\n          if (isDryRun) {\n            this.infoTitle = this.language.objectNotFound;\n            this.infoBody = '';\n            this.closeModal();\n            this.modalRef = this.dialogService.open(this.infoModal, {\n              backdrop: 'static',\n              keyboard: false\n            });\n          } else {\n            this.pageErrorHandle(err);\n          }\n        } else {\n          this.pageErrorHandle(err);\n        }\n        this.loading = false;\n      });\n    }\n    checkDryRunData(resData) {\n      var _a;\n      let data = resData ? resData.slice(0) : [];\n      this.enableImportSubmit = false;\n      //if (data && data.length) this.enableImportSubmit = true;\n      this.importTableData = [];\n      let tableData = ((_a = this.subnetData) === null || _a === void 0 ? void 0 : _a.length) ? this.subnetData : [];\n      data.forEach(e => {\n        if (e.validationResult.toLowerCase() != 'ok') {\n          e.action = e.validationResult;\n        }\n        if (e.validationResult.toLowerCase() == 'ok') {\n          this.enableImportSubmit = true;\n        }\n        e['subnets_old'] = '';\n        let match = tableData.filter(tbl => tbl.name == e.name);\n        if (match.length) {\n          if (this.isFullImport && e.action == 'Create') {\n            e.action = 'Update';\n          }\n          e['subnets_old'] = match[0].subnets ? match[0].subnets : '';\n        }\n        this.importTableData.push(e);\n      });\n      if (!this.isFullImport) {\n        let keys = tableData.map(e => String(e.subnets));\n        if (!data.filter(e => !keys.includes(String(e.subnets)) && e.validationResult === 'ok').length) {\n          this.disableIcImportSubmitBtn = true;\n        } else {\n          this.disableIcImportSubmitBtn = false;\n        }\n      }\n      if (this.isFullImport && this.importDeleteData.length) {\n        this.importDeleteData.forEach(e => {\n          e['subnets_old'] = '';\n          this.importTableData.push(e);\n        });\n      }\n      this.formVisible = false;\n      this.buttonVisible = false;\n      this.tablePreview = true;\n    }\n    //CCL-52025\n    // importTemplate(element, action) {\n    //   return {\n    //     \"action\": action,\n    //     \"name\": element.name,\n    //     \"subnets\": element.subnets\n    //   }\n    // }\n    //previewOrder(res) {\n    // if (!res || res.length == 0) {\n    //   this.infoTitle = this.language.noAvailableChange;\n    //   this.infoBody = '';\n    //   this.openInfoModal(false);\n    //   return;\n    // }\n    // let previewData = [];\n    // const streamInputCheck = [\"\"], keysToExclude = [\"validationResult\"], keysWithoutOld = [\"action\", \"name\"];\n    // //this.importTableOptions.columns = this.dataTablecreatorService.tableOptionsCreator(res[0], this.language, keysToExclude, keysWithoutOld);\n    // res.forimport { element } from 'protractor';\n    // Each(resObj => {\n    //   let newObj = {};\n    //   Object.keys(resObj).forEach(keys => {\n    //     if (!keysToExclude.includes(keys)) {\n    //       if (streamInputCheck.includes(keys) && (resObj[keys] === \"true\" || resObj[keys].toString().toUpperCase == 'Y')) newObj[keys] = 'Yes';\n    //       else if (streamInputCheck.includes(keys) && (resObj[keys] === \"false\" || resObj[keys].toString().toUpperCase == 'N')) newObj[keys] = 'No';\n    //       else newObj[keys] = resObj[keys];\n    //       if (!keysWithoutOld.includes(keys)) newObj['Old ' + keys] = '';\n    //     }\n    //   });\n    //   this.subnetData.forEach(tableObj => {\n    //     if (resObj.name == tableObj.name) {\n    //       for (const [key, value] of Object.entries(newObj)) {\n    //         if (key.includes(\"Old\")) {\n    //           const exactKey = key.replace(\"Old \", \"\");\n    //           if (streamInputCheck.includes(exactKey) && (tableObj[exactKey] || tableObj[exactKey].toString().toUpperCase == 'Y')) newObj[key] = 'Yes';\n    //           else if (streamInputCheck.includes(exactKey) && (!tableObj[exactKey] || tableObj[exactKey].toString().toUpperCase == 'N')) newObj[key] = 'No';\n    //           newObj[key] = tableObj[exactKey]\n    //         }\n    //       }\n    //       return false;\n    //     }\n    //   });\n    //   previewData.push(newObj);\n    // });\n    // this.previewTableBody = previewData;\n    // }\n    reset() {\n      this.createName = '';\n      this.createSubnet = '';\n      this.editName = '';\n      this.editSubnet = '';\n      this.createSubnetsList = [];\n      this.editSubnetsList = [];\n      this.editData = undefined;\n      this.editOnValue = undefined;\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.tableOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.tableOptions.language = this.translateService.es;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.tableOptions.language = this.translateService.de_DE;\n      } else if (this.language.fileLanguage == 'en' && this.tableOptions.language) {\n        delete this.tableOptions.language;\n      }\n    }\n    resetDelete() {\n      this.selectDeselectAll(false);\n      $('#selectDeselectAll').prop(\"checked\", false);\n      $('#selectDeselectAll-span').hide();\n      this.deleteIds = [];\n      this.deleteSubnets = [];\n    }\n    subnetValidatorIpv4(ip) {\n      if (ip && ip != '') {\n        if (this.commonFunctionsService.isValidSubnetV4(ip)) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n    subnetValidatorIpv6(ip) {\n      if (ip && ip != '') {\n        if (this.commonFunctionsService.isValidSubnetV6(ip)) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n    addEditSubnet() {\n      this.editSubnet = this.editSubnet.trim();\n      if (this.editSubnet == '') {\n        return;\n      }\n      if (!this.subnetValidatorIpv4(this.editSubnet) && !this.subnetValidatorIpv6(this.editSubnet)) {\n        this.infoTitle = 'Invalid request';\n        this.infoBody = \"\";\n        this.openInfoModal(false);\n        return;\n      }\n      if (this.editSubnetsList.includes(this.editSubnet)) {\n        this.infoTitle = 'Invalid request';\n        this.infoBody = this.language['Duplicate Subnet'];\n        this.openInfoModal(false);\n        return;\n      }\n      this.editSubnetsList.push(this.editSubnet);\n      this.editSubnet = '';\n    }\n    removeEditSubnet(rid) {\n      this.editSubnetsList.splice(rid, 1);\n    }\n    setStorageData() {\n      const tokenData = JSON.parse(localStorage.getItem(\"calix.login_data\"));\n      this.storageData[\"clientIp\"] = tokenData === null || tokenData === void 0 ? void 0 : tokenData.clientIp;\n      this.storageData[\"UserId\"] = tokenData === null || tokenData === void 0 ? void 0 : tokenData.UserId;\n    }\n    closeModal() {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n    }\n    pageErrorHandle(err, title) {\n      var _a, _b;\n      let errorInfo = '';\n      if (err.status == 400 || err.status == 417) {\n        if (err.status == 417 && ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message)) {\n          this.infoBody = (_b = err === null || err === void 0 ? void 0 : err.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.infoBody = this.commonOrgService.pageInvalidRqstErrorHandle(err);\n        }\n        this.infoTitle = title ? title : 'Error';\n        this.openInfoModal(false);\n        this.loading = false;\n      } else {\n        if (err.status == 401) {\n          errorInfo = this.language['Access Denied'];\n        } else {\n          errorInfo = this.commonOrgService.pageErrorHandle(err);\n        }\n        this.commonOrgService.openErrorAlert(errorInfo);\n        this.commonOrgService.pageScrollTop();\n        this.loading = false;\n        setTimeout(() => {\n          this.commonOrgService.closeAlert();\n        }, 3000);\n      }\n    }\n    openInfoModal(invalidImportSubnet) {\n      if (!invalidImportSubnet) this.invalidImportSubnet = [];\n      this.closeModal();\n      this.modalRef = this.dialogService.open(this.infoModal, {\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    uuidv4() {\n      return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n    removeState() {\n      let url = this.router.url;\n      this.commonOrgService.removeTableState('endpoint_subnets', url);\n    }\n    showEditDataInput(ind, type) {\n      this.modifyDataInfo = {\n        index: ind,\n        type: type\n      };\n      this.newEditDataValue = '';\n      this.newEditDataValue = this.editSubnetsList[ind];\n    }\n    hideEditDataInput() {\n      this.modifyDataInfo = {\n        index: undefined,\n        type: undefined\n      };\n    }\n    modifyEditData() {\n      let ver = this.modifyDataInfo.type;\n      let index = this.modifyDataInfo.index;\n      this.newEditDataValue = this.newEditDataValue.trim();\n      if (this.newEditDataValue == '') {\n        this.infoTitle = this.language['Subnet cannot be empty'];\n        this.infoBody = ``;\n        this.openInfoModal(false);\n        return;\n      }\n      if (!this.subnetValidatorIpv4(this.newEditDataValue) && !this.subnetValidatorIpv4(this.newEditDataValue)) {\n        this.infoTitle = this.language['Invalid Subnet format'];\n        this.infoBody = `${this.newEditDataValue}`;\n        this.openInfoModal(false);\n        return;\n      }\n      if (this.editSubnetsList.includes(this.newEditDataValue) && this.editSubnetsList.indexOf(this.newEditDataValue) != index) {\n        this.infoTitle = this.language['Duplicate Subnet'];\n        this.infoBody = `${this.newEditDataValue}`;\n        this.openInfoModal(false);\n        return;\n      }\n      this.editSubnetsList[index] = this.newEditDataValue;\n      this.newEditDataValue = '';\n      this.hideEditDataInput();\n    }\n    removeUnwantedSpace(input, value) {\n      this[input] = this.common.trimSpaceFromNonObjectInputs(value);\n    }\n  }\n  SubnetComponent.ɵfac = function SubnetComponent_Factory(t) {\n    return new (t || SubnetComponent)(i0.ɵɵdirectiveInject(i1.CommonFunctionsService), i0.ɵɵdirectiveInject(i2.ExportExcelService), i0.ɵɵdirectiveInject(i3.DataTablecreatorService), i0.ɵɵdirectiveInject(i4.SsoAuthService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.EndpointSubnetService), i0.ɵɵdirectiveInject(i7.NgbModal), i0.ɵɵdirectiveInject(i8.CommonService), i0.ɵɵdirectiveInject(i9.TranslateService), i0.ɵɵdirectiveInject(i10.Title), i0.ɵɵdirectiveInject(i11.CommonFunctionsService));\n  };\n  SubnetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubnetComponent,\n    selectors: [[\"app-subnet\"]],\n    viewQuery: function SubnetComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infoModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiDeleteModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.importModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fullImportInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.incImportInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 33,\n    vars: 18,\n    consts: [[1, \"container\", \"position-relative\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"row py-4\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\"], [1, \"col-md-12\", \"ccl-admin-table\", 3, \"hidden\"], [\"id\", \"subnets-table\", \"width\", \"100%\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\", \"dtTrigger\"], [1, \"mxw-200\", \"w-nowrap-200\"], [1, \"ccl-fc-table-icon\", \"mxw-200\"], [1, \"d-flex\", \"align-items-center\", 3, \"hidden\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"selectDeselectAll\", 1, \"\", 3, \"hidden\", \"disabled\", \"change\"], [\"id\", \"selectDeselectAll-span\", 1, \"checkbox-ui\", 2, \"display\", \"none\", 3, \"hidden\", \"click\"], [1, \"text-center\", \"justify-content-center\", 3, \"hidden\"], [\"id\", \"delete-selected-btn\", 1, \"btn-default\", \"primary\", \"px-2\", \"mx-2\", 3, \"title\", \"disabled\", \"click\"], [1, \"far\", \"fa-trash-alt\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"infoModal\", \"\"], [\"deleteModal\", \"\"], [\"multiDeleteModal\", \"\"], [\"importModal\", \"\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"row\", \"py-4\"], [1, \"col-md-9\"], [1, \"d-flex\"], [\"id\", \"create-btn\", 1, \"btn-default\", \"primary\", \"mx-2\", 3, \"click\"], [\"id\", \"export-btn\", 1, \"btn-default\", \"primary\", \"mx-2\", 3, \"click\"], [1, \"upload-btn-wrapper\"], [1, \"btn-default\", \"primary\", \"mx-2\", \"px-3\", 3, \"click\"], [\"type\", \"file\", \"accept\", \".csv\", \"id\", \"fullImportUpload\", 2, \"display\", \"none\", 3, \"change\"], [\"fullImportInput\", \"\"], [\"for\", \"inc-import\", 1, \"btn-default\", \"primary\", \"mx-2\", \"px-3\", \"cursor-pointer\"], [\"type\", \"file\", \"id\", \"inc-import\", \"accept\", \".csv\", 2, \"display\", \"none\", 3, \"change\"], [\"incImportInput\", \"\"], [1, \"col-sm-3\", \"align-self-end\", \"d-none\"], [1, \"ccl-form\"], [\"type\", \"search\", \"name\", \"searchbox\", \"placeholder\", \"\", 1, \"input-sm\"], [1, \"serach-but\", \"btn-default\", \"primary\", \"btn-icon-md\", \"inline\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [1, \"row\", \"my-3\", \"py-3\"], [1, \"col-md-12\"], [1, \"row\", \"form-inline\"], [1, \"form-group\", \"mb-2\", \"col-md-2\", \"align-self-start\"], [\"for\", \"staticEmail2\", 1, \"\"], [1, \"error\"], [1, \"ccl-form\", \"mx-sm-3\", \"mb-2\", \"align-self-end\"], [\"type\", \"text\", \"id\", \"createName\", \"placeholder\", \"\", \"name\", \"createName\", \"trimSpace\", \"\", 1, \"w-250px\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"class\", \"w-100\", 4, \"ngIf\"], [\"class\", \"w-100\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"inputPassword2\", 1, \"sr-only\"], [\"type\", \"text\", \"id\", \"createSubnet\", \"placeholder\", \"\", \"name\", \"createSubnet\", \"trimSpace\", \"\", 1, \"form-control\", \"w-250px\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"type\", \"submit\", 1, \"mb-2\", \"btn-default\", \"btn-primary\", \"align-self-end\", 3, \"click\"], [1, \"row\", \"form-inline\", \"my-3\"], [1, \"form-group\", \"mb-2\", \"col-md-2\"], [\"for\", \"staticEmail2\", 1, \"sr-only\"], [\"type\", \"submit\", \"id\", \"submit-btn\", 1, \"btn-default\", \"btn-primary\", \"mx-4\", 3, \"click\"], [\"type\", \"submit\", \"id\", \"cancel-btn\", 1, \"btn-default\", \"btn-dft\", \"py-1\", \"ml-2\", 3, \"click\"], [1, \"w-100\"], [1, \"w-75\"], [1, \"w-25\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-times\", \"primary\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", \"my-4\"], [1, \"col-md-8\", \"offset-md-4\"], [1, \"btn-default\", \"primary\", \"px-3\", \"mx-3\", 3, \"disabled\", \"click\"], [1, \"btn-default\", \"btn-dft\", \"py-1\", \"px-3\", 3, \"click\"], [1, \"col-md-12\", \"ccl-admin-table\"], [\"id\", \"example\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\"], [3, \"id\"], [1, \"action-button\", \"w-nowrap\"], [\"class\", \"editable-td text-center f-size13\", 4, \"ngIf\"], [\"class\", \"save-cancel-btn-group d-flex justify-content-center\", 4, \"ngIf\"], [1, \"editable-td\", \"text-center\", \"f-size13\"], [1, \"pr-2\"], [\"id\", \"edit-btn\", 1, \"primary\", 3, \"title\", \"click\"], [1, \"fas\", \"fa-pencil-alt\"], [\"type\", \"checkbox\", 3, \"id\", \"value\", \"name\", \"title\", \"click\"], [\"id\", \"delete-btn\", 1, \"primary\", 3, \"title\", \"click\"], [1, \"save-cancel-btn-group\", \"d-flex\", \"justify-content-center\"], [1, \"ccl-fc-table-icon\"], [1, \"pr-1\"], [\"id\", \"save-btn\", 1, \"primary\", \"mx-3\", 3, \"click\"], [1, \"fas\", \"fa-check\"], [\"id\", \"cancel-btn\", 1, \"primary\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [\"role\", \"button\", \"data-toggle\", \"collapse\", \"aria-expanded\", \"false\", 1, \"collapse-btn\", \"w-nowrap\"], [\"id\", \"'collapse-icon-v4-' + item._id\", 1, \"fa\", \"fa-chevron-right\", \"collapse-icon\"], [\"id\", \"'collapse-icon-v4-' + item._id\", 1, \"fa\", \"fa-chevron-down\", \"collapse-icon\"], [1, \"sxa-bold\", \"f-style-italic\"], [1, \"collapse-address\"], [1, \"collapse\", \"multi-collapse\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"w-250\"], [\"class\", \"nav flex-column\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"row\", \"fw100\", \"m-0\"], [1, \"ccl-form\", \"input-group\", \"flex-nowrap\"], [\"type\", \"text\", \"name\", \"editSubnet\", \"placeholder\", \"\", \"trimSpace\", \"\", 1, \"w150\", \"add-subnet-input\", \"w-200px\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"ccl-fc-add-icon\", \"align-self-center\", \"mx-2\", 3, \"click\"], [1, \"fa\", \"fa-plus\"], [1, \"nav\", \"flex-column\"], [\"class\", \"nav-item subnet-value-size\", 4, \"ngIf\"], [\"class\", \"my-2 position-relative\", 4, \"ngIf\"], [1, \"nav-item\", \"subnet-value-size\"], [\"title\", \"Click to edit\", 1, \"pointer\", 3, \"click\"], [\"data-key\", \"\", 1, \"remove-subnet-btn\", \"primary\", \"float-r22\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"my-2\", \"position-relative\"], [\"type\", \"text\", \"name\", \"new-edit-subnet\", \"placeholder\", \"\", \"trimSpace\", \"\", 1, \"pr-btn\", \"m-w200px\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"pos-abs-right\"], [1, \"fas\", \"fa-check\", \"primary\", \"d-inline-flex\", \"mr-2\", \"pointer\", 3, \"click\"], [1, \"fas\", \"fa-times\", \"primary\", \"d-inline-flex\", \"pointer\", 3, \"click\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"modal-scrll\"], [1, \"f-size-16px\"], [\"class\", \"list-two\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"], [1, \"list-two\"], [\"class\", \"text-break\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-break\"], [1, \"modal-body\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"btn-dft\", \"py-1\", \"px-3\", 3, \"click\"], [3, \"innerHtml\"]],\n    template: function SubnetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SubnetComponent_div_1_Template, 5, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, SubnetComponent_div_2_Template, 24, 4, \"div\", 2);\n        i0.ɵɵtemplate(3, SubnetComponent_section_3_Template, 32, 9, \"section\", 3);\n        i0.ɵɵtemplate(4, SubnetComponent_section_4_Template, 8, 4, \"section\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"table\", 6);\n        i0.ɵɵelementStart(8, \"thead\");\n        i0.ɵɵelementStart(9, \"tr\");\n        i0.ɵɵelementStart(10, \"th\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"input\", 10);\n        i0.ɵɵlistener(\"change\", function SubnetComponent_Template_input_change_13_listener($event) {\n          return ctx.selectDeselectAll($event.target.checked);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"span\", 11);\n        i0.ɵɵlistener(\"click\", function SubnetComponent_Template_span_click_14_listener($event) {\n          return ctx.showAllInnerCheckBox($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function SubnetComponent_Template_button_click_16_listener() {\n          return ctx.deleteAllSelected();\n        });\n        i0.ɵɵelement(17, \"i\", 14);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"tbody\");\n        i0.ɵɵtemplate(24, SubnetComponent_tr_24_Template, 10, 7, \"tr\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, SubnetComponent_ng_template_25_Template, 15, 5, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(27, SubnetComponent_ng_template_27_Template, 16, 4, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(29, SubnetComponent_ng_template_29_Template, 13, 4, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(31, SubnetComponent_ng_template_31_Template, 12, 4, \"ng-template\", null, 19, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.buttonVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tablePreview);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.dataAvailable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dtOptions\", ctx.tableOptions)(\"dtTrigger\", ctx.dtTrigger);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.editOnValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.editOnValue)(\"disabled\", (ctx.subnetData == null ? null : ctx.subnetData.length) == 0 || ctx.currentTableRowCount == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.editOnValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.editOnValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language[\"Delete selected\"]);\n        i0.ɵɵproperty(\"disabled\", !(ctx.subnetData == null ? null : ctx.subnetData.length) || !(ctx.deleteIds == null ? null : ctx.deleteIds.length));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.selected, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.subnets);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subnetData);\n      }\n    },\n    directives: [i12.NgIf, i13.DataTableDirective, i12.NgForOf, i14.ɵNgNoValidate, i14.NgControlStatusGroup, i14.NgForm, i14.DefaultValueAccessor, i14.NgControlStatus, i14.NgModel],\n    styles: [\"div[aria-expanded=true][_ngcontent-%COMP%]   .fa-chevron-right[_ngcontent-%COMP%]{display:none}div[aria-expanded=true][_ngcontent-%COMP%]   .collapse-address[_ngcontent-%COMP%]{display:none}div[aria-expanded=false][_ngcontent-%COMP%]   .fa-chevron-down[_ngcontent-%COMP%]{display:none}.modal-scrll[_ngcontent-%COMP%]{overflow-y:auto;max-height:400px}.pr-btn[_ngcontent-%COMP%]{padding-right:55px}#subnets-table[_ngcontent-%COMP%]{table-layout:fixed}.list-two[_ngcontent-%COMP%]{list-style-type:disc;margin-left:30px}.w-250px[_ngcontent-%COMP%]{width:250px}.w-200px[_ngcontent-%COMP%]{width:200px}.f-style-italic[_ngcontent-%COMP%]{font-style:italic}.float-r22[_ngcontent-%COMP%]{float:right;margin-right:22px}.w-nowrap-200[_ngcontent-%COMP%]{white-space:nowrap;max-width:200px}.w-nowrap[_ngcontent-%COMP%]{white-space:nowrap}.f-size13[_ngcontent-%COMP%]{font-size:13px}.m-w200px[_ngcontent-%COMP%]{min-width:200px}.pos-abs-right[_ngcontent-%COMP%]{position:absolute;z-index:11;right:20px;top:10px}\"]\n  });\n  return SubnetComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}