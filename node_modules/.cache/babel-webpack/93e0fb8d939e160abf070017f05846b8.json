{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    //'X-Calix-Username': 'admin@calix.com'\n  })\n};\nexport let BlackListUsersService = /*#__PURE__*/(() => {\n  class BlackListUsersService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = environment.CALIX_ADMIN_BASE_URL + 'dpu';\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n        //'X-Calix-Username': 'admin@calix.com'\n      });\n\n      this.options = {\n        headers: headers\n      };\n    }\n    getBlacklistUsers() {\n      return this.httpClient.get(`${this.baseUrl}/list`, httpOptions);\n    }\n    updateBlacklistUsers(params) {\n      return this.httpClient.put(`${this.baseUrl}`, params, httpOptions);\n    }\n    searchBlacklistUser(username) {\n      return this.httpClient.get(`${this.baseUrl}/${username}`, httpOptions);\n    }\n    ReactivatetUser(username) {\n      return this.httpClient.delete(`${this.baseUrl}/${username}`, httpOptions);\n    }\n    getBlacklistUsersByOrgId(orgId) {\n      return this.httpClient.get(`${environment.CALIX_ADMIN_BASE_URL}org/${orgId}/dpu/list`, httpOptions);\n    }\n    updateBlacklistUsersByOrgId(params, orgId) {\n      return this.httpClient.put(`${environment.CALIX_ADMIN_BASE_URL}org/${orgId}/dpu`, params, httpOptions);\n    }\n    ReactivatetUserByOrgId(username, orgId) {\n      return this.httpClient.delete(`${environment.CALIX_ADMIN_BASE_URL}org/${orgId}/dpu/${username}`, httpOptions);\n    }\n  }\n  BlackListUsersService.ɵfac = function BlackListUsersService_Factory(t) {\n    return new (t || BlackListUsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BlackListUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlackListUsersService,\n    factory: BlackListUsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlackListUsersService;\n})();","map":null,"metadata":{},"sourceType":"module"}