{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EndpointMappingSourceService = /*#__PURE__*/(() => {\n  class EndpointMappingSourceService {\n    constructor(http) {\n      this.http = http;\n    }\n    getList(orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.get(url);\n    }\n    save(params, orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.post(url, params);\n    }\n    update(params, orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.put(url, params);\n    }\n    delete(orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.delete(url);\n    }\n    patchUpdate(params, orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.patch(url, params);\n    }\n    createOrg(orgId, params) {\n      let url = `${environment.FA_API_BASE_URL}config/organization?org-id=${orgId}`;\n      return this.http.post(url, params);\n    }\n    getDHCPKeyConfiguration(orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/dhcpkey?org-id=${orgId}`;\n      return this.http.get(url);\n    }\n    addDHCPKeyConfiguration(orgId, params) {\n      let url = `${environment.FA_API_BASE_URL}config/dhcpkey?org-id=${orgId}`;\n      return this.http.post(url, params);\n    }\n    updateDHCPKeyConfiguration(orgId, params) {\n      let url = `${environment.FA_API_BASE_URL}config/dhcpkey?org-id=${orgId}`;\n      return this.http.put(url, params);\n    }\n    deleteDHCPKeyConfiguration(orgId) {\n      let url = `${environment.FA_API_BASE_URL}config/dhcpkey?org-id=${orgId}`;\n      return this.http.delete(url);\n    }\n  }\n  EndpointMappingSourceService.ɵfac = function EndpointMappingSourceService_Factory(t) {\n    return new (t || EndpointMappingSourceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EndpointMappingSourceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EndpointMappingSourceService,\n    factory: EndpointMappingSourceService.ɵfac,\n    providedIn: 'root'\n  });\n  return EndpointMappingSourceService;\n})();","map":null,"metadata":{},"sourceType":"module"}