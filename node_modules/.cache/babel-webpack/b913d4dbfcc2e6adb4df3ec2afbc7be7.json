{"ast":null,"code":"import * as Highcharts from 'highcharts/highstock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/cco/cco-home/services/data.service\";\nimport * as i2 from \"src/app/cco-foundation/foundation-home/home-chart-options.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"src/app/shared-utils/date-utils.service\";\nimport * as i5 from \"../foundation-home.service\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"src/app/cco/cco-home/services/home-chart-options.service\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"@angular/common\";\nfunction SystemsByTypeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction SystemsByTypeComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SystemsByTypeComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nconst HighchartsMore = require(\"highcharts/highcharts-more\");\nconst HighchartsExporting = require(\"highcharts/modules/exporting\");\nHighchartsMore(Highcharts);\nHighchartsExporting(Highcharts);\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let SystemsByTypeComponent = /*#__PURE__*/(() => {\n  class SystemsByTypeComponent {\n    constructor(dataService, chartOptions, translateService, dateUtils, service, sso, ccoHomeService, router) {\n      this.dataService = dataService;\n      this.chartOptions = chartOptions;\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.service = service;\n      this.sso = sso;\n      this.ccoHomeService = ccoHomeService;\n      this.router = router;\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.error = false;\n      this.errorInfo = '';\n      this.filterDays = '7';\n      this.rgText = 'RG';\n      this.wapText = 'Mesh(SAT)';\n      this.ORG_ID = this.sso.getOrgId();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.rgText = this.language.RG;\n        this.wapText = this.language.cco_mesh_sat;\n        this.loadChart();\n      });\n    }\n    ngOnInit() {\n      if (this.language.fileLanguage == 'fr') {\n        this.rgText = 'Passerelle résidentielle';\n        this.wapText = 'Maillon';\n      }\n      let url = this.router.url;\n      if (url.indexOf('/cco/home/system-service-trends') > -1) {\n        this.filterDays = this.ccoHomeService.filterDays;\n        this.watchFilterDays();\n        setTimeout(() => {\n          this.loadChart();\n        }, 500);\n      } else {\n        this.filterDays = '7';\n        this.loadChart();\n      }\n    }\n    ngOnChanges() {\n      //this.loadChart();\n    }\n    ngOnDestroy() {\n      if (this.filterDaysSubscription) this.filterDaysSubscription.unsubscribe();\n      if (this.systemByTypesub) this.systemByTypesub.unsubscribe();\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n    loadChart() {\n      this.systemByTypesub = this.service.getSystemTypeChartData(this.ORG_ID, this.filterDays).subscribe(res => {\n        var _a;\n        let chartData = res;\n        this.chartData = this.chartDataModify(chartData);\n        if (((_a = this.chartData) === null || _a === void 0 ? void 0 : _a.categories.length) === 30) {\n          this.chartOptions.getCommonSubscribersChartOptionsfor30records(this.chartData, 'Number_of_Systems', true).subscribe(res => {\n            this.chartDataOptions = res;\n            Highcharts.setOptions({\n              lang: {\n                thousandsSep: ','\n              }\n            });\n            setTimeout(() => {\n              this.Highcharts.chart('systems-by-type-graph-div', this.chartDataOptions);\n              this.loading = false;\n            }, 100);\n          });\n        } else {\n          this.chartOptions.getCommonSubscribersChartOptions(this.chartData, 'Number_of_Systems', true).subscribe(res => {\n            this.chartDataOptions = res;\n            Highcharts.setOptions({\n              lang: {\n                thousandsSep: ','\n              }\n            });\n            setTimeout(() => {\n              this.Highcharts.chart('systems-by-type-graph-div', this.chartDataOptions);\n              this.loading = false;\n            }, 100);\n          });\n        }\n      }, err => {\n        let series = [{\n          name: this.rgText,\n          data: []\n        }, {\n          name: this.wapText,\n          data: []\n        }];\n        let data = {\n          series: series,\n          categories: []\n        };\n        this.chartOptions.getCommonSubscribersChartOptions(data, 'Number_of_Systems', true).subscribe(res => {\n          this.chartDataOptions = res;\n          setTimeout(() => {\n            this.Highcharts.chart('systems-by-type-graph-div', res);\n            this.loading = false;\n          }, 100);\n        });\n        this.loading = false;\n      });\n    }\n    chartDataModify(cData) {\n      let RG = [],\n        Mesh = [],\n        series = [],\n        categories = [];\n      let data = {};\n      cData = this.chartOptions.sortByTimestamp(cData, 'time');\n      cData.forEach(el => {\n        categories.push(this.dateUtils.getChartFormatDate(el.time, 'M/d/yy', true));\n        // el.outage = el.outage > 10000 ? el.outage / 100 : el.outage;\n        // el.degrade = el.degrade > 10000 ? el.degrade / 100 : el.degrade;\n        let url = this.router.url;\n        if (url.indexOf('/cco/home/system-service-trends') > -1) {\n          el['ExosRG'] = el.RG ? el.RG : 0;\n          el['ExosWAP'] = el.WAP ? el.WAP : 0;\n        } else {\n          el['ExosRG'] = el.ExosRG ? el.ExosRG : 0;\n          el['ExosWAP'] = el.ExosWAP ? el.ExosWAP : 0;\n        }\n        RG.push(parseInt(el.ExosRG));\n        Mesh.push(parseInt(el.ExosWAP));\n      });\n      series = [{\n        name: this.rgText,\n        data: RG\n      }, {\n        name: this.wapText,\n        data: Mesh\n      }];\n      data = {\n        series: series,\n        categories: categories\n      };\n      return data;\n    }\n    closeAlert() {}\n    watchFilterDays() {\n      this.filterDaysSubscription = this.ccoHomeService.filterDays$.subscribe(value => {\n        this.filterDays = value;\n        this.loadChart();\n      });\n    }\n  }\n  SystemsByTypeComponent.ɵfac = function SystemsByTypeComponent_Factory(t) {\n    return new (t || SystemsByTypeComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HomeChartOptionsService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DateUtilsService), i0.ɵɵdirectiveInject(i5.FoundationHomeService), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.HomeChartOptionsService), i0.ɵɵdirectiveInject(i8.Router));\n  };\n  SystemsByTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SystemsByTypeComponent,\n    selectors: [[\"app-systems-by-type\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"loader-wrapper\"], [\"class\", \"loader-wrapper-info\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [1, \"row\", 2, \"max-height\", \"400px\"], [1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"systems-by-type-graph-div\", 2, \"height\", \"315px\"], [1, \"loader-wrapper-info\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"]],\n    template: function SystemsByTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SystemsByTypeComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, SystemsByTypeComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 0);\n      }\n    },\n    directives: [i9.NgIf, i9.NgClass],\n    styles: [\"\"]\n  });\n  return SystemsByTypeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}