{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AutofocusDirective = /*#__PURE__*/(() => {\n  class AutofocusDirective {\n    constructor(el) {\n      this.el = el;\n      this.focus = true;\n    }\n    ngOnInit() {\n      if (this.focus) {\n        //Otherwise Angular throws error: Expression has changed after it was checked.\n        window.setTimeout(() => {\n          this.el.nativeElement.focus(); //For SSR (server side rendering) this is not safe. Use: https://github.com/angular/angular/issues/15008#issuecomment-285141070)\n        });\n      }\n    }\n\n    set autofocus(condition) {\n      this.focus = condition !== false;\n    }\n  }\n  AutofocusDirective.ɵfac = function AutofocusDirective_Factory(t) {\n    return new (t || AutofocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  AutofocusDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AutofocusDirective,\n    selectors: [[\"\", \"autofocus\", \"\"]],\n    inputs: {\n      autofocus: \"autofocus\"\n    }\n  });\n  return AutofocusDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}