{"ast":null,"code":"import inherits from 'inherits';\nimport BaseModeler from '../base/Modeler';\nimport modelingModule from './features/modeling';\nimport paletteModule from './features/palette';\nimport contextPadModule from './features/context-pad';\nimport popupMenuModule from './features/popup-menu';\nimport rulesModule from './features/rules';\nimport propertiesProviderModule from './features/properties-provider';\nimport zeebeModdle from 'zeebe-bpmn-moddle/resources/zeebe.json';\nimport zeebeModdleExtension from 'zeebe-bpmn-moddle/lib';\nimport disableUserTasksModule from './features/disable-user-tasks';\n\n/**\n *\n * @param {Object} options\n */\nexport default function Modeler(options = {}) {\n  options = {\n    ...options,\n    moddleExtensions: {\n      zeebe: zeebeModdle,\n      ...options.moddleExtensions\n    }\n  };\n\n  /**\n   * @pinussilvestrus: Disable Zeebe User Task support until the Engine is supporting it\n   * Cf. https://github.com/camunda/camunda-modeler/issues/2140\n   */\n  if (!options.enableZeebeUserTasks) {\n    this._modules = [...this._modules, disableUserTasksModule];\n  }\n  BaseModeler.call(this, options);\n}\ninherits(Modeler, BaseModeler);\nModeler.prototype._camundaCloudModules = [modelingModule, contextPadModule, paletteModule, popupMenuModule, rulesModule, propertiesProviderModule, zeebeModdleExtension];\nModeler.prototype._modules = [].concat(BaseModeler.prototype._modules, Modeler.prototype._camundaCloudModules);","map":null,"metadata":{},"sourceType":"module"}