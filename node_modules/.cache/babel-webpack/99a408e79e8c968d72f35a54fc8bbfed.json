{"ast":null,"code":"import { NG_VALIDATORS, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let CustomNumMinDirective = /*#__PURE__*/(() => {\n  class CustomNumMinDirective {\n    validate(c) {\n      if (Validators.required(c)) {\n        return null;\n      }\n      let val = c.value;\n      if (!isNaN(this.customNumMin) && !isNaN(+val) && +val >= 0) {\n        return +val < +this.customNumMin ? {\n          \"customNumMin\": true\n        } : null;\n      } else {\n        return null;\n      }\n    }\n  }\n  CustomNumMinDirective.ɵfac = function CustomNumMinDirective_Factory(t) {\n    return new (t || CustomNumMinDirective)();\n  };\n  CustomNumMinDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CustomNumMinDirective,\n    selectors: [[\"\", \"customNumMin\", \"\", \"formControlName\", \"\"], [\"\", \"customNumMin\", \"\", \"formControl\", \"\"], [\"\", \"customNumMin\", \"\", \"ngModel\", \"\"]],\n    inputs: {\n      customNumMin: \"customNumMin\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: CustomNumMinDirective,\n      multi: true\n    }])]\n  });\n  return CustomNumMinDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}