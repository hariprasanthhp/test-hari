{"ast":null,"code":"import { environment } from \"../../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let UnassociateddevicesService = /*#__PURE__*/(() => {\n  class UnassociateddevicesService {\n    constructor(http, sso) {\n      this.http = http;\n      this.sso = sso;\n    }\n    getUnassociatedDeviceData(params) {\n      console.log(params);\n      let query = \"\";\n      for (var key in params) {\n        if (params[key]) {\n          if (query != \"\") {\n            query += \"&\";\n          }\n          query += key + \"=\" + encodeURIComponent(params[key]);\n        }\n      }\n      return this.http.get(`${environment.SUPPORT_URL}/netops-report/devices-unlinked?${query}`);\n    }\n    getUnassociatedDeviceDownload(paramsD) {\n      console.log(\"params download\", paramsD);\n      let query = \"\";\n      for (var key in paramsD) {\n        console.log(\"key=\", key);\n        if (paramsD[key]) {\n          if (query != \"\") {\n            query += \"&\";\n          }\n          query += key + \"=\" + encodeURIComponent(paramsD[key]);\n        }\n      }\n      return this.http.get(`${environment.SUPPORT_URL}/netops-report/devices-unlinked/download?${query}`);\n    }\n    getUnassociatedDeviceDataCount(orgid) {\n      const ID = this.sso.getOrg(orgid);\n      return this.http.get(`${environment.SUPPORT_URL}/netops-report/devices-unlinked/count?${ID}`);\n    }\n  }\n  UnassociateddevicesService.ɵfac = function UnassociateddevicesService_Factory(t) {\n    return new (t || UnassociateddevicesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  UnassociateddevicesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UnassociateddevicesService,\n    factory: UnassociateddevicesService.ɵfac,\n    providedIn: 'root'\n  });\n  return UnassociateddevicesService;\n})();","map":null,"metadata":{},"sourceType":"module"}