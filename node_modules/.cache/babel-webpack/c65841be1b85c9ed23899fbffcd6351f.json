{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/sso-auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let ConfigurationWorkflowComponent = /*#__PURE__*/(() => {\n  class ConfigurationWorkflowComponent {\n    constructor(sso, router) {\n      this.sso = sso;\n      this.router = router;\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          let currentUrl = this.router.url;\n          this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n          this.router.onSameUrlNavigation = 'reload';\n          if (currentUrl == '/cco-foundation/foundation-configuration/configuration-workflow') {\n            this.sso.redirectByUrl([``, ``, `/cco-foundation/foundation-configuration/configuration-workflow/workflows`]);\n          }\n        }\n      });\n    }\n    ngOnInit() {}\n  }\n  ConfigurationWorkflowComponent.ɵfac = function ConfigurationWorkflowComponent_Factory(t) {\n    return new (t || ConfigurationWorkflowComponent)(i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  ConfigurationWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigurationWorkflowComponent,\n    selectors: [[\"app-configuration-workflow\"]],\n    decls: 1,\n    vars: 0,\n    template: function ConfigurationWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i2.RouterOutlet],\n    styles: [\"#workflowWizard .stepper-ui li button{max-width:240px!important}  #workflowWizard .stepper-ui li button span{max-width:185px!important}\"]\n  });\n  return ConfigurationWorkflowComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}