{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/shared/services/custom-translate.service\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"../services/common-functions.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = function () {\n  return [\"active\"];\n};\nfunction TabMenuComponent_div_0_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵelementStart(1, \"a\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menu_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", menu_r2.title);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", menu_r2.routeLink);\n    i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(menu_r2.title);\n  }\n}\nfunction TabMenuComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"ul\", 2);\n    i0.ɵɵtemplate(2, TabMenuComponent_div_0_li_2_Template, 3, 5, \"li\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.menus);\n  }\n}\n//import { CustomTranslateService } from '../../../../../App-Services/custom-translate.service';\nexport let TabMenuComponent = /*#__PURE__*/(() => {\n  class TabMenuComponent {\n    constructor(router, customTranslateService, sso, commonService) {\n      this.router = router;\n      this.customTranslateService = customTranslateService;\n      this.sso = sso;\n      this.commonService = commonService;\n      this.pageAvailable = false;\n      this.languages = [{\n        name: \"English\"\n      }, {\n        name: \"French Canadian\"\n      }];\n      this.menuItems = [{\n        menuName: 'Network',\n        subMenu: true,\n        subMenuItem: [{\n          menuName: 'Devices',\n          link: ''\n        }]\n      }, {\n        menuName: 'Locations',\n        subMenu: false,\n        subMenuItem: []\n      }];\n      this.MODULE = 'calixAdmin';\n      this.activeRoute = './network';\n      this.isSecureAccess = false;\n      this.showTabMenu = true;\n      let url = this.router.url;\n      this.MODULE = this.sso.getRedirectModule(url);\n      this.isSecureAccess = this.sso.isSecureAccess();\n      this.showTab();\n    }\n    ngOnInit() {\n      this.language = this.customTranslateService.defualtLanguage;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.customTranslateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.menus[0].title = this.language.network;\n        this.menus[1].title = this.language.locations;\n        this.menus[2].title = this.language.Applications;\n        this.menus[3].title = this.language.end;\n        this.menus[4].title = this.language.Configurations;\n        if (this.menus[5] && this.menus[5].title) {\n          this.menus[5].title = this.language.Traffic;\n        }\n        let changedMenu = this.menus;\n        this.menus = [...changedMenu];\n      });\n      this.menus = [{\n        title: this.language.network,\n        routeLink: './network',\n        subMenuLink: `/${this.MODULE}/flowAnalyze/network`\n      }, {\n        title: this.language.locations,\n        routeLink: './locations',\n        subMenuLink: `/${this.MODULE}/flowAnalyze/locations`\n      }, {\n        title: this.language.Applications,\n        routeLink: './applications',\n        subMenuLink: `/${this.MODULE}/flowAnalyze/applications`\n      }, {\n        title: this.language.end,\n        routeLink: './endpoint',\n        subMenuLink: `/${this.MODULE}/flowAnalyze/endpoint`\n      }, {\n        title: this.language.Configurations,\n        routeLink: './configurations',\n        subMenuLink: `/${this.MODULE}/flowAnalyze/configurations`\n      }\n      // { title: 'Traffic', routeLink: './traffic', subMenuLink: `/${this.MODULE}/flowAnalyze/traffic` }\n      ];\n\n      let roles = this.sso.getRoles();\n      let isSysAdmin = false;\n      if (roles && roles.indexOf('System Admin') !== -1) {\n        isSysAdmin = true;\n      }\n      if (roles && roles.indexOf('SysAdmin') !== -1) {\n        isSysAdmin = true;\n      }\n      if (isSysAdmin || this.isSecureAccess) {\n        this.menus.push({\n          title: this.language.Traffic,\n          routeLink: './traffic',\n          subMenuLink: `/${this.MODULE}/flowAnalyze/traffic`\n        });\n      }\n      this.setSubMenuPage();\n    }\n    languageChange(language) {\n      sessionStorage.setItem('defaultLanguage', language);\n      this.customTranslateService.changeLanguage(language);\n    }\n    // For Sub Menu Page routing function starts\n    goPage(page) {\n      this.router.navigate([page]);\n    }\n    goPageN() {\n      this.router.navigate([this.activeRoute]);\n    }\n    setSubMenuPage() {\n      let url = this.router.url;\n      if (url.indexOf('/network/') > -1) {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/network`;\n      } else if (url.indexOf('/locations') > -1) {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/locations`;\n      } else if (url.indexOf('/applications/') > -1) {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/applications`;\n      } else if (url.indexOf('/endpoint/') > -1) {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/endpoint`;\n      } else if (url.indexOf('/configurations/') > -1) {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/configurations`;\n      } else {\n        this.activeRoute = `/${this.MODULE}/flowAnalyze/traffic`;\n      }\n    }\n    pageChange(menu) {\n      this.activeRoute = menu.subMenuLink;\n    }\n    showTab() {\n      this.commonService.showTabMenu$.subscribe(res => {\n        if (res !== null && res !== undefined) {\n          this.showTabMenu = res;\n        }\n      });\n    }\n  }\n  TabMenuComponent.ɵfac = function TabMenuComponent_Factory(t) {\n    return new (t || TabMenuComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CustomTranslateService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.CommonFunctionsService));\n  };\n  TabMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TabMenuComponent,\n    selectors: [[\"app-tab-menu\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"flow-config-tab\", 4, \"ngIf\"], [1, \"flow-config-tab\"], [1, \"nav\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [1, \"nav-link\", 3, \"id\", \"routerLink\", \"routerLinkActive\"]],\n    template: function TabMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TabMenuComponent_div_0_Template, 3, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.pageAvailable && ctx.showTabMenu);\n      }\n    },\n    directives: [i5.NgIf, i5.NgForOf, i1.RouterLinkWithHref, i1.RouterLinkActive],\n    styles: [\"\"]\n  });\n  return TabMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}