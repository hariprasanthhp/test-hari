{"ast":null,"code":"import { getBusinessObject } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil';\n\n/**\n * Returns true, if an element is from a different type\n * than a target definition. Takes into account the type,\n * event definition type and triggeredByEvent property.\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean}\n */\nexport function isDifferentType(element) {\n  return function (entry) {\n    var target = entry.target;\n    var businessObject = getBusinessObject(element),\n      eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];\n    var isTypeEqual = businessObject.$type === target.type;\n    var isEventDefinitionEqual = (eventDefinition && eventDefinition.$type) === target.eventDefinitionType;\n    var isTriggeredByEventEqual = businessObject.triggeredByEvent === target.triggeredByEvent;\n    var isExpandedEqual = target.isExpanded === undefined || target.isExpanded === isExpanded(businessObject);\n    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}