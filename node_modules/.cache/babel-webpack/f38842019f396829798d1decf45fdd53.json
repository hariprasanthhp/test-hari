{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ConfigurationSettingComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵelementStart(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.language.subnets, \" \");\n  }\n}\nfunction ConfigurationSettingComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵelementStart(1, \"a\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.language[\"Secure Onboarding\"], \" \");\n  }\n}\nfunction ConfigurationSettingComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵelementStart(1, \"a\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language[\"Stale System Purge\"], \" \");\n  }\n}\nexport let ConfigurationSettingComponent = /*#__PURE__*/(() => {\n  class ConfigurationSettingComponent {\n    constructor(translateService, sso, router) {\n      this.translateService = translateService;\n      this.sso = sso;\n      this.router = router;\n      this.subnetsShow = false;\n      this.secureOnboardShow = false;\n      this.staleDeviceShow = false;\n      this.edgeSuitesShow = false;\n      this.systemSettingsShow = false;\n      this.commandIQShow = false;\n      this.blockPageShow = false;\n      this.validateScopeStage = false;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    ngOnInit() {\n      this.getEdgeSuiteEntitlement();\n      let scopes = this.sso.getScopes();\n      scopes['cloud.rbac.foundation.configurations'] = scopes['cloud.rbac.foundation.configurations'] ? scopes['cloud.rbac.foundation.configurations'] : [];\n      if (scopes && scopes['cloud.rbac.foundation.configurations']) {\n        if (scopes['cloud.rbac.foundation.configurations'].indexOf('read') !== -1 || scopes['cloud.rbac.foundation.configurations'].indexOf('write') !== -1) this.commandIQShow = true;\n        this.blockPageShow = true;\n        this.subnetsShow = true;\n        this.secureOnboardShow = true;\n        this.staleDeviceShow = true;\n        this.edgeSuitesShow = true;\n        this.systemSettingsShow = true;\n      }\n    }\n    getEdgeSuiteEntitlement() {\n      //debugger;\n      let entitlement = this.sso.getEntitlements();\n      entitlement['ProtectIQ'] = entitlement[203] ? entitlement[203] : [];\n      entitlement['ExperienceIQ'] = entitlement[204] ? entitlement[204] : [];\n      entitlement['ExperienceIQ And ProtectIQ'] = entitlement[205] ? entitlement[205] : [];\n      if (entitlement && entitlement['ProtectIQ'] && entitlement['ProtectIQ'].name === \"ProtectIQ\") {\n        this.productIQEnableentitlement = true;\n      } else {\n        this.productIQEnableentitlement = false;\n      }\n      if (entitlement && entitlement['ExperienceIQ'] && entitlement['ExperienceIQ'].name === \"ExperienceIQ\") {\n        this.ExperienceIQEnableentitlement = true;\n      } else {\n        this.ExperienceIQEnableentitlement = false;\n      }\n      if (entitlement && entitlement['ExperienceIQ And ProtectIQ'] && entitlement['ExperienceIQ And ProtectIQ'].name === \"ExperienceIQ And ProtectIQ\") {\n        this.proAndExpEnableentitlement = true;\n      } else {\n        this.proAndExpEnableentitlement = false;\n      }\n    }\n  }\n  ConfigurationSettingComponent.ɵfac = function ConfigurationSettingComponent_Factory(t) {\n    return new (t || ConfigurationSettingComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  ConfigurationSettingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigurationSettingComponent,\n    selectors: [[\"app-configuration-setting\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-sm-12\", \"col-md-2\", \"col-lg-2\", \"pr-0\", \"ccl-tabs\"], [\"id\", \"netops-list-menu\", 1, \"nav\", \"flex-column\", \"left-menu\", \"tab-view-style\"], [\"class\", \"nav-item\", 4, \"ngIf\"], [1, \"col-sm-12\", \"col-md-10\", \"col-lg-10\", \"pl-4\"], [1, \"nav-item\"], [\"routerLink\", \"./subnet-configuration\", \"id\", \"subnet-configuration\", \"routerLinkActive\", \"active\", 1, \"list-group-item\", \"list-group-item-action\"], [\"routerLink\", \"./secure-onboard\", \"id\", \"secure-onboard\", \"routerLinkActive\", \"active\", 1, \"list-group-item\", \"list-group-item-action\"], [\"id\", \"stale-device\", \"routerLink\", \"./stale-device\", \"routerLinkActive\", \"active\", 1, \"list-group-item\", \"list-group-item-action\"]],\n    template: function ConfigurationSettingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ul\", 2);\n        i0.ɵɵtemplate(3, ConfigurationSettingComponent_li_3_Template, 3, 1, \"li\", 3);\n        i0.ɵɵtemplate(4, ConfigurationSettingComponent_li_4_Template, 3, 1, \"li\", 3);\n        i0.ɵɵtemplate(5, ConfigurationSettingComponent_li_5_Template, 3, 1, \"li\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.subnetsShow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.secureOnboardShow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.staleDeviceShow);\n      }\n    },\n    directives: [i4.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i3.RouterLinkActive],\n    styles: [\"\"]\n  });\n  return ConfigurationSettingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}