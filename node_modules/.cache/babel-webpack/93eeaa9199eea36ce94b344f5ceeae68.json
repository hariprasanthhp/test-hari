{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { NetopsManagementComponent } from './netops-management.component';\nimport { DevicesGroupsComponent } from './operations/devices-groups/devices-groups.component';\nimport { SoftwareImagesFormComponent } from './operations/software-images-form/software-images-form.component';\n/* Start of component import */\nimport { SubscriberManagementComponent } from './subscriber-management/subscriber-management.component';\nimport { SubscriberWizardComponent } from './subscriber-management/subscriber-wizard/subscriber-wizard.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n/* End of component import */\nconst routes = [{\n  path: '',\n  component: NetopsManagementComponent,\n  children: [{\n    path: 'subscriber-management',\n    component: SubscriberManagementComponent\n  }, {\n    path: 'reports',\n    loadChildren: () => import('./reports/reports.module').then(m => m.ReportsModule)\n  }, {\n    path: 'operations',\n    loadChildren: () => import('./operations/operations.module').then(m => m.OperationsModule)\n  }, {\n    path: 'configuration',\n    loadChildren: () => import('./configuration/configuration.module').then(m => m.ConfigurationModule)\n  },\n  // {\n  //   path: 'workflow-status',\n  //   component : WorkflowStatusComponent\n  // },\n  // {\n  //   path: 'workflow-details',\n  //   component : WorkflowDetailsComponent\n  // },\n  {\n    path: 'subscriber-wizard',\n    component: SubscriberWizardComponent\n  }, {\n    path: '',\n    redirectTo: 'subscriber-management',\n    pathMatch: 'full'\n  }, {\n    path: 'subscriber-management/manage',\n    component: SubscriberManagementComponent\n  }]\n  /* children: [\r\n    {\r\n      path: 'configuration-files', component: ConfigurationFilesComponent, data: { title: 'Calix Suppport Cloud - Netops management - configuration-files' }\r\n    },\r\n    {\r\n      path: 'configuration-files-upload', component: ConfigurationFilesUploadComponent, data: { title: 'Calix Suppport Cloud - Netops management - configuration-files-upload' }\r\n    },\r\n    {\r\n      path: 'device-group', component: DeviceGroupComponent, data: { title: 'Calix Suppport Cloud - Netops management - device-group' },\r\n    },\r\n    {\r\n      path: 'group-detail', component: GroupDetailComponent, data: { title: 'Calix Suppport Cloud - Netops management - group-detail' },\r\n    },\r\n    {\r\n      path: 'external-file-server', component: ExternalFileServerComponent, data: { title: 'Calix Suppport Cloud - Netops management - external-file-server' },\r\n    },\r\n    {\r\n      path: 'external-file-server-new', component: ExternalFileServerNewComponent, data: { title: 'Calix Suppport Cloud - Netops management - external-file-server-new' },\r\n    },\r\n    {\r\n      path: 'netop-policies', component: NetopPoliciesComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-policies' },\r\n    },\r\n    {\r\n      path: 'netop-profiles', component: NetopProfilesComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-profiles' },\r\n    },\r\n    {\r\n      path: 'netop-profiles-new', component: NetopProfilesNewComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-profiles-new' },\r\n    },\r\n    {\r\n      path: 'device-reports', component: DeviceReportsComponent, data: { title: 'Calix Suppport Cloud - Netops management - device-reports' },\r\n    },\r\n    {\r\n      path: 'call-outcome-reports', component: CallOutcomeReportsComponent, data: { title: 'Calix Suppport Cloud - Netops management - call-outcome-reports' },\r\n    },\r\n    {\r\n      path: 'netop-swImage', component: NetopSwImageComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-swImage' },\r\n    },\r\n    {\r\n      path: 'netop-swImage-upload', component: NetopSwImageUploadComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-swImage-upload' },\r\n    },\r\n    {\r\n      path: 'subnet-config', component: SubnetConfigComponent, data: { title: 'Calix Suppport Cloud - Netops management - subnet-config' },\r\n    },\r\n    {\r\n      path: 'dial-plan', component: DialPlanComponent, data: { title: 'Calix Suppport Cloud - Netops management - dial-plan' },\r\n    },\r\n    {\r\n      path: 'dial-plan-new', component: DialPlanNewComponent, data: { title: 'Calix Suppport Cloud - Netops management - dial-plan-new' },\r\n    },\r\n    {\r\n      path: 'device-unlinked', component: DeviceUnlinkedComponent, data: { title: 'Calix Suppport Cloud - Netops management - device-unlinked' },\r\n    },\r\n    {\r\n      path: 'netop-workflows', component: NetopWorkflowsComponent, data: { title: 'Calix Suppport Cloud - Netops management - netop-workflows' },\r\n    },\r\n    {\r\n      path: 'netop-workflows-new', component: NetopWorkflowsNewComponent, data: { title: 'Calix Suppport Cloud - Netops management - group-detail' },\r\n    },\r\n    {\r\n      path: '',\r\n      redirectTo: 'configuration-files',\r\n      pathMatch: 'full',\r\n    }\r\n  ], */\n}, {\n  path: 'software-images-form',\n  component: SoftwareImagesFormComponent,\n  data: {\n    title: 'Calix Cloud - Flow Configuration'\n  }\n}, {\n  path: 'devices-groups/:id',\n  component: DevicesGroupsComponent,\n  data: {\n    title: 'Calix Cloud - Flow Configuration'\n  }\n}, {\n  path: 'devices-groups-add',\n  component: DevicesGroupsComponent,\n  data: {\n    title: 'Calix Cloud - Flow Configuration'\n  }\n}, {\n  path: 'devices-groups-workflow',\n  component: DevicesGroupsComponent,\n  data: {\n    title: 'Calix Cloud - Flow Configuration'\n  }\n}];\nexport let NetopsManagementRoutingModule = /*#__PURE__*/(() => {\n  class NetopsManagementRoutingModule {}\n  NetopsManagementRoutingModule.ɵfac = function NetopsManagementRoutingModule_Factory(t) {\n    return new (t || NetopsManagementRoutingModule)();\n  };\n  NetopsManagementRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: NetopsManagementRoutingModule\n  });\n  NetopsManagementRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forChild(routes)], RouterModule]\n  });\n  return NetopsManagementRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}