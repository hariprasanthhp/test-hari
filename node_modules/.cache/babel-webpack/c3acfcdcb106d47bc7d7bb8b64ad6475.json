{"ast":null,"code":"export const maskString = input => {\n  if (input) {\n    const regExpNotMask = [new RegExp(/^(([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\\.){3}[0-9]{1,3})$/gsi), new RegExp(/^static-/gsi), new RegExp(/^unknown subscriber/gsi), new RegExp(/^resolving/gsi)];\n    if (regExpNotMask.some(re => re.test(input))) {\n      return input;\n    }\n    const regExpEmailMask = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gsi);\n    if (regExpEmailMask.test(input)) {\n      return maskEmail(input);\n    }\n    return input.substring(0, 2) + '*********';\n  } else {\n    return \"\";\n  }\n};\nconst maskEmail = input => {\n  var splitted = input.split('@'); //sample@ex.co.us -> ['sample', 'ex.co.us']\n  const firstPart = splitted[0].substring(0, 2) + '***'; // sa***\n  const lastPart = splitted[1].substring(0, 2) + '***'; //ex***\n  return firstPart + '@' + lastPart; // sa***@ex***\n};","map":null,"metadata":{},"sourceType":"module"}