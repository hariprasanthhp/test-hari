{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let ZipCodeApiService = /*#__PURE__*/(() => {\n  class ZipCodeApiService {\n    constructor(httpClient, ssoAuthService, router) {\n      this.httpClient = httpClient;\n      this.ssoAuthService = ssoAuthService;\n      this.router = router;\n      this.baseURL = environment.API_BASE;\n      this.zipcodeNameurl = \"cmc-campaigns/zipdata/alias\";\n      this.zipcodeListUrl = \"cmc-campaigns/zipdata\";\n      this.cmcCloudChecktUrl = \"cmc-campaigns/organization\";\n      const url = this.router.url;\n      this.MODULE = this.ssoAuthService.getRedirectModule(url);\n      this.calixOrgId();\n    }\n    calixOrgId() {\n      let headers;\n      headers = new HttpHeaders({\n        'X-Calix-OrgId': this.ssoAuthService.getOrganizationID(this.router.url)\n      });\n      this.httpOptions = {\n        headers: headers\n      };\n    }\n    zipCodeListNames() {\n      this.calixOrgId();\n      return this.httpClient.get(`${this.baseURL}/v1/${this.zipcodeNameurl}`, this.httpOptions);\n    }\n    saveZipPlusFile(saveCSVData) {\n      this.calixOrgId();\n      return this.httpClient.post(`${this.baseURL}/v1/${this.zipcodeNameurl}`, saveCSVData, this.httpOptions);\n    }\n    modifyZipcode(data) {\n      this.calixOrgId();\n      return this.httpClient.put(`${this.baseURL}/v1/${this.zipcodeNameurl}`, data, this.httpOptions);\n    }\n    removeZipcode(listName) {\n      this.calixOrgId();\n      return this.httpClient.delete(`${this.baseURL}/v1/${this.zipcodeNameurl}?list-name=${listName}`, this.httpOptions);\n    }\n    zipCodeEntryList(listName) {\n      this.calixOrgId();\n      return this.httpClient.get(`${this.baseURL}/v1/${this.zipcodeListUrl}/?list-name=${listName}`, this.httpOptions);\n    }\n    editZipcodeEntryList(data) {\n      this.calixOrgId();\n      return this.httpClient.put(`${this.baseURL}/v1/${this.zipcodeListUrl}/`, data, this.httpOptions);\n    }\n    deleteZipcodeEntryList(ids) {\n      this.calixOrgId();\n      return this.httpClient.delete(`${this.baseURL}/v1/${this.zipcodeListUrl}/?ids=${ids}`, this.httpOptions);\n    }\n    addZipcodeEntryList(postData) {\n      this.calixOrgId();\n      return this.httpClient.post(`${this.baseURL}/v1/${this.zipcodeListUrl}/`, postData, this.httpOptions);\n    }\n    marketingCloudCheck() {\n      this.calixOrgId();\n      //  if( this.MODULE === 'systemAdministration'){\n      return this.httpClient.get(`${this.baseURL}/v1/${this.cmcCloudChecktUrl}`, this.httpOptions);\n      // }else{\n      //   return this.httpClient.get(`${this.baseURL}/v1/${this.cmcCloudChecktUrl}`);  \n      // }\n    }\n\n    marketingCloudCheckUpdate(data) {\n      this.calixOrgId();\n      // if( this.MODULE === 'systemAdministration'){\n      return this.httpClient.put(`${this.baseURL}/v1/${this.cmcCloudChecktUrl}`, data, this.httpOptions);\n      //  }else{\n      //   return this.httpClient.put(`${this.baseURL}/v1/${this.cmcCloudChecktUrl}`, data);\n      //  }\n    }\n  }\n\n  ZipCodeApiService.ɵfac = function ZipCodeApiService_Factory(t) {\n    return new (t || ZipCodeApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService), i0.ɵɵinject(i3.Router));\n  };\n  ZipCodeApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ZipCodeApiService,\n    factory: ZipCodeApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ZipCodeApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}