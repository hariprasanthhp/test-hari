{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthGuard } from './shared/services/auth.guard';\nimport { SubscriberOverviewComponent } from './subscriber-overview/subscriber-overview.component';\nimport { SampleTopologyComponent } from \"./sample-topology/sample-topology.component\";\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { BlockPageTemplateViewComponent } from './shad/block-page-template-view/block-page-template-view.component';\nimport { EntitelmentsComponent } from './entitelments/entitelments.component';\nimport { DemoTopologyComponent } from './support/support-overview/demo-topology/demo-topology.component';\nimport { MicrositePreviewComponent } from './microsite-preview/microsite-preview.component';\nimport { RedirectComponent } from './redirect/redirect.component';\nimport { CaptivePortalPreviewComponent } from './captive-portal-preview/captive-portal-preview.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'login'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'redirect',\n  component: RedirectComponent\n}, {\n  path: 'microsite_preview',\n  component: MicrositePreviewComponent\n}, {\n  path: 'entitelments',\n  component: EntitelmentsComponent\n}, {\n  path: 'logout',\n  component: LogoutComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'topology',\n  component: SampleTopologyComponent\n}, {\n  path: 'demo_topology',\n  component: DemoTopologyComponent\n}, {\n  path: 'block_page_template_view',\n  component: BlockPageTemplateViewComponent\n}, {\n  path: '',\n  component: LayoutComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: 'sub-overview',\n    component: SubscriberOverviewComponent\n  }]\n}, {\n  path: 'shad',\n  loadChildren: () => import('./shad/shad.module').then(m => m.ShadModule),\n  canLoad: [AuthGuard]\n}, {\n  path: 'support',\n  loadChildren: () => import('./support/support.module').then(m => m.SupportModule),\n  canLoad: [AuthGuard],\n  canDeactivate: [AuthGuard],\n  runGuardsAndResolvers: 'always'\n}, {\n  path: 'engagement',\n  loadChildren: () => import('./marketing/marketing.module').then(m => m.MarketingModule),\n  canLoad: [AuthGuard],\n  canDeactivate: [AuthGuard],\n  runGuardsAndResolvers: 'always'\n}, {\n  path: 'systemAdministration',\n  loadChildren: () => import('../app/sys-admin/sys-admin.module').then(m => m.SysAdminModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'organization-admin',\n  loadChildren: () => import('../app/org-admin/org-admin.module').then(m => m.OrgAdminModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'org-admins',\n  loadChildren: () => import('../app/org-admins/org-admins.module').then(m => m.OrgAdminsModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'org-access',\n  loadChildren: () => import('./org-access/org-access.module').then(m => m.OrgAccessModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'cco-foundation',\n  loadChildren: () => import('./cco-foundation/cco-foundation.module').then(m => m.CcoFoundationModule),\n  canLoad: [AuthGuard],\n  canDeactivate: [AuthGuard]\n}, {\n  path: 'cco',\n  loadChildren: () => import('./cco/cco.module').then(m => m.CcoModule),\n  canLoad: [AuthGuard],\n  canDeactivate: [AuthGuard],\n  runGuardsAndResolvers: 'always'\n}, {\n  path: 'customer-portal/preview',\n  component: CaptivePortalPreviewComponent\n}, {\n  path: 'federated-dashboard',\n  loadChildren: () => import('./federated-dashboard/federated-dashboard.module').then(m => m.FederatedDashboardModule)\n}, {\n  path: '**',\n  component: LoginComponent\n}];\nconst config = {\n  //useHash: true,\n  onSameUrlNavigation: 'reload',\n  relativeLinkResolution: 'legacy'\n};\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes, config)], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}