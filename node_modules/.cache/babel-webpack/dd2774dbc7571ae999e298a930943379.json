{"ast":null,"code":"import { WindowRefService } from '../shared/services/window-ref.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/services/sso-auth.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"./foundation-header/foundation-header.component\";\nimport * as i6 from \"./foundation-footer/foundation-footer.component\";\nexport let CcoFoundationComponent = /*#__PURE__*/(() => {\n  class CcoFoundationComponent {\n    constructor(router, sso, translateService, titleService) {\n      // let base = `${environment.API_BASE}`;\n      // if (base.indexOf('/dev.api.calix.ai') > -1) {\n      //   this.isDev = true;\n      // } else this.isDev = false;\n      this.router = router;\n      this.sso = sso;\n      this.translateService = translateService;\n      this.titleService = titleService;\n      this.isDev = false;\n      this.hideFoundation = false;\n      this.tosAgreed = false;\n      // if (!this.isDev) {\n      //   this.router.navigate(['./support']);\n      // }\n      this.baseUrl = WindowRefService.prototype.nativeWindow.split('//')[1].split('.')[0];\n      if (this.router.url.split(\"/\")[1] == 'cco-foundation') {\n        (function (apiKey) {\n          (function (p, e, n, d, o) {\n            var v, w, x, y, z;\n            o = p[d] = p[d] || {};\n            o._q = [];\n            v = [\"initialize\", \"identify\", \"updateOptions\", \"pageLoad\", \"track\"];\n            for (w = 0, x = v.length; w < x; ++w) (function (m) {\n              o[m] = o[m] || function () {\n                o._q[m === v[0] ? \"unshift\" : \"push\"]([m].concat([].slice.call(arguments, 0)));\n              };\n            })(v[w]);\n            y = e.createElement(n);\n            y.async = !0;\n            y.src = \"https://cdn.pendo.io/agent/static/\" + apiKey + \"/pendo.js\";\n            z = e.getElementsByTagName(n)[0];\n            z.parentNode.insertBefore(y, z);\n          })(window, document, \"script\", \"pendo\");\n        })(\"dea8dc45-9d31-4ba6-7194-2c18b0b1164e\");\n        if (localStorage.getItem(\"calix.userId\") && localStorage.getItem('calix.spid')) {\n          pendo.initialize({\n            visitor: {\n              id: localStorage.getItem(\"calix.userId\"),\n              lang: sessionStorage.getItem(\"defaultLanguage\"),\n              url: this.getUrl(),\n              orgId: JSON.parse(localStorage.getItem(\"calix.login_data\")).OrgId,\n              userType: JSON.parse(localStorage.getItem(\"calix.login_data\")).user_type\n              // language: \"fr_CA\",\n              // visitor_lang: \"FR_CS\",\n            },\n\n            account: {\n              id: localStorage.getItem(\"calix.spid\")\n              // language: localStorage.getItem(\"defaultLanguage\"), // Highly recommended\n            }\n          });\n        }\n      }\n\n      this.titleService.setTitle('Insights - Home - Deployment - Calix Cloud');\n      this.sso.setRelativeUrl('foundation');\n      this.router.routeReuseStrategy.shouldReuseRoute = (future, curr) => {\n        if (this.router.url.includes(\"/cco-foundation/foundation-home\") || this.router.url.includes(\"/cco-foundation/foundation-operations/foundation-system-operation/secure-onboard\") || this.router.url.includes(\"/cco-foundation/subscribers-systems/search\") || this.router.url.includes(\"/cco-foundation/foundation-systems/foundation-manage/foundation-system-list\") || this.router.url.includes(\"/cco-foundation/foundation-systems/foundation-geographic-view\")) {\n          return false;\n        }\n        return curr.routeConfig === future.routeConfig;\n      };\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    ngOnInit() {\n      // let base = `${environment.API_BASE}`;\n      // if (base.indexOf('/dev.api.calix.ai') > -1) {\n      //   this.validateScopeStage = true;\n      // } else this.validateScopeStage = false;\n      let scopes = this.sso.getScopes();\n      let validScopes = Object.keys(scopes);\n      if (validScopes) {\n        for (let i = 0; i < validScopes.length; i++) {\n          if (validScopes[i].indexOf('cloud.rbac.foundation.configurations') !== -1 || validScopes[i].indexOf('cloud.rbac.foundation.insights') !== -1 || validScopes[i].indexOf('cloud.rbac.foundation.reports') !== -1 || validScopes[i].indexOf('cloud.rbac.foundation.systems') !== -1) {\n            let enttlmnts = this.sso.getEntitlements();\n            if (enttlmnts[200] || enttlmnts[201] || enttlmnts[218]) {\n              this.hideFoundation = true;\n            }\n            break;\n          }\n        }\n        // } else {\n        //   for (let i = 0; i < validScopes.length; i++) {\n        //     if (validScopes[i].indexOf('cloud.rbac.foundation') !== -1) {\n        //       let enttlmnts = this.sso.getEntitlements();\n        //       if (enttlmnts[200] || enttlmnts[201]) {\n        //         this.hideFoundation = true;\n        //       }\n        //       break;\n        //     }\n        //   }\n      }\n\n      this.verifyTOS();\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.tosSub) {\n        this.tosSub.unsubscribe();\n      }\n    }\n    getUrl() {\n      if (this.baseUrl == 'cloud-stg') {\n        return 'stage';\n      } else if (this.baseUrl == 'calixcloud-ca') {\n        return 'prod_ca';\n      } else if (this.baseUrl == 'stage') {\n        return 'stage_local';\n      } else if (this.baseUrl.split(':')[0] == 'localhost') {\n        return 'local';\n      } else if (this.baseUrl == 'calixcloud') {\n        return 'prod';\n      } else if (this.baseUrl == 'cloud-dev') {\n        return 'dev';\n      } else {\n        return 'contact admin';\n      }\n    }\n    verifyTOS() {\n      if (this.sso.isFoundationTermsAccept()) {\n        this.tosAgreed = true;\n      }\n      this.tosSub = this.sso.foundationTos$.subscribe(data => {\n        this.tosAgreed = true;\n      });\n    }\n  }\n  CcoFoundationComponent.ɵfac = function CcoFoundationComponent_Factory(t) {\n    return new (t || CcoFoundationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.Title));\n  };\n  CcoFoundationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CcoFoundationComponent,\n    selectors: [[\"app-cco-foundation\"]],\n    decls: 7,\n    vars: 5,\n    consts: [[1, \"page-wrapper\", 3, \"hidden\"], [1, \"maximus\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", 3, \"hidden\"], [3, \"hidden\"]],\n    template: function CcoFoundationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-foundation-header\");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"router-outlet\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-foundation-footer\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"hidden\", !ctx.tosAgreed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.hideFoundation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.hideFoundation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.tosAgreed);\n      }\n    },\n    directives: [i5.FoundationHeaderComponent, i1.RouterOutlet, i6.FoundationFooterComponent],\n    styles: [\"\"]\n  });\n  return CcoFoundationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}