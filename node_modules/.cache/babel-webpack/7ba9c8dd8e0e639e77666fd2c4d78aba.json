{"ast":null,"code":"'use strict';\n\nvar domify = require('min-dom').domify;\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n  cmdHelper = require('../helper/CmdHelper'),\n  escapeHTML = require('../Utils').escapeHTML;\nvar entryFieldDescription = require('./EntryFieldDescription');\nvar checkbox = function (translate, options, defaultParameters) {\n  var resource = defaultParameters,\n    id = resource.id,\n    label = options.label || id,\n    canBeDisabled = !!options.disabled && typeof options.disabled === 'function',\n    canBeHidden = !!options.hidden && typeof options.hidden === 'function',\n    description = options.description;\n  resource.html = domify('<input id=\"camunda-' + escapeHTML(id) + '\" ' + 'type=\"checkbox\" ' + 'name=\"' + escapeHTML(options.modelProperty) + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + ' />' + '<label for=\"camunda-' + escapeHTML(id) + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + '>' + escapeHTML(label) + '</label>');\n\n  // add description below checkbox entry field\n  if (description) {\n    resource.html.appendChild(entryFieldDescription(translate, description, {\n      show: canBeHidden && 'isHidden'\n    }));\n  }\n  resource.get = function (element) {\n    var bo = getBusinessObject(element),\n      res = {};\n    res[options.modelProperty] = bo.get(options.modelProperty);\n    return res;\n  };\n  resource.set = function (element, values) {\n    var res = {};\n    res[options.modelProperty] = !!values[options.modelProperty];\n    return cmdHelper.updateProperties(element, res);\n  };\n  if (typeof options.set === 'function') {\n    resource.set = options.set;\n  }\n  if (typeof options.get === 'function') {\n    resource.get = options.get;\n  }\n  if (canBeDisabled) {\n    resource.isDisabled = function () {\n      return options.disabled.apply(resource, arguments);\n    };\n  }\n  if (canBeHidden) {\n    resource.isHidden = function () {\n      return !options.hidden.apply(resource, arguments);\n    };\n  }\n  resource.cssClasses = ['bpp-checkbox'];\n  return resource;\n};\nmodule.exports = checkbox;","map":null,"metadata":{},"sourceType":"script"}