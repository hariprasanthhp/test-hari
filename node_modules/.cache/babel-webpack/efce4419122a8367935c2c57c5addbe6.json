{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport customEvents from 'highcharts-custom-events';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"highcharts-angular\";\ncustomEvents(Highcharts);\nexport let BarChartComponent = /*#__PURE__*/(() => {\n  class BarChartComponent {\n    // chartOptions = {\n    //   chart: {\n    //     type: 'bar'\n    //   },\n    //   title: {\n    //     text: \"Monthly Site Visitor\"\n    //   },\n    //   xAxis: {\n    //     categories: ['Africa', 'America', 'Asia', 'Europe'],\n    //     title: {\n    //       text: null\n    //     }\n    //   },\n    //   yAxis: {\n    //     min: 0,\n    //     labels: {\n    //       overflow: 'justify'\n    //     }\n    //   },\n    //   credits: {\n    //     enabled: false\n    //   },\n    //   series: this.data\n    // };\n    constructor() {\n      // highCharts = Highcharts;\n      this.barChartOptions = {};\n      this.type = {};\n      this.chartOptions = {};\n      this.updateFlag = true;\n      this.data = [{\n        name: 'Downstream',\n        data: [107, 31, 635, 203, 2]\n      }];\n      this.highcharts = Highcharts;\n    }\n    ngOnInit() {\n      this.update = this.updateFlag;\n    }\n    ngOnChanges(changes) {\n      if (changes.chartOptions && changes.chartOptions.currentValue) {\n        this.barChartOptions = Object.assign({}, this.chartOptions);\n        this.updateFlag = true;\n        this.update = true;\n      }\n    }\n    chartCallback(chart) {}\n  }\n  BarChartComponent.ɵfac = function BarChartComponent_Factory(t) {\n    return new (t || BarChartComponent)();\n  };\n  BarChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BarChartComponent,\n    selectors: [[\"app-bar-chart\"]],\n    inputs: {\n      type: \"type\",\n      chartOptions: \"chartOptions\",\n      updateFlag: \"updateFlag\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 4,\n    consts: [[2, \"width\", \"100%\", \"display\", \"block\", 3, \"Highcharts\", \"options\", \"update\", \"callbackFunction\", \"updateChange\"]],\n    template: function BarChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"highcharts-chart\", 0);\n        i0.ɵɵlistener(\"updateChange\", function BarChartComponent_Template_highcharts_chart_updateChange_0_listener($event) {\n          return ctx.update = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"Highcharts\", ctx.highcharts)(\"options\", ctx.barChartOptions)(\"update\", ctx.update)(\"callbackFunction\", ctx.chartCallback);\n      }\n    },\n    directives: [i1.HighchartsChartComponent],\n    styles: [\"\"]\n  });\n  return BarChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}