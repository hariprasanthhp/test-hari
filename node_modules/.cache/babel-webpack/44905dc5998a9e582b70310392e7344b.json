{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"src/app/flow-config/services/common-functions.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-datatables\";\nimport * as i7 from \"@ng-select/ng-select\";\nfunction AclForRemoteAccessComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"The Access control IP addresses below will be allowed to remotely access the GigaSpire EWI\"], \". \");\n  }\n}\nfunction AclForRemoteAccessComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[\"The VoIP Switch IP addresses below will be allowed to manage the GigaSpire VoIP Gateway\"], \". \");\n  }\n}\nfunction AclForRemoteAccessComponent_input_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 21);\n  }\n}\nfunction AclForRemoteAccessComponent_input_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 22);\n  }\n}\nfunction AclForRemoteAccessComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.form.get(ctx_r4.formType).value.RemoteAcl ? ctx_r4.language[\"enabled\"] : ctx_r4.language[\"Disabled\"], \" \");\n  }\n}\nfunction AclForRemoteAccessComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.form.get(ctx_r5.formType).value.SipAcl ? ctx_r5.language[\"enabled\"] : ctx_r5.language[\"Disabled\"], \" \");\n  }\n}\nfunction AclForRemoteAccessComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"span\", 24);\n    i0.ɵɵlistener(\"click\", function AclForRemoteAccessComponent_tr_35_Template_span_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const ruleIndex_r11 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.deleteRule(ruleIndex_r11);\n    });\n    i0.ɵɵelement(9, \"i\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r10.IPAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r10.Type == \"IPv4\" ? ctx_r6.language[\"ipv4\"] : ctx_r6.language[\"ipv6\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.language[item_r10.action]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"title\", ctx_r6.language[\"delete\"]);\n  }\n}\nfunction AclForRemoteAccessComponent_tr_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.language[\"No data available in table\"]);\n  }\n}\nfunction AclForRemoteAccessComponent_ng_template_37_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function AclForRemoteAccessComponent_ng_template_37_div_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.rule.Type = $event;\n    })(\"change\", function AclForRemoteAccessComponent_ng_template_37_div_11_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.validateIpAddress();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r15.rule.Type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r15.language[\"ipv6\"]);\n  }\n}\nfunction AclForRemoteAccessComponent_ng_template_37_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r16.language[\"Please enter the valid IP Address\"], \".\");\n  }\n}\nfunction AclForRemoteAccessComponent_ng_template_37_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r17.language[\"IP Address already exists\"], \".\");\n  }\n}\nfunction AclForRemoteAccessComponent_ng_template_37_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r18.language[\"This field is required\"], \".\");\n  }\n}\nfunction AclForRemoteAccessComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AclForRemoteAccessComponent_ng_template_37_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const modal_r14 = restoredCtx.$implicit;\n      return modal_r14.dismiss();\n    });\n    i0.ɵɵelement(3, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 30);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 31);\n    i0.ɵɵelementStart(7, \"div\", 32);\n    i0.ɵɵelementStart(8, \"input\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function AclForRemoteAccessComponent_ng_template_37_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.rule.Type = $event;\n    })(\"change\", function AclForRemoteAccessComponent_ng_template_37_Template_input_change_8_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.validateIpAddress();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 34);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, AclForRemoteAccessComponent_ng_template_37_div_11_Template, 4, 2, \"div\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 36);\n    i0.ɵɵelementStart(13, \"label\", 37);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementStart(15, \"span\", 38);\n    i0.ɵɵtext(16, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function AclForRemoteAccessComponent_ng_template_37_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.rule.IPAddress = $event;\n    })(\"ngModelChange\", function AclForRemoteAccessComponent_ng_template_37_Template_input_ngModelChange_17_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.validateIpAddress();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, AclForRemoteAccessComponent_ng_template_37_div_18_Template, 3, 1, \"div\", 40);\n    i0.ɵɵtemplate(19, AclForRemoteAccessComponent_ng_template_37_div_19_Template, 3, 1, \"div\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 36);\n    i0.ɵɵelementStart(21, \"label\", 37);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementStart(23, \"span\", 38);\n    i0.ɵɵtext(24, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 41);\n    i0.ɵɵlistener(\"ngModelChange\", function AclForRemoteAccessComponent_ng_template_37_Template_ng_select_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.rule.action = $event;\n    });\n    i0.ɵɵelementStart(26, \"ng-option\", 42);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"ng-option\", 43);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, AclForRemoteAccessComponent_ng_template_37_div_30_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 3);\n    i0.ɵɵelementStart(32, \"div\", 44);\n    i0.ɵɵelementStart(33, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function AclForRemoteAccessComponent_ng_template_37_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.addRule();\n    });\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function AclForRemoteAccessComponent_ng_template_37_Template_button_click_35_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.modalService.dismissAll();\n    });\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language[\"ACL Rule\"], \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"Version\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.rule.Type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"ipv4\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.formType == \"aclForRemoteAccessForm\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"IPAddress\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.rule.IPAddress)(\"placeholder\", ctx_r9.language[\"Enter IP Address\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.IpAddressError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.duplicateIpAddressError);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"Action\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.rule.action)(\"placeholder\", ctx_r9.language[\"select_value\"])(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"add\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"delete\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.rule.action && ctx_r9.formTouched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"addRule\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language[\"Cancel\"], \" \");\n  }\n}\nexport let AclForRemoteAccessComponent = /*#__PURE__*/(() => {\n  class AclForRemoteAccessComponent {\n    constructor(formBuilder, modalService, parent, translateService, commonFunctionsService) {\n      this.formBuilder = formBuilder;\n      this.modalService = modalService;\n      this.parent = parent;\n      this.translateService = translateService;\n      this.commonFunctionsService = commonFunctionsService;\n      this.dtOptions = {};\n      this.IpAddressError = false;\n      this.duplicateIpAddressError = false;\n      this.formType = '';\n      this.rule = {\n        Type: 'IPv4',\n        IPAddress: ''\n      };\n      this.rules = [];\n      this.sortingId = '';\n      this.formTouched = false;\n    }\n    set selectedCategoryName(value) {\n      this.formType = value === 'ACL Entry for Remote Access' ? 'aclForRemoteAccessForm' : 'aclForVoipForm';\n      this.form = this.parent.form;\n      this.initForm();\n      this.initSorting();\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.dtOptions = {\n        paging: false,\n        searching: false,\n        info: false,\n        ordering: true,\n        serverSide: true,\n        processing: false,\n        responsive: true,\n        order: [],\n        dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          if (!dataTablesParameters.order[0]) return;\n          this.initSorting();\n          let dir = dataTablesParameters.order[0].dir;\n          let columnName = '';\n          let id = '';\n          if (dataTablesParameters.order[0].column == 0) {\n            columnName = 'IPAddress';\n            id = 'ip-addresses';\n          } else if (dataTablesParameters.order[0].column == 1) {\n            columnName = 'Type';\n            id = 'version';\n          } else {\n            columnName = 'action';\n            id = 'action';\n          }\n          this.rules = _.orderBy(this.rules, columnName, dir);\n          if (this.rules.length) this.setSortDirection(id, dir);\n          callback({\n            recordsTotal: this.rules.length,\n            recordsFiltered: this.rules.length,\n            data: [],\n            draw: 1\n          });\n        },\n        columns: [{\n          data: \"IpAddress\"\n        }, {\n          data: \"Type\"\n        }, {\n          data: \"action\"\n        }]\n      };\n    }\n    initSorting() {\n      if (this.sortingId) {\n        document.getElementById(this.sortingId).classList.add('sorting');\n        document.getElementById(this.sortingId).classList.remove('sorting_asc', 'sorting_desc');\n      }\n    }\n    setSortDirection(id, dir) {\n      let addDir = dir == 'asc' ? 'sorting_asc' : 'sorting_desc';\n      let removeDir = dir == 'asc' ? 'sorting_desc' : 'sorting_asc';\n      this.sortingId = id;\n      document.getElementById(id).classList.remove('sorting');\n      document.getElementById(id).classList.remove(removeDir);\n      document.getElementById(id).classList.add(addDir);\n    }\n    initForm() {\n      if (this.formType === 'aclForRemoteAccessForm') {\n        this.form.get(this.formType).patchValue({\n          RemoteAcl: false\n        });\n      } else {\n        this.form.get(this.formType).patchValue({\n          SipAcl: false\n        });\n      }\n      this.form.get(this.formType).patchValue({\n        list4: [],\n        list6: []\n      });\n      this.rules = [];\n    }\n    get ipv4FormArray() {\n      return this.form.get(this.formType).get('list4');\n    }\n    get ipv6FormArray() {\n      return this.form.get(this.formType).get('list6');\n    }\n    addRule() {\n      this.formTouched = true;\n      if (this.validateIpAddress()) {\n        if (!this.duplicateIpAddressError) this.IpAddressError = true;\n        return;\n      }\n      if (!this.rule.action) return;\n      this.patchRule(this.rule);\n      this.initSorting();\n      this.formTouched = false;\n      this.modalService.dismissAll();\n    }\n    patchRule(rule) {\n      let ruleFormGroup = this.formBuilder.group({\n        Type: this.formType == 'aclForRemoteAccessForm' ? 'remoteaccess' : 'sip',\n        IPAddress: rule.IPAddress,\n        action: rule.action\n      });\n      rule.Type == 'IPv4' ? this.ipv4FormArray.push(ruleFormGroup) : this.ipv6FormArray.push(ruleFormGroup);\n      this.rules.push(rule);\n    }\n    deleteRule(ruleIndex) {\n      if (this.rules[ruleIndex].Type === 'IPv4') {\n        this.ipv4FormArray.removeAt(this.ipv4FormArray.value.findIndex(obj => obj.IPAddress == this.rules[ruleIndex].IPAddress));\n      } else {\n        this.ipv6FormArray.removeAt(this.ipv6FormArray.value.findIndex(obj => obj.IPAddress == this.rules[ruleIndex].IPAddress));\n      }\n      this.rules.splice(ruleIndex, 1);\n    }\n    validateIpAddress() {\n      if (!this.formTouched) return;\n      this.IpAddressError = false;\n      this.duplicateIpAddressError = false;\n      let ip = this.rule.IPAddress.trim();\n      this.rule.IPAddress = ip;\n      if (!this.rule.IPAddress) {\n        this.IpAddressError = true;\n        return true;\n      }\n      if (this.rule.Type === 'IPv6') {\n        // let checkIPv6 = /(?:^|(?<=\\s))(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(?=\\s|$)/;\n        // let checkIPv6 = /(^|\\s)(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,6}:(((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|[/][\\d]{1,2})(([/][\\d]{1,2})?)|(([0-9a-fA-F]{1,4}[/])[\\d]{1,2}[0-9]{1,2}))(?=\\s|$)/;\n        // let checkIPv6 = /^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){6}:[0-9a-fA-F]{1,4}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){5}(?::[0-9a-fA-F]{1,4}){1,2}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){4}(?::[0-9a-fA-F]{1,4}){1,3}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){3}(?::[0-9a-fA-F]{1,4}){1,4}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){2}(?::[0-9a-fA-F]{1,4}){1,5}(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){1}(?::[0-9a-fA-F]{1,4}){1,6}(?:\\/\\d{1,3})?$|^(?::[0-9a-fA-F]{1,4}){1,7}(?:\\/\\d{1,3})?$|^::$|^::1(?:\\/\\d{1,3})?$|^(?:[0-9a-fA-F]{1,4}:){1,6}(?:[0-9a-fA-F]{1,4}:)?(?:[0-9a-fA-F]{0,4}:)?(?:[0-9a-fA-F]{0,4}:)?(?:[0-9a-fA-F]{0,4}:)?(?:[0-9a-fA-F]{0,4}:)?(?:[0-9a-fA-F]{0,4}:)?\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(?:\\/\\d{1,3})?$/;\n        // this.IpAddressError = !checkIPv6.test(ip);\n        let checkIPv4added = /^([0-9a-fA-F]{1,4}:){6}((([0-9a-fA-F]{1,4}:){1,4}[0-9a-fA-F]{1,4})|(([0-9]{1,3}\\.){3}[0-9]{1,3}))$/;\n        this.IpAddressError = !this.commonFunctionsService.isValidIpV6Addr(ip) && !this.commonFunctionsService.isValidSubnetV6(ip) && !checkIPv4added.test(ip);\n      } else {\n        this.IpAddressError = !this.commonFunctionsService.isValidIpV4Addr(ip);\n      }\n      if (!this.IpAddressError) {\n        return this.duplicateIpAddressCheck(ip);\n      } else {\n        return this.IpAddressError;\n      }\n    }\n    duplicateIpAddressCheck(ip) {\n      let duplicateIpAddress = this.rules.find(rule => rule.IPAddress === ip);\n      this.duplicateIpAddressError = !!duplicateIpAddress;\n      return this.duplicateIpAddressError;\n    }\n    openaclModal(modal) {\n      this.IpAddressError = false;\n      this.duplicateIpAddressError = false;\n      this.formTouched = false;\n      this.rule = {\n        Type: 'IPv4',\n        IPAddress: ''\n      };\n      this.modalService.open(modal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'acl-custom-modal'\n      });\n    }\n  }\n  AclForRemoteAccessComponent.ɵfac = function AclForRemoteAccessComponent_Factory(t) {\n    return new (t || AclForRemoteAccessComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i1.FormGroupDirective), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.CommonFunctionsService));\n  };\n  AclForRemoteAccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AclForRemoteAccessComponent,\n    selectors: [[\"acl-for-remote-access\"]],\n    viewQuery: function AclForRemoteAccessComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    inputs: {\n      selectedCategoryName: \"selectedCategoryName\"\n    },\n    decls: 39,\n    vars: 16,\n    consts: [[1, \"mb-16\"], [3, \"formGroup\"], [3, \"formGroupName\"], [1, \"row\"], [1, \"col-md-12\"], [4, \"ngIf\"], [1, \"col-md-2\"], [1, \"col-md-3\"], [1, \"checkbox\", \"switcher\"], [\"for\", \"backgroundSiteScanCheckBox\"], [\"type\", \"checkbox\", \"name\", \"backgroundSiteScan\", \"formControlName\", \"RemoteAcl\", \"id\", \"backgroundSiteScanCheckBox\", 4, \"ngIf\"], [\"type\", \"checkbox\", \"name\", \"backgroundSiteScan\", \"formControlName\", \"SipAcl\", \"id\", \"backgroundSiteScanCheckBox\", 4, \"ngIf\"], [\"class\", \"mx-2\", 4, \"ngIf\"], [\"type\", \"button\", \"id\", \"btn-newRule\", 1, \"btn-default\", \"primary\", \"px-3\", \"mr-2\", 3, \"click\"], [1, \"acl-table\"], [\"id\", \"scrolldi\", \"datatable\", \"\", 1, \"row-border\", \"hover\", 3, \"dtOptions\"], [\"id\", \"ip-addresses\"], [\"id\", \"version\"], [\"id\", \"action\"], [4, \"ngFor\", \"ngForOf\"], [\"aclModal\", \"\"], [\"type\", \"checkbox\", \"name\", \"backgroundSiteScan\", \"formControlName\", \"RemoteAcl\", \"id\", \"backgroundSiteScanCheckBox\"], [\"type\", \"checkbox\", \"name\", \"backgroundSiteScan\", \"formControlName\", \"SipAcl\", \"id\", \"backgroundSiteScanCheckBox\"], [1, \"mx-2\"], [1, \"delete\", \"primary\", \"pointer\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash-o\"], [\"colspan\", \"3\", 1, \"no-data-available\"], [1, \"acl-custom-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"\"], [1, \"d-flex\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"Type\", \"id\", \"inlineRadio1\", \"value\", \"IPv4\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"inlineRadio1\", 1, \"form-check-label\"], [\"class\", \"form-check form-check-inline\", 4, \"ngIf\"], [1, \"form-group\", \"ccl-form\"], [\"for\", \"IPAddress\"], [1, \"error\"], [\"type\", \"text\", \"id\", \"IPAddress\", \"aria-describedby\", \"IPAddress\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [\"bindLabel\", \"label\", \"bindValue\", \"value\", 3, \"ngModel\", \"placeholder\", \"searchable\", \"ngModelChange\"], [\"value\", \"add\"], [\"value\", \"delete\"], [1, \"col-md-8\"], [\"type\", \"button\", 1, \"btn-default\", \"btn-primary\", \"mr-3\", 3, \"click\"], [\"type\", \"button\", \"id\", \"\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [\"type\", \"radio\", \"name\", \"Type\", \"id\", \"inlineRadio2\", \"value\", \"IPv6\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"inlineRadio2\", 1, \"form-check-label\"], [1, \"errorMessage\"], [1, \"mandatory-msg\"]],\n    template: function AclForRemoteAccessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r31 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, AclForRemoteAccessComponent_p_5_Template, 2, 1, \"p\", 5);\n        i0.ɵɵtemplate(6, AclForRemoteAccessComponent_p_6_Template, 2, 1, \"p\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtemplate(13, AclForRemoteAccessComponent_input_13_Template, 1, 0, \"input\", 10);\n        i0.ɵɵtemplate(14, AclForRemoteAccessComponent_input_14_Template, 1, 0, \"input\", 11);\n        i0.ɵɵelementStart(15, \"span\");\n        i0.ɵɵelement(16, \"small\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, AclForRemoteAccessComponent_span_17_Template, 2, 1, \"span\", 12);\n        i0.ɵɵtemplate(18, AclForRemoteAccessComponent_span_18_Template, 2, 1, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AclForRemoteAccessComponent_Template_button_click_21_listener() {\n          i0.ɵɵrestoreView(_r31);\n          const _r8 = i0.ɵɵreference(38);\n          return ctx.openaclModal(_r8);\n        });\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵelementStart(24, \"table\", 15);\n        i0.ɵɵelementStart(25, \"thead\");\n        i0.ɵɵelementStart(26, \"tr\");\n        i0.ɵɵelementStart(27, \"th\", 16);\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\", 17);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\", 18);\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"th\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"tbody\");\n        i0.ɵɵtemplate(35, AclForRemoteAccessComponent_tr_35_Template, 10, 4, \"tr\", 19);\n        i0.ɵɵtemplate(36, AclForRemoteAccessComponent_tr_36_Template, 3, 1, \"tr\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, AclForRemoteAccessComponent_ng_template_37_Template, 37, 19, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroupName\", ctx.formType);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForRemoteAccessForm\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForVoipForm\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Enable ACL\"], \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForRemoteAccessForm\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForVoipForm\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForRemoteAccessForm\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formType == \"aclForVoipForm\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"New Rule\"], \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language[\"IP Addresses\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language[\"Version\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language[\"Action\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rules);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.rules.length);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormGroupName, i5.NgIf, i6.DataTableDirective, i5.NgForOf, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.NgModel, i7.NgSelectComponent, i7.ɵr],\n    styles: [\"div.checkbox.switcher[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]{float:left}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding:0;cursor:pointer}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{vertical-align:middle}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{position:relative;display:inline-block;width:45px;height:25px;background:#ffffff;border:1px solid #0279ff;border-radius:50px;transition:all .3s ease-in-out;padding:5px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{position:absolute;display:block;width:20px;height:19px;background:#0279ff;border-radius:50%;transition:all .3s ease-in-out;left:2px;top:2px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]{background:#0279ff;border-color:#0279ff}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{left:50%;background:#ffffff}  .acl-custom-modal.modal.fade .modal-dialog{max-width:580px!important}  .acl-custom-modal.modal.fade .modal-dialog .modal-content{padding:42px}  .acl-custom-modal.modal.fade .modal-dialog .modal-content .acl-custom-title{font-weight:300;font-size:42px;line-height:53px;margin-bottom:24px}.mb-16[_ngcontent-%COMP%]{margin-bottom:16px}[_nghost-%COMP%]     .dataTables_empty{display:none}.no-data-available[_ngcontent-%COMP%]{text-align:center}.acl-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #CCCCCC!important}.acl-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;font-size:16px;line-height:20px;color:#1a1f22;padding-bottom:7px}.acl-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-weight:400;font-size:15px;line-height:24px;color:#333}.btn-default.btn-dft[_ngcontent-%COMP%]{max-height:32px}\"]\n  });\n  return AclForRemoteAccessComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}