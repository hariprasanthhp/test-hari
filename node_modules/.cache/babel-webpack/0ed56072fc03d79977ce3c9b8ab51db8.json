{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../shared/services/explore-data-common.service\";\nimport * as i3 from \"src/app/marketing/shared/services/marketing-api.sevice\";\nimport * as i4 from \"../shared/services/download-file-name.service\";\nimport * as i5 from \"src/app-services/translate.service\";\nexport let MarketingExploreDataSubscriberApiService = /*#__PURE__*/(() => {\n  class MarketingExploreDataSubscriberApiService {\n    constructor(httpClient, marketingExploreCommonService, marketingApiService, downloadFileNameService, translateService) {\n      this.httpClient = httpClient;\n      this.marketingExploreCommonService = marketingExploreCommonService;\n      this.marketingApiService = marketingApiService;\n      this.downloadFileNameService = downloadFileNameService;\n      this.translateService = translateService;\n      this.baseURL = environment.cmcBaseURL;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.activeSubsriber = this.baseURL + 'insights/total-active-subscribers?';\n      this.segmentUserSummary = this.baseURL + 'target-segmentation/user-counts?';\n      this.subscriberDataUsage = this.baseURL + 'insights/total-bandwidth-consumed?';\n      this.streamingSubscribers = this.baseURL + 'target-segmentation/service-tier-counts-by-user-type?';\n      this.gamingSubscribers = this.baseURL + 'target-segmentation/service-tier-counts-by-user-type?';\n      this.wfhSubscribers = this.baseURL + 'target-segmentation/service-tier-counts-by-user-type?';\n      this.subscriberActivityTrends = this.baseURL + 'insights/subscriber-trends-by-application-group?';\n      this.dataUsageTrends = this.baseURL + 'insights/total-and-streaming-usage-trend?';\n      this.devicePerHouseHold = this.baseURL + 'insights/connected-device-number-distribution?';\n      // DRILL DOWN\n      this.subscriberDataUsageDrillDown = this.baseURL + 'insights/user-list-by-usage?';\n      this.streamingSubscribersDrillDown = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.gamingSubscribersDrillDown = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.wfhSubscribersDrillDown = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.devicePerHouseHoldDrillDown = this.baseURL + 'insights/user-list-by-connected-device-number?';\n      // DRILL DOWN EXPORT\n      this.subscriberDataUsageDrillDownExport = this.baseURL + 'insights/user-list-by-usage?';\n      this.streamingSubscribersDrillDownExport = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.gamingSubscribersDrillDownExport = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.wfhSubscribersDrillDownExport = this.baseURL + 'insights/user-list-by-tier-and-group?';\n      this.deviceHouseholdExport = this.baseURL + 'insights/user-list-by-connected-device-number?';\n    }\n    ActiveSubsriber() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(this.activeSubsriber));\n    }\n    getActiveSubscribersCount() {\n      return sessionStorage.getItem('activeSubscribers');\n    }\n    SegmentationUserSummary() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(this.segmentUserSummary));\n    }\n    SubscriberDataUsage() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.subscriberDataUsage}categories=75-200-500-1000-2000-3000&`));\n    }\n    StreamingSubscribers() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.streamingSubscribers}type=streaming&`));\n    }\n    StreamingSubscribersDownload() {\n      return this.marketingExploreCommonService.queryParamsAssigner(`${this.streamingSubscribers}type=streaming&`);\n    }\n    GamingSubscribers() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.gamingSubscribers}type=gaming&`));\n    }\n    WfhSubscribers() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.wfhSubscribers}type=wfh&`));\n    }\n    SubscriberActivityTrends() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.subscriberActivityTrends}month=6&`));\n    }\n    DataUsageTrends() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.dataUsageTrends}month=6&`));\n    }\n    DevicePerHouseHold() {\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(this.devicePerHouseHold));\n    }\n    // DRILL DOWN\n    SubscriberDataUsageDrillDown(clickData) {\n      let tier = clickData.tier.replace('+', '');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.subscriberDataUsageDrillDown}category=${tier}&page=${clickData.page}&size=${clickData.size}&refresh=true&`));\n    }\n    StreamingSubscribersDrillDown(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.streamingSubscribersDrillDown}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=streaming&page=${clickData.page}&size=${clickData.size}&`));\n    }\n    GamingSubscribersDrillDown(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.gamingSubscribersDrillDown}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=gaming&page=${clickData.page}&size=${clickData.size}&`));\n    }\n    WfhSubscribersDrillDown(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.wfhSubscribersDrillDown}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=wfh&page=${clickData.page}&size=${clickData.size}&`));\n    }\n    DevicePerHouseHoldDrillDown(clickData) {\n      let tier = clickData.tier.replace('+', '');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.devicePerHouseHoldDrillDown}category=${tier}&page=${clickData.page}&size=${clickData.size}&`));\n    }\n    // DRILL DOWN EXPORT\n    SubscriberDataUsageDrillDownExport(clickData) {\n      let tier = clickData.tier.replace('+', '');\n      return this.httpClient.get(this.marketingExploreCommonService.queryParamsAssigner(`${this.subscriberDataUsageDrillDownExport}category=${tier}&page=1&size=${clickData.yValue}&`));\n    }\n    StreamingSubscribersDrillDownExport(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      // let fileNameTier = clickData.tier.replace('+', '');\n      let fileNameTier = clickData.tier.replace('<', 'lt');\n      // let sym = '<';\n      // let char = '';\n      // if (clickData.tier.includes(sym)) {\n      //   char = clickData.tier.replace('<', 'lt');\n      // }\n      // console.log(char);\n      // let symbol = \"LT\";\n      // fileNameTier = +symbol;\n      // console.log(fileNameTier);\n      let fileName = this.downloadFileNameService.generateDownloadNameForDrillDown(`${this.language.streaming_subscribers}-${fileNameTier}-${clickData.tech.toLowerCase()}`);\n      let downloadURL = this.marketingExploreCommonService.queryParamsAssigner(`${this.streamingSubscribersDrillDownExport}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=streaming&filename=streaming-subscribers-${fileNameTier}-streaming&`);\n      return {\n        downloadURL: downloadURL,\n        fileName: fileName\n      };\n    }\n    GamingSubscribersDrillDownExport(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      // let fileNameTier = clickData.tier.replace('+', '');\n      let fileNameTier = clickData.tier.replace('<', 'lt');\n      // let sym = '<';\n      // let char = '';\n      // if (clickData.tier.includes(sym)) {\n      //   char = clickData.tier.replace('<', 'lt');\n      // }\n      // console.log(char);\n      let fileName = this.downloadFileNameService.generateDownloadNameForDrillDown(`${this.language.gaming_subscribers}-${fileNameTier}-${clickData.tech.toLowerCase()}`);\n      let downloadURL = this.marketingExploreCommonService.queryParamsAssigner(`${this.gamingSubscribersDrillDownExport}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=gaming&filename=gaming-subscribers-${fileNameTier}-gaming&`);\n      return {\n        downloadURL: downloadURL,\n        fileName: fileName\n      };\n    }\n    WfhSubscribersDrillDownExport(clickData) {\n      let tier = clickData.tier.replace('+', '%2B');\n      // let fileNameTier = clickData.tier.replace('+', '');\n      let fileNameTier = clickData.tier.replace('<', 'lt');\n      // let sym = '<';\n      // let char = '';\n      // if (clickData.tier.includes(sym)) {\n      //   char = clickData.tier.replace('<', 'lt');\n      // }\n      // console.log(char);\n      let fileName = this.downloadFileNameService.generateDownloadNameForDrillDown(`${this.language.work_from_home_subscribers}-${fileNameTier}-${clickData.tech.toLowerCase()}`);\n      let downloadURL = this.marketingExploreCommonService.queryParamsAssigner(`${this.wfhSubscribersDrillDownExport}tier=${tier}&reverse=${this.reverseCheck(clickData)}&group=wfh&filename=wfh-subscribers-${fileNameTier}-wfh&`);\n      return {\n        downloadURL: downloadURL,\n        fileName: fileName\n      };\n    }\n    DeviceHouseholdDrillDownExport(clickData) {\n      let tier = clickData.tier.replace('+', '');\n      let fileName = this.downloadFileNameService.generateDownloadNameForDrillDown(`${this.language.devices_per_household}-${clickData.tier}`);\n      let downloadURL = this.marketingExploreCommonService.queryParamsAssigner(`${this.deviceHouseholdExport}category=${tier}&filename=devices-per-household-${clickData.tier}&`);\n      return {\n        downloadURL: downloadURL,\n        fileName: fileName\n      };\n    }\n    reverseCheck(clickData) {\n      return clickData.tech.includes('Non' || 'non') ? true : false;\n    }\n  }\n  MarketingExploreDataSubscriberApiService.ɵfac = function MarketingExploreDataSubscriberApiService_Factory(t) {\n    return new (t || MarketingExploreDataSubscriberApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MarketingExploreCommonService), i0.ɵɵinject(i3.MarketingApiService), i0.ɵɵinject(i4.DownloadFileNameService), i0.ɵɵinject(i5.TranslateService));\n  };\n  MarketingExploreDataSubscriberApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketingExploreDataSubscriberApiService,\n    factory: MarketingExploreDataSubscriberApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarketingExploreDataSubscriberApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}