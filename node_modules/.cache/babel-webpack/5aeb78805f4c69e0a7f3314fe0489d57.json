{"ast":null,"code":"import { is } from '../../util/ModelUtil';\nimport { isExpanded } from '../../util/DiUtil';\nvar LABEL_WIDTH = 30,\n  LABEL_HEIGHT = 30;\n\n/**\n * BPMN-specific hit zones and interaction fixes.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\nexport default function BpmnInteractionEvents(eventBus, interactionEvents) {\n  this._interactionEvents = interactionEvents;\n  var self = this;\n  eventBus.on(['interactionEvents.createHit', 'interactionEvents.updateHit'], function (context) {\n    var element = context.element,\n      gfx = context.gfx;\n    if (is(element, 'bpmn:Lane')) {\n      return self.createParticipantHit(element, gfx);\n    } else if (is(element, 'bpmn:Participant')) {\n      if (isExpanded(element)) {\n        return self.createParticipantHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    } else if (is(element, 'bpmn:SubProcess')) {\n      if (isExpanded(element)) {\n        return self.createSubProcessHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    }\n  });\n}\nBpmnInteractionEvents.$inject = ['eventBus', 'interactionEvents'];\nBpmnInteractionEvents.prototype.createDefaultHit = function (element, gfx) {\n  this._interactionEvents.removeHits(gfx);\n  this._interactionEvents.createDefaultHit(element, gfx);\n\n  // indicate that we created a hit\n  return true;\n};\nBpmnInteractionEvents.prototype.createParticipantHit = function (element, gfx) {\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: LABEL_WIDTH,\n    height: element.height\n  });\n\n  // indicate that we created a hit\n  return true;\n};\nBpmnInteractionEvents.prototype.createSubProcessHit = function (element, gfx) {\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: element.width,\n    height: LABEL_HEIGHT\n  });\n\n  // indicate that we created a hit\n  return true;\n};","map":null,"metadata":{},"sourceType":"module"}