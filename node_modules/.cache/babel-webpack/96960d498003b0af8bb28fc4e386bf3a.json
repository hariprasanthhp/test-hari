{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    //'X-Calix-Username': 'admin@calix.com'\n  })\n};\nexport let UsersDetailService = /*#__PURE__*/(() => {\n  class UsersDetailService {\n    constructor(httpClient, Sso) {\n      this.httpClient = httpClient;\n      this.Sso = Sso;\n      this.baseURL = environment.calixAdminURL;\n      this.org_id = environment.faAdminOrgId;\n      this.user = this.baseURL + 'user';\n      this.acl = this.baseURL + 'useracl';\n      this.roles = this.baseURL + `roles`;\n    }\n    UpdatePasswordByUserId(params, userId) {\n      //Not working Now\n      return this.httpClient.post(`${this.user}/${userId}`, params, httpOptions);\n    }\n    AclListByUsername(username) {\n      //Not A proper API\n      return this.httpClient.get(`${this.baseURL}/useracl/${username}`, httpOptions);\n    }\n    UpdateAclListByUserEmail(params, userMail, orgId) {\n      //Not working Now\n      const ID = this.Sso.getOrg(orgId);\n      return this.httpClient.post(`${this.acl}/${userMail}?${ID}`, params, httpOptions);\n    }\n    RolesList() {\n      return this.httpClient.get(this.roles, httpOptions);\n    }\n    RolesListByUserId(userId) {\n      return this.httpClient.get(`${this.user}/${userId}/roles`, httpOptions);\n    }\n    UpdateRolesListByUserId(userId, rolesIds) {\n      return this.httpClient.post(`${this.user}/${userId}/roles/${rolesIds}`, {}, httpOptions);\n    }\n    callRestApi(endpoint, filters) {\n      return this.httpClient.get(`${endpoint}`, httpOptions).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n    DeleteAclListByUserEmail(username, orgId) {\n      const ID = this.Sso.getOrg(orgId);\n      return this.httpClient.delete(`${this.baseURL}useracl/${username}?${ID}`, httpOptions);\n    }\n    DeleteRolesListByUserId(userId) {\n      return this.httpClient.delete(`${this.user}/${userId}/roles`, httpOptions);\n    }\n    updateRolesListByGranteeUserId(url) {\n      return this.httpClient.post(`${url}`, {}, httpOptions);\n    }\n    deleteRolesListByGranteeUserId(url) {\n      return this.httpClient.delete(`${url}`, httpOptions);\n    }\n  }\n  UsersDetailService.ɵfac = function UsersDetailService_Factory(t) {\n    return new (t || UsersDetailService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  UsersDetailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersDetailService,\n    factory: UsersDetailService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsersDetailService;\n})();","map":null,"metadata":{},"sourceType":"module"}