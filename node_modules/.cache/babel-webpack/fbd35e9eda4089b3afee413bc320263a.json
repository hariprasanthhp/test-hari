{"ast":null,"code":"import inherits from 'inherits';\nimport { has } from 'min-dash';\nimport elementHelper from 'bpmn-js-properties-panel/lib/helper/ElementHelper';\nimport { getCalledElement } from '../../../helper/CalledElementHelper';\nimport { getBusinessObject, is } from 'bpmn-js/lib/util/ModelUtil';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nconst HIGH_PRIORITY = 15000;\n\n/**\n * BPMN specific create zeebe call activity behavior\n */\nexport default function CreateZeebeCallActivityBehavior(eventBus, bpmnFactory) {\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * add a zeebe:calledElement extensionElement with\n   * propagateAllChildVariables attribute = false when creating\n   * a bpmn:callActivity\n   */\n  this.postExecuted('shape.create', HIGH_PRIORITY, function (context) {\n    const {\n      shape\n    } = context;\n    if (!is(shape, 'bpmn:CallActivity')) {\n      return;\n    }\n    const bo = getBusinessObject(shape);\n\n    // Reuse ExtensionElement if existing\n    const extensionElements = bo.get('extensionElements') || elementHelper.createElement('bpmn:ExtensionElements', {\n      values: []\n    }, bo, bpmnFactory);\n\n    // Ensure we have a calledElement\n    let calledElement = getCalledElement(bo);\n    if (!calledElement) {\n      calledElement = bpmnFactory.create('zeebe:CalledElement', {});\n      calledElement.propagateAllChildVariables = false;\n      extensionElements.get('values').push(calledElement);\n      bo.extensionElements = extensionElements;\n\n      // Handle existing callActivities\n    } else if (!has(calledElement, 'propagateAllChildVariables')) {\n      calledElement.propagateAllChildVariables = false;\n    }\n  }, true);\n}\nCreateZeebeCallActivityBehavior.$inject = ['eventBus', 'bpmnFactory'];\ninherits(CreateZeebeCallActivityBehavior, CommandInterceptor);","map":null,"metadata":{},"sourceType":"module"}