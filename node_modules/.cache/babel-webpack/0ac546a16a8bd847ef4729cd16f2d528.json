{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CcoOperationsReportsService = /*#__PURE__*/(() => {\n  class CcoOperationsReportsService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    getMappedEndpointCount(orgId) {\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint?org-id=${orgId}&count=true`;\n      // let url = `${environment.faAdminCorrelatorURL}flowendpoint/select?org-id=${orgId}&whereclause=%20NOT%20deleted%20AND%20ip_address%20is%20NOT%20null%20AND%20ip_address%20!=%20%27%27&count=true`;\n      return this.httpClient.get(url);\n    }\n    getAllMappedEndpoints(orgId, page) {\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint?org-id=${orgId}&pagenumber=${page}&pagesize=1000&orderby=name`;\n      // let url = `${environment.faAdminCorrelatorURL}flowendpoint/select?org-id=${orgId}&pagenumber=${page}&pagesize=1000&whereclause=%20NOT%20deleted%20AND%20ip_address%20is%20NOT%20null%20AND%20ip_address%20!=%20%27%27`;\n      return this.httpClient.get(url);\n    }\n    getUnMappedIPsCount(orgId) {\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint/unmapped/count?org-id=${orgId}`;\n      // let url = `${environment.faAdminCorrelatorURL}flowendpoint/select?org-id=${orgId}&whereclause=%20NOT%20deleted%20AND%20ip_address%20is%20NOT%20null%20AND%20ip_address%20!=%20%27%27&count=true`;\n      return this.httpClient.get(url);\n    }\n    getAllUnMappedIPs(orgId, page) {\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint/unmapped?org-id=${orgId}&pagenumber=${page}&pagesize=1000`;\n      return this.httpClient.get(url);\n    }\n  }\n  CcoOperationsReportsService.ɵfac = function CcoOperationsReportsService_Factory(t) {\n    return new (t || CcoOperationsReportsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CcoOperationsReportsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CcoOperationsReportsService,\n    factory: CcoOperationsReportsService.ɵfac,\n    providedIn: 'root'\n  });\n  return CcoOperationsReportsService;\n})();","map":null,"metadata":{},"sourceType":"module"}