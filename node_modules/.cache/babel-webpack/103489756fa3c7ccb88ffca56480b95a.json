{"ast":null,"code":"import * as Highcharts from \"highcharts\";\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { StreamChartComponent } from 'src/app/cco/traffic/shared/stream-chart/stream-chart.component';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"src/app/cco/shared/services/websocket.service\";\nimport * as i4 from \"../service/nfainventory.service\";\nimport * as i5 from \"src/app/shared/services/convertor.service\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"../../service/health.service\";\nimport * as i10 from \"@angular/common/http\";\nimport * as i11 from \"src/app/sys-admin/services/common.service\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"@angular/forms\";\nimport * as i15 from \"../../../traffic/shared/stream-chart/stream-chart.component\";\nimport * as i16 from \"../../../traffic/shared/ponport-chart/ponport-chart.component\";\nconst _c0 = [\"showInfoModal\"];\nfunction RealtimeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \"\\n\");\n  }\n}\nfunction RealtimeComponent_div_1_ng_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r14 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", option_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.language[option_r14.name]);\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r15 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r15.name ? item_r15.name : item_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r15.name ? item_r15.name : item_r15, \" \");\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r16 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r16.name ? item_r16.name : item_r16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r16.name ? item_r16.name : item_r16, \" \");\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r17 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r17.name ? item_r17.name : item_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r17.name ? item_r17.name : item_r17, \" \");\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r18 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r18.name ? item_r18.name : item_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r18.name ? item_r18.name : item_r18, \" \");\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r19 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r19.name ? item_r19.name : item_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r19.name ? item_r19.name : item_r19, \" \");\n  }\n}\nfunction RealtimeComponent_div_1_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r20 = ctx.item;\n    i0.ɵɵpropertyInterpolate(\"title\", item_r20.name ? item_r20.name : item_r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r20.name ? item_r20.name : item_r20, \" \");\n  }\n}\nconst _c1 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction RealtimeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵelementStart(6, \"label\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 15);\n    i0.ɵɵelementStart(9, \"ng-select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.selectedOption = $event;\n    });\n    i0.ɵɵtemplate(10, RealtimeComponent_div_1_ng_option_10_Template, 2, 2, \"ng-option\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 13);\n    i0.ɵɵelementStart(12, \"label\", 14);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 18);\n    i0.ɵɵelementStart(15, \"ng-select\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.regionSelected = $event;\n    })(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.loadLocationValue($event);\n    });\n    i0.ɵɵtemplate(16, RealtimeComponent_div_1_ng_template_16_Template, 2, 2, \"ng-template\", 20);\n    i0.ɵɵtemplate(17, RealtimeComponent_div_1_ng_template_17_Template, 2, 2, \"ng-template\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 13);\n    i0.ɵɵelementStart(19, \"label\", 14);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 22);\n    i0.ɵɵelementStart(22, \"ng-select\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.locationSelected = $event;\n    })(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.loadSystemValue($event);\n    });\n    i0.ɵɵtemplate(23, RealtimeComponent_div_1_ng_template_23_Template, 2, 2, \"ng-template\", 20);\n    i0.ɵɵtemplate(24, RealtimeComponent_div_1_ng_template_24_Template, 2, 2, \"ng-template\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 13);\n    i0.ɵɵelementStart(26, \"label\", 14);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 24);\n    i0.ɵɵelementStart(29, \"ng-select\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.systemSelected = $event;\n    })(\"ngModelChange\", function RealtimeComponent_div_1_Template_ng_select_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.selectSystem($event);\n    });\n    i0.ɵɵtemplate(30, RealtimeComponent_div_1_ng_template_30_Template, 2, 2, \"ng-template\", 20);\n    i0.ɵɵtemplate(31, RealtimeComponent_div_1_ng_template_31_Template, 2, 2, \"ng-template\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 26);\n    i0.ɵɵelementStart(33, \"div\", 27);\n    i0.ɵɵelementStart(34, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_1_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.applyFilter();\n    });\n    i0.ɵɵtext(35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\", 29);\n    i0.ɵɵelementStart(37, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_1_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.clearFilter();\n    });\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.TTimeFrame, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r1.language.interval);\n    i0.ɵɵproperty(\"searchable\", false)(\"ngModel\", ctx_r1.selectedOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ddoptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.language.region, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r1.language.region);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.regionSelected)(\"items\", ctx_r1.regionsDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(28, _c1))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.language.Location, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r1.language.Location);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.locationSelected)(\"items\", ctx_r1.locationDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(29, _c1))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.language.System);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r1.language.System);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.systemSelected)(\"items\", ctx_r1.systemDataArray)(\"ngModelOptions\", i0.ɵɵpureFunction0(30, _c1))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.apply, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language.Clear_Filters, \" \");\n  }\n}\nfunction RealtimeComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"span\", 34);\n    i0.ɵɵelement(2, \"img\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.closeAlert();\n    });\n    i0.ɵɵelement(6, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nfunction RealtimeComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵelementStart(1, \"div\", 40);\n    i0.ɵɵelementStart(2, \"div\", 41);\n    i0.ɵɵelementStart(3, \"span\", 42);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r33.language.Loading);\n  }\n}\nfunction RealtimeComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RealtimeComponent_div_3_div_1_Template, 5, 1, \"div\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loading);\n  }\n}\nfunction RealtimeComponent_section_4_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"div\", 82);\n    i0.ɵɵelementStart(12, \"span\", 83);\n    i0.ɵɵelementStart(13, \"i\", 84);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_tr_25_Template_i_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r50);\n      const downstream_r47 = restoredCtx.$implicit;\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return ctx_r49.ponPortsChart(downstream_r47, \"shrinkView\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const downstream_r47 = ctx.$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(downstream_r47.system);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(downstream_r47.ifName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", downstream_r47.region, \"/\", downstream_r47.location, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r34.bitsToSize(downstream_r47.value, false));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r34.calculateDownPercentage(downstream_r47), \" \");\n  }\n}\nfunction RealtimeComponent_section_4_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 85);\n    i0.ɵɵelementStart(1, \"td\", 86);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r35.language[\"No data available\"]);\n  }\n}\nfunction RealtimeComponent_section_4_tr_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"div\", 82);\n    i0.ɵɵelementStart(12, \"span\", 83);\n    i0.ɵɵelementStart(13, \"i\", 84);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_tr_49_Template_i_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r54);\n      const upstream_r51 = restoredCtx.$implicit;\n      const ctx_r53 = i0.ɵɵnextContext(2);\n      return ctx_r53.ponPortsChart(upstream_r51, \"shrinkView\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const upstream_r51 = ctx.$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(upstream_r51.system);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(upstream_r51.ifName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", upstream_r51.region, \"/\", upstream_r51.location, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r36.bitsToSize(upstream_r51.value, false));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r36.calculateUpPercentage(upstream_r51), \" \");\n  }\n}\nfunction RealtimeComponent_section_4_tr_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 85);\n    i0.ɵɵelementStart(1, \"td\", 86);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r37.language[\"No data available\"]);\n  }\n}\nfunction RealtimeComponent_section_4_ng_template_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r55 = ctx.item;\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r38.language[item_r55.name], \" \");\n  }\n}\nfunction RealtimeComponent_section_4_ng_template_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r56 = ctx.item;\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r39.language[item_r56.name], \" \");\n  }\n}\nfunction RealtimeComponent_section_4_span_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r40.language.Top_PON_Ports_by_Upstream_Capacity);\n  }\n}\nfunction RealtimeComponent_section_4_span_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r41.language.Top_PON_Ports_by_Downstream_Capacity);\n  }\n}\nfunction RealtimeComponent_section_4_tr_84_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementStart(13, \"div\", 82);\n    i0.ɵɵelementStart(14, \"span\", 83);\n    i0.ɵɵelementStart(15, \"i\", 84);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_tr_84_Template_i_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r61);\n      const stream_r58 = restoredCtx.$implicit;\n      const ctx_r60 = i0.ɵɵnextContext(2);\n      return ctx_r60.ponPortsChart(stream_r58, \"expandedView\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stream_r58 = ctx.$implicit;\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stream_r58.system);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", stream_r58.ifName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stream_r58.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stream_r58.location);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r42.bitsToSize(stream_r58.value, false));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r42.fsName == \"TPP_UP\" ? ctx_r42.calculateUpPercentage(stream_r58) : ctx_r42.calculateDownPercentage(stream_r58), \" \");\n  }\n}\nfunction RealtimeComponent_section_4_tr_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 85);\n    i0.ɵɵelementStart(1, \"td\", 87);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r43.language[\"No data available\"], \" \");\n  }\n}\nfunction RealtimeComponent_section_4_div_94_app_stream_chart_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-stream-chart\", 91);\n  }\n  if (rf & 2) {\n    const ctx_r62 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartName\", ctx_r62.language.RATE)(\"yAxixTitle\", ctx_r62.rateUnit)(\"data\", ctx_r62.data.maxRate)(\"time\", ctx_r62.data.sendTime)(\"windowLen\", ctx_r62.windowLen)(\"selectedFilter\", ctx_r62.selectedTime)(\"selectedRegion\", ctx_r62.selectedRegion)(\"selectedLocation\", ctx_r62.selectedLocation)(\"selectedSystem\", ctx_r62.selectedSystem)(\"history\", ctx_r62.cacheRateData);\n  }\n}\nfunction RealtimeComponent_section_4_div_94_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 88);\n    i0.ɵɵelementStart(1, \"div\", 89);\n    i0.ɵɵtemplate(2, RealtimeComponent_section_4_div_94_app_stream_chart_2_Template, 1, 10, \"app-stream-chart\", 90);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r44.data.maxRate && ctx_r44.showRealTime);\n  }\n}\nfunction RealtimeComponent_section_4_div_96_app_stream_chart_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-stream-chart\", 91);\n  }\n  if (rf & 2) {\n    const ctx_r63 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartName\", ctx_r63.language.PACKET)(\"yAxixTitle\", ctx_r63.packetUnit)(\"data\", ctx_r63.data.packet)(\"time\", ctx_r63.data.sendTime)(\"windowLen\", ctx_r63.windowLen)(\"selectedFilter\", ctx_r63.selectedTime)(\"selectedRegion\", ctx_r63.selectedRegion)(\"selectedLocation\", ctx_r63.selectedLocation)(\"selectedSystem\", ctx_r63.selectedSystem)(\"history\", ctx_r63.cachePacketData);\n  }\n}\nfunction RealtimeComponent_section_4_div_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 92);\n    i0.ɵɵelementStart(1, \"div\", 93);\n    i0.ɵɵtemplate(2, RealtimeComponent_section_4_div_96_app_stream_chart_2_Template, 1, 10, \"app-stream-chart\", 90);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.data.packet && ctx_r45.showRealTime);\n  }\n}\nfunction RealtimeComponent_section_4_div_98_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r68 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-ponport-chart\", 95);\n    i0.ɵɵlistener(\"valueChange\", function RealtimeComponent_section_4_div_98_ng_container_1_Template_app_ponport_chart_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r68);\n      const ctx_r67 = i0.ɵɵnextContext(3);\n      return ctx_r67.clearChartContainer($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r64 = i0.ɵɵnextContext().$implicit;\n    const ctx_r66 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"windowLen\", item_r64.windowLen)(\"selectedTime\", ctx_r66.selectedTime)(\"monitorId\", item_r64.monitorId)(\"Position\", item_r64.Position)(\"region\", item_r64.region)(\"location\", item_r64.location)(\"system\", item_r64.system)(\"ponPorts\", item_r64.port)(\"IsDuplicate\", item_r64.IsDuplicate)(\"startTime\", item_r64.startTime)(\"replay\", item_r64.replay)(\"locationUuid\", item_r64.locationUuid)(\"regionUuid\", item_r64.regionUuid)(\"systemUuid\", item_r64.systemUuid);\n  }\n}\nfunction RealtimeComponent_section_4_div_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 94);\n    i0.ɵɵtemplate(1, RealtimeComponent_section_4_div_98_ng_container_1_Template, 2, 14, \"ng-container\", 68);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r64 = ctx.$implicit;\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r46.fsView ? item_r64.viewType == \"expandedView\" : item_r64.viewType == \"shrinkView\");\n  }\n}\nfunction RealtimeComponent_section_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 43);\n    i0.ɵɵelementStart(1, \"div\", 44);\n    i0.ɵɵelementStart(2, \"div\", 45);\n    i0.ɵɵelementStart(3, \"div\", 46);\n    i0.ɵɵelementStart(4, \"div\", 47);\n    i0.ɵɵelementStart(5, \"div\", 48);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 49);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_Template_span_click_7_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return ctx_r70.fullscreen(\"TPP_DOWN\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"h5\", 50);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 51);\n    i0.ɵɵelementStart(11, \"table\", 52);\n    i0.ɵɵelementStart(12, \"thead\");\n    i0.ɵɵelementStart(13, \"tr\");\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\", 53);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"th\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"tbody\");\n    i0.ɵɵtemplate(25, RealtimeComponent_section_4_tr_25_Template, 14, 6, \"tr\", 54);\n    i0.ɵɵtemplate(26, RealtimeComponent_section_4_tr_26_Template, 3, 1, \"tr\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 56);\n    i0.ɵɵelementStart(28, \"div\", 47);\n    i0.ɵɵelementStart(29, \"div\", 48);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"span\", 57);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_Template_span_click_31_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return ctx_r72.fullscreen(\"TPP_UP\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"h5\", 50);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 51);\n    i0.ɵɵelementStart(35, \"table\", 58);\n    i0.ɵɵelementStart(36, \"thead\");\n    i0.ɵɵelementStart(37, \"tr\");\n    i0.ɵɵelementStart(38, \"th\");\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"th\");\n    i0.ɵɵtext(41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"th\");\n    i0.ɵɵtext(43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"th\", 53);\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"th\");\n    i0.ɵɵtext(47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"tbody\");\n    i0.ɵɵtemplate(49, RealtimeComponent_section_4_tr_49_Template, 14, 6, \"tr\", 54);\n    i0.ɵɵtemplate(50, RealtimeComponent_section_4_tr_50_Template, 3, 1, \"tr\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"div\", 59);\n    i0.ɵɵelementStart(52, \"div\", 37);\n    i0.ɵɵelementStart(53, \"div\", 60);\n    i0.ɵɵelementStart(54, \"div\", 61);\n    i0.ɵɵelementStart(55, \"div\", 62);\n    i0.ɵɵelementStart(56, \"div\", 37);\n    i0.ɵɵelementStart(57, \"div\", 63);\n    i0.ɵɵelementStart(58, \"div\", 64);\n    i0.ɵɵelementStart(59, \"ng-select\", 65);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_section_4_Template_ng_select_ngModelChange_59_listener($event) {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r73 = i0.ɵɵnextContext();\n      return ctx_r73.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_section_4_Template_ng_select_change_59_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r74 = i0.ɵɵnextContext();\n      return ctx_r74.changeTopLength();\n    });\n    i0.ɵɵtemplate(60, RealtimeComponent_section_4_ng_template_60_Template, 1, 1, \"ng-template\", 20);\n    i0.ɵɵtemplate(61, RealtimeComponent_section_4_ng_template_61_Template, 1, 1, \"ng-template\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"div\", 66);\n    i0.ɵɵelementStart(63, \"div\", 67);\n    i0.ɵɵtemplate(64, RealtimeComponent_section_4_span_64_Template, 2, 1, \"span\", 68);\n    i0.ɵɵtemplate(65, RealtimeComponent_section_4_span_65_Template, 2, 1, \"span\", 68);\n    i0.ɵɵelementStart(66, \"span\", 69);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_section_4_Template_span_click_66_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return ctx_r75.closeFullscreen();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(67, \"div\", 70);\n    i0.ɵɵelementStart(68, \"table\", 71);\n    i0.ɵɵelementStart(69, \"thead\");\n    i0.ɵɵelementStart(70, \"tr\");\n    i0.ɵɵelementStart(71, \"th\");\n    i0.ɵɵtext(72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(73, \"th\");\n    i0.ɵɵtext(74);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(75, \"th\");\n    i0.ɵɵtext(76);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(77, \"th\");\n    i0.ɵɵtext(78);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(79, \"th\", 53);\n    i0.ɵɵtext(80);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(81, \"th\");\n    i0.ɵɵtext(82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(83, \"tbody\");\n    i0.ɵɵtemplate(84, RealtimeComponent_section_4_tr_84_Template, 16, 6, \"tr\", 54);\n    i0.ɵɵtemplate(85, RealtimeComponent_section_4_tr_85_Template, 3, 1, \"tr\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(86, \"div\", 45);\n    i0.ɵɵelementStart(87, \"div\", 72);\n    i0.ɵɵelement(88, \"div\", 73);\n    i0.ɵɵelementStart(89, \"div\", 74);\n    i0.ɵɵelementStart(90, \"h5\", 50);\n    i0.ɵɵtext(91);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(92, \"div\", 75);\n    i0.ɵɵelementStart(93, \"div\", 76);\n    i0.ɵɵtemplate(94, RealtimeComponent_section_4_div_94_Template, 3, 1, \"div\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(95, \"div\", 78);\n    i0.ɵɵtemplate(96, RealtimeComponent_section_4_div_96_Template, 3, 1, \"div\", 79);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(97, \"div\", 80);\n    i0.ɵɵtemplate(98, RealtimeComponent_section_4_div_98_Template, 2, 1, \"div\", 81);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r4.fsView);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.Top_PON_Ports_by_Downstream_Capacity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Top_PON_Ports_by_Downstream_Capacity, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.lossofpon_fullscreen_tip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language[\"Health_Real Time_Top PON ports\"], \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.language.System);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Pon_Port);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r4.language.region, \"/\", ctx_r4.language.Location, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"%\", ctx_r4.language.HUtilization, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.TPPDownStreamData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.TPPDownStreamData.length == 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.Top_PON_Ports_by_Upstream_Capacity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Top_PON_Ports_by_Upstream_Capacity, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.lossofpon_fullscreen_tip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language[\"Health_Real Time_Top PON ports\"], \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.language.System);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Pon_Port);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r4.language.region, \"/\", ctx_r4.language.Location, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"%\", ctx_r4.language.HUtilization, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.TPPUpStreamData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.TPPUpStreamData.length == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r4.fsView);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"items\", ctx_r4.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r4.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(48, _c1))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.fsName == \"TPP_UP\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.fsName == \"TPP_DOWN\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r4.language.lossofpon_fullscreen_close_tip);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.language.System);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Pon_Port);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Location);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"% \", ctx_r4.language.HUtilization, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.TPPStreamData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.TPPStreamData.length == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r4.fsView);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r4.language[\"HealthPONRealtimeRateDelay\"]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data[\"maxRate\"].length || ctx_r4.showRealTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data[\"packet\"].length || ctx_r4.showRealTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.ponPortsChartList);\n  }\n}\nfunction RealtimeComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r78 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 96);\n    i0.ɵɵelementStart(1, \"h5\", 97);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 98);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r77 = i0.ɵɵnextContext();\n      return ctx_r77.close();\n    });\n    i0.ɵɵelement(6, \"span\", 99);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 100);\n    i0.ɵɵelementStart(8, \"button\", 101);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_5_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return ctx_r79.close();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.modalTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.modalInfo, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.Ok, \" \");\n  }\n}\nrequire('highcharts/highcharts-more.js')(Highcharts);\nexport let RealtimeComponent = /*#__PURE__*/(() => {\n  class RealtimeComponent {\n    constructor(translateService, sso, webSocketService, NfaService, chRef, convertor, dialogService, router, titleService, healthService, httpClient, commonOrgService) {\n      this.translateService = translateService;\n      this.sso = sso;\n      this.webSocketService = webSocketService;\n      this.NfaService = NfaService;\n      this.chRef = chRef;\n      this.convertor = convertor;\n      this.dialogService = dialogService;\n      this.router = router;\n      this.titleService = titleService;\n      this.healthService = healthService;\n      this.httpClient = httpClient;\n      this.commonOrgService = commonOrgService;\n      this.showChart = false;\n      this.showChart1 = false;\n      this.dtTrigger = new Subject();\n      this.dtTrigger1 = new Subject();\n      this.tableOptions = {\n        searching: false,\n        lengthChange: false,\n        lengthMenu: [5],\n        pageLength: 5,\n        ordering: false,\n        retrieve: true,\n        paging: false,\n        info: false\n      };\n      this.up = 'Up';\n      this.down = 'Down';\n      this.fsView = false;\n      this.fsChartDetails = '';\n      this.errorMessage = \"\";\n      this.pageAvailable = false;\n      this.applyRebuild = false;\n      this.Highcharts = Highcharts;\n      this.rate = '';\n      this.packet = '';\n      this.windowLen = 5;\n      this.ddoptions = [{\n        id: 1,\n        name: '5 minutes'\n      }, {\n        id: 2,\n        name: '10 minutes'\n      }];\n      this.selectedOption = 1;\n      this.selectedTime = 1;\n      this.showRealTime = true;\n      this.loading = true;\n      this.data = {\n        maxRate: [],\n        packet: []\n      };\n      this.rateUnit = 'bps';\n      this.packetUnit = 'pps';\n      this.cachePacketData = {};\n      this.cacheRateData = {};\n      this.healthNetWSRequestObj = {\n        \"orgId\": '',\n        \"monitorType\": \"NET\",\n        \"networkId\": '',\n        \"monitorId\": '',\n        \"graphType\": \"TRF,TPP\",\n        \"region\": \"\",\n        \"location\": \"\",\n        \"regionUuid\": \"\",\n        \"locationUuid\": \"\"\n      };\n      this.regionsDataArray = [\"All\"];\n      this.locationDataArray = [\"All\"];\n      this.systemDataArray = [\"All\"];\n      this.TPPOverallData = {\n        UpStream: [],\n        DownStream: []\n      };\n      this.TPPUpStreamData = [];\n      this.TPPDownStreamData = [];\n      this.topLengths = [{\n        name: 'Top 5 PON Ports',\n        value: 5\n      }, {\n        name: 'Top 10 PON Ports',\n        value: 10\n      }, {\n        name: 'Top 20 PON Ports',\n        value: 20\n      }, {\n        name: 'Top 30 PON Ports',\n        value: 30\n      }];\n      this.selectedTopLength = 5;\n      this.TPPStreamData = [];\n      this.systemRealtimeChartData = [];\n      this.isRebuild = false;\n      this.ponPortsChartList = [];\n      this.errorEventName = \"error_ipfix_NET\";\n      this.hasScopeAccess = false;\n      this.tPPData = {};\n      this.connectionError = false;\n      this.connectionErrorInfo = \"\";\n      this.frTable = this.translateService.fr;\n    }\n    ngOnInit() {\n      // this.webSocketService.getUnSignedUrl().subscribe((res: any) => {\n      //   this.webSocketService.Checkconnectornot(res.signedurl);\n      // });\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language['Real Time']} - ${this.language['PON']} - ${this.language['Health']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      });\n      this.titleService.setTitle(`${this.language['Real Time']} - ${this.language['PON']} - ${this.language['Health']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      let that = this;\n      document.addEventListener(\"visibilitychange\", function () {\n        if (!document.hidden) {\n          let monitorType = that.webSocketService.getHealthMonitorType();\n          let filterData = that.webSocketService.getHealthCurrentMonitorInfo(monitorType);\n          if (filterData) {\n            if (filterData && filterData['monitorId']) {\n              let params = {\n                \"orgId\": filterData.orgId,\n                \"monitorType\": filterData['monitorType'],\n                \"networkId\": filterData['networkId'],\n                \"monitorId\": filterData['monitorId'],\n                \"graphType\": \"TRF\",\n                \"replay\": \"true\",\n                \"region\": filterData['region'],\n                \"location\": filterData['location'],\n                \"startTime\": filterData['startTime'],\n                \"endTime\": new Date().getTime(),\n                \"regionUuid\": filterData['regionUuid'],\n                \"locationUuid\": filterData['locationUuid']\n              };\n              if (filterData.monitorType == 'SYS') {\n                params[\"system\"] = filterData['system'];\n                params[\"systemUuid\"] = filterData['systemUuid'];\n              }\n              that.send(that.currentEventName, params);\n            }\n            that.webSocketService.healthListen('IPFIX_REPLAY');\n          }\n        }\n      });\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        if (scopes['cloud.rbac.coc.health.pon.realtime']) {\n          this.hasScopeAccess = true;\n        }\n      } else {\n        this.hasScopeAccess = true;\n      }\n      if (!this.hasScopeAccess) {\n        this.sso.setPageAccess(false);\n        return;\n      } else {\n        this.sso.setPageAccess(true);\n      }\n      this.webSocketConnectionError();\n      this.calculateSubscriptiontime();\n      if (this.healthService.isReport && (this.healthService.previousUrl.includes(\"/uplink\") || this.healthService.previousUrl.includes(\"/ont\"))) {\n        this.router.navigate(['/cco/health/pon-utilization/overview/basic']);\n        return;\n      } else {\n        this.healthService.isReport = false;\n      }\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.up = this.language.Up;\n        this.down = this.language.Down;\n        setTimeout(() => {\n          this.reDraw();\n        }, 200);\n      });\n      this.showModalInfo();\n      this.tableLanguageOptions();\n      this.chRef.detectChanges();\n      // this.webSocketService.delay$.subscribe((res: any) => {\n      //   if (res) {\n      //     this.loading = false;\n      //   }\n      // })\n      this.dtTrigger.next();\n      this.dtTrigger1.next();\n      this.getRtData();\n      this.orgId = this.sso.getOrgId();\n      this.orgid_tenantid = this.orgId + '_' + '0';\n      this.currentEventName = 'IPFIX_NET';\n      this.regionsApiLoader();\n      this.healthNetWSRequestObj.orgId = this.orgId;\n      this.healthNetWSRequestObj.networkId = this.orgid_tenantid;\n      this.healthNetWSRequestObj.monitorId = this.orgid_tenantid;\n      // console.log(\"getPonportsInfo\", this.webSocketService.getPonportsInfo());\n      let ponList = this.webSocketService.getPonportsInfo();\n      if (ponList.length > 0) {\n        this.ponPortsChartList = Object.assign([], ponList);\n      }\n      let monitorType = this.webSocketService.getHealthMonitorType();\n      if (monitorType && this.webSocketService.getHealthCurrentMonitorInfo(monitorType)) {\n        let filterData = this.webSocketService.getHealthCurrentMonitorInfo(monitorType);\n        if (filterData && filterData['monitorId']) {\n          let params = {\n            \"orgId\": filterData.orgId,\n            \"monitorType\": filterData['monitorType'],\n            \"networkId\": filterData['networkId'],\n            \"monitorId\": filterData['monitorId'],\n            \"graphType\": \"TRF\",\n            \"replay\": \"true\",\n            \"region\": filterData['region'],\n            \"location\": filterData['location'],\n            \"startTime\": filterData['startTime'],\n            \"endTime\": new Date().getTime(),\n            \"regionUuid\": filterData['regionUuid'],\n            \"locationUuid\": filterData['locationUuid']\n          };\n          if (filterData.monitorType == 'REG') {\n            this.currentEventName = 'IPFIX_REG';\n          }\n          if (filterData.monitorType == 'LOC') {\n            this.currentEventName = 'IPFIX_LOC';\n          }\n          if (filterData.monitorType == 'SYS') {\n            this.currentEventName = 'IPFIX_SYS';\n            params[\"system\"] = filterData['system'];\n            params[\"systemUuid\"] = filterData['systemUuid'];\n          }\n          let filterValues = this.webSocketService.getFilterValues();\n          if (filterValues) {\n            this.selectedOption = filterValues[\"selectedOption\"];\n            this.selectedTime = this.selectedOption;\n            this.regionName = filterValues[\"regionName\"];\n            this.regionSelected = filterValues[\"regionId\"];\n            if (filterValues[\"regionId\"]) {\n              this.loadLocationValue('');\n              setTimeout(() => {\n                this.locationName = filterValues[\"locationName\"];\n                this.locationSelected = filterValues[\"locationId\"];\n                if (filterValues[\"regionId\"] && filterValues[\"locationId\"]) {\n                  this.loadSystemValue('');\n                  setTimeout(() => {\n                    this.systemName = filterValues[\"SYS\"];\n                    this.systemSelected = filterValues[\"systemId\"];\n                    if (!filterValues[\"systemId\"]) {\n                      this.systemSelected = \"All\";\n                    }\n                  }, 500);\n                } else {\n                  this.locationSelected = \"All\";\n                }\n              }, 500);\n            } else {\n              this.regionSelected = \"All\";\n            }\n          }\n          this.errorEventName = \"error\";\n          this.currentEventName.split(\"_\").forEach(element => {\n            if (element === \"IPFIX\") {\n              this.errorEventName = this.errorEventName + '_' + element.toLowerCase();\n            } else {\n              this.errorEventName = this.errorEventName + '_' + element;\n            }\n          });\n          this.webSocketService.healthListen(this.currentEventName);\n          this.webSocketService.healthListen(this.errorEventName);\n          this.selectedOption = this.selectedOption ? this.selectedOption : 1;\n          this.selectedTime = this.selectedTime ? this.selectedTime : 1;\n          this.send(this.currentEventName, params);\n          this.webSocketService.healthListen('IPFIX_REPLAY');\n          this.webSocketService.setHealthMonitorType(this.currentEventName.split(\"_\").pop());\n          return;\n        }\n      } else {\n        this.webSocketService.connectWS$.subscribe(res => {\n          if (res && !this.webSocketService.WebSocketServer.hasDisconnectedOnce) {\n            this.send('remove', 'IPFIX_NET');\n            this.webSocketService.healthListen(this.currentEventName);\n            this.webSocketService.healthListen('error_ipfix_NET');\n            this.send(this.currentEventName, this.healthNetWSRequestObj);\n          }\n        });\n        // this.send('remove', 'IPFIX_NET');\n        this.webSocketService.setHealthMonitorType(\"NET\");\n      }\n      setTimeout(() => {\n        this.webSocketService.setHealthWindowLen(this.selectedOption);\n      }, 500);\n      this.webSocketService.setFilterValues(this.selectedTime, this.selectedOption, \"selectedTime\", \"selectedOption\");\n      this.reConnectWebSocket();\n    }\n    send(eventname, data) {\n      this.webSocketService.healthEmit(eventname, data);\n    }\n    applyFilter() {\n      var _a, _b, _c;\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      const previousMonitorType = this.webSocketService.getHealthMonitorType();\n      const previousMonitorInfo = Object.assign({}, this.webSocketService.healthConnectionTypes[previousMonitorType]);\n      this.selectedTime = this.selectedOption;\n      let ponPortList = this.ponPortsChartList.filter(element => {\n        if (this.systemSelected && this.systemSelected !== 'All') {\n          return element.region === this.regionName && element.location === this.locationName && element.system === this.systemName;\n        } else if (this.locationSelected && this.locationSelected !== 'All') {\n          return element.region === this.regionName && element.location === this.locationName;\n        } else if (this.regionSelected && this.regionSelected !== 'All') {\n          return element.region === this.regionName;\n        }\n      });\n      this.ponPortsChartList = [];\n      this.webSocketService.ponPortsList = [];\n      if (this.ponPortsChartList.length > 0) {\n        this.send('remove', 'IPFIX_PORT');\n      }\n      setTimeout(() => {\n        this.ponPortsChartList = Object.assign([], ponPortList);\n      }, 500);\n      let system = '';\n      this.currentEventName = 'IPFIX_NET';\n      if (this.systemSelected !== 'All') {\n        system = this.systemSelected;\n      }\n      this.healthNetWSRequestObj.region = '';\n      this.healthNetWSRequestObj.location = '';\n      this.healthNetWSRequestObj['system'] = '';\n      this.healthNetWSRequestObj.regionUuid = '';\n      this.healthNetWSRequestObj.locationUuid = '';\n      this.healthNetWSRequestObj['systemUuid'] = '';\n      this.healthNetWSRequestObj.monitorType = \"NET\";\n      this.healthNetWSRequestObj.monitorId = this.orgid_tenantid;\n      this.webSocketService.setFilterValues(this.selectedTime, this.selectedOption, \"selectedTime\", \"selectedOption\");\n      if (this.regionSelected && this.regionSelected !== 'All') {\n        // this.loading = true;\n        this.healthNetWSRequestObj.region = this.regionName ? this.regionName : '';\n        this.healthNetWSRequestObj.regionUuid = (_a = this.regionSelected) !== null && _a !== void 0 ? _a : '';\n        this.webSocketService.setFilterValues(this.regionName, this.regionSelected, \"regionName\", \"regionId\");\n        this.healthNetWSRequestObj.monitorType = \"REG\";\n        this.healthNetWSRequestObj.monitorId = this.regionName;\n        this.currentEventName = \"IPFIX_REG\";\n      } else {\n        this.webSocketService.deleteFilterValues('regionName', 'regionId');\n      }\n      if (this.locationSelected && this.locationSelected !== 'All') {\n        // this.loading = true;\n        this.healthNetWSRequestObj.location = this.locationName ? this.locationName : '';\n        this.healthNetWSRequestObj.locationUuid = (_b = this.locationSelected) !== null && _b !== void 0 ? _b : '';\n        this.webSocketService.setFilterValues(this.locationName, this.locationSelected, \"locationName\", \"locationId\");\n        this.healthNetWSRequestObj.monitorType = \"LOC\";\n        this.healthNetWSRequestObj.monitorId = this.locationName;\n        this.currentEventName = \"IPFIX_LOC\";\n      } else {\n        this.webSocketService.deleteFilterValues('locationName', 'locationId');\n      }\n      if (this.systemSelected && this.systemSelected !== 'All') {\n        // this.loading = true;\n        this.healthNetWSRequestObj.monitorType = \"SYS\";\n        this.healthNetWSRequestObj.monitorId = this.systemName; //\"device@cc:be:59:18:fa:3f\";\n        this.healthNetWSRequestObj['system'] = this.systemName; //\"device@cc:be:59:18:fa:3f\";\n        this.healthNetWSRequestObj['systemUuid'] = (_c = this.systemSelected) !== null && _c !== void 0 ? _c : '';\n        this.webSocketService.setFilterValues(this.systemName, this.systemSelected, \"systemName\", \"systemId\");\n        this.currentEventName = \"IPFIX_SYS\";\n      } else {\n        this.webSocketService.deleteFilterValues('systemName', 'systemId');\n      }\n      if (typeof previousMonitorType == \"undefined\") {\n        this.webSocketService.setHealthMonitorType(this.healthNetWSRequestObj.monitorType);\n        this.send(this.currentEventName, this.healthNetWSRequestObj);\n      }\n      if (previousMonitorType !== this.healthNetWSRequestObj.monitorType || previousMonitorType === this.healthNetWSRequestObj.monitorType && previousMonitorInfo['monitorId'] !== this.healthNetWSRequestObj.monitorId || !this.isSameFilters(this.healthNetWSRequestObj, previousMonitorInfo)) {\n        if (this.webSocketService.getHealthMonitorType()) {\n          this.send('remove', 'IPFIX_' + this.webSocketService.getHealthMonitorType());\n        }\n        this.webSocketService.setHealthMonitorType(this.healthNetWSRequestObj.monitorType);\n        this.send(this.currentEventName, this.healthNetWSRequestObj);\n      } else {\n        previousMonitorInfo['endTime'] = new Date().getTime();\n        previousMonitorInfo['replay'] = 'true';\n        this.send(this.currentEventName, previousMonitorInfo);\n        this.webSocketService.healthListen('IPFIX_REPLAY');\n      }\n      this.webSocketService.setHealthWindowLen(this.selectedOption);\n      this.errorEventName = \"error\";\n      this.currentEventName.split(\"_\").forEach(element => {\n        if (element === \"IPFIX\") {\n          this.errorEventName = this.errorEventName + '_' + element.toLowerCase();\n        } else {\n          this.errorEventName = this.errorEventName + '_' + element;\n        }\n      });\n      this.selectedRegion = this.currentEventName == 'IPFIX_REG' ? this.regionSelected : '';\n      this.selectedLocation = this.currentEventName == 'IPFIX_LOC' ? this.locationSelected : '';\n      this.selectedSystem = this.currentEventName == 'IPFIX_SYS' ? this.systemSelected : '';\n      this.webSocketService.healthListen(this.currentEventName);\n      this.webSocketService.healthListen(this.errorEventName);\n      if (this.applyRebuild) {\n        this.isRebuild = true;\n      }\n      this.getRtData();\n      setTimeout(() => {\n        this.loading = false;\n      }, 15000);\n    }\n    isSameFilters(newRequest, oldRequest) {\n      return newRequest['regionUuid'] == oldRequest['regionUuid'] && newRequest['locationUuid'] == oldRequest['locationUuid'] && newRequest['systemUuid'] == oldRequest['systemUuid'];\n    }\n    clearFilter() {\n      if (this.regionSelected !== \"All\") {\n        this.isRebuild = true;\n      }\n      this.selectedOption = 1;\n      this.selectedTime = 1;\n      this.regionSelected = \"All\";\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.locationDataArray = [\"All\"];\n      this.systemDataArray = [\"All\"];\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      // this.webSocketService.setHealthMonitorType('NET');\n      this.webSocketService.filterValues = {};\n      this.webSocketService.filterValues[\"selectedTime\"] = 1;\n      this.webSocketService.filterValues[\"selectedOption\"] = 1;\n      this.applyFilter();\n      // this.getRtData();\n    }\n\n    fullscreen(whichTop) {\n      this.fsView = true;\n      this.fsName = whichTop;\n      this.makeTPPCurrentData();\n    }\n    closeFullscreen() {\n      this.selectedTopLength = 5;\n      this.fsView = false;\n      this.fsName = '';\n      //make all ponport charts view type as shrinkView from expandedView\n      this.ponPortsChartList.forEach(el => {\n        el['viewType'] = 'shrinkView';\n      });\n      this.TPPUpStreamData = this.TPPOverallData.UpStream.slice(0, 5);\n      this.TPPDownStreamData = this.TPPOverallData.DownStream.slice(0, 5);\n      // this.makeTPPEvents([]);\n    }\n\n    changeTopLength() {\n      this.makeTPPCurrentData();\n    }\n    makeTPPCurrentData() {\n      let data = this.fsName == 'TPP_DOWN' ? this.TPPOverallData.DownStream : this.TPPOverallData.UpStream;\n      let sliceNum = this.selectedTopLength ? this.selectedTopLength : 5;\n      this.TPPStreamData = data.slice(0, sliceNum);\n    }\n    regionsApiLoader() {\n      this.regionSelected = 'All';\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.regionsSubject = this.NfaService.GetRegions().subscribe(res => {\n        this.regionsDataArray = [\"All\"];\n        let counts = {};\n        res.forEach(x => {\n          counts[x.name] = (counts[x.name] || 0) + 1;\n        });\n        res.forEach((element, index) => {\n          var _a;\n          element['regionName'] = element.name;\n          if (counts[element['name']] > 1) {\n            element.name = element.name + \" (\" + ((_a = element.fqn) === null || _a === void 0 ? void 0 : _a.split('=')[1].split(',')[0]) + \")\";\n          }\n        });\n        res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n          numeric: false\n        }));\n        this.regionsDataArray = [...this.regionsDataArray, ...res];\n      }, error => {\n        // console.log(error)\n      });\n    }\n    loadLocationValue(event) {\n      let id = this.regionSelected;\n      this.locationSelected = \"All\";\n      this.systemSelected = \"All\";\n      this.locationDataArray = [\"All\"];\n      if (this.regionSelected && this.regionSelected != 'All') {\n        this.locationsSubject = this.NfaService.GetLocations(id).subscribe(res => {\n          this.locationDataArray = [...this.locationDataArray, ...res];\n        }, error => {});\n      }\n      this.regionsDataArray.forEach(element => {\n        if (element.id == this.regionSelected) {\n          this.regionName = element.regionName;\n        }\n      });\n      if (this.regionSelected == 'All') {\n        this.regionName = null;\n        this.locationName = null;\n        this.systemName = null;\n        this.regionSelected = \"All\";\n        this.locationSelected = \"All\";\n        this.systemSelected = \"All\";\n        this.locationDataArray = [\"All\"];\n        this.systemDataArray = [\"All\"];\n      }\n      this.applyRebuild = true;\n    }\n    loadSystemValue(event) {\n      this.systemSelected = \"All\";\n      this.systemDataArray = [\"All\"];\n      let regionid = this.regionSelected;\n      let locationid = this.locationSelected;\n      if (this.locationSelected && this.regionSelected && this.locationSelected != 'All') {\n        this.systemsSubject = this.NfaService.GetSystems(regionid, locationid, 'pon').subscribe(res => {\n          this.systemDataArray = [...this.systemDataArray, ...res];\n        }, error => {});\n      }\n      this.locationDataArray.forEach(element => {\n        if (element.id == this.locationSelected) {\n          this.locationName = element.name;\n        }\n      });\n      if (this.locationSelected == 'All') {\n        this.locationName = null;\n        this.systemName = null;\n        this.systemSelected = \"All\";\n        this.systemDataArray = [\"All\"];\n      }\n      this.applyRebuild = true;\n    }\n    selectSystem(event) {\n      this.systemDataArray.forEach(element => {\n        if (element.uuid == this.systemSelected) {\n          this.systemName = element.name;\n        }\n      });\n      if (this.systemSelected == 'All') {\n        this.systemName = null;\n      }\n      this.applyRebuild = true;\n    }\n    closeStreamChartscreen(index, id) {\n      var findindex = this.systemRealtimeChartData.findIndex(x => x.index === id);\n      if (findindex > -1) {\n        this.systemRealtimeChartData.splice(findindex, 1);\n      }\n      if (this.systemRealtimeChartData.length == 0) {\n        this.showChart = false;\n      }\n    }\n    tableLanguageOptions() {\n      if (sessionStorage.getItem('defaultLanguage') && sessionStorage.getItem('defaultLanguage') == 'fr') {\n        this.tableOptions.language = this.frTable;\n      } else {\n        delete this.tableOptions.language;\n      }\n    }\n    reDraw() {}\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      ;\n      this.dtTrigger.unsubscribe();\n      this.dtTrigger1.unsubscribe();\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      if (this.cacheDataSubscription) {\n        this.cacheDataSubscription.unsubscribe();\n      }\n      this.webSocketService.clearHealthReplayData();\n      if (!window.location.pathname.includes(\"cco/health\")) {\n        this.webSocketService.clearHealthInfo();\n      }\n      if (this.interval) {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n      if (this.reConnectSubscription) {\n        this.reConnectSubscription.unsubscribe();\n      }\n      if (this.connectionErSubscription) {\n        this.connectionErSubscription.unsubscribe();\n      }\n      this.webSocketService.shouldReflow = false;\n    }\n    checkCurrentMonitorTypeData(data, currentMonitorInfo) {\n      if (data && currentMonitorInfo) {\n        data.confData['system'] = data.confData.system ? data.confData.system : \"\";\n        currentMonitorInfo[\"system\"] = currentMonitorInfo.system ? currentMonitorInfo.system : \"\";\n        if (data.confData.region === currentMonitorInfo.region && data.confData.location === currentMonitorInfo.location && data.confData.system === currentMonitorInfo.system) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n    getRtData() {\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      if (this.cacheDataSubscription) {\n        this.cacheDataSubscription.unsubscribe();\n      }\n      this.cacheDataSubscription = this.webSocketService.healthCacheData$.subscribe(data => {\n        console.log(\"cache data subscription\", data);\n        this.cachePacketData = data['packet'];\n        this.cacheRateData = data['rate'];\n        this.connectionError = false;\n      });\n      this.ratePacketStreamSubscription = this.webSocketService.healthRatePacketStreamData$.subscribe(data => {\n        console.log(`subscription data ${new Date()}`, data);\n        if (this.isRebuild) {\n          //True means filter is applied and we need to remove previous values\n          this.clearTPPdata();\n          this.isRebuild = false;\n          this.applyRebuild = false;\n          this.streamChild.forEach(child => {\n            child.removePrevious();\n          });\n        }\n        this.showRealTime = true;\n        let currentMonitorType = this.webSocketService.getHealthMonitorType();\n        let currentMonitorInfo = this.webSocketService.getHealthCurrentMonitorInfo(currentMonitorType);\n        if (data.monitorType && data.monitorType.includes(currentMonitorType) && this.checkCurrentMonitorTypeData(data, currentMonitorInfo)) {\n          if (data.graphType === 'TRF') {\n            this.loading = false;\n            this.connectionError = false;\n            this.data = data;\n            this.lastSubscriptionTime = new Date().getTime();\n            this.showRealTime = true;\n          } else {\n            // this.showBars = false;\n          }\n        }\n      });\n      setTimeout(() => {\n        this.rtSubscription = this.webSocketService.healthRtData$.subscribe(data => {\n          // console.log(\"data\", data);\n          let currentMonitorType = this.webSocketService.getHealthMonitorType();\n          let currentMonitorInfo = this.webSocketService.getHealthCurrentMonitorInfo(currentMonitorType);\n          if (data.monitorType && data.monitorType.includes(currentMonitorType) && this.checkCurrentMonitorTypeData(data, currentMonitorInfo)) {\n            if (data.graphType == 'TPP') {\n              this.loading = false;\n              this.connectionError = false;\n              this.tPPData = data;\n              this.makeTPPEvents(data);\n            }\n          }\n          // this.loading = false;\n        });\n      }, 800);\n    }\n    dataSplit(data) {\n      if (data) {\n        data.map((obj, i) => {\n          data[i].system = data[i].system.split('@')[1] ? data[i].system.split('@')[1] : data[i].system;\n        });\n        return data;\n      }\n      return [];\n    }\n    makeTPPEvents(data) {\n      // console.log(\"makeTPPEventsdata\", data);\n      if (data) {\n        this.TPPOverallData.DownStream = data.downData.length > 0 ? data.downData : [];\n        this.TPPOverallData.UpStream = data.upData.length > 0 ? data.upData : [];\n        // console.log('data.upData', this.TPPOverallData.DownStream);\n        // console.log('data.downData', this.TPPOverallData.UpStream);\n        let sliceNum = this.selectedTopLength ? this.selectedTopLength : 5;\n        this.TPPUpStreamData = this.TPPOverallData.UpStream.slice(0, sliceNum);\n        this.TPPDownStreamData = this.TPPOverallData.DownStream.slice(0, sliceNum);\n        if (this.fsView) {\n          this.makeTPPCurrentData();\n        }\n        // this.rerender();\n      }\n    }\n\n    clearTPPdata() {\n      this.TPPOverallData.DownStream = [];\n      this.TPPOverallData.UpStream = [];\n      this.TPPUpStreamData = this.TPPOverallData.DownStream;\n      this.TPPDownStreamData = this.TPPOverallData.UpStream;\n    }\n    rerender() {\n      this.dtElements.forEach(dtElement => {\n        dtElement.dtInstance.then(dtInstance => {\n          dtInstance.destroy();\n          // dtInstance.draw();\n          this.dtTrigger.next();\n        });\n      });\n    }\n    bitsToSize(bits, round) {\n      let bytes = bits;\n      let sizes = ['bps', 'Kbps', 'Mbps', 'Gbps', 'Tbps'];\n      if (bytes == 0) return '0 bps';\n      var i = Math.floor(Math.log(bytes) / Math.log(1000));\n      if (round) {\n        return Math.round(bytes / Math.pow(1000, i)) + ' ' + sizes[i];\n      }\n      return Highcharts.numberFormat(Math.abs(bytes / Math.pow(1000, i)), 2) + ' ' + sizes[i];\n    }\n    showModalInfo() {\n      this.webSocketService.showModalInfo$.subscribe(res => {\n        if (this.router.url.includes(\"/cco/health/pon-utilization/realtime\")) {\n          this.modalTitle = this.language[\"Internet Disconnected\"];\n          this.modalInfo = this.language[\"Please checking the network cables, modem, and router\"];\n          this.modalRef = this.dialogService.open(this.showInfoModal, {\n            size: 'lg',\n            centered: true,\n            windowClass: 'custom-modal',\n            backdrop: 'static',\n            keyboard: false\n          });\n        }\n      });\n    }\n    close() {\n      this.modalRef.close();\n      window.location.reload();\n    }\n    calculateDownPercentage(data) {\n      let percentage = 0;\n      if (data.ifName.includes(\"gp\")) {\n        percentage = data.value / 2488000000 * 100;\n      } else {\n        percentage = data.value / 10000000000 * 100;\n      }\n      return percentage.toFixed(2);\n    }\n    calculateUpPercentage(data) {\n      let percentage = 0;\n      if (data.ifName.includes(\"gp\")) {\n        percentage = data.value / 1244000000 * 100;\n      } else {\n        percentage = data.value / 10000000000 * 100;\n      }\n      return percentage.toFixed(2);\n    }\n    ponPortsChart(chartInfo, viewType) {\n      let url = `${environment.API_BASE_URL}nfa/systems/details?offset=0&limit=100&name=${chartInfo.system}&exactNameMatch=true`;\n      this.httpClient.get(url).subscribe(resp => {\n        const device = resp.devices.find(x => x.name === chartInfo.system);\n        let IsDuplicate = false;\n        let position = 0;\n        if (this.ponPortsChartList.length > 0) {\n          this.ponPortsChartList.forEach(element => {\n            if (element.monitorId === chartInfo.ifName && element.region === chartInfo.region && element.location === chartInfo.location) {\n              element['viewType'] = viewType;\n              IsDuplicate = true;\n              position = position + 1;\n            }\n          });\n        }\n        if (!IsDuplicate) {\n          this.ponPortsChartList.push({\n            monitorId: chartInfo.ifName,\n            region: chartInfo.region,\n            location: chartInfo.location,\n            system: chartInfo.system,\n            port: chartInfo.ifName,\n            windowLen: this.windowLen,\n            IsDuplicate: IsDuplicate,\n            Position: position,\n            startTime: null,\n            replay: false,\n            viewType: viewType,\n            regionUuid: device['regionuuid'],\n            locationUuid: device['locationuuid'],\n            systemUuid: device['uuid']\n          });\n          this.ponPortsChartList = [...this.ponPortsChartList];\n        }\n        setTimeout(() => {\n          var elmnt = document.getElementById(\"ponports-\" + chartInfo.ifName);\n          elmnt.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }, 500);\n      }, error => {\n        this.errorMessage = this.errorHandler(error);\n      });\n    }\n    errorHandler(err) {\n      this.scrollTop();\n      if (err.error) {\n        if (err.error['errorDesc']) {\n          this.errorMessage = err.error['errorDesc'];\n        } else if (err.error['status'] == 500) {\n          this.errorMessage = `Internal Server Error`;\n        } else if (err.error['statusText'] == 'Unknown Error' && err.error['status'] == 0) {\n          this.errorMessage = \"Unknown Error - Please refresh the page\";\n        } else if (err.error['status'] && err.error['status'] == 401) {\n          this.errorMessage = \"User Unauthorized\";\n        } else if (err.error['message']) {\n          this.errorMessage = err.error['message'];\n        } else {\n          this.errorMessage = err.error;\n        }\n      } else {\n        this.errorMessage = this.commonOrgService.pageErrorHandle(err);\n      }\n      return this.errorMessage;\n    }\n    clearChartContainer(values) {\n      var findindex = this.ponPortsChartList.findIndex(x => x.monitorId === values.monitorId && x.region === values.region && x.location === values.location);\n      if (findindex > -1) {\n        this.ponPortsChartList.splice(findindex, 1);\n      }\n      var findindex = this.webSocketService.ponPortsList.findIndex(x => x.monitorId === values.monitorId && x.region === values.region && x.location === values.location);\n      if (findindex > -1) {\n        this.webSocketService.ponPortsList.splice(findindex, 1);\n      }\n    }\n    calculateSubscriptiontime() {\n      this.interval = setInterval(() => {\n        let diff = new Date().getTime() - this.lastSubscriptionTime;\n        if (diff >= 30000) {\n          this.data.maxRate = [0, 0];\n          this.data.packet = [0, 0];\n          this.TPPUpStreamData = [];\n          this.TPPDownStreamData = [];\n          this.TPPOverallData.DownStream = [];\n          this.TPPOverallData.UpStream = [];\n          if (this.tPPData) {\n            this.tPPData.downData = [];\n            this.tPPData.upData = [];\n            this.webSocketService.healthRtData$.next(this.tPPData);\n          }\n        }\n      }, 15000);\n    }\n    webSocketConnectionError() {\n      if (this.connectionErSubscription) {\n        this.connectionErSubscription.unsubscribe();\n      }\n      this.webSocketService.wsConnectionError$.subscribe(res => {\n        if (res && res === true) {\n          this.loading = false;\n          this.connectionError = true;\n          this.connectionErrorInfo = \"Web Socket connection failed\";\n        }\n      });\n      this.webSocketService.healthWSNoResponse$.subscribe(res => {\n        if (res && res.isError === true && res.type === this.errorEventName) {\n          this.loading = false;\n          this.connectionError = true;\n          this.connectionErrorInfo = \"No Data Available\";\n        }\n      });\n    }\n    closeAlert() {\n      this.connectionError = false;\n      this.connectionErrorInfo = \"\";\n      this.errorMessage = \"\";\n    }\n    reConnectWebSocket() {\n      if (this.reConnectSubscription) {\n        this.reConnectSubscription.unsubscribe();\n      }\n      this.webSocketService.connectWS$.subscribe(res => {\n        if (res && this.webSocketService.WebSocketServer.hasDisconnectedOnce) {\n          this.webSocketService.healthListen(this.currentEventName);\n          this.webSocketService.healthListen(this.errorEventName);\n          this.webSocketService.healthListen('IPFIX_REPLAY');\n          this.send(this.currentEventName, this.healthNetWSRequestObj);\n          let monitorType = this.webSocketService.getHealthMonitorType();\n          let filterData = this.webSocketService.getHealthCurrentMonitorInfo(monitorType);\n          if (filterData) {\n            if (filterData && filterData['monitorId']) {\n              let params = {\n                \"orgId\": filterData.orgId,\n                \"monitorType\": filterData['monitorType'],\n                \"networkId\": filterData['networkId'],\n                \"monitorId\": filterData['monitorId'],\n                \"graphType\": \"TRF\",\n                \"replay\": \"true\",\n                \"region\": filterData['region'],\n                \"location\": filterData['location'],\n                \"startTime\": filterData['startTime'],\n                \"endTime\": new Date().getTime(),\n                \"regionUuid\": filterData['regionUuid'],\n                \"locationUuid\": filterData['locationUuid']\n              };\n              if (filterData.monitorType == 'SYS') {\n                params[\"system\"] = filterData['system'];\n                params[\"systemUuid\"] = filterData['systemUuid'];\n              }\n              this.send(this.currentEventName, params);\n            }\n          }\n          this.getRtData();\n        }\n      });\n    }\n    scrollTop() {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n  RealtimeComponent.ɵfac = function RealtimeComponent_Factory(t) {\n    return new (t || RealtimeComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.WebsocketService), i0.ɵɵdirectiveInject(i4.NfainventoryService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.ConvertorService), i0.ɵɵdirectiveInject(i6.NgbModal), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i8.Title), i0.ɵɵdirectiveInject(i9.HealthService), i0.ɵɵdirectiveInject(i10.HttpClient), i0.ɵɵdirectiveInject(i11.CommonService));\n  };\n  RealtimeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RealtimeComponent,\n    selectors: [[\"app-realtime\"]],\n    viewQuery: function RealtimeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(StreamChartComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showInfoModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElements = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.streamChild = _t);\n      }\n    },\n    decls: 7,\n    vars: 5,\n    consts: [[\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"container px-0\", \"id\", \"pon-Real-Time-filter\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-danger fade show\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [\"class\", \"col-md-12\"], [\"showInfoModal\", \"\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"id\", \"pon-Real-Time-filter\", 1, \"container\", \"px-0\"], [1, \"filter-elemnts\"], [1, \"row\", \"mb-1\"], [1, \"col-12\", \"col-md-12\", \"p-0\"], [1, \"current-issue-menu-container\"], [1, \"current-issue-menu-item\", \"mt-4\", \"col-12\", \"col-sm-6\", \"col-md-3\", \"col-lg-3\"], [\"for\", \"Name\", 1, \"col-form-label\", \"select-font\"], [\"id\", \"current-issues-interval\", 1, \"w-100\"], [3, \"searchable\", \"placeholder\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"current-issues-region\", 1, \"w-100\"], [\"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"ngModelOptions\", \"clearable\", \"searchable\", \"placeholder\", \"ngModelChange\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"id\", \"current-issues-location\", 1, \"w-100\"], [\"bindValue\", \"id\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"placeholder\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [\"id\", \"current-issues-System\", 1, \"custom-selectbox\", \"w-100\"], [\"bindValue\", \"uuid\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"placeholder\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [1, \"col-12\", \"col-md-12\", \"text-left\", \"mt-4\"], [1, \"d-inline-flex\", \"mr-3\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", 3, \"click\"], [1, \"d-inline-flex\"], [\"type\", \"button\", \"id\", \"#\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [3, \"value\"], [1, \"text-truncate\", 3, \"title\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", \"mt-10\", 3, \"click\"], [1, \"row\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"mt-3\"], [1, \"container\"], [1, \"row\", 3, \"hidden\"], [\"id\", \"pon-Real-Time-Downstream-Capacity\", 1, \"col-sm-12\", \"col-md-12\", \"col-lg-6\", \"col-xl-6\"], [1, \"cco-secondary-title\", \"border-bottom\", \"text-sm-ellipse\"], [1, \"overflw-title\", 3, \"title\"], [\"data-toggle\", \"tooltip\", \"id\", \"open-fullscreen-tppdown\", 1, \"top5-fullscreen\", \"pointer\", \"pull-right\", \"expand-icon\", 3, \"title\", \"click\"], [1, \"heading-subtitle\", \"my-2\"], [1, \"cco-health-table\", \"overflow-auto\"], [1, \"table\", \"table-hover\", \"table-striped\", \"w-100\"], [1, \"sorting-th-custom\", \"sorting-th-alt\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"id\", \"pon-Real-Time-Upstream-Capacity\", 1, \"col-sm-12\", \"col-md-12\", \"col-lg-6\", \"col-xl-6\"], [\"data-toggle\", \"tooltip\", \"id\", \"open-fullscreen-tpp-up\", 1, \"top5-fullscreen\", \"pointer\", \"pull-right\", \"expand-icon\", 3, \"title\", \"click\"], [1, \"table\", \"table\", \"table-hover\", \"table-striped\", \"w-100\"], [1, \"bg-light\", \"h-auto\", 3, \"hidden\"], [1, \"col-md-12\", \"col-12\"], [1, \"card\", \"h-auto\"], [1, \"board_head\"], [1, \"col-sm-12\", \"col-md-12\", \"col-lg-3\", \"col-xl-3\"], [1, \"orange-text-wrapper\", \"mt-2\", \"pl-2\"], [\"id\", \"usage_criteria\", \"bindLabel\", \"name\", \"bindValue\", \"value\", \"placeholder\", \"\", 1, \"realtime-custom-select\", 3, \"items\", \"multiple\", \"ngModel\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\", \"change\"], [1, \"col-sm-12\", \"col-md-12\", \"col-lg-9\", \"col-xl-9\"], [1, \"cco-secondary-title\", \"mx-1\"], [4, \"ngIf\"], [\"data-toggle\", \"tooltip\", \"id\", \"close-fullscreen-top-endpoints\", 1, \"top5-fullscreen\", \"pointer\", \"pull-right\", \"mr-3\", \"expand-inverted-icon\", \"mt-2\", 3, \"title\", \"click\"], [1, \"card-body\", \"row\", \"board_body\", \"no-gutters\", \"overflow-auto\", \"cco-health-table\"], [1, \"table\", \"table-striped\", \"row-border\", \"hover\", \"w-100\"], [1, \"col-md-12\", \"mt-2\"], [1, \"cco-secondary-title\", \"border-bottom\"], [1, \"w-100\"], [1, \"d-flex\", \"justify-content-between\", \"md-block\"], [1, \"col-12\", \"col-md-12\", \"pr-0\", \"pl-0\", \"col-lg-6\", \"mpb-3\"], [\"id\", \"health-network-realtime-rate\", \"class\", \"card m-10\", 4, \"ngIf\"], [1, \"col-12\", \"col-md-12\", \"pr-0\", \"col-lg-6\"], [\"id\", \"health-network-realtime-packet\", \"class\", \"card m-10\", 4, \"ngIf\"], [1, \"row\", \"mt-5\"], [\"class\", \"col-md-12\", 4, \"ngFor\", \"ngForOf\"], [1, \"test\"], [1, \"mx-2\"], [1, \"primary\", \"fas\", \"fa-plus\", 3, \"click\"], [1, \"text-center\"], [\"colspan\", \"5\"], [\"colspan\", \"6\"], [\"id\", \"health-network-realtime-rate\", 1, \"card\", \"m-10\"], [\"id\", \"ngx-stream-path-chart-rate\", 1, \"\"], [3, \"chartName\", \"yAxixTitle\", \"data\", \"time\", \"windowLen\", \"selectedFilter\", \"selectedRegion\", \"selectedLocation\", \"selectedSystem\", \"history\", 4, \"ngIf\"], [3, \"chartName\", \"yAxixTitle\", \"data\", \"time\", \"windowLen\", \"selectedFilter\", \"selectedRegion\", \"selectedLocation\", \"selectedSystem\", \"history\"], [\"id\", \"health-network-realtime-packet\", 1, \"card\", \"m-10\"], [\"id\", \"ngx-stream-path-chart-packet\", 1, \"\"], [1, \"col-md-12\"], [3, \"windowLen\", \"selectedTime\", \"monitorId\", \"Position\", \"region\", \"location\", \"system\", \"ponPorts\", \"IsDuplicate\", \"startTime\", \"replay\", \"locationUuid\", \"regionUuid\", \"systemUuid\", \"valueChange\"], [1, \"modal-header\", \"d-block\"], [\"id\", \"showInfoModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"add-device-model\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"primary\", \"px-3\", \"px-3\", 3, \"click\"]],\n    template: function RealtimeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RealtimeComponent_div_0_Template, 2, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, RealtimeComponent_div_1_Template, 39, 31, \"div\", 1);\n        i0.ɵɵtemplate(2, RealtimeComponent_div_2_Template, 7, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, RealtimeComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵtemplate(4, RealtimeComponent_section_4_Template, 99, 49, \"section\", 4);\n        i0.ɵɵtemplate(5, RealtimeComponent_ng_template_5_Template, 10, 3, \"ng-template\", 5, 6, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n      }\n    },\n    directives: [i12.NgIf, i13.NgSelectComponent, i14.NgControlStatus, i14.NgModel, i12.NgForOf, i13.ɵh, i13.ɵf, i13.ɵr, i15.StreamChartComponent, i16.PonportChartComponent],\n    styles: [\"@charset \\\"UTF-8\\\";.health-pon-menu-wrapper[_ngcontent-%COMP%]{display:flex;width:100%;flex-wrap:wrap;justify-content:space-between;align-items:center}.health-pon-menu-item[_ngcontent-%COMP%]{flex-grow:1;border-left:3px solid #cdcdcd}.health-pon-menu-item[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-weight:600}.health-pon-menu-item[_ngcontent-%COMP%]   .menu-title[_ngcontent-%COMP%]{font-size:14px;font-weight:500}.health-pon-menu-item[_ngcontent-%COMP%]   .red[_ngcontent-%COMP%]{color:#ff3600}.health-pon-menu-item[_ngcontent-%COMP%]   .orange[_ngcontent-%COMP%]{color:#fc7235}.health-pon-menu-item[_ngcontent-%COMP%]   .blue[_ngcontent-%COMP%]{color:#72b4ff}.health-pon-menu-item[_ngcontent-%COMP%]   .yellow[_ngcontent-%COMP%]{color:#f3b426}.health-pon-menu-item[_ngcontent-%COMP%]   .green[_ngcontent-%COMP%]{color:#82bf00}.btn-secondary[_ngcontent-%COMP%]{color:#5f6165!important;background-color:#f8f8fa!important;border-color:#f8f8fa!important;padding:3px \\\\200b 10px}.all-icon[_ngcontent-%COMP%]{font-size:10px;color:#9c9c9c;line-height:31px}.undo-icon[_ngcontent-%COMP%]{background-color:#f8f8fa;padding:3px;color:#9e9e9e;border-radius:15px;margin:2px;font-size:17px;cursor:pointer;width:30px;height:30px;text-align:center}.current-issue-menu-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between;aling-items:center;margin:0;justify-self:start}.current-issue-menu-item[_ngcontent-%COMP%]{flex-grow:0;width:16%}.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.subscriber-trends-item[_ngcontent-%COMP%]{flex-grow:1;width:calc(100% / 3)}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:5%}.cco-health-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-top:none}.cco-health-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .test[_ngcontent-%COMP%]{display:block;font-size:13px;cursor:pointer;float:right}.cco-secondary-title[_ngcontent-%COMP%]{font-size:24px;font-style:normal;font-weight:400;line-height:30px;letter-spacing:0em;text-align:left;color:#1a1f22}@media screen and (max-width: 767px){.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:block}.subscriber-trends-item[_ngcontent-%COMP%]{width:100%}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:0%!important}.md-block[_ngcontent-%COMP%]{display:block!important}.mpb-3[_ngcontent-%COMP%]{padding-bottom:15px}}@media screen and (min-width: 768px) and (max-width: 1140px){.subscriber-trends-wrapper[_ngcontent-%COMP%]{display:block}.subscriber-trends-item[_ngcontent-%COMP%]{width:100%}.subscriber-trends-item[_ngcontent-%COMP%] + .subscriber-trends-item[_ngcontent-%COMP%]{margin-left:0%!important}.md-block[_ngcontent-%COMP%]{display:block!important}.mpb-3[_ngcontent-%COMP%]{padding-bottom:15px}}.expand-icon[_ngcontent-%COMP%]{background-color:#ebeaef;color:#ebeaef;width:25px;height:25px;border-radius:20px;font-size:1px;text-align:center;line-height:24px;font-weight:normal;justify-content:center;background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg);background-position:50%;background-repeat:no-repeat}.expand-inverted-icon[_ngcontent-%COMP%]{background-color:#ebeaef;color:#ebeaef;width:25px;height:25px;border-radius:20px;font-size:1px;text-align:center;line-height:24px;font-weight:normal;justify-content:center;background-image:url(ic_expand_inverted_grey.044960530517ee37a1a9.svg);background-position:50%;background-repeat:no-repeat}.text-sm-ellipse[_ngcontent-%COMP%]{position:relative}.text-sm-ellipse[_ngcontent-%COMP%]   .overflw-title[_ngcontent-%COMP%]{padding-right:30px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.text-sm-ellipse[_ngcontent-%COMP%]   .expand-icon[_ngcontent-%COMP%]{position:absolute;top:0;right:0px}.sorting-th-alt[_ngcontent-%COMP%]:after{bottom:8px!important;right:auto!important;margin-left:6px;height:16px!important}\"]\n  });\n  return RealtimeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}