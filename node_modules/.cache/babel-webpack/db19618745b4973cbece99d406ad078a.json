{"ast":null,"code":"import { transform as svgTransform, createTransform } from 'tiny-svg';\n\n/**\r\n * @param {<SVGElement>} element\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} angle\r\n * @param {number} amount\r\n */\nexport function transform(gfx, x, y, angle, amount) {\n  var translate = createTransform();\n  translate.setTranslate(x, y);\n  var rotate = createTransform();\n  rotate.setRotate(angle || 0, 0, 0);\n  var scale = createTransform();\n  scale.setScale(amount || 1, amount || 1);\n  svgTransform(gfx, [translate, rotate, scale]);\n}\n\n/**\r\n * @param {SVGElement} element\r\n * @param {number} x\r\n * @param {number} y\r\n */\nexport function translate(gfx, x, y) {\n  var translate = createTransform();\n  translate.setTranslate(x, y);\n  svgTransform(gfx, translate);\n}\n\n/**\r\n * @param {SVGElement} element\r\n * @param {number} angle\r\n */\nexport function rotate(gfx, angle) {\n  var rotate = createTransform();\n  rotate.setRotate(angle, 0, 0);\n  svgTransform(gfx, rotate);\n}\n\n/**\r\n * @param {SVGElement} element\r\n * @param {number} amount\r\n */\nexport function scale(gfx, amount) {\n  var scale = createTransform();\n  scale.setScale(amount, amount);\n  svgTransform(gfx, scale);\n}","map":null,"metadata":{},"sourceType":"module"}