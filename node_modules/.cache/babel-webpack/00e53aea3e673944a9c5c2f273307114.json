{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ThresholdService = /*#__PURE__*/(() => {\n  class ThresholdService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseURL = environment.API_BASE_URL;\n      this.threshold = this.baseURL + 'health/config/thresholds';\n    }\n    getThresholds() {\n      return this.httpClient.get(`${this.threshold}`).pipe(catchError(this.handleError));\n    }\n    AddThresholds(data) {\n      return this.httpClient.post(this.threshold, data).pipe(catchError(this.handleError));\n    }\n    updateThreshold(data) {\n      return this.httpClient.put(this.threshold, data).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n  }\n  ThresholdService.ɵfac = function ThresholdService_Factory(t) {\n    return new (t || ThresholdService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ThresholdService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThresholdService,\n    factory: ThresholdService.ɵfac,\n    providedIn: 'root'\n  });\n  return ThresholdService;\n})();","map":null,"metadata":{},"sourceType":"module"}