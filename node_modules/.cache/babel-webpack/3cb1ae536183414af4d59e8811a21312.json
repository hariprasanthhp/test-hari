{"ast":null,"code":"import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction NgxJsonViewerComponent_section_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n  }\n}\nfunction NgxJsonViewerComponent_section_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.description);\n  }\n}\nfunction NgxJsonViewerComponent_section_1_section_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"section\", 11);\n    ɵngcc0.ɵɵelement(1, \"ngx-json-viewer\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"json\", segment_r1.value)(\"expanded\", ctx_r4.expanded);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"segment\", a1];\n};\nconst _c1 = function (a1, a2) {\n  return {\n    \"segment-main\": true,\n    \"expandable\": a1,\n    \"expanded\": a2\n  };\n};\nfunction NgxJsonViewerComponent_section_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"section\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"section\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxJsonViewerComponent_section_1_Template_section_click_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8);\n      const segment_r1 = restoredCtx.$implicit;\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.toggle(segment_r1);\n    });\n    ɵngcc0.ɵɵtemplate(2, NgxJsonViewerComponent_section_1_div_2_Template, 1, 0, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 5);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 6);\n    ɵngcc0.ɵɵtext(6, \": \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, NgxJsonViewerComponent_section_1_span_7_Template, 2, 1, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, NgxJsonViewerComponent_section_1_section_8_Template, 2, 2, \"section\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c0, \"segment-type-\" + segment_r1.type));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c1, ctx_r0.isExpandable(segment_r1), segment_r1.expanded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.key);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !segment_r1.expanded || !ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.expanded && ctx_r0.isExpandable(segment_r1));\n  }\n}\nlet NgxJsonViewerComponent = /*#__PURE__*/(() => {\n  class NgxJsonViewerComponent {\n    constructor() {\n      this.expanded = true;\n      /**\n       * @deprecated It will be always true and deleted in version 3.0.0\n       */\n      this.cleanOnChange = true;\n      this.segments = [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n      if (this.cleanOnChange) {\n        this.segments = [];\n      }\n      if (typeof this.json === 'object') {\n        Object.keys(this.json).forEach(key => {\n          this.segments.push(this.parseKeyValue(key, this.json[key]));\n        });\n      } else {\n        this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\n      }\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    isExpandable(segment) {\n      return segment.type === 'object' || segment.type === 'array';\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    toggle(segment) {\n      if (this.isExpandable(segment)) {\n        segment.expanded = !segment.expanded;\n      }\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    parseKeyValue(key, value) {\n      const /** @type {?} */segment = {\n        key: key,\n        value: value,\n        type: undefined,\n        description: '' + value,\n        expanded: this.expanded\n      };\n      switch (typeof segment.value) {\n        case 'number':\n          {\n            segment.type = 'number';\n            break;\n          }\n        case 'boolean':\n          {\n            segment.type = 'boolean';\n            break;\n          }\n        case 'function':\n          {\n            segment.type = 'function';\n            break;\n          }\n        case 'string':\n          {\n            segment.type = 'string';\n            segment.description = '\"' + segment.value + '\"';\n            break;\n          }\n        case 'undefined':\n          {\n            segment.type = 'undefined';\n            segment.description = 'undefined';\n            break;\n          }\n        case 'object':\n          {\n            // yea, null is object\n            if (segment.value === null) {\n              segment.type = 'null';\n              segment.description = 'null';\n            } else if (Array.isArray(segment.value)) {\n              segment.type = 'array';\n              segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n            } else if (segment.value instanceof Date) {\n              segment.type = 'date';\n            } else {\n              segment.type = 'object';\n              segment.description = 'Object ' + JSON.stringify(segment.value);\n            }\n            break;\n          }\n      }\n      return segment;\n    }\n  }\n  NgxJsonViewerComponent.ɵfac = function NgxJsonViewerComponent_Factory(t) {\n    return new (t || NgxJsonViewerComponent)();\n  };\n  NgxJsonViewerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxJsonViewerComponent,\n    selectors: [[\"ngx-json-viewer\"]],\n    inputs: {\n      expanded: \"expanded\",\n      cleanOnChange: \"cleanOnChange\",\n      json: \"json\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"ngx-json-viewer\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"ngClass\", \"click\"], [\"class\", \"toggler\", 4, \"ngIf\"], [1, \"segment-key\"], [1, \"segment-separator\"], [\"class\", \"segment-value\", 4, \"ngIf\"], [\"class\", \"children\", 4, \"ngIf\"], [1, \"toggler\"], [1, \"segment-value\"], [1, \"children\"], [3, \"json\", \"expanded\"]],\n    template: function NgxJsonViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"section\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgxJsonViewerComponent_section_1_Template, 9, 11, \"section\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf, NgxJsonViewerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\n    .ngx-json-viewer[_ngcontent-%COMP%] {\\n      font-family: monospace;\\n      font-size: 1em;\\n      width: 100%;\\n      height: 100%;\\n      overflow: hidden;\\n      position: relative; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%] {\\n        padding: 2px;\\n        margin: 1px 1px 1px 12px; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%] {\\n          word-wrap: break-word; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%] {\\n            position: absolute;\\n            margin-left: -14px;\\n            margin-top: 3px;\\n            font-size: .8em;\\n            line-height: 1.2em;\\n            vertical-align: middle;\\n            color: #787878; }\\n            .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%]::after {\\n              display: inline-block;\\n              content: \\\"\\u25BA\\\";\\n              -webkit-transition: -webkit-transform 0.1s ease-in;\\n              transition: -webkit-transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-key[_ngcontent-%COMP%] {\\n            color: #4E187C; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-separator[_ngcontent-%COMP%] {\\n            color: #999; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-value[_ngcontent-%COMP%] {\\n            color: #000; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .children[_ngcontent-%COMP%] {\\n          margin-left: 12px; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-string[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #FF6B6B; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-number[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #009688; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-boolean[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #b938a4; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-date[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #05668D; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-function[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: red; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-key[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%] {\\n        white-space: nowrap; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expanded[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%]::after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg); }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%] {\\n        cursor: pointer; }\"]\n  });\n  /**\n   * @nocollapse\n   */\n  return NgxJsonViewerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgxJsonViewerModule = /*#__PURE__*/(() => {\n  class NgxJsonViewerModule {}\n  NgxJsonViewerModule.ɵfac = function NgxJsonViewerModule_Factory(t) {\n    return new (t || NgxJsonViewerModule)();\n  };\n  NgxJsonViewerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxJsonViewerModule\n  });\n  NgxJsonViewerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  /**\n   * @nocollapse\n   */\n  return NgxJsonViewerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxJsonViewerModule, {\n    declarations: function () {\n      return [NgxJsonViewerComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgxJsonViewerComponent];\n    }\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxJsonViewerModule, NgxJsonViewerComponent };\n\n//# sourceMappingURL=ngx-json-viewer.js.map","map":null,"metadata":{},"sourceType":"module"}