{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { environment } from '../../../../../environments/environment';\nimport * as jquery from 'jquery';\nimport * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../reports.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../../data.service\";\nimport * as i6 from \"../../../../shared/services/sso-auth.service\";\nimport * as i7 from \"../../../../shared-utils/date-utils.service\";\nimport * as i8 from \"../../../../../app-services/validator.services\";\nimport * as i9 from \"../../operations/services/device-group.service\";\nimport * as i10 from \"../../../../shared/services/download.service\";\nimport * as i11 from \"@angular/platform-browser\";\nimport * as i12 from \"src/app/shared/services/common-functions.service\";\nimport * as i13 from \"@angular/forms\";\nimport * as i14 from \"@ng-select/ng-select\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"primeng/calendar\";\nimport * as i17 from \"../../unassociated-devices/unassociated-devices.component\";\nimport * as i18 from \"angular-datatables\";\nfunction InventoryReportComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r12 = ctx.item;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[item_r12.name], \" \");\n  }\n}\nfunction InventoryReportComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.item;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[item_r13.name], \" \");\n  }\n}\nfunction InventoryReportComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Select_Type_Reports, \" \");\n  }\n}\nfunction InventoryReportComponent_div_33_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.language.Time_Period_Report_Error, \" \");\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction InventoryReportComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"label\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 15);\n    i0.ɵɵtext(4, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 32);\n    i0.ɵɵelementStart(6, \"ng-select\", 33, 34);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_33_Template_ng_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.devicetime = $event;\n    })(\"change\", function InventoryReportComponent_div_33_Template_ng_select_change_6_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onChangeTimePeriod();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, InventoryReportComponent_div_33_div_8_Template, 2, 1, \"div\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r15 = i0.ɵɵreference(7);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Time_Period);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.devicetime)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0))(\"items\", ctx_r4.timeperiods)(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r15.invalid && (_r15.touched || ctx_r4.submit));\n  }\n}\nfunction InventoryReportComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"label\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 15);\n    i0.ɵɵtext(4, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 38);\n    i0.ɵɵelementStart(6, \"ng-select\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_34_Template_ng_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.deviceGroup = $event;\n    })(\"change\", function InventoryReportComponent_div_34_Template_ng_select_change_6_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onChangeDeviceGroup();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 40);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language.Device_Group);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.deviceGroup)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0))(\"items\", ctx_r5.deviceGroups);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.language[\"Please select a system group\"]);\n  }\n}\nfunction InventoryReportComponent_div_35_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r23.language[\"Select a start date that occurs before the end date\"], \" \");\n  }\n}\nfunction InventoryReportComponent_div_35_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r24.language[\"Select an end date that occurs after the start date\"], \" \");\n  }\n}\nconst _c1 = function () {\n  return {\n    height: \"36px\"\n  };\n};\nfunction InventoryReportComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵelementStart(3, \"div\", 44);\n    i0.ɵɵelementStart(4, \"div\", 45);\n    i0.ɵɵelementStart(5, \"div\", 46);\n    i0.ɵɵelementStart(6, \"label\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"p-calendar\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_35_Template_p_calendar_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.customStartDate = $event;\n    })(\"onSelect\", function InventoryReportComponent_div_35_Template_p_calendar_onSelect_8_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.onchangeStartDate();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 48);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, InventoryReportComponent_div_35_div_11_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 49);\n    i0.ɵɵelementStart(13, \"div\", 50);\n    i0.ɵɵelementStart(14, \"label\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementStart(16, \"p-calendar\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_35_Template_p_calendar_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.customEndDate = $event;\n    })(\"onSelect\", function InventoryReportComponent_div_35_Template_p_calendar_onSelect_16_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.onchangeEndDate();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 51);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, InventoryReportComponent_div_35_div_19_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.language.Start, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c1));\n    i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(25, _c1))(\"autoZIndex\", true)(\"ngModel\", ctx_r6.customStartDate)(\"showIcon\", true)(\"ngModelOptions\", i0.ɵɵpureFunction0(26, _c0))(\"maxDate\", ctx_r6.maxForStartDate)(\"minDate\", ctx_r6.minDateForCse);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.Time_Period_Report_Validation2, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.startErrorMessage);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.language.End, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c1));\n    i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(28, _c1))(\"autoZIndex\", true)(\"ngModel\", ctx_r6.customEndDate)(\"showIcon\", true)(\"ngModelOptions\", i0.ɵɵpureFunction0(29, _c0))(\"maxDate\", ctx_r6.maxDate)(\"minDate\", ctx_r6.customStartDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.Time_Period_Report_Validation3, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.endErrorMessage);\n  }\n}\nfunction InventoryReportComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelementStart(1, \"label\", 53, 54);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 55);\n    i0.ɵɵelementStart(5, \"div\", 56);\n    i0.ɵɵelementStart(6, \"label\", 57);\n    i0.ɵɵelementStart(7, \"input\", 58);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_36_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.isTimePeriod = $event;\n    })(\"change\", function InventoryReportComponent_div_36_Template_input_change_7_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.toggleSwitch();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵelement(9, \"small\", 59);\n    i0.ɵɵelement(10, \"small\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.language.Not_In_Time_Period);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0))(\"ngModel\", ctx_r7.isTimePeriod);\n  }\n}\nfunction InventoryReportComponent_section_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelement(1, \"app-unassociated-devices\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InventoryReportComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 66);\n  }\n}\nfunction InventoryReportComponent_div_41_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", ctx_r35.language[\"Total CPE Count\"], \" : \", ctx_r35.cpeCount, \", \", ctx_r35.language.Total_Firmware_Count, \" : \", ctx_r35.firmwareCount, \" \");\n  }\n}\nfunction InventoryReportComponent_div_41_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 68);\n    i0.ɵɵelementStart(1, \"i\", 69);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_3_Template_i_click_1_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return ctx_r40.downloadSftwreReport();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"h4\", 70);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_3_Template_h4_click_2_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return ctx_r42.downloadSftwreReport();\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r36.language.export);\n  }\n}\nfunction InventoryReportComponent_div_41_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"section\", 71);\n    i0.ɵɵelementStart(2, \"div\", 44);\n    i0.ɵɵelementStart(3, \"div\", 72);\n    i0.ɵɵelementStart(4, \"div\", 73);\n    i0.ɵɵelementStart(5, \"div\", 74);\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵelementStart(7, \"label\", 75);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 64);\n    i0.ɵɵelementStart(10, \"ng-select\", 76);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_41_div_5_Template_ng_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return ctx_r43.manufacturer = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 74);\n    i0.ɵɵelementStart(12, \"div\");\n    i0.ɵɵelementStart(13, \"label\", 77);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 78);\n    i0.ɵɵelementStart(16, \"ng-select\", 79);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_41_div_5_Template_ng_select_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return ctx_r45.modelName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 74);\n    i0.ɵɵelementStart(18, \"div\");\n    i0.ɵɵelementStart(19, \"label\", 80);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 78);\n    i0.ɵɵelementStart(22, \"ng-select\", 81);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_41_div_5_Template_ng_select_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return ctx_r46.opmode = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 74);\n    i0.ɵɵelementStart(24, \"div\", 82);\n    i0.ɵɵelementStart(25, \"label\", 83);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 64);\n    i0.ɵɵelementStart(28, \"input\", 84);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_41_div_5_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return ctx_r47.serialNumber = $event;\n    })(\"blur\", function InventoryReportComponent_div_41_div_5_Template_input_blur_28_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return ctx_r48.removeUnwantedSpace(\"serialNumber\", ctx_r48.serialNumber);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 74);\n    i0.ɵɵelementStart(30, \"div\", 82);\n    i0.ɵɵelementStart(31, \"label\", 83);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 64);\n    i0.ɵɵelementStart(34, \"input\", 85);\n    i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_div_41_div_5_Template_input_ngModelChange_34_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return ctx_r49.subscriber = $event;\n    })(\"blur\", function InventoryReportComponent_div_41_div_5_Template_input_blur_34_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return ctx_r50.removeUnwantedSpace(\"subscriber\", ctx_r50.subscriber);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 86);\n    i0.ɵɵelementStart(36, \"div\", 87);\n    i0.ɵɵelementStart(37, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_5_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return ctx_r51.doFilter();\n    });\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 87);\n    i0.ɵɵelementStart(40, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_5_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return ctx_r52.clearFilters();\n    });\n    i0.ɵɵtext(41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r37.language.manufacturer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r37.manufacturer)(\"items\", ctx_r37.dropdwonOutData[\"manufacturer\"])(\"ngModelOptions\", i0.ɵɵpureFunction0(24, _c0))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r37.language.Model_Name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r37.modelName)(\"items\", ctx_r37.dropdwonOutData[\"model\"])(\"ngModelOptions\", i0.ɵɵpureFunction0(25, _c0))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r37.language.Mode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r37.opmode)(\"items\", ctx_r37.modes)(\"ngModelOptions\", i0.ɵɵpureFunction0(26, _c0))(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r37.language.Serial_Number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r37.serialNumber);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r37.language.Subscriber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r37.subscriber);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r37.language.run, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r37.language.Clear_Filters, \" \");\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 94);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_6_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r56);\n      const ctx_r55 = i0.ɵɵnextContext(3);\n      return ctx_r55.export();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r53.language.export, \" \");\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_tr_31_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r67 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 106);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_6_div_3_tr_31_a_4_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r67);\n      const data_r58 = i0.ɵɵnextContext().$implicit;\n      const ctx_r65 = i0.ɵɵnextContext(4);\n      return ctx_r65.navigateToTroubleShootPage(data_r58);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r58 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r58.subscriberName);\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_tr_31_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const data_r58 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(data_r58.subscriberName);\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_tr_31_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r72 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 106);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_41_div_6_div_3_tr_31_a_8_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r72);\n      const data_r58 = i0.ɵɵnextContext().$implicit;\n      const ctx_r70 = i0.ɵɵnextContext(4);\n      return ctx_r70.clickSerialNumber(data_r58);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r58 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r58.serialnumber);\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_tr_31_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const data_r58 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(data_r58.serialnumber);\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, InventoryReportComponent_div_41_div_6_div_3_tr_31_a_4_Template, 2, 1, \"a\", 103);\n    i0.ɵɵtemplate(5, InventoryReportComponent_div_41_div_6_div_3_tr_31_ng_template_5_Template, 1, 1, \"ng-template\", null, 104, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, InventoryReportComponent_div_41_div_6_div_3_tr_31_a_8_Template, 2, 1, \"a\", 103);\n    i0.ɵɵtemplate(9, InventoryReportComponent_div_41_div_6_div_3_tr_31_ng_template_9_Template, 1, 1, \"ng-template\", null, 105, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"td\");\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"td\");\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r58 = ctx.$implicit;\n    const _r60 = i0.ɵɵreference(6);\n    const _r63 = i0.ɵɵreference(10);\n    const ctx_r57 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.subscriberId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r57.sso.getCscType() !== \"DME\")(\"ngIfElse\", _r60);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r57.routerTabRead)(\"ngIfElse\", _r63);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r58.opmode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.manufacturer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.modelname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.registrationid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.softwareversion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.hardwareversion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.ipaddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r58.macaddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(29, 15, data_r58.lastdiscovertimestamp, \"MM/dd/yyyy, HH:mm:ss\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(32, 18, data_r58.lastinformtime, \"MM/dd/yyyy, HH:mm:ss\"));\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 95);\n    i0.ɵɵelementStart(1, \"table\", 96);\n    i0.ɵɵelementStart(2, \"thead\", 97);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\", 98);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 98);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 98);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 98);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 98);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 98);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\", 98);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\", 98);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\", 98);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"th\", 98);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"th\", 99);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"th\", 100);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\", 101);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"tbody\");\n    i0.ɵɵtemplate(31, InventoryReportComponent_div_41_div_6_div_3_tr_31_Template, 33, 21, \"tr\", 102);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r54 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r54.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Subscriber_Location_ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Subscriber_Name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"FSAN/\", ctx_r54.language.Serial_Number, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Mode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.manufacturer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.model);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Registration_ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Software_Version);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Hardware_Version);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.IP_Address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.MAC_Address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Last_Discovered_Time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r54.language.Last_Inform_Time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r54.inventoryTableData);\n  }\n}\nfunction InventoryReportComponent_div_41_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 90);\n    i0.ɵɵelementStart(1, \"div\", 91);\n    i0.ɵɵtemplate(2, InventoryReportComponent_div_41_div_6_button_2_Template, 2, 1, \"button\", 92);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, InventoryReportComponent_div_41_div_6_div_3_Template, 32, 15, \"div\", 93);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r38.showSwapReport);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r38.showSwapReport);\n  }\n}\nfunction InventoryReportComponent_div_41_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 107);\n    i0.ɵɵelementStart(1, \"div\", 108);\n    i0.ɵɵelementStart(2, \"div\", 109);\n    i0.ɵɵelementStart(3, \"span\", 110);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r39.language.Loading);\n  }\n}\nfunction InventoryReportComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, InventoryReportComponent_div_41_div_1_Template, 1, 0, \"div\", 61);\n    i0.ɵɵtemplate(2, InventoryReportComponent_div_41_div_2_Template, 2, 4, \"div\", 62);\n    i0.ɵɵtemplate(3, InventoryReportComponent_div_41_div_3_Template, 4, 1, \"div\", 63);\n    i0.ɵɵelementStart(4, \"div\", 64);\n    i0.ɵɵtemplate(5, InventoryReportComponent_div_41_div_5_Template, 42, 27, \"div\", 27);\n    i0.ɵɵtemplate(6, InventoryReportComponent_div_41_div_6_Template, 4, 2, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, InventoryReportComponent_div_41_div_7_Template, 5, 1, \"div\", 65);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.softwareversion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.softwareversion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.softwareversion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.showFilters && !ctx_r9.showSwapReport);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.CountRecieved);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.loading);\n  }\n}\nfunction InventoryReportComponent_div_42_div_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r80 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 120);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_42_div_1_button_6_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r79 = i0.ɵɵnextContext(3);\n      return ctx_r79.closeicon($event.target.value);\n    });\n    i0.ɵɵelement(1, \"span\", 121);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InventoryReportComponent_div_42_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r82 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 122);\n    i0.ɵɵelementStart(1, \"button\", 123);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_42_div_1_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r82);\n      const ctx_r81 = i0.ɵɵnextContext(3);\n      return ctx_r81.exportSwapReport();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r78 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r78.noRecordsFound);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r78.language.export, \" \");\n  }\n}\nfunction InventoryReportComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r84 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 113);\n    i0.ɵɵelementStart(1, \"div\", 114);\n    i0.ɵɵelementStart(2, \"div\", 115);\n    i0.ɵɵelementStart(3, \"label\", 116);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 117);\n    i0.ɵɵlistener(\"keyup\", function InventoryReportComponent_div_42_div_1_Template_input_keyup_5_listener($event) {\n      i0.ɵɵrestoreView(_r84);\n      const ctx_r83 = i0.ɵɵnextContext(2);\n      return ctx_r83.search($event.target.value);\n    })(\"search\", function InventoryReportComponent_div_42_div_1_Template_input_search_5_listener($event) {\n      i0.ɵɵrestoreView(_r84);\n      const ctx_r85 = i0.ɵɵnextContext(2);\n      return ctx_r85.search($event.target.value);\n    })(\"ngModelChange\", function InventoryReportComponent_div_42_div_1_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r84);\n      const ctx_r86 = i0.ɵɵnextContext(2);\n      return ctx_r86.searchtext = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, InventoryReportComponent_div_42_div_1_button_6_Template, 2, 0, \"button\", 118);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, InventoryReportComponent_div_42_div_1_div_7_Template, 3, 2, \"div\", 119);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r75 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r75.language.Filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r75.searchtext);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r75.showcloseicon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r75.showSwapReport);\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_tbody_22_tr_1_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r96 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 106);\n    i0.ɵɵlistener(\"click\", function InventoryReportComponent_div_42_div_2_tbody_22_tr_1_a_6_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r96);\n      const data_r90 = i0.ɵɵnextContext().$implicit;\n      const ctx_r94 = i0.ɵɵnextContext(4);\n      return ctx_r94.navigateToTroubleShootPage(data_r90);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r90 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r90.subscriberName);\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_tbody_22_tr_1_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const data_r90 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(data_r90.subscriberName);\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_tbody_22_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, InventoryReportComponent_div_42_div_2_tbody_22_tr_1_a_6_Template, 2, 1, \"a\", 103);\n    i0.ɵɵtemplate(7, InventoryReportComponent_div_42_div_2_tbody_22_tr_1_ng_template_7_Template, 1, 1, \"ng-template\", null, 104, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r90 = ctx.$implicit;\n    const _r92 = i0.ɵɵreference(8);\n    const ctx_r89 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.subscriberLocalId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.subscriberAccount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.sso.getCscType() !== \"DME\")(\"ngIfElse\", _r92);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r90.oldSystemFsan);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.oldSystemMac);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.oldSystemRegId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.newSystemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r90.swapInitializedTime == null ? \"-\" : data_r90.swapInitializedTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(21, 10, data_r90.oldSystemLastInformTime, \"yyyy-MM-dd, HH:mm:ss\"));\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_tbody_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, InventoryReportComponent_div_42_div_2_tbody_22_tr_1_Template, 22, 13, \"tr\", 102);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r87 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r87.swapReportsData);\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_tfoot_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 127);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 128);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r88 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r88.language[\"No Data Available\"]);\n  }\n}\nfunction InventoryReportComponent_div_42_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 124);\n    i0.ɵɵelementStart(1, \"table\", 125);\n    i0.ɵɵelementStart(2, \"thead\", 97);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\", 98);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 98);\n    i0.ɵɵtext(7, \"Account ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 98);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 98);\n    i0.ɵɵtext(11, \"Old FSAN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 98);\n    i0.ɵɵtext(13, \"Old MAC Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 98);\n    i0.ɵɵtext(15, \"Old Registration Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\", 98);\n    i0.ɵɵtext(17, \"New System Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\", 98);\n    i0.ɵɵtext(19, \"Swap Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\", 98);\n    i0.ɵɵtext(21, \"Old System Last Inform Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, InventoryReportComponent_div_42_div_2_tbody_22_Template, 2, 1, \"tbody\", 27);\n    i0.ɵɵtemplate(23, InventoryReportComponent_div_42_div_2_tfoot_23_Template, 4, 1, \"tfoot\", 126);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r76 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r76.dtOptionsSwap);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r76.language.Subscriber_Location_ID);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r76.language.Subscriber_Name);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r76.noRecordsFound);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r76.noRecordsFound);\n  }\n}\nfunction InventoryReportComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 90);\n    i0.ɵɵtemplate(1, InventoryReportComponent_div_42_div_1_Template, 8, 4, \"div\", 111);\n    i0.ɵɵtemplate(2, InventoryReportComponent_div_42_div_2_Template, 24, 5, \"div\", 112);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.showSwapReport);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.showSwapReport);\n  }\n}\nfunction InventoryReportComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 129);\n    i0.ɵɵelementStart(1, \"h4\", 130);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r11.language.No_Result_Found);\n  }\n}\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let InventoryReportComponent = /*#__PURE__*/(() => {\n  class InventoryReportComponent {\n    constructor(translateService, http, cdr, reportService, router, service, sso, dateUtils, validatorService, deviceGroupService, el, downloadService, titleService, CommonFunctionsService) {\n      this.translateService = translateService;\n      this.http = http;\n      this.cdr = cdr;\n      this.reportService = reportService;\n      this.router = router;\n      this.service = service;\n      this.sso = sso;\n      this.dateUtils = dateUtils;\n      this.validatorService = validatorService;\n      this.deviceGroupService = deviceGroupService;\n      this.el = el;\n      this.downloadService = downloadService;\n      this.titleService = titleService;\n      this.CommonFunctionsService = CommonFunctionsService;\n      this.maxDate = new Date();\n      this.maxForStartDate = new Date();\n      this.minDateForCse = this.router.url.includes('support/router') ? new Date(new Date().setDate(new Date().getDate() - 90)) : new Date('1970');\n      this.showNoResults = false;\n      this.showFilters = false;\n      this.devicetime = '';\n      this.isError = false;\n      this.deviceDate = '';\n      this.deviceGroup = '';\n      this.startErrorMessage = false;\n      this.endErrorMessage = false;\n      this.inventoryTableData = [];\n      this.softwareVersionChart = [];\n      this.manufacture = \"\";\n      this.modName = \"\";\n      this.mode = \"\";\n      this.CountRecieved = false;\n      this.noRecordsFound = false;\n      this.hideNotInTimePeriod = false;\n      this.softwareversion = false;\n      this.unassosSystem = false;\n      this.hasWriteAccess = false;\n      this.customStartDate = 0;\n      this.customEndDate = 0;\n      this.routerTabRead = false;\n      this.inventoryReports = [];\n      // maxDate = new Date();\n      this.isOnLoadBtn = false;\n      this.dtTrigger = new Subject();\n      this.tableOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthChange: false,\n        processing: true,\n        dom: 'tipr',\n        order: [0, 'asc']\n      };\n      this.timePeriod = ['Last 30 days', 'Last 60 days', 'Last 90 days'];\n      this.reportTypes = [{\n        id: '',\n        name: ''\n      }, {\n        id: 'DiscoveredDevice',\n        name: 'Discovered System'\n      }, {\n        id: 'DevicesNotCheckedIn',\n        name: 'Systems Not Checked In'\n      }, {\n        id: 'DeviceCheckedIn',\n        name: 'Systems Checked In'\n      }, {\n        id: 'GroupedDevices',\n        name: 'Grouped Systems'\n      }, {\n        id: 'Software',\n        name: 'Software Versions'\n      }, {\n        id: 'SwapPendingReport',\n        name: 'Swapped Systems'\n      }];\n      this.timeperiods = [{\n        id: '',\n        name: ''\n      }, {\n        id: 1,\n        name: 'Day'\n      }, {\n        id: 7,\n        name: 'Past Week'\n      }, {\n        id: 30,\n        name: 'Past Month'\n      }, {\n        id: 'custom',\n        name: 'Customized Time Period'\n      }];\n      this.manufactures = [{\n        id: '0',\n        name: ''\n      }, {\n        id: 'ZyXEL',\n        name: 'ZyXEL'\n      }, {\n        id: 'Calix',\n        name: 'Calix'\n      }, {\n        id: 'SmartRG',\n        name: 'SmartRG'\n      }];\n      this.modNames = [{\n        id: '0',\n        name: ''\n      }, {\n        id: 'VMG4825-B10A',\n        name: 'VMG4825-B10A'\n      }, {\n        id: 'GS2026E',\n        name: 'GS2026E'\n      }, {\n        id: 'GS4220E',\n        name: 'GS4220E'\n      }];\n      this.modes = [{\n        id: '',\n        name: ''\n      }, {\n        id: 'RG',\n        name: 'RG'\n      }, {\n        id: 'Modem',\n        name: 'Modem'\n      }, {\n        id: 'Managed ONT',\n        name: 'Managed ONT'\n      }, {\n        id: 'WAP-IGMP',\n        name: 'WAP-IGMP'\n      }, {\n        id: 'WAP',\n        name: 'WAP'\n      }\n      // { id: 'SmartTown', name: 'SmartTown' },\n      // { id: 'SmartBiz', name: 'SmartBiz' },\n      ];\n\n      this.deviceGroups = [{\n        id: 'anne_844G',\n        name: 'anne_844G'\n      }, {\n        id: 'lai_CXNK005C6752',\n        name: 'lai_CXNK005C6752'\n      }, {\n        id: 'CXNK005A85CF',\n        name: 'CXNK005A85CF'\n      }, {\n        id: 'Ray_Topo2_RG',\n        name: 'Ray_Topo2_RG'\n      }, {\n        id: 'Jason_GS2026E_Satellite',\n        name: 'Jason_GS2026E_Satellite'\n      }];\n      this.isTimePeriod = false;\n      this.initLoad = false;\n      this.hasScopeAccess = false;\n      this.alertMessage = '';\n      this.showSwapReport = false;\n      this.showTime = true;\n      this.searchtext = '';\n      this.showcloseicon = false;\n      this.initLoadSwap = false;\n      this.startTime = 0;\n      this.endTime = 0;\n      this.manufacturer = '';\n      this.modelName = '';\n      this.opmode = '';\n      this.serialNumber = '';\n      this.subscriber = '';\n      this.inversely_time_period = false;\n      this.submit = false;\n      this.bttnDissable = false;\n      this.params = {};\n      this.showCustomTimePeriod = false;\n      this.showCustomDeviceGroup = false;\n      this.hideCustomSelect = false;\n      this.hideCalender = false;\n      this.hideTimePeriod = false;\n      this.totalSwapRecords = 0;\n      this.totalRecords = 0;\n      this.dtOptions = {\n        pagingType: \"full_numbers\",\n        pageLength: 15,\n        // responsive: true,\n        serverSide: true,\n        processing: false,\n        searching: false,\n        lengthChange: false,\n        ordering: false,\n        //scrollX: true,\n        dom: 'tipr'\n      };\n      this.dtOptionsSwap = {\n        pagingType: \"full_numbers\",\n        pageLength: 15,\n        serverSide: true,\n        processing: false,\n        searching: true,\n        ordering: true,\n        columnDefs: [{\n          targets: [5],\n          orderable: false\n        }, {\n          searchable: false,\n          targets: [0, 1, 2, 3, 4, 6, 7, 8],\n          orderable: true\n        }],\n        dom: 'tipr'\n      };\n      this.cpeCount = 0;\n      this.firmwareCount = 0;\n      this.softwareVersionsData = [];\n    }\n    ngAfterViewInit() {\n      this.timeperiods = [{\n        id: '',\n        name: ''\n      }, {\n        id: 1,\n        name: this.language['Day']\n      }, {\n        id: 7,\n        name: this.language['past_week']\n      }, {\n        id: 30,\n        name: this.language['past_month']\n      }, {\n        id: 'custom',\n        name: this.language['Customized Time Period']\n      }];\n      this.dtTrigger.next();\n    }\n    setTitle(url) {\n      if (!this.router.url.includes('cco/operations/cco-reports') && !this.router.url.includes('cco-foundation')) {\n        this.titleService.setTitle(`${this.language['Inventory_Report']} - ${this.language['Reports']} - ${this.language['NetOps']} - ${this.language['Service']} - ${this.language['Calix Cloud']}`);\n      } else if (this.router.url.includes('cco-foundation')) {\n        this.titleService.setTitle(`${this.language['Reports']} - ${this.language['Deployment']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.titleService.setTitle(`${this.language['Inventory_Report']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']}  - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      // this.titleService.setTitle('Calix Cloud - Reports - Inventory Reports');\n      this.appendDeviceGroup();\n      this.orgId = this.sso.getOrgId();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        // this.tableLanguageOptions();\n        // this.rerender();\n        this.setTitle(this.router.url); //after changing language to tab describtion\n        if (this.dtElement) {\n          this.redraw();\n        }\n        if (this.router.url.includes('cco-foundation')) {\n          this.reportTypes = [{\n            id: '',\n            name: ''\n          }, {\n            id: 'DiscoveredDevice',\n            name: 'Systems Discovered'\n          }, {\n            id: 'DevicesNotCheckedIn',\n            name: 'Systems Not Checked In'\n          }, {\n            id: 'DeviceCheckedIn',\n            name: 'Systems Checked In'\n          }, {\n            id: 'Unassosiated',\n            name: 'Systems Unassociated'\n          }, {\n            id: 'GroupedDevices',\n            name: 'Systems Groups'\n          }, {\n            id: 'Software',\n            name: 'Software Versions'\n          }, {\n            id: 'SwapPendingReport',\n            name: 'Systems Swapped'\n          }];\n        } else if (this.router.url.includes('cco/operations')) {\n          this.reportTypes = [{\n            id: '',\n            name: ''\n          }, {\n            id: 'DiscoveredDevice',\n            name: 'Discovered System'\n          }, {\n            id: 'DevicesNotCheckedIn',\n            name: 'Systems Not Checked In'\n          }, {\n            id: 'DeviceCheckedIn',\n            name: 'Systems Checked In'\n          }, {\n            id: 'GroupedDevices',\n            name: 'Grouped Systems'\n          }, {\n            id: 'Software',\n            name: 'Software Versions'\n          }];\n        } else {\n          this.reportTypes = [{\n            id: '',\n            name: ''\n          }, {\n            id: 'DiscoveredDevice',\n            name: 'Discovered System'\n          }, {\n            id: 'DevicesNotCheckedIn',\n            name: 'Systems Not Checked In'\n          }, {\n            id: 'DeviceCheckedIn',\n            name: 'Systems Checked In'\n          }, {\n            id: 'GroupedDevices',\n            name: 'Grouped Systems'\n          }, {\n            id: 'Software',\n            name: 'Software Versions'\n          }, {\n            id: 'SwapPendingReport',\n            name: 'Swapped Systems'\n          }];\n        }\n        this.timeperiods = [{\n          id: '',\n          name: ''\n        }, {\n          id: 1,\n          name: this.language['Day']\n        }, {\n          id: 7,\n          name: this.language['past_week']\n        }, {\n          id: 30,\n          name: this.language['past_month']\n        }, {\n          id: 'custom',\n          name: this.language['Customized Time Period']\n        }];\n      });\n      this.setTitle(this.router.url); //for initial language setting\n      let scopes = this.sso.getScopes();\n      if (!this.router.url.includes('/cco/operations/cco-reports/')) {\n        if (environment.VALIDATE_SCOPE) {\n          let scopeFlagCheck = {};\n          let validScopes = Object.keys(scopes);\n          if (validScopes) {\n            for (let i = 0; i < validScopes.length; i++) {\n              if (validScopes[i].indexOf('cloud.rbac.csc.cpe') !== -1) {\n                this.routerTabRead = true;\n                continue;\n              }\n            }\n          }\n          scopes['cloud.rbac.csc.netops.reports.inv_report'] = scopes['cloud.rbac.csc.netops.reports.inv_report'] ? scopes['cloud.rbac.csc.netops.reports.inv_report'] : [];\n          scopes['cloud.rbac.csc.netops.reports.unassociated_devices'] = scopes['cloud.rbac.csc.netops.reports.unassociated_devices'] ? scopes['cloud.rbac.csc.netops.reports.unassociated_devices'] : [];\n          scopes['cloud.rbac.csc.netops.reports.call_outcome'] = scopes['cloud.rbac.csc.netops.reports.call_outcome'] ? scopes['cloud.rbac.csc.netops.reports.call_outcome'] : [];\n          scopes['cloud.rbac.csc.netops.reports.auditreports'] = scopes['cloud.rbac.csc.netops.reports.auditreports'] ? scopes['cloud.rbac.csc.netops.reports.auditreports'] : [];\n          scopes['cloud.rbac.csc.netops.reports.call_avoidance'] = scopes['cloud.rbac.csc.netops.reports.call_avoidance'] ? scopes['cloud.rbac.csc.netops.reports.call_avoidance'] : [];\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.inv_report'] && scopes['cloud.rbac.csc.netops.reports.inv_report'].indexOf('read') !== -1) {\n            scopeFlagCheck.showInventoryReport = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.unassociated_devices'] && scopes['cloud.rbac.csc.netops.reports.unassociated_devices'].indexOf('read') !== -1) {\n            scopeFlagCheck.showUnassociatedDevices = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.call_avoidance'] && scopes['cloud.rbac.csc.netops.reports.call_avoidance'].indexOf('read') !== -1) {\n            scopeFlagCheck.showCallAvoidance = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.call_outcome'] && scopes['cloud.rbac.csc.netops.reports.call_outcome'].indexOf('read') !== -1) {\n            scopeFlagCheck.showCallOutcome = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.auditreports'] && scopes['cloud.rbac.csc.netops.reports.auditreports'].indexOf('read') !== -1) {\n            scopeFlagCheck.showAuditReport = true;\n          }\n          if (scopeFlagCheck.showInventoryReport) {} else if (scopeFlagCheck.showCallOutcome && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/reports/call-outcome-report']);\n          } else if (scopeFlagCheck.showAuditReport && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/reports/audit-report']);\n          } else if (scopeFlagCheck.showUnassociatedDevices) {\n            this.router.navigate(['./support/netops-management/reports/unassociated-devices']);\n          } else if (scopeFlagCheck.showCallAvoidance && this.sso.getCscType() !== 'DME') {\n            this.router.navigate(['./support/netops-management/reports/call-avoidance-report']);\n          }\n          scopes['cloud.rbac.csc.netops.reports.inv_report'] = scopes['cloud.rbac.csc.netops.reports.inv_report'] ? scopes['cloud.rbac.csc.netops.reports.inv_report'] : [];\n          if (scopes && scopes['cloud.rbac.csc.netops.reports.inv_report'] && scopes['cloud.rbac.csc.netops.reports.inv_report'].indexOf('write') !== -1) {\n            this.hasWriteAccess = true;\n            this.hasScopeAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n          this.routerTabRead = true;\n        }\n      } else {\n        if (environment.VALIDATE_SCOPE) {\n          scopes['cloud.rbac.coc.operations.report.invreports'] = scopes['cloud.rbac.coc.operations.report.invreports'] ? scopes['cloud.rbac.coc.operations.report.invreports'] : [];\n          if (scopes['cloud.rbac.coc.operations.report.invreports'].length) {\n            this.hasScopeAccess = true;\n            this.routerTabRead = true;\n          }\n          if (scopes && scopes['cloud.rbac.coc.operations.report.invreports'] && scopes['cloud.rbac.coc.operations.report.invreports'].indexOf('write') !== -1) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      }\n      if (!this.router.url.includes('cco-foundation')) {\n        if (!this.hasScopeAccess) {\n          this.sso.setPageAccess(false);\n          return;\n        }\n      }\n      if (this.router.url.includes('cco-foundation')) {\n        this.reportTypes = [{\n          id: '',\n          name: ''\n        }, {\n          id: 'DiscoveredDevice',\n          name: 'Systems Discovered'\n        }, {\n          id: 'DevicesNotCheckedIn',\n          name: 'Systems Not Checked In'\n        }, {\n          id: 'DeviceCheckedIn',\n          name: 'Systems Checked In'\n        }, {\n          id: 'Unassosiated',\n          name: 'Systems Unassociated'\n        }, {\n          id: 'GroupedDevices',\n          name: 'Systems Groups'\n        }, {\n          id: 'Software',\n          name: 'Software Versions'\n        }, {\n          id: 'SwapPendingReport',\n          name: 'Systems Swapped'\n        }];\n      } else if (this.router.url.includes('cco/operations')) {\n        this.reportTypes = [{\n          id: '',\n          name: ''\n        }, {\n          id: 'DiscoveredDevice',\n          name: 'Discovered System'\n        }, {\n          id: 'DevicesNotCheckedIn',\n          name: 'Systems Not Checked In'\n        }, {\n          id: 'DeviceCheckedIn',\n          name: 'Systems Checked In'\n        }, {\n          id: 'GroupedDevices',\n          name: 'Grouped Systems'\n        }, {\n          id: 'Software',\n          name: 'Software Versions'\n        }];\n      } else {\n        this.reportTypes = [{\n          id: '',\n          name: ''\n        }, {\n          id: 'DiscoveredDevice',\n          name: 'Discovered System'\n        }, {\n          id: 'DevicesNotCheckedIn',\n          name: 'Systems Not Checked In'\n        }, {\n          id: 'DeviceCheckedIn',\n          name: 'Systems Checked In'\n        }, {\n          id: 'GroupedDevices',\n          name: 'Grouped Systems'\n        }, {\n          id: 'Software',\n          name: 'Software Versions'\n        }, {\n          id: 'SwapPendingReport',\n          name: 'Swapped Systems'\n        }];\n      }\n      this.timeperiods = [{\n        id: '',\n        name: ''\n      }, {\n        id: 1,\n        name: this.language['Day']\n      }, {\n        id: 7,\n        name: this.language['past_week']\n      }, {\n        id: 30,\n        name: this.language['past_month']\n      }, {\n        id: 'custom',\n        name: this.language['Customized Time Period']\n      }];\n      this.initDataTable();\n    }\n    appendDeviceGroup() {\n      this.deviceGroupService.getDeviceGoupCount(this.sso.getOrgId()).subscribe(data => {\n        this.deviceGroupService.getDeviceGoupList(this.sso.getOrgId(), data.count).subscribe(data => {\n          //this.deviceGroups[0] =  { id: '0', name: '' };\n          this.deviceGroups = data;\n          this.deviceGroups.unshift({\n            id: '0',\n            name: ''\n          });\n        }, err => {\n          this.pageErrorHandle(err);\n          this.error = err.error;\n          jquery('.error').show();\n          this.loading = false;\n        });\n      }, err => {\n        this.pageErrorHandle(err);\n        this.error = err.error;\n        jquery('.error').show();\n        this.loading = false;\n      });\n    }\n    doFilter() {\n      this.submit = true;\n      this.bttnDissable = true;\n      let reportType = this.reportType;\n      if (this.reportType && this.reportType != 'Unassosiated') {\n        if (this.showCustomTimePeriod) {\n          this.startTime = this.dateUtils.getUtcTimeByDate(this.customStartDate, '00', '00', '00');\n          this.endTime = this.dateUtils.getUtcTimeByDate(this.customEndDate, '23', '59', '59');\n          //this.endTime = this.dateUtils.getUtcTimeByEndDate(this.customEndDate, this.hrs, this.minutes, this.seconds);\n          if (this.customStartDate) {\n            jquery('#stDateValidation').hide();\n          } else {\n            jquery('#stDateValidation').show();\n          }\n          if (this.customEndDate) {\n            jquery('#enDateValidation').hide();\n          } else {\n            jquery('#enDateValidation').show();\n          }\n          // this.compareDate();\n          this.compareStartDate();\n          this.compareEndDate();\n        } else {\n          if (this.reportType !== 'GroupedDevices') {\n            this.startTime = this.dateUtils.getUtcTimeByBeforeDays(this.devicetime);\n            this.endTime = this.dateUtils.getCurrentUtcTime();\n          } else {\n            if (this.deviceGroup) {\n              jquery('#deviceValidation').hide();\n            } else {\n              jquery('#deviceValidation').show();\n            }\n          }\n        }\n        if (this.reportType) {\n          if (this.showCustomDeviceGroup == false && this.hideCustomSelect == false) {\n            if (this.devicetime) {\n              if (this.showCustomTimePeriod) {\n                if (this.customStartDate && this.customEndDate && Date.parse(this.customEndDate) >= Date.parse(this.customStartDate)) {\n                  if (reportType != 'Software') {\n                    this.bttnDissable = true;\n                    this.getInventoryReport(reportType);\n                    this.getDropDownDatas();\n                  } else if (reportType == 'Software') {\n                    this.bttnDissable = false;\n                    this.getInventorySoftwareReport();\n                  }\n                  // else if(reportType == 'SwapPendingReport'){\n                  //   this.showSwapReport = true;\n                  //   this.bttnDissable = false;\n                  //   this.getInventoryReport(reportType);\n                  // }\n                }\n              } else {\n                if (reportType != 'Software') {\n                  this.getInventoryReport(reportType);\n                  this.getDropDownDatas();\n                } else if (reportType == 'Software') {\n                  this.bttnDissable = false;\n                  this.getInventorySoftwareReport();\n                }\n                // else if(reportType == 'SwapPendingReport'){\n                //   this.showSwapReport = true;\n                //   this.bttnDissable = false;\n                //   this.getInventoryReport(reportType);\n                // }\n              }\n            }\n          } else {\n            if (this.showCustomDeviceGroup == true && this.deviceGroup) {\n              if (reportType != 'Software') {\n                this.getInventoryReport(reportType);\n                this.getDropDownDatas();\n              } else if (reportType == 'Software') {\n                this.bttnDissable = false;\n                this.getInventorySoftwareReport();\n              }\n              // else if(reportType == 'SwapPendingReport'){\n              //   this.showSwapReport = true;\n              //   this.bttnDissable = false;\n              //   this.getInventoryReport(reportType);\n              // }\n            } else if (this.hideCustomSelect == true && this.showCustomDeviceGroup == false) {\n              if (reportType == 'SwapPendingReport') {\n                this.showSwapReport = true;\n                this.bttnDissable = true;\n                this.getInventoryReport(reportType);\n              } else if (reportType != 'Software' && reportType != 'SwapPendingReport') {\n                this.getInventoryReport(reportType);\n                this.getDropDownDatas();\n              } else if (reportType == 'Software') {\n                this.bttnDissable = false;\n                this.getInventorySoftwareReport();\n              }\n            }\n          }\n        }\n      } else if (this.reportType) {\n        this.unassosSystem = true;\n      }\n      this.maxDate = new Date();\n    }\n    onchangeStartDate() {\n      this.maxForStartDate = this.customEndDate;\n      if (this.customStartDate) {\n        jquery('#stDateValidation').hide();\n        if (this.devicetime && this.reportType && this.customEndDate && this.customStartDate) {\n          this.bttnDissable = false;\n        }\n      } else {\n        jquery('#stDateValidation').show();\n        this.bttnDissable = true;\n      }\n    }\n    changeDate() {\n      if (this.customEndDate) {\n        jquery('#enDateValidation').hide();\n        if (this.devicetime && this.reportType && this.customEndDate && this.customStartDate) {\n          this.bttnDissable = false;\n        }\n      } else {\n        jquery('#enDateValidation').show();\n        this.bttnDissable = true;\n      }\n    }\n    onChangeDeviceGroup() {\n      if (this.deviceGroup) {\n        jquery('#deviceValidation').hide();\n        if (this.deviceGroup && this.reportType) {\n          this.bttnDissable = false;\n        }\n      } else {\n        jquery('#deviceValidation').show();\n        this.bttnDissable = true;\n      }\n    }\n    clearValidation() {\n      if (this.devicetime && this.reportType && this.customEndDate && this.customStartDate) {\n        this.bttnDissable = false;\n      }\n      this.CountRecieved = false;\n      jquery('.alert').hide();\n    }\n    onchangeEndDate() {\n      this.maxForStartDate = this.customEndDate;\n      if (this.customEndDate) {\n        jquery('#enDateValidation').hide();\n        if (this.devicetime && this.reportType && this.customEndDate && this.customStartDate) {\n          this.bttnDissable = false;\n        }\n      } else {\n        jquery('#enDateValidation').show();\n        this.bttnDissable = true;\n      }\n    }\n    getDropDownDatas() {\n      let payload = {\n        \"orgId\": this.sso.getOrgId()\n      };\n      if (this.reportType != 'Software' || this.reportType != 'SwapPendingReport') {\n        this.loading = true;\n        this.reportService.getDropDownData(JSON.stringify(payload)).subscribe(response => {\n          let manufacturerData = [{\n            \"id\": '',\n            \"name\": ' '\n          }];\n          let modelData = [{\n            \"id\": '',\n            \"name\": ' '\n          }];\n          let modeData = [{\n            \"id\": '',\n            \"name\": ' '\n          }];\n          if (response) {\n            response.forEach(element => {\n              if (element['manufacturer'] != '') {\n                manufacturerData.push({\n                  \"id\": element['manufacturer'],\n                  \"name\": element['manufacturer']\n                });\n              }\n              if (element['modelName'] != '') {\n                modelData.push({\n                  \"id\": element['modelName'],\n                  \"name\": element['modelName']\n                });\n              }\n              if (element['opMode'] != '') {\n                modeData.push({\n                  \"id\": element['opMode'],\n                  \"name\": element['opMode']\n                });\n              }\n            });\n          }\n          manufacturerData = this.getUniqueData(manufacturerData);\n          modelData = this.getUniqueData(modelData);\n          modeData = this.getUniqueData(modeData);\n          this.dropdwonOutData = {\n            \"manufacturer\": manufacturerData,\n            \"model\": modelData,\n            \"mode\": modeData\n          };\n        }, err => {\n          this.loading = true;\n          this.pageErrorHandle(err);\n        });\n      }\n    }\n    getUniqueData(elements) {\n      let uniqueArr = [];\n      for (var i = 0; i < elements.length; i++) {\n        let existed = false;\n        for (var j = 0; j < uniqueArr.length; j++) if (elements[i].name === uniqueArr[j].name) {\n          existed = true;\n          break;\n        }\n        if (existed) continue;\n        uniqueArr.push(elements[i]);\n      }\n      return uniqueArr;\n    }\n    onChangeTimePeriod() {\n      if (this.devicetime && this.reportType) {\n        this.bttnDissable = false;\n      } else {\n        this.bttnDissable = true;\n      }\n      this.showFilters = false;\n      if (this.devicetime == 'custom') {\n        this.showCustomTimePeriod = true;\n        this.bttnDissable = true;\n        //this.hrs = new Date().getHours();\n        //this.minutes = new Date().getMinutes();\n        //this.seconds = new Date().getSeconds();\n      } else {\n        this.showCustomTimePeriod = false;\n        this.customStartDate = \"\";\n        this.customEndDate = \"\";\n        jquery('.alert').hide();\n      }\n      this.CountRecieved = false;\n      this.inventoryTableData.length = 0;\n      this.getUnset();\n    }\n    onChangeReportType() {\n      this.showFilters = false;\n      this.softwareversion = false;\n      this.unassosSystem = false;\n      this.showNoResults = false;\n      this.deviceGroup = \"\";\n      this.showTime = true;\n      this.showcloseicon = false;\n      this.searchtext = \"\";\n      if (this.reportType == 'GroupedDevices') {\n        this.showCustomDeviceGroup = true;\n        this.showCustomTimePeriod = false;\n        this.hideCustomSelect = true;\n        this.customStartDate = \"\";\n        this.customEndDate = \"\";\n        this.devicetime = \"\";\n        this.hideNotInTimePeriod = true;\n        this.hideTimePeriod = false;\n        if (this.reportType) {\n          this.bttnDissable = false;\n        } else {\n          this.bttnDissable = true;\n        }\n        //return\n      } else if (this.reportType == 'Software') {\n        this.hideCustomSelect = true;\n        this.showCustomTimePeriod = false;\n        this.showCustomDeviceGroup = false;\n        this.customStartDate = \"\";\n        this.customEndDate = \"\";\n        this.devicetime = \"\";\n        if (this.reportType) {\n          this.bttnDissable = false;\n        } else {\n          this.bttnDissable = true;\n        }\n      } else if (this.reportType == 'Unassosiated') {\n        this.hideCustomSelect = true;\n        this.showCustomTimePeriod = false;\n        this.showCustomDeviceGroup = false;\n        this.customStartDate = \"\";\n        this.customEndDate = \"\";\n        this.devicetime = \"\";\n        if (this.reportType) {\n          this.bttnDissable = false;\n        } else {\n          this.bttnDissable = true;\n        }\n      } else if (this.reportType == 'SwapPendingReport') {\n        this.hideCustomSelect = true;\n        this.showCustomTimePeriod = false;\n        this.showCustomDeviceGroup = false;\n        this.customStartDate = \"\";\n        this.customEndDate = \"\";\n        this.devicetime = \"\";\n        this.showSwapReport = true;\n        this.showTime = false;\n        this.notInTime = false;\n        if (this.reportType) {\n          this.bttnDissable = false;\n        } else this.bttnDissable = true;\n      } else {\n        this.showCustomDeviceGroup = false;\n        this.hideCustomSelect = false;\n        this.hideCalender = true;\n        this.hideNotInTimePeriod = false;\n        this.deviceGroup = \"\";\n        if (this.reportType) {\n          if (this.devicetime) {\n            this.bttnDissable = false;\n          }\n        } else {\n          this.bttnDissable = true;\n        }\n      }\n      if ((this.reportType == 'Discovered' || this.reportType == 'DevicesNotCheckedIn' || this.reportType == 'DeviceChecked') && this.devicetime == 'custom') {\n        this.showCustomTimePeriod = true;\n      }\n      if (this.devicetime == 'custom' && (!this.customEndDate || !this.customStartDate)) {\n        this.bttnDissable = true;\n      }\n      this.CountRecieved = false;\n      jquery('.alert').hide();\n      this.inventoryTableData.length = 0;\n      this.getUnset();\n    }\n    OnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n    }\n    search(term) {\n      if (term.length) this.showcloseicon = true;else this.showcloseicon = false;\n      if (this.clear) clearTimeout(this.clear);\n      this.clear = setTimeout(() => {\n        this.searchtext = term;\n        this.dtElement.dtInstance.then(dtInstance => {\n          this.getInventoryReport(this.reportType);\n          dtInstance.search(term).draw();\n        });\n        this.loading = false;\n      }, 500);\n    }\n    getInventoryReport(reportType) {\n      this.loading = true;\n      let params = {\n        // orgId: this.sso.getOrg(this.orgId),\n        reportType: reportType,\n        manufacturer: this.manufacturer,\n        modelName: this.modelName,\n        opmode: this.opmode,\n        serialNumber: this.serialNumber ? this.serialNumber.trim() : '',\n        subscriber: this.subscriber ? this.subscriber.trim() : '',\n        startTime: this.reportType !== 'GroupedDevices' ? this.startTime : '',\n        endTime: this.reportType !== 'GroupedDevices' ? this.endTime : '',\n        inversely_time_period: this.reportType !== 'GroupedDevices' && this.isTimePeriod ? this.isTimePeriod : 'false',\n        group_name: this.reportType === 'GroupedDevices' ? this.deviceGroup : '',\n        timeZ: '' //Intl.DateTimeFormat().resolvedOptions().timeZone,\n      };\n\n      let swapParams = {\n        filter: this.searchtext ? this.searchtext.trim() : ''\n      };\n      if (this.reportType == 'Software') {\n        params.inversely_time_period = 'false';\n      }\n      if (reportType != 'SwapPendingReport') {\n        this.showSwapReport = false;\n        this.params = params;\n        this.reportService.getInventoryCount(params).subscribe(res => {\n          this.showSwapReport = false;\n          this.showFilters = true;\n          this.loading = false;\n          if (res.totalNum != undefined && res.totalNum && res.totalNum != 0) {\n            this.inventoryCount = res.totalNum;\n            this.CountRecieved = true;\n            if (this.initLoad) {\n              this.redraw();\n            } else {\n              this.getInventoryList();\n            }\n          } else {\n            this.showNoResults = true;\n            this.inventoryCount = 0;\n            this.CountRecieved = false;\n            this.noRecordsFound = true;\n            //this.getUnset();\n          }\n        }, err => {\n          this.pageErrorHandle(err);\n          this.error = err.error;\n          jquery('.error').show();\n          this.loading = false;\n        });\n      } else if (reportType == 'SwapPendingReport') {\n        // this.showSwapReport = true;\n        // this.unassosSystem = false;\n        this.swapParams = swapParams;\n        this.reportService.getSwapReportsCount(swapParams).subscribe(res => {\n          this.showFilters = false;\n          this.loading = false;\n          this.showSwapReport = true;\n          if (res === null || res === void 0 ? void 0 : res.count) {\n            this.showSwapReport = true;\n            this.swapCount = res.count;\n            this.CountRecieved = true;\n            if (this.initLoadSwap) {\n              this.redraw();\n              // this.getSwapList();\n            } else {\n              this.getSwapList();\n            }\n          } else {\n            this.initDataTable();\n            this.showSwapReport = true;\n            // this.showNoResults = true;\n            this.swapCount = 0;\n            this.CountRecieved = true;\n            this.noRecordsFound = true;\n          }\n        }, err => {\n          this.pageErrorHandle(err);\n          this.error = err.error;\n          jquery('.error').show();\n          this.loading = false;\n        });\n      }\n    }\n    redraw() {\n      var _a;\n      (_a = this.dtElement) === null || _a === void 0 ? void 0 : _a.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n        // dtInstance.destroy();\n        // this.dtTrigger.next();\n      });\n    }\n\n    getInventoryList() {\n      const that = this;\n      this.showSwapReport = false;\n      this.dtOptions = {\n        pagingType: \"full_numbers\",\n        pageLength: 15,\n        // responsive: true,\n        serverSide: true,\n        processing: false,\n        searching: false,\n        lengthChange: false,\n        ordering: false,\n        //scrollX: true,\n        dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          let reportType = this.reportType;\n          let isExtrafilter, isTypeSoft;\n          if (this.manufacturer) {\n            isExtrafilter = `&manufacturer=${this.manufacturer}`;\n          }\n          if (this.modelName) {\n            isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&modelName=${this.modelName}`;\n          }\n          if (this.opmode) {\n            isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&opmode=${this.opmode}`;\n          }\n          if (this.serialNumber) {\n            isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&serialNumber=${this.serialNumber ? this.serialNumber.trim() : ''}`;\n          }\n          if (this.subscriber) {\n            isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&subscriber=${this.subscriber ? this.subscriber.trim() : ''}`;\n          }\n          if (this.reportType == 'Software') {\n            isTypeSoft = `&inversely_time_period=false`;\n          } else {\n            isTypeSoft = `&inversely_time_period=${this.isTimePeriod ? this.isTimePeriod : 'false'}`;\n          }\n          this.isRunActive = isExtrafilter;\n          //let timeZ = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          let urls = `${environment.SUPPORT_URL}/netops-report/inventory-report?${this.sso.getOrg(this.orgId)}reportType=${reportType}&startTime=${this.startTime}&endTime=${this.endTime}${isTypeSoft ? isTypeSoft : ''}${isExtrafilter ? isExtrafilter : ''}`;\n          if (this.reportType === 'GroupedDevices') {\n            let query = \"\";\n            delete this.params['inversely_time_period'];\n            for (var key in this.params) {\n              if (this.params[key]) {\n                if (query != \"\") {\n                  query += \"&\";\n                }\n                query += key + \"=\" + encodeURIComponent(this.params[key]);\n              }\n            }\n            urls = `${environment.SUPPORT_URL}/netops-report/inventory-report?${query}`;\n          }\n          let pageNo = null;\n          if (dataTablesParameters.start == 0) {\n            pageNo = 0;\n          } else {\n            pageNo = dataTablesParameters.start / dataTablesParameters.length;\n          }\n          pageNo = pageNo + 1;\n          let url = urls + \"&pageNumber=\" + pageNo + \"&pageSize=\" + dataTablesParameters.length;\n          that.http.get(url).subscribe(resp => {\n            this.showSwapReport = false;\n            this.showFilters = true;\n            this.inventoryTableData = resp;\n            this.initLoad = true;\n            this.hideNoDataRow;\n            this.loading = false;\n            callback({\n              recordsTotal: this.inventoryCount ? this.inventoryCount : 0,\n              recordsFiltered: this.inventoryCount ? this.inventoryCount : 0,\n              data: []\n            });\n          });\n        },\n        drawCallback: settings => {\n          this.changeTableStatusLanguage(settings);\n          let total = settings._iRecordsDisplay; // for server side rendering\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#users-table_last').addClass('disabled');\n          } else {\n            //$(settings.nTableWrapper).find('#users-table_last').removeClass('disabled');\n          }\n        }\n      };\n    }\n    initDataTable() {\n      const table = $(this.el.nativeElement).find('table'); // Assuming you have a <table> element\n      $.fn.dataTable.ext.errMode = 'throw';\n      $(table).DataTable({\n        // Your DataTable configuration options\n      });\n    }\n    getSwapList() {\n      const that = this;\n      this.showSwapReport = true;\n      this.dtOptionsSwap = {\n        pagingType: \"full_numbers\",\n        pageLength: 15,\n        serverSide: true,\n        processing: false,\n        searching: true,\n        ordering: true,\n        columnDefs: [{\n          targets: [5],\n          orderable: false\n        }, {\n          searchable: false,\n          targets: [0, 1, 2, 3, 4, 6, 7, 8],\n          orderable: true\n        }],\n        dom: 'tipr',\n        ajax: (dataTablesParameters, callback) => {\n          let reportType = this.reportType;\n          let isExtrafilter, orderFilter;\n          if (this.swapParams.filter) {\n            isExtrafilter = `&filter=${this.swapParams.filter}`;\n          }\n          let columnSelected = {};\n          let col = [\"subscriberLocalId\", \"subscriberAccount\", \"subscriberName\", \"oldSystemFsan\", \"oldSystemMac\", \"oldRegistrationId\", \"newSystemId\", \"swapInitializedTime\", \"oldSystemLastInformTime\"];\n          if ((dataTablesParameters.order[0].column || dataTablesParameters.order[0].column == 0) && dataTablesParameters.order[0].dir) {\n            columnSelected[col.at(dataTablesParameters.order[0].column)] = dataTablesParameters.order[0].dir == 'asc' ? 1 : 0;\n            orderFilter = `&orderBy=${JSON.stringify(columnSelected)}`;\n          }\n          let pageNo = null;\n          if (dataTablesParameters.start == 0) {\n            pageNo = 0;\n          } else {\n            pageNo = dataTablesParameters.start / dataTablesParameters.length;\n          }\n          pageNo = pageNo + 1;\n          // let url = urls + \"&pageNumber=\" + pageNo + \"&pageSize=\" + dataTablesParameters.length\n          let url = `${environment.SUPPORT_URL}/netops-swapsystem/queryPendingSwapSystem?${isExtrafilter ? isExtrafilter : ''}${orderFilter ? orderFilter : ''}`;\n          that.http.get(url).subscribe(resp => {\n            if (resp.length) {\n              this.noRecordsFound = false;\n            } else if (!resp.length) {\n              this.noRecordsFound = true;\n            }\n            this.showSwapReport = true;\n            this.showFilters = false;\n            this.swapReportsData = resp;\n            this.initLoadSwap = true;\n            this.hideNoDataRow;\n            this.loading = false;\n            if (resp.length) {\n              callback({\n                recordsTotal: this.swapCount ? this.swapCount : 0,\n                recordsFiltered: this.swapCount ? this.swapCount : 0,\n                data: []\n              });\n            } else if (!resp.length) {\n              callback({\n                recordsTotal: 0,\n                recordsFiltered: 0,\n                data: []\n              });\n            }\n          }, err => {\n            this.noRecordsFound = true;\n            this.pageErrorHandle(err);\n            this.error = err.error;\n            jquery('.error').show();\n            this.loading = false;\n          });\n        },\n        drawCallback: settings => {\n          // this.tableLanguageOptions();\n          this.changeTableStatusLanguage(settings);\n          let total = settings._iRecordsDisplay; // for server side rendering\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#users-table_last').addClass('disabled');\n          } else {\n            //$(settings.nTableWrapper).find('#users-table_last').removeClass('disabled');\n          }\n        }\n      };\n      // this.datatableElement?.dtInstance.then((dtInstance: DataTables.Api) => {\n      //   dtInstance.ajax.reload();\n      // });\n      // this.tableLanguageOptions();\n    }\n\n    closeicon(term) {\n      this.searchtext = \"\";\n      this.showcloseicon = false;\n      this.search(this.searchtext);\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.tableOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.tableOptions.language = this.esTable;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.tableOptions.language = this.germanTable;\n      } else if (this.language.fileLanguage == 'en' && this.tableOptions.language) {\n        delete this.tableOptions.language;\n      }\n    }\n    rerender() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    }\n    callCount(str) {\n      this.http.get(`${environment.SUPPORT_URL}/netops-report/inventory-report/count?${this.sso.getOrg(this.orgId)}reportType=${this.reportType}&startTime=${this.startTime}&endTime=${this.endTime}&inversely_time_period=${this.inversely_time_period}`).subscribe(res => {\n        this.filterCount = res;\n      });\n    }\n    hideNoDataRow() {\n      setTimeout(() => {\n        $('.odd').css('display', 'none');\n      }, 100);\n    }\n    ngOnDestroy() {\n      // Do not forget to unsubscribe the event\n      this.languageSubject.unsubscribe();\n      this.dtTrigger.unsubscribe();\n    }\n    toggleSwitch() {\n      this.showFilters = false;\n      this.CountRecieved = false;\n      this.inventoryTableData.length = 0;\n      this.noRecordsFound = false;\n      this.bttnDissable = false;\n      this.getUnset();\n    }\n    getUnset() {\n      this.manufacturer = undefined;\n      this.modelName = undefined;\n      this.opmode = undefined;\n      this.serialNumber = undefined;\n      this.subscriber = undefined;\n      this.isRunActive = undefined;\n    }\n    clickSerialNumber(data) {\n      this.searchByCharacters(data, \"serno\");\n    }\n    navigateToTroubleShootPage(columns) {\n      this.searchByCharacters(columns, \"name\");\n    }\n    getInventorySoftwareReport() {\n      this.softwareversion = true;\n      this.loading = true;\n      this.reportService.getInventorySoftwareReport(this.orgId).subscribe(res => {\n        this.loading = false;\n        res.forEach(element => {\n          let expObj = {\n            'Id': `${element['id'] ? element['id'] : ''}`,\n            'Org Id': `${element['orgid'] ? element['orgid'] : ''}`,\n            'Model Name': `${element['modelname'] ? element['modelname'] : ''}`,\n            'Manufacturer': `${element['manufacturer'] ? element['manufacturer'] : ''}`,\n            'Software Version': `${element['softwareversion'] ? element['softwareversion'] : ''}`,\n            'CPE Count': `${element['cpecount'] ? element['cpecount'] : ''}`\n          };\n          this.softwareVersionsData.push(expObj);\n        });\n        // this.softwareVersionsData = res;\n        this.showFilters = false;\n        this.inventoryCount = 1;\n        let options = this.softwareReportOption(res || []);\n        const chart = Highcharts.chart('container', options);\n        this.showNoResults = true;\n      }, err => {\n        this.pageErrorHandle(err);\n        this.error = err.error;\n        jquery('.error').show();\n        this.loading = false;\n      });\n    }\n    softwareReportOption(data) {\n      let categories = [],\n        finalObject = [],\n        initialDataArray = [],\n        yaxistext;\n      var totalCPECount = 0;\n      let softwareVersion = [];\n      let softwareVersionArr = [];\n      data.forEach(obj => {\n        if (obj.modelname == null) {\n          obj.modelname = \"Others\";\n        }\n        if (obj.softwareversion == null) {\n          obj.softwareversion = \"other\";\n        }\n        const category = obj.modelname;\n        totalCPECount += obj.cpecount;\n        if (categories.indexOf(category) == -1) {\n          categories.push(category);\n        }\n        softwareVersion.push(obj.softwareversion);\n      });\n      this.cpeCount = totalCPECount;\n      var uniqueData = function (value, index, self) {\n        return self.indexOf(value) === index;\n      };\n      softwareVersionArr = softwareVersion.filter(uniqueData);\n      this.firmwareCount = softwareVersionArr.length;\n      for (let i = 0; i < categories.length; i++) {\n        initialDataArray[i] = 0;\n      }\n      data.forEach(obj => {\n        var flag = true;\n        if (finalObject.length) {\n          finalObject.forEach(obj1 => {\n            if (obj1.name.hasOwnProperty(obj.softwareversion)) {\n              obj1.data[categories.indexOf(obj.modelname)] = obj.cpecount;\n              flag = false;\n            }\n          });\n        }\n        if (flag) {\n          let finalObj = {};\n          initialDataArray = new Array(categories.length).fill(0);\n          finalObj.name = obj.softwareversion;\n          finalObj.data = initialDataArray;\n          finalObj.data[categories.indexOf(obj.modelname)] = obj.cpecount;\n          finalObject.push(finalObj);\n        }\n      });\n      var chartHeight = 400;\n      if (categories && categories.length > 0) {\n        let catLength = categories.length * 30;\n        chartHeight = catLength < chartHeight ? chartHeight : catLength;\n      }\n      let colors = [\"rgba(122,108,176,0.75)\", \"rgba(238,174,0,0.75)\", \"rgba(102,153,204,0.75)\", \"rgba(102,153,0,0.75)\", \"rgba(232,123,0,0.75)\", \"rgba(68,54,125,0.75)\", \"rgba(0,132,126,0.75)\", \"rgba(23,190,207,0.75)\", \"rgba(153,0,0,0.75)\"];\n      return {\n        title: {\n          text: ''\n        },\n        chart: {\n          type: 'bar',\n          height: chartHeight\n        },\n        xAxis: {\n          categories: categories || [],\n          labels: {\n            // style: { cursor: 'pointer' },\n          },\n          title: {\n            text: 'Models'\n          }\n        },\n        yAxis: {\n          min: 0,\n          allowDecimals: false,\n          lineColor: '#ddd',\n          title: {\n            text: 'Firmware Image Count (%) / Model'\n          },\n          opposite: true,\n          stackLabels: {\n            enabled: true,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        },\n        series: finalObject,\n        plotOptions: {\n          series: {\n            stacking: 'normal',\n            animation: {\n              duration: 500\n            }\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        lang: {\n          noData: this.language[\"No Data Available\"]\n        },\n        tooltip: {\n          formatter: function () {\n            if (this.point.category) {\n              return this.point.category + '<br>' + this.series.name + ' : ' + this.point.y + ' (' + Highcharts.numberFormat(this.point.percentage, 2) + '%)';\n            } else {\n              return 'See Export for details.';\n            }\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        colors: colors,\n        exporting: {\n          enabled: false\n        }\n      };\n    }\n    downloadSftwreReport() {\n      this.validatorService.exportAsExcelFile(this.softwareVersionsData, 'export');\n    }\n    export() {\n      let reportType = this.reportType;\n      let isExtrafilter, isTypeSoft;\n      if (this.manufacturer) {\n        isExtrafilter = `&manufacturer=${this.manufacturer}`;\n      }\n      if (this.modelName) {\n        isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&modelName=${this.modelName}`;\n      }\n      if (this.opmode) {\n        isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&opmode=${this.opmode}`;\n      }\n      if (this.serialNumber) {\n        isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&serialNumber=${this.serialNumber}`;\n      }\n      if (this.subscriber) {\n        isExtrafilter = `${isExtrafilter ? isExtrafilter : ''}&subscriber=${this.subscriber}`;\n      }\n      if (this.reportType == 'Software') {\n        isTypeSoft = `&inversely_time_period=false`;\n      } else {\n        isTypeSoft = `&inversely_time_period=${this.isTimePeriod ? this.isTimePeriod : 'false'}`;\n      }\n      this.isRunActive = isExtrafilter;\n      if (this.reportType != 'SwapPendingReport') {\n        var url = `${environment.SUPPORT_URL}/netops-report/inventory-report/download?${this.sso.getOrg(this.orgId)}reportType=${reportType}&startTime=${this.startTime}&endTime=${this.endTime}${isTypeSoft ? isTypeSoft : ''}${isExtrafilter ? isExtrafilter : ''}`;\n        if (this.reportType === 'GroupedDevices') {\n          let query = \"\";\n          delete this.params['inversely_time_period'];\n          for (var key in this.params) {\n            if (this.params[key]) {\n              if (query != \"\") {\n                query += \"&\";\n              }\n              query += key + \"=\" + encodeURIComponent(this.params[key]);\n            }\n          }\n          url = `${environment.SUPPORT_URL}/netops-report/inventory-report/download?${query}`;\n        }\n        let timeZ = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        url += `&timeZ=${timeZ}`;\n        url += `&file=true`;\n      }\n      this.http.get(url).subscribe(json => {\n        this.downloadService.saveToDisk(json);\n      }, err => {\n        this.pageErrorHandle(err);\n        this.error = err.error;\n        jquery('.error').show();\n        this.loading = false;\n      });\n    }\n    exportSwapReport() {\n      let reportType = this.reportType;\n      if (this.reportType == 'SwapPendingReport') {\n        let paramsD = {\n          // orgId: this.sso.getOrgId(),\n          file: 'true',\n          timeZ: this.dateUtils.getLocalTimeZoneName(),\n          filter: this.searchtext\n        };\n        let query = \"\";\n        for (var key in paramsD) {\n          if (paramsD[key]) {\n            if (query != \"\") {\n              query += \"&\";\n            }\n            query += key + \"=\" + encodeURIComponent(paramsD[key]);\n          }\n        }\n        var url = `${environment.SUPPORT_URL}/netops-swapsystem/downloadLogByGFS?${query}`;\n      }\n      this.http.get(url).subscribe(json => {\n        this.downloadService.saveToDisk(json);\n      }, err => {\n        this.pageErrorHandle(err);\n        this.error = err.error;\n        jquery('.error').show();\n        this.loading = false;\n      });\n    }\n    closeAlert() {\n      jquery('.time').hide('slow');\n      jquery('.error').hide('slow');\n    }\n    pageErrorHandle(err) {\n      // if (err.status === 401) {\n      //   this.alertMessage = 'Unauthorized User';\n      // } \n      if (err.status === 500) {\n        this.alertMessage = 'Internal Server Error';\n      } else if (err.status === 504 || err.status == 502) {\n        this.alertMessage = 'Gateway Time-Out';\n      } else {\n        this.alertMessage = this.sso.pageErrorHandle(err);\n      }\n    }\n    // compareDate() {\n    //   if (this.customEndDate > 0 && this.customStartDate > 0) {\n    //     if (Date.parse(this.customEndDate) < Date.parse(this.customStartDate)) {\n    //       jquery('.time').show();\n    //       this.bttnDissable = true;\n    //     } else {\n    //       jquery('.time').hide();\n    //       this.bttnDissable = false;\n    //     }\n    //   }\n    // }\n    compareStartDate() {\n      if (this.customEndDate > 0 && this.customStartDate > 0) {\n        if (Date.parse(this.customEndDate) > Date.parse(this.customStartDate)) {\n          // jquery('.time').show();\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n          this.bttnDissable = false;\n        } else if (Date.parse(this.customEndDate) < Date.parse(this.customStartDate)) {\n          this.endErrorMessage = false;\n          this.startErrorMessage = true;\n          this.bttnDissable = true;\n        } else if (Date.parse(this.customEndDate) == Date.parse(this.customStartDate)) {\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n          this.bttnDissable = false;\n        } else {\n          // jquery('.time').hide();\n          this.bttnDissable = false;\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n        }\n      }\n    }\n    compareEndDate() {\n      this.maxDate = this.customEndDate;\n      if (this.customEndDate > 0 && this.customStartDate > 0) {\n        if (Date.parse(this.customEndDate) > Date.parse(this.customStartDate)) {\n          // jquery('.time').show();\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n          this.bttnDissable = false;\n        } else if (Date.parse(this.customEndDate) < Date.parse(this.customStartDate)) {\n          this.endErrorMessage = true;\n          this.startErrorMessage = false;\n          this.bttnDissable = true;\n        } else if (Date.parse(this.customEndDate) == Date.parse(this.customStartDate)) {\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n          this.bttnDissable = false;\n        } else {\n          // jquery('.time').hide();\n          this.bttnDissable = false;\n          this.startErrorMessage = false;\n          this.endErrorMessage = false;\n        }\n      }\n    }\n    searchByCharacters(columns, name) {\n      let textEntered;\n      if (this.reportType != \"SwapPendingReport\") {\n        textEntered = columns.serialnumber;\n      } else if (this.reportType == \"SwapPendingReport\") {\n        textEntered = columns.oldSystemFsan || columns.oldSystemRegId || columns.oldSystemMac || columns.newSystemId;\n      }\n      if (this.reportType !== \"SwapPendingReport\") {\n        if (textEntered.length < 2) {\n          return;\n        }\n      }\n      this.searchResult = [];\n      this.service.performSearch(this.orgId, textEntered, 1, 500).subscribe(res => {\n        var _a, _b, _c;\n        if (res) {\n          this.searchResult = res.records;\n          this.stateinfo = {\n            serialNumber: columns.serialnumber,\n            isRouter: true\n          };\n          const RGs = (((_a = this.searchResult[0]) === null || _a === void 0 ? void 0 : _a.devices) || []).filter(obj => obj.opMode == \"RG\").map(obj => obj.serialNumber);\n          if (RGs.length > 1) {\n            const selectDevicesRg = RGs.includes(textEntered) ? textEntered : (((_b = this.searchResult[0]) === null || _b === void 0 ? void 0 : _b.devices) || []).filter(obj => obj.serialNumber == textEntered).map(obj => obj.wapGatewaySn).join();\n            this.searchResult[0].devices = (((_c = this.searchResult[0]) === null || _c === void 0 ? void 0 : _c.devices) || []).filter(obj => obj.serialNumber == selectDevicesRg || obj.wapGatewaySn == selectDevicesRg);\n          }\n          if (!this.router.url.includes('cco-foundation') && !this.router.url.includes('cco')) {\n            sessionStorage.setItem(\"calix.deviceData\", JSON.stringify(this.searchResult[0].devices));\n            sessionStorage.setItem('calix.subscriberId', this.searchResult[0].subscriberId);\n            if (name == \"name\" && this.searchResult.length) {\n              this.router.navigate([]).then(result => {\n                window.open('/support/overview/issues', '_blank');\n              });\n              sessionStorage.setItem('calix.serialNo', columns.serialnumber);\n            } else {\n              //this.router.navigate([window.open('/support/router','_blank')], { state: this.stateinfo })\n              this.router.navigate([]).then(result => {\n                window.open('/support/router', '_blank');\n              });\n              this.service.setSubscriberInfo(undefined);\n              this.service.setSubscriberTabInfoData(undefined);\n              sessionStorage.setItem('calix.serialNo', columns.serialnumber);\n            }\n          } else if (this.router.url.includes('cco-foundation')) {\n            this.service.setSubscriberInfo(undefined);\n            this.service.setSubscriberTabInfoData(undefined);\n            let subId = res.records[0].subscriberId ? res.records[0].subscriberId : '';\n            this.router.navigate([]).then(result => {\n              window.open(`/cco-foundation/foundation-systems/foundation-manage/system-details?sn=${textEntered}&subscriber=${res.records[0].subscriberId}`, '_blank');\n            });\n          } else if (this.router.url.includes('/cco/')) {\n            localStorage.setItem(\"calix.Device_Details\", JSON.stringify(res.records[0]));\n            this.service.setSubscriberInfo(undefined);\n            this.service.setSubscriberTabInfoData(undefined);\n            let subId = res.records[0].subscriberId ? res.records[0].subscriberId : '';\n            window.open(`/cco/system/cco-subscriber-system/system-details?sn=${textEntered.trim()}&subscriber=${subId}`, '_blank');\n          }\n        }\n      }, err => {});\n    }\n    // changeTableStatusLanguage(dtObj) {\n    //   const nf = new Intl.NumberFormat();\n    //   this.tableCounts = {\n    //     searchText: dtObj.oPreviousSearch.sSearch.trim(),\n    //     total: dtObj._iRecordsTotal,\n    //     displayCount: dtObj._iDisplayLength,\n    //     displayed: dtObj._iRecordsDisplay,\n    //     start: dtObj._iDisplayStart\n    //   };\n    //   const isFrench = (sessionStorage.getItem('defaultLanguage') == 'fr'),\n    //     filtered = `${dtObj.oPreviousSearch.sSearch.trim() ?\n    //       (isFrench ?\n    //         `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` :\n    //         `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)`) :\n    //       ''}`;\n    //   const startCount = (dtObj._iRecordsDisplay == 0) ? -1 : dtObj._iDisplayStart;\n    //   const showingCount = (dtObj._iDisplayStart + dtObj._iDisplayLength) > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : (dtObj._iDisplayStart + dtObj._iDisplayLength);\n    //   $('div [role=\"status\"]').text(isFrench ?\n    //     `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` :\n    //     `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`\n    //   )\n    //   $(\".first\").text(isFrench ? 'Le début' : 'First');\n    //   $(\".previous\").text(isFrench ? 'Précédent' : 'Previous');\n    //   $(\".next\").text(isFrench ? 'Suivant' : 'Next');\n    //   $(\".last\").text(isFrench ? 'Dernière' : 'Last');\n    // }\n    changeTableStatusLanguage(dtObj) {\n      const nf = new Intl.NumberFormat();\n      this.tableCounts = {\n        searchText: dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\"),\n        total: dtObj._iRecordsTotal,\n        displayCount: dtObj._iDisplayLength,\n        displayed: dtObj._iRecordsDisplay,\n        start: dtObj._iDisplayStart\n      };\n      const isFrench = sessionStorage.getItem('defaultLanguage') == 'fr';\n      const isSpanish = sessionStorage.getItem('defaultLanguage') == 'es';\n      const isGermen = sessionStorage.getItem('defaultLanguage') == 'de_DE';\n      const filtered = `${dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\") ? isFrench ? `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` : isSpanish ? `(filtrado de un total de ${nf.format(dtObj._iRecordsTotal)} entradas)` : isGermen ? `(gefiltert aus ${nf.format(dtObj._iRecordsTotal)} Einträgen)` : `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)` : ''}`;\n      const startCount = dtObj._iRecordsDisplay == 0 ? -1 : dtObj._iDisplayStart;\n      const showingCount = dtObj._iDisplayStart + dtObj._iDisplayLength > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : dtObj._iDisplayStart + dtObj._iDisplayLength;\n      $('div [role=\"status\"]').text(isFrench ? `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` : isSpanish ? `Se muestran del ${nf.format(startCount + 1)} al ${nf.format(showingCount)} de ${nf.format(dtObj._iRecordsDisplay)} resultados ${filtered}` : isGermen ? `Angezeigt ${nf.format(startCount + 1)} bis ${nf.format(showingCount)} von ${nf.format(dtObj._iRecordsDisplay)} ergebnissen ${filtered}` : `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`);\n      //$(\".dataTables_filter label\")[0].childNodes[0].nodeValue = isFrench ? 'Chercher:' : 'Search:';\n      //$(\".dataTables_length label\")[0].childNodes[0].nodeValue = isFrench ? 'Afficher les ' : 'Show ';\n      //$(\".dataTables_length label\")[0].childNodes[2].nodeValue = isFrench ? ' entrées' : ' entries';\n      $(\".first\").text(isFrench ? 'Le début' : isSpanish ? 'Primero' : isGermen ? 'Erste Seite' : 'First');\n      $(\".previous\").text(isFrench ? 'Précédent' : isSpanish ? 'Anterior' : isGermen ? 'Zurück' : 'Previous');\n      $(\".next\").text(isFrench ? 'Suivant' : isSpanish ? 'Siguiente' : isGermen ? 'Weiter' : 'Next');\n      $(\".last\").text(isFrench ? 'Dernière' : isSpanish ? 'Último' : isGermen ? 'Letzte' : 'Last');\n    }\n    removeUnwantedSpace(input, value) {\n      this[input] = this.CommonFunctionsService.trimSpaceFromNonObjectInputs(value);\n    }\n    clearFilters() {\n      this.manufacturer = '';\n      this.modelName = '';\n      this.opmode = '';\n      this.serialNumber = '';\n      this.subscriber = '';\n      this.doFilter();\n    }\n  }\n  InventoryReportComponent.ɵfac = function InventoryReportComponent_Factory(t) {\n    return new (t || InventoryReportComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.ReportsService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.DataServiceService), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.DateUtilsService), i0.ɵɵdirectiveInject(i8.ValidatorService), i0.ɵɵdirectiveInject(i9.DeviceGroupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i10.DownloadService), i0.ɵɵdirectiveInject(i11.Title), i0.ɵɵdirectiveInject(i12.CommonFunctionsService));\n  };\n  InventoryReportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InventoryReportComponent,\n    selectors: [[\"app-inventory-report\"]],\n    viewQuery: function InventoryReportComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 44,\n    vars: 22,\n    consts: [[\"id\", \"inventory-report\", 1, \"tab-pane\"], [1, \"row\", \"p-0\", \"d-none\"], [1, \"col-md-12\", \"mb-4\", \"f-size-18\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"time\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"error\", \"fade\", \"show\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"row\", \"no-gutters\", \"my-3\"], [1, \"d-block\", \"d-sm-none\", \"ccl-Secondary-title\", \"mb-2\", \"col-md-12\", \"border-bottom\"], [\"id\", \"netops_report_section\", 1, \"mt-3\"], [1, \"row\", \"my-3\"], [\"for\", \"deviceReport\", 1, \"col-12\", \"col-lg-2\"], [1, \"error\"], [1, \"col-12\", \"col-lg-5\", \"state-success\"], [\"id\", \"deviceReport\", \"name\", \"rttype\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"required\", \"\", 3, \"ngModel\", \"items\", \"clearable\", \"searchable\", \"ngModelOptions\", \"ngModelChange\", \"change\"], [\"rttype\", \"ngModel\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [\"class\", \"row my-3\", 4, \"ngIf\"], [\"class\", \"row my-3 d-flex\", 4, \"ngIf\"], [\"class\", \"row mt-3\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-start\"], [\"type\", \"button\", \"id\", \"netops_report_load_bttn\", 1, \"btn-default\", \"primary\", \"px-3\", \"mb-3\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"class\", \"inventory-details-table\", 4, \"ngIf\"], [\"class\", \"table-responsive tableWidth margin-top-5\", 4, \"ngIf\"], [1, \"errorMessage\"], [\"for\", \"devicetime\", 1, \"col-12\", \"col-md-12\", \"col-sm-12\", \"col-xl-2\", \"col-lg-2\"], [1, \"col-md-12\", \"col-sm-12\", \"col-xl-5\", \"col-lg-5\", \"state-success\"], [\"name\", \"dvtime\", \"id\", \"timePeriod\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"items\", \"clearable\", \"searchable\", \"ngModelChange\", \"change\"], [\"dvtime\", \"ngModel\"], [\"id\", \"deviceTimeErr\", \"class\", \"errorMessage\", 4, \"ngIf\"], [\"id\", \"deviceTimeErr\", 1, \"errorMessage\"], [\"for\", \"deviceGroup\", 1, \"col-md-3\", \"col-sm-3\", \"col-xl-2\", \"col-lg-2\"], [1, \"col-md-9\", \"col-sm-9\", \"col-xl-5\", \"col-lg-5\", \"state-success\"], [\"id\", \"deviceGroup\", \"bindLabel\", \"name\", \"bindValue\", \"name\", 3, \"ngModel\", \"ngModelOptions\", \"items\", \"ngModelChange\", \"change\"], [\"id\", \"deviceValidation\", 1, \"hValidationMessage\", \"m-0\"], [1, \"row\", \"my-3\", \"d-flex\"], [1, \"col-lg-2\"], [1, \"col-lg-5\", \"float-right\"], [1, \"row\"], [1, \"col-sm-12\", \"col-lg-6\", \"col-xl-6\", \"col-md-6\"], [1, \"ccl-form\", \"w-100\"], [\"id\", \"start_date\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"autoZIndex\", \"ngModel\", \"showIcon\", \"ngModelOptions\", \"maxDate\", \"minDate\", \"ngModelChange\", \"onSelect\"], [\"id\", \"stDateValidation\", 1, \"hValidationMessage\"], [1, \"col-md-6\"], [1, \"ccl-form\"], [\"id\", \"enDateValidation\", 1, \"hValidationMessage\"], [1, \"row\", \"mt-3\"], [1, \"col-md-2\", \"control-label\", \"text-left\"], [\"nottimePeriod\", \"\"], [1, \"col-md-4\"], [1, \"checkbox\", \"switcher\"], [\"for\", \"test\"], [\"type\", \"checkbox\", \"id\", \"test\", \"checked\", \"\", \"data-toggle\", \"toggle\", 3, \"ngModelOptions\", \"ngModel\", \"ngModelChange\", \"change\"], [1, \"on\"], [1, \"off\"], [\"id\", \"container\", \"class\", \"h-auto\", 4, \"ngIf\"], [\"id\", \"chartDetails\", 4, \"ngIf\"], [\"id\", \"exportTableDiv\", \"class\", \"col-sm-12\", 4, \"ngIf\"], [1, \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"id\", \"container\", 1, \"h-auto\"], [\"id\", \"chartDetails\"], [\"id\", \"exportTableDiv\", 1, \"col-sm-12\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-2x\", \"fa-download\", \"pull-right\", \"export-software-versions\", \"pointer\", 3, \"click\"], [1, \"pull-right\", \"d-inline-flex\", \"pointer\", 3, \"click\"], [\"id\", \"netops_report_search_section\", 1, \"filter-section\", \"filter-elemnts\", \"pt-2\"], [1, \"richadtest\"], [1, \"col-12\", \"row\", \"p-0\"], [1, \"inside\"], [\"for\", \"Mfg\", 1, \"f-w-600\"], [\"id\", \"Mfg\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [\"for\", \"modelname\", 1, \"f-w-600\"], [1, \"state-success\"], [\"id\", \"modName\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [\"for\", \"mode\", 1, \"f-w-600\"], [\"id\", \"mod\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"selectboxwidth\", 3, \"ngModel\", \"items\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [1, \"form-group\", \"ccl-form\"], [\"for\", \"inputEmail3\", 1, \"f-w-600\"], [\"type\", \"text\", \"id\", \"serialNumber\", \"oninput\", \"this.value = this.value.replace(/[^0-9A-Za-z]/g, '').replace(/(\\\\..?)\\\\../g, '$1')\", \"name\", \"serialNumber\", \"trimSpace\", \"\", 1, \"inputboxwidth\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"type\", \"text\", \"id\", \"subscriber\", \"name\", \"subscriber\", \"trimSpace\", \"\", 1, \"inputboxwidth\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"col-12\", \"p-0\", \"d-flex\", \"align-items-center\"], [1, \"mr-3\", \"align-self-center\"], [\"type\", \"button\", \"id\", \"netops_report_filter_bttn\", 1, \"btn-default\", \"primary\", 3, \"click\"], [\"type\", \"button\", \"id\", \"netops_report_filter_bttn\", 1, \"btn-link\", \"text-decoration-none\", 3, \"click\"], [1, \"inventory-details-table\"], [1, \"d-flex\", \"justify-content-end\", \"mb-3\"], [\"class\", \"btn-dft btn-default text-decoration-none py-1 cursor-pointer\", \"id\", \"exportanchor\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"table-responsive tableWidth\", 4, \"ngIf\"], [\"id\", \"exportanchor\", 1, \"btn-dft\", \"btn-default\", \"text-decoration-none\", \"py-1\", \"cursor-pointer\", 3, \"click\"], [1, \"table-responsive\", \"tableWidth\"], [\"id\", \"inventory-rep\", \"datatable\", \"\", 1, \"table\", \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\"], [1, \"f-w-600\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"id\", \"invMac\"], [\"scope\", \"col\", \"id\", \"invLDT\"], [\"scope\", \"col\", \"id\", \"invLCT\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"primary link-pointer\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"subscriberNameLink\", \"\"], [\"serialNumberLink\", \"\"], [1, \"primary\", \"link-pointer\", 3, \"click\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"class\", \"my-2\", 4, \"ngIf\"], [\"class\", \"table-responsive tableWidth\", \"id\", \"SwapReport\", 4, \"ngIf\"], [1, \"my-2\"], [\"id\", \"netops_unassdev_search\", 1, \"d-flex\", \"align-items-center\", \"justify-content-end\"], [1, \"form-group\", \"col-8\", \"ccl-form\", \"d-flex\", \"align-items-center\", \"justify-content-end\", \"position-relative\"], [\"for\", \"search\", 1, \"mr-1\", \"mb-0\"], [\"id\", \"\", \"oninput\", \"this.value = this.value.replace(/[^0-9A-Za-z:]/g, '').replace(/(\\\\..?)\\\\../g, '$1')\", \"placeholder\", \"Fsan/macAddress/serialNumber/registrationId/subscriberName/subscriberAccount\", 1, \"ccl-from\", \"ccl-search-input\", 3, \"ngModel\", \"keyup\", \"search\", \"ngModelChange\"], [\"type\", \"button\", \"class\", \"close position-absolute mr-2\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"form-group ml-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"close\", \"position-absolute\", \"mr-2\", 3, \"click\"], [1, \"sh-clear-icon\"], [1, \"form-group\", \"ml-1\"], [\"id\", \"exportanchor\", 1, \"btn-dft\", \"btn-default\", \"text-decoration-none\", \"cursor-pointer\", 3, \"disabled\", \"click\"], [\"id\", \"SwapReport\", 1, \"table-responsive\", \"tableWidth\"], [\"datatable\", \"\", 1, \"table\", \"row-border\", \"hover\", \"table-alter\", \"swap-table\", 3, \"dtOptions\"], [\"class\", \"tfoot-no-data\", 4, \"ngIf\"], [1, \"tfoot-no-data\"], [\"colspan\", \"9\", 1, \"text-center\"], [1, \"table-responsive\", \"tableWidth\", \"margin-top-5\"], [1, \"text-center\"]],\n    template: function InventoryReportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h4\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵelement(6, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function InventoryReportComponent_Template_button_click_7_listener() {\n          return ctx.closeAlert();\n        });\n        i0.ɵɵelement(8, \"span\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"span\", 4);\n        i0.ɵɵelement(13, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function InventoryReportComponent_Template_button_click_14_listener() {\n          return ctx.closeAlert();\n        });\n        i0.ɵɵelement(15, \"span\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"div\", 11);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"section\", 12);\n        i0.ɵɵelementStart(21, \"form\");\n        i0.ɵɵelementStart(22, \"div\", 13);\n        i0.ɵɵelementStart(23, \"label\", 14);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementStart(25, \"span\", 15);\n        i0.ɵɵtext(26, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 16);\n        i0.ɵɵelementStart(28, \"ng-select\", 17, 18);\n        i0.ɵɵlistener(\"ngModelChange\", function InventoryReportComponent_Template_ng_select_ngModelChange_28_listener($event) {\n          return ctx.reportType = $event;\n        })(\"change\", function InventoryReportComponent_Template_ng_select_change_28_listener() {\n          return ctx.onChangeReportType();\n        });\n        i0.ɵɵtemplate(30, InventoryReportComponent_ng_template_30_Template, 1, 1, \"ng-template\", 19);\n        i0.ɵɵtemplate(31, InventoryReportComponent_ng_template_31_Template, 1, 1, \"ng-template\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, InventoryReportComponent_div_32_Template, 2, 1, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, InventoryReportComponent_div_33_Template, 9, 8, \"div\", 22);\n        i0.ɵɵtemplate(34, InventoryReportComponent_div_34_Template, 9, 6, \"div\", 22);\n        i0.ɵɵtemplate(35, InventoryReportComponent_div_35_Template, 20, 30, \"div\", 23);\n        i0.ɵɵtemplate(36, InventoryReportComponent_div_36_Template, 11, 4, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 25);\n        i0.ɵɵelementStart(38, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function InventoryReportComponent_Template_button_click_38_listener() {\n          return ctx.doFilter();\n        });\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, InventoryReportComponent_section_40_Template, 2, 0, \"section\", 27);\n        i0.ɵɵtemplate(41, InventoryReportComponent_div_41_Template, 8, 6, \"div\", 27);\n        i0.ɵɵtemplate(42, InventoryReportComponent_div_42_Template, 3, 2, \"div\", 28);\n        i0.ɵɵtemplate(43, InventoryReportComponent_div_43_Template, 3, 1, \"div\", 29);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(29);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.Inventory_Reports);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.language.Time_alert);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"innerHtml\", ctx.alertMessage, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Inventory Report\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.language.Report_Type);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reportType)(\"items\", ctx.reportTypes)(\"clearable\", false)(\"searchable\", false)(\"ngModelOptions\", i0.ɵɵpureFunction0(21, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (_r0 == null ? null : _r0.invalid) && ((_r0 == null ? null : _r0.touched) || ctx.submit));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showCustomDeviceGroup && !ctx.hideCustomSelect && ctx.showTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCustomDeviceGroup && ctx.showTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCustomTimePeriod && ctx.showTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showCustomDeviceGroup && !ctx.hideCustomSelect && ctx.showTime);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.bttnDissable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Load_Report, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.unassosSystem);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.unassosSystem);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.CountRecieved);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.inventoryCount && ctx.showNoResults && !ctx.unassosSystem);\n      }\n    },\n    directives: [i13.ɵNgNoValidate, i13.NgControlStatusGroup, i13.NgForm, i14.NgSelectComponent, i13.RequiredValidator, i13.NgControlStatus, i13.NgModel, i14.ɵh, i14.ɵf, i15.NgIf, i16.Calendar, i13.CheckboxControlValueAccessor, i17.UnassociatedDevicesComponent, i13.DefaultValueAccessor, i18.DataTableDirective, i15.NgForOf],\n    pipes: [i15.DatePipe],\n    styles: [\"div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding:0;cursor:pointer}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{vertical-align:middle}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{position:relative;display:inline-block;width:45px;height:25px;background:#ffffff;border:1px solid #0279ff;border-radius:50px;transition:all .3s ease-in-out;padding:5px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{position:absolute;display:block;width:20px;height:19px;background:#0279ff;border-radius:50%;transition:all .3s ease-in-out;left:2px;top:2px}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]{background:#269bff;border-color:#269bff}div.checkbox.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], div.radio.switcher[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + span[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{left:50%;background:#ffffff}form[_ngcontent-%COMP%]{width:100%}.btn-right[_ngcontent-%COMP%]{width:100%;padding-right:15px}.multi-btndropdown-sec[_ngcontent-%COMP%]{display:flex;justify-content:space-around;width:100%;flex:0 0 100%}#subLocationId[_ngcontent-%COMP%]:after{content:none!important;cursor:default!important}.multi-btndropdown-sec[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{width:18%}[_nghost-%COMP%]     table.dataTable td.dataTables_empty{display:none}.ng-option[_ngcontent-%COMP%]:first-child{padding:15%}.l1[_ngcontent-%COMP%]{margin-left:-10px;font-size:15px}th[_ngcontent-%COMP%]{font-weight:bold}button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;pointer-events:all!important}.highcharts-figure[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{min-width:310px;max-width:800px;margin:1em auto}#container[_ngcontent-%COMP%]{height:400px}.alert[_ngcontent-%COMP%]{display:none}.highcharts-data-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{font-family:Verdana,sans-serif;border-collapse:collapse;border:1px solid #EBEBEB;margin:10px auto;text-align:center;width:100%;max-width:500px}.highcharts-data-table[_ngcontent-%COMP%]   caption[_ngcontent-%COMP%]{padding:1em 0;font-size:1.2em;color:#555}.highcharts-data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;padding:.5em}.highcharts-data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   caption[_ngcontent-%COMP%]{padding:.5em}.highcharts-data-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even){background:#f8f8f8}.highcharts-data-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background:#f1f7ff}.pointer[_ngcontent-%COMP%]{cursor:pointer}.ValidationMessage[_ngcontent-%COMP%]{color:#c70000;line-height:20px;padding-left:0px 18px;display:flex}.hValidationMessage[_ngcontent-%COMP%]{display:none;color:#c70000;line-height:20px;display:-ms-flexbox}.richadtest[_ngcontent-%COMP%]{width:100%;display:flex;padding:0 4px 0 8px;flex-wrap:wrap}.richadtest[_ngcontent-%COMP%]   .inside[_ngcontent-%COMP%]{width:calc(100% / 5);padding:0 10px}.inventory-details-table[_ngcontent-%COMP%]{margin-bottom:15px;overflow:auto}.inventory-details-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-bottom:15px}.inventory-details-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:1;padding:5px}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   .inventory-details-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]:first-child   td[_ngcontent-%COMP%]{padding-top:20px;width:25%}.inventory-details-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:5px}#subscriberLocalId[_ngcontent-%COMP%]{margin-bottom:15px;overflow:auto}#subscriberLocalId[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-bottom:15px}#subscriberLocalId[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:1;padding:5px}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   #subscriberLocalId[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]:first-child   td[_ngcontent-%COMP%]{padding-top:20px;width:25%}#subscriberLocalId[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:5px}#chartDetails[_ngcontent-%COMP%]{text-align:center}.ng-dropdown-panel-items[_ngcontent-%COMP%]   #a7d555aa09e4-0[_ngcontent-%COMP%]{padding:15px 0!important}.link-pointer[_ngcontent-%COMP%]{cursor:pointer;text-decoration:none}.btn-link[_ngcontent-%COMP%]{background:transparent;border:none}.btn-link[_ngcontent-%COMP%]:hover{background-color:transparent}.ccl-search-input[_ngcontent-%COMP%]{max-width:518px;width:100%}.swap-table.dataTable[_ngcontent-%COMP%]   .tfoot-no-data[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .swap-table.dataTable[_ngcontent-%COMP%]   .tfoot-no-data[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-top-color:#ccc!important;border-top-width:0!important;padding-bottom:10px;border-bottom:1px solid #ccc}.sh-clear-icon[_ngcontent-%COMP%]{width:11.7px;height:11.7px;background-size:11.7px}\"]\n  });\n  return InventoryReportComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}