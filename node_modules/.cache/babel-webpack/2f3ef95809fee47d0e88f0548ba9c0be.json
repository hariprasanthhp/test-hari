{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../shared/services/sso-auth.service\";\nimport * as i2 from \"src/app/support/data.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction DashboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction DashboardComponent_iframe_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"iframe\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.frameUrl, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(ssoService, dataService, translateService, sanitizer, titleService) {\n      this.ssoService = ssoService;\n      this.dataService = dataService;\n      this.translateService = translateService;\n      this.sanitizer = sanitizer;\n      this.titleService = titleService;\n      this.ticketId = '';\n      this.noScopes = true;\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        if (this.ticketId) this.formUrl(this.ticketId);\n        this.titleService.setTitle(`${this.language['Calix Cloud']} - ${this.language['Operations']}`);\n      });\n      this.titleService.setTitle(`${this.language['Calix Cloud']} - ${this.language['Operations']}`);\n      let scopes = this.ssoService.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        if (Object.keys(scopes).length && scopes['cloud.rbac.coc.dashboard']) {\n          this.noScopes = false;\n          this.loadUrl();\n        }\n      } else {\n        this.noScopes = false;\n        this.loadUrl();\n      }\n    }\n    loadUrl() {\n      const pageUrl = window.location.href;\n      let qlikCscType = 'CCO';\n      this.loader = true;\n      this.ssoService.getQlikTOkenByAppType(qlikCscType).subscribe(res => {\n        this.loader = false;\n        this.ticketId = res.Ticket;\n        this.formUrl(this.ticketId);\n      }, err => {\n        this.loader = false;\n        this.pageErrorHandle(err);\n      });\n      //if(pageUrl.includes(\"dashboard\")) \n    }\n\n    formUrl(ticketId) {\n      let url = environment.ADVANCED_URL;\n      let urlArr = url.split(\"?\");\n      let langParams = {\n        en: '#/?lang=en&select=%25LANGUAGE,English',\n        fr: '#/?lang=fr&select=%25LANGUAGE,French%20Canadian',\n        es: '#/?lang=es&select=%25LANGUAGE,Spanish%20Latin%20America',\n        de_DE: `#/?lang=de&select=%25LANGUAGE,German`\n      };\n      let lang = sessionStorage.getItem('defaultLanguage');\n      const selectedLang = langParams[lang];\n      this.frameUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${urlArr[0].replace('#/', '')}?qlikTicket=${ticketId}${selectedLang}&stream_id=e1mg7db1626871735441`);\n      this.refreshIframe();\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.alertMessage = 'Access Denied';\n      } else {\n        this.alertMessage = this.dataService.pageErrorHandle(err);\n      }\n      this.isError = true;\n      $(\"body\").scrollTop(0);\n    }\n    refreshIframe() {\n      this.isRefreshing = true;\n      setTimeout(() => {\n        this.isRefreshing = false;\n      }, 50);\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i2.DataServiceService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DomSanitizer), i0.ɵɵdirectiveInject(i4.Title));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"dasboard-frame\", 2, \"min-height\", \"600px\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"embed-responsive-item\", \"allowfullscreen\", \"\", \"style\", \"width: 100%;\\n        height: 100%\", 3, \"src\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"allowfullscreen\", \"\", 1, \"embed-responsive-item\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"src\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DashboardComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, DashboardComponent_iframe_2_Template, 1, 1, \"iframe\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.noScopes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.frameUrl && !ctx.isRefreshing);\n      }\n    },\n    directives: [i5.NgIf],\n    styles: [\".dasboard-frame[_ngcontent-%COMP%]{height:calc(100vh - 185px);width:100%}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}