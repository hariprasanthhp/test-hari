{"ast":null,"code":"import { combineLatest, of } from 'rxjs';\nimport { SubscriberManagement } from '../subscriber.constants';\nimport * as _ from 'lodash';\nimport { HttpParams } from '@angular/common/http';\nimport { getSubscribeList } from 'src/app/support/shared/service/endpoints';\nimport * as $ from \"jquery\";\nimport { environment } from 'src/environments/environment';\nimport { SSIDNamePattern } from 'src/app/support/shared/service/utility.class';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"src/app/support/data.service\";\nimport * as i4 from \"../../operations/services/device-group.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common/http\";\nimport * as i7 from \"../../operations/services/profile.service\";\nimport * as i8 from \"../service/management.service\";\nimport * as i9 from \"@angular/platform-browser\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"./device-wizard/device-wizard.component\";\nimport * as i12 from \"./service-wizard/service-wizard.component\";\nimport * as i13 from \"./settings-wizard/settings-wizard.component\";\nfunction SubscriberWizardComponent_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r9.errorMessage, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SubscriberWizardComponent_div_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r10.language.Model_req, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SubscriberWizardComponent_div_5_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r11.language.showDeviceIDErrorMsg, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SubscriberWizardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"span\", 22);\n    i0.ɵɵelement(2, \"img\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      ctx_r12.isError = false;\n      ctx_r12.addDeviceObj.showModeErrorMsg = false;\n      return ctx_r12.addDeviceObj.showDeviceIDErrorMsg = false;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SubscriberWizardComponent_div_5_div_5_Template, 1, 1, \"div\", 25);\n    i0.ɵɵtemplate(6, SubscriberWizardComponent_div_5_div_6_Template, 1, 1, \"div\", 25);\n    i0.ɵɵtemplate(7, SubscriberWizardComponent_div_5_div_7_Template, 1, 1, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.addDeviceObj.showModeErrorMsg);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.addDeviceObj.showDeviceIDErrorMsg);\n  }\n}\nfunction SubscriberWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"span\", 22);\n    i0.ɵɵelement(2, \"img\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_div_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"step-current\": a0,\n    \"\": a1,\n    \"step-done\": a2\n  };\n};\nfunction SubscriberWizardComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_li_12_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onTabChange(i_r17);\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r16 = ctx.$implicit;\n    const i_r17 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r2.language[tab_r16]);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx_r2.activeTab === tab_r16, ctx_r2.addDeviceObj.addDeviceTab.length === 2, ctx_r2.levelsPassed > i_r17 && ctx_r2.activeTab !== tab_r16));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language[tab_r16]);\n  }\n}\nfunction SubscriberWizardComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onTabChange(ctx_r20.selectedTabIndex + 1);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"img\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.disableNextBtn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Next, \" \");\n  }\n}\nfunction SubscriberWizardComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onSaveDeviceInfo();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disableFinishBtn || ctx_r4.duplicateSbcrbrAscDevice);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.Finish, \" \");\n  }\n}\nfunction SubscriberWizardComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵelementStart(2, \"div\", 34);\n    i0.ɵɵelementStart(3, \"span\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.language.Loading);\n  }\n}\nfunction SubscriberWizardComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 37);\n    i0.ɵɵelementStart(7, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_div_20_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.confirmDeleteServicesAssociateWithSbscrbrMsg();\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_div_20_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.closeDeleteServicesAssociateWithSbscrbrMsg();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r6.language.Confirmation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.deleteServicesAssociateWithSbscrbrMsg, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.Cancel, \" \");\n  }\n}\nfunction SubscriberWizardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.language[\"This System is Running Under SmartBiz.\"]);\n  }\n}\nfunction SubscriberWizardComponent_div_22_app_device_wizard_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-device-wizard\", 44);\n    i0.ɵɵlistener(\"tabChange\", function SubscriberWizardComponent_div_22_app_device_wizard_1_Template_app_device_wizard_tabChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.onTabChange($event);\n    })(\"onValidateExistingDevice\", function SubscriberWizardComponent_div_22_app_device_wizard_1_Template_app_device_wizard_onValidateExistingDevice_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.onValidateExistingDevice($event);\n    })(\"changedOpMode\", function SubscriberWizardComponent_div_22_app_device_wizard_1_Template_app_device_wizard_changedOpMode_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.changedOpmode($event);\n    })(\"wifiSsidMngrStngs\", function SubscriberWizardComponent_div_22_app_device_wizard_1_Template_app_device_wizard_wifiSsidMngrStngs_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.getWifiSsidMngrStngs($event);\n    })(\"bSmbModeEmit\", function SubscriberWizardComponent_div_22_app_device_wizard_1_Template_app_device_wizard_bSmbModeEmit_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return ctx_r35.getbSmbMode($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"addDeviceObj\", ctx_r27.addDeviceObj)(\"staticGroupList\", ctx_r27.deviceDataList)(\"editMode\", ctx_r27.editMode)(\"isProvision\", ctx_r27.isProvision)(\"deviceModels\", ctx_r27.deviceModels)(\"_staticGrpError\", ctx_r27.staticGrpError)(\"checkDeviceDiscovery\", ctx_r27.deviceDiscovery)(\"bSmbMode\", ctx_r27.bSmbMode);\n  }\n}\nfunction SubscriberWizardComponent_div_22_app_service_wizard_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-service-wizard\", 45);\n    i0.ɵɵlistener(\"disableFinish\", function SubscriberWizardComponent_div_22_app_service_wizard_2_Template_app_service_wizard_disableFinish_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.disableComplete($event);\n    })(\"disableNext\", function SubscriberWizardComponent_div_22_app_service_wizard_2_Template_app_service_wizard_disableNext_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return ctx_r38.disableNext($event);\n    })(\"voiceStatussen\", function SubscriberWizardComponent_div_22_app_service_wizard_2_Template_app_service_wizard_voiceStatussen_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return ctx_r39.voiceStatusres($event);\n    })(\"wifiSsidMngrStngs\", function SubscriberWizardComponent_div_22_app_service_wizard_2_Template_app_service_wizard_wifiSsidMngrStngs_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return ctx_r40.getWifiSsidMngrStngs($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"addDeviceObj\", ctx_r28.addDeviceObj)(\"isPRConfiguredOutside\", ctx_r28.isPRConfiguredOutside)(\"editMode\", ctx_r28.editMode)(\"bSmbMode\", ctx_r28.bSmbMode)(\"wifiSsidMngrStngsValues\", ctx_r28.wifiSsidMngrStngsValues)(\"tempWifiObj\", ctx_r28.tempWifiObj);\n  }\n}\nfunction SubscriberWizardComponent_div_22_app_settings_wizard_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-settings-wizard\", 46);\n    i0.ɵɵlistener(\"disableFinish\", function SubscriberWizardComponent_div_22_app_settings_wizard_3_Template_app_settings_wizard_disableFinish_0_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.disableComplete($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"addDeviceObj\", ctx_r29.addDeviceObj);\n  }\n}\nfunction SubscriberWizardComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SubscriberWizardComponent_div_22_app_device_wizard_1_Template, 1, 8, \"app-device-wizard\", 41);\n    i0.ɵɵtemplate(2, SubscriberWizardComponent_div_22_app_service_wizard_2_Template, 1, 6, \"app-service-wizard\", 42);\n    i0.ɵɵtemplate(3, SubscriberWizardComponent_div_22_app_settings_wizard_3_Template, 1, 1, \"app-settings-wizard\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.activeTab === ctx_r8.subscriberManagement.DEVICE_LABEL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.activeTab === ctx_r8.subscriberManagement.SERVICE_LABEL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.activeTab === ctx_r8.subscriberManagement.SETTINGS_LABEL);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    searchText: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    primary: a0\n  };\n};\nexport let SubscriberWizardComponent = /*#__PURE__*/(() => {\n  class SubscriberWizardComponent {\n    constructor(translateService, ssoService, service, deviceService, router, http, profileService, managementService, cd, titleService) {\n      var _a, _b;\n      this.translateService = translateService;\n      this.ssoService = ssoService;\n      this.service = service;\n      this.deviceService = deviceService;\n      this.router = router;\n      this.http = http;\n      this.profileService = profileService;\n      this.managementService = managementService;\n      this.cd = cd;\n      this.titleService = titleService;\n      this.deleteServicesAssociateWithSbscrbrMsg = '';\n      this.activeTab = SubscriberManagement.DEVICE_LABEL;\n      this.subscriberManagement = SubscriberManagement;\n      this.selectedTabIndex = 0;\n      this.isTabChange = true;\n      this.showModeErrorMsg = false;\n      this.showDeviceIDErrorMsg = false;\n      this.showModelErrorMsg = false;\n      this.orgId = '';\n      this.loader = false;\n      this.subscriberInfo = {};\n      this.errorMessage = '';\n      this.isError = false;\n      this.editDeviceObj = {};\n      this.profileList = [];\n      this.serviceProfileList = [];\n      this.allProfileList = [];\n      this.dialPlanList = [];\n      this.deviceDataList = [];\n      this.pageTitle = 'Add Device';\n      this.searchedMACAddress = '';\n      this.searchText = \"\";\n      this.editMode = false;\n      this.disableFinishBtn = false;\n      this.isCMS = false;\n      this.disableNextBtn = false;\n      this.updatedOpmode = null;\n      this.deviceProvRecord = {};\n      this.isProvision = false;\n      this.voiceStatus = true;\n      this.bSmbMode = false;\n      this.staticGrpError = false;\n      this.error = false;\n      this.errorInfo = '';\n      this.duplicateSbcrbrAscDevice = false;\n      this.deviceDiscovery = null;\n      this.levelsPassed = 0;\n      this.confirmDeleteServicesAssociateWithSbscrbr = false;\n      this.staticGroupTypes = {};\n      this.deviceModels = [];\n      this.wifiSsidMngrStngsValues = {};\n      if ((_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.subscriberData) this.managementService.setSelectedDeviceInfo(history);\n      let selectedDeviceInfo = JSON.parse(this.managementService.getSelectedDeviceInfo());\n      if (!((_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.subscriberData) && (selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.subscriberData)) {\n        if (!(selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.editDeviceObj) && (selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.subscriberData)) {\n          this.router.navigate(['/support/netops-management/subscriber-wizard'], {\n            state: selectedDeviceInfo\n          });\n        }\n        if ((selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.subscriberData) && (selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.editDeviceObj)) {\n          this.router.navigate(['/support/netops-management/subscriber-wizard'], {\n            state: selectedDeviceInfo\n          });\n          let DeviceId = sessionStorage.getItem('selectedSubDeviceId');\n          let opModeWithOnt = sessionStorage.getItem('selectedSubDeviceopModeWithOnt');\n          this.editDevice(selectedDeviceInfo.subscriberData, DeviceId, opModeWithOnt ? opModeWithOnt : '');\n        }\n      }\n      this.deviceModels = this.managementService.getDeviceModels(this.ssoService.getOrgId());\n      this.getDeviceModels();\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d, _e, _f, _g;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language['Subscriber_Management']} - ${this.language[\"NetOps\"]} - ${this.language[\"Service\"]} - ${this.language[\"Calix Cloud\"]}`);\n      });\n      this.titleService.setTitle(`${this.language['Subscriber_Management']} - ${this.language[\"NetOps\"]} - ${this.language[\"Service\"]} - ${this.language[\"Calix Cloud\"]}`);\n      this.subscriberInfo = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.subscriberData;\n      this.editDeviceObj = (_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.editDeviceObj;\n      this.pageTitle = ((_c = history === null || history === void 0 ? void 0 : history.state) === null || _c === void 0 ? void 0 : _c.editDeviceObj) ? this.language['Edit Device'] : this.language['Add_Device'];\n      this.editMode = ((_d = history === null || history === void 0 ? void 0 : history.state) === null || _d === void 0 ? void 0 : _d.editDeviceObj) ? true : false;\n      this.searchText = (_e = history === null || history === void 0 ? void 0 : history.state) === null || _e === void 0 ? void 0 : _e.searchText;\n      this.orgId = this.ssoService.getOrgId();\n      this.initAddDeviceOject(undefined);\n      if ((_f = history === null || history === void 0 ? void 0 : history.state) === null || _f === void 0 ? void 0 : _f.isProvision) {\n        this.isProvision = (_g = history === null || history === void 0 ? void 0 : history.state) === null || _g === void 0 ? void 0 : _g.isProvision;\n      }\n      this.loader = true;\n      setTimeout(() => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.loader = false;\n        this.getDeviceData();\n        this.getProfileData();\n        this.onTabChange(0);\n        this.getDialPlanList();\n        this.getStaticGroupMemebers();\n        if (((_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.isUnassociateSubscriber) && ((_c = (_b = history === null || history === void 0 ? void 0 : history.state) === null || _b === void 0 ? void 0 : _b.subscriberData) === null || _c === void 0 ? void 0 : _c.devices[0])) {\n          this.getDeviceDetail((_e = (_d = history === null || history === void 0 ? void 0 : history.state) === null || _d === void 0 ? void 0 : _d.subscriberData) === null || _e === void 0 ? void 0 : _e.devices[0].deviceId);\n        }\n        if (this.editDeviceObj && this.editDeviceObj.rgConfigMode && this.editDeviceObj.rgConfigMode == \"Native\") {\n          this.isCMS = true;\n        }\n        if (this.editDeviceObj) {\n          if (((_f = this.editDeviceObj) === null || _f === void 0 ? void 0 : _f.wifi) && ((_g = this.editDeviceObj) === null || _g === void 0 ? void 0 : _g.wifi[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"])) {\n            this.editDeviceObj.wifi[\"UNIFIED_PRIMARY_SSID\"] = this.editDeviceObj.wifi[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"];\n          }\n          // this.tempWifiObj = JSON.parse(JSON.stringify(this.editDeviceObj.wifi));\n        }\n\n        this.deviceProvRecord = this.editDeviceObj ? Object.assign({}, this.editDeviceObj) : {};\n        //if (this.editMode && this.editDeviceObj) this.checkIfDeviceConfiguredOutside(this.editDeviceObj);\n      }, 3000);\n      this.getSubscriberServices();\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n      if (this.combineLatestPRSubs) this.combineLatestPRSubs.unsubscribe();\n      if (this.subServicesSubscription) this.subServicesSubscription.unsubscribe();\n      sessionStorage.removeItem('selectedSubHistInfo');\n      sessionStorage.removeItem('selectedSubDeviceId');\n      sessionStorage.removeItem('selectedSubDeviceopModeWithOnt');\n    }\n    getProfileData() {\n      if (this.getAllProfileSubscribe) this.getAllProfileSubscribe.unsubscribe();\n      this.loader = true;\n      this.getAllProfileSubscribe = this.profileService.getProfileList(this.orgId).subscribe(res => {\n        this.loader = false;\n        if (res) {\n          this.buildeServiceProfileList(res);\n          this.buildBWProfile(res);\n          this.allProfileList = res;\n          if (!history.state.isNewRecord && this.editDeviceObj) {\n            this.patchVlaue(this.editDeviceObj.deviceId);\n          }\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      }, () => {});\n    }\n    getDeviceData() {\n      if (this.allDeviceGrpSubscribe) this.allDeviceGrpSubscribe.unsubscribe();\n      this.loader = true;\n      this.allDeviceGrpSubscribe = this.deviceService.getDeviceGoupCount(this.orgId).subscribe(res => {\n        this.listSubscribe = this.deviceService.getDeviceGoupList(this.ssoService.getOrgId(), res.count).subscribe(data => {\n          this.loader = false;\n          if (data) {\n            this.deviceDataList = data;\n          }\n        }, err => {\n          this.pageErrorHandle(err);\n        });\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    getDialPlanList() {\n      if (this.getAllDialPlanSubscribe) this.getAllDialPlanSubscribe.unsubscribe();\n      this.loader = true;\n      this.getAllDialPlanSubscribe = this.managementService.getDialPlanList(this.orgId).subscribe(res => {\n        this.loader = false;\n        if (res) {\n          this.addDeviceObj.configurationObj['serviceDialPlan'] = res;\n          this.dialPlanList = res;\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      }, () => {});\n    }\n    onValidateExistingDevice(deviceID) {\n      this.isError = false;\n      const MACADDRESS = /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/;\n      if (deviceID) {\n        this.loader = true;\n        if (MACADDRESS.test(deviceID)) {\n          this.searchDeviceByMACAddressDetail(deviceID);\n        } else {\n          this.getDeviceDetail(deviceID);\n        }\n      } else {\n        this.initAddDeviceOject(deviceID);\n        this.buildeServiceProfileList(this.allProfileList);\n        this.buildBWProfile(this.allProfileList);\n        this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\n      }\n    }\n    closeAlert() {\n      this.error = false;\n      this.errorInfo = '';\n    }\n    getDeviceDetail(deviceID, macAddress = undefined) {\n      this.duplicateSbcrbrAscDevice = false;\n      this.closeAlert();\n      /***\r\n       * fix CCL-27987\r\n       */\n      //if (this.getAllDialPlanSubscribe) this.getAllDialPlanSubscribe.unsubscribe();\n      this.getPRAndFDDeviceInfo(deviceID, macAddress);\n      /*\r\n      this.managementService.getDeviceInfo(this.orgId, deviceID).subscribe(\r\n        (res: any) => {\r\n          this.loader = false;\r\n          this.deviceProvRecord = {};\r\n          if (res) {\r\n            if (this.subscriberInfo.subscriberId && res.subscriberId && this.subscriberInfo.subscriberId == res.subscriberId) {\r\n              if (!(typeof this.editDeviceObj === \"object\" && this.editDeviceObj._id) && !history.state.isUnassociateSubscriber) {\r\n                this.error = true;\r\n                this.errorInfo = 'Error! Subscriber already has an associated device with the same ID.';\r\n                this.duplicateSbcrbrAscDevice = true;            //alert(\"duplicate\");\r\n                    }\r\n                  }\r\n            this.editDeviceObj = res;\r\n            this.deviceProvRecord = { ...res };\r\n            this.deviceDiscovery = true;\r\n            if (macAddress) {\r\n              this.patchVlaue(macAddress);\r\n            } else {\r\n              this.patchVlaue(deviceID);\r\n            }\r\n            this.buildeServiceProfileList(this.allProfileList);\r\n            this.buildBWProfile(this.allProfileList);\r\n            this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\r\n                } else {\r\n            //this.initAddDeviceOject(deviceID);\r\n            // this.buildeServiceProfileList(this.allProfileList);\r\n            //this.buildBWProfile(this.allProfileList);\r\n            this.deviceDiscovery = false;\r\n            this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\r\n            if (macAddress) {\r\n              this.loadSubscriberdata(macAddress);\r\n            } else {\r\n              this.loadSubscriberdata(deviceID);\r\n            }\r\n            this.deviceProvRecord = {};\r\n          }\r\n        },\r\n        (err) => { this.pageErrorHandle(err); this.deviceProvRecord = {}; }\r\n      );\r\n            */\n    }\n\n    getPRAndFDDeviceInfo(deviceID, macAddress = undefined) {\n      const requestEndpoints = [`${environment.SUPPORT_URL}/subscriber-provisioning/provisioning-record?${this.ssoService.getOrg(this.orgId)}deviceId=${deviceID}`, `${environment.FOUNDATION_BASE_URL}subscriber-systems?${this.ssoService.getOrg(this.orgId)}systemId=${deviceID}`];\n      const requests = [];\n      requestEndpoints.forEach(endpoint => {\n        const req = this.managementService.callRestApi(endpoint).pipe(map(res => {\n          return res;\n        }), catchError(error => {\n          return of(error);\n        }));\n        requests.push(req);\n      });\n      this.combineLatestPR = combineLatest(requests);\n      // let requests = [\n      //   this.managementService.getDeviceInfo(this.orgId, deviceID).pipe(take(1)),\n      //   this.managementService.getedgesuiteData(this.orgId, deviceID).pipe(take(1))\n      // ];\n      // this.combineLatestPR = combineLatest(requests).pipe(map((reqRes: any) => {\n      //   return reqRes;\n      // },\n      //   catchError((error: any) => {\n      //     return of(error);\n      //   }))\n      // );\n      this.combineLatestPRSubs = this.combineLatestPR.subscribe(res => {\n        var _a, _b, _c, _d, _e, _f;\n        //PR Record Operations\n        if (res[0] && res[0].error == undefined && Object.keys(res[0]).length) {\n          // if (this.subscriberInfo.subscriberId && res[0].subscriberId && this.subscriberInfo.subscriberId == res.subscriberId) {\n          //   if (!(typeof this.editDeviceObj === \"object\" && this.editDeviceObj._id) && !history.state.isUnassociateSubscriber) {\n          //     this.error = true;\n          //     this.errorInfo = 'Error! Subscriber already has an associated device with the same ID.';\n          //     this.duplicateSbcrbrAscDevice = true;            //alert(\"duplicate\");\n          //   }\n          // }\n          this.editDeviceObj = res[0];\n          if (this.editDeviceObj) {\n            if (((_a = this.editDeviceObj) === null || _a === void 0 ? void 0 : _a.wifi) && ((_b = this.editDeviceObj) === null || _b === void 0 ? void 0 : _b.wifi[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"])) {\n              this.editDeviceObj.wifi[\"UNIFIED_PRIMARY_SSID\"] = this.editDeviceObj.wifi[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"];\n            }\n            // this.tempWifiObj = JSON.parse(JSON.stringify(this.editDeviceObj.wifi));\n          }\n\n          this.deviceProvRecord = Object.assign({}, res[0]);\n          this.deviceDiscovery = true;\n          if (macAddress) {\n            this.patchVlaue(macAddress);\n          } else {\n            this.patchVlaue(deviceID);\n          }\n          this.buildeServiceProfileList(this.allProfileList);\n          this.buildBWProfile(this.allProfileList);\n          this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\n          //this.checkIfDeviceConfiguredOutside(res[0]);\n        } else {\n          //this.initAddDeviceOject(deviceID);\n          // this.buildeServiceProfileList(this.allProfileList);\n          //this.buildBWProfile(this.allProfileList);\n          this.deviceDiscovery = false;\n          this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\n          if (macAddress) {\n            this.loadSubscriberdata(macAddress);\n          } else {\n            this.loadSubscriberdata(deviceID);\n          }\n          this.deviceProvRecord = {};\n        }\n        //Foundation Systems Records Operations\n        if (res[1] && res[1].error == undefined && ((_c = res[1]) === null || _c === void 0 ? void 0 : _c.subscriber) && ((_d = res[1]) === null || _d === void 0 ? void 0 : _d.subscriber.name)) {\n          this.error = true;\n          this.errorInfo = this.language.alreadySysAssociated((_f = (_e = res[1]) === null || _e === void 0 ? void 0 : _e.subscriber) === null || _f === void 0 ? void 0 : _f.name);\n          this.duplicateSbcrbrAscDevice = true;\n        }\n        setTimeout(() => {\n          this.loader = false;\n        }, 100);\n      });\n    }\n    loadSubscriberdata(deviceID) {\n      this.service.performSearch(this.orgId, deviceID, 1, 1).subscribe(res => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (res && res.records && ((_a = res.records[0]) === null || _a === void 0 ? void 0 : _a.devices) && ((_c = (_b = res.records[0]) === null || _b === void 0 ? void 0 : _b.devices[0]) === null || _c === void 0 ? void 0 : _c.modelName)) {\n          let devicesObj = {};\n          if ((_d = res.records[0]) === null || _d === void 0 ? void 0 : _d.devices) {\n            let devices = (_e = res.records[0]) === null || _e === void 0 ? void 0 : _e.devices;\n            devices.forEach(element => {\n              if (element['serialNumber']) {\n                devicesObj[element['serialNumber']] = element;\n              }\n              if (element['deviceId']) {\n                devicesObj[element['deviceId']] = element;\n              }\n              if (element['macAddress']) {\n                devicesObj[element['macAddress']] = element;\n              }\n            });\n            if (devicesObj[deviceID]) {\n              //to fix CCL-37524\n              if (((_f = devicesObj[deviceID]) === null || _f === void 0 ? void 0 : _f.modelName) && this.deviceModels.includes((_g = devicesObj[deviceID]) === null || _g === void 0 ? void 0 : _g.modelName)) {\n                this.addDeviceObj.device.selectedModel = (_h = devicesObj[deviceID]) === null || _h === void 0 ? void 0 : _h.modelName;\n              } else {\n                this.addDeviceObj.device.selectedModel = undefined;\n                /* if (devicesObj[deviceID]?.modelName) {\r\n                  this.errorMessage = `Entered System's model ${devicesObj[deviceID]?.modelName} is not present in available Models`;\r\n                  this.isError = true;\r\n                } */\n              }\n\n              this.addDeviceObj.device.isDisableModel = true;\n              if (!((_j = this.addDeviceObj.device) === null || _j === void 0 ? void 0 : _j.deviceMode) && this.addDeviceObj.device.selectedModel) {\n                this.addDeviceObj.device.deviceMode = devicesObj[deviceID].deviceMode;\n              }\n            }\n          }\n          /**\r\n           * to fix CCL-25924\r\n           */\n          // this.addDeviceObj.device.selectedModel = res.records[0]?.devices[0]?.modelName;\n          // this.addDeviceObj.device.isDisableModel = true;\n          this.addDeviceObj = Object.assign(this.addDeviceObj, this.addDeviceObj);\n        } else {\n          this.addDeviceObj.device.selectedModel = '';\n          this.addDeviceObj.device.isDisableModel = false;\n        }\n        this.initAddDeviceOject(deviceID, this.addDeviceObj.device.selectedModel, this.addDeviceObj.device.deviceMode);\n        this.buildeServiceProfileList(this.allProfileList);\n        this.buildBWProfile(this.allProfileList);\n        this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\n      }, error => {\n        this.initAddDeviceOject(deviceID, this.addDeviceObj.device.selectedModel);\n        this.buildeServiceProfileList(this.allProfileList);\n        this.buildBWProfile(this.allProfileList);\n        this.addDeviceObj.configurationObj['serviceDialPlan'] = this.dialPlanList;\n        this.loader = false;\n      });\n    }\n    searchDeviceByMACAddressDetail(macAddress) {\n      const params = new HttpParams()\n      // .set(\"orgId\", this.orgId)\n      .set(\"filter\", macAddress).set(\"pageNumber\", '1').set(\"pageSize\", '1');\n      if (this.ssoService.getOrg(this.orgId)) {\n        params.set(\"orgId\", this.orgId);\n      }\n      this.http.get(`${environment.SUPPORT_URL}${getSubscribeList}`, {\n        params\n      }).subscribe(resp => {\n        var _a;\n        this.loader = false;\n        if (resp && resp.records.length > 0) {\n          const matchedDeviceID = (_a = resp.records[0].devices.filter(device => {\n            return device.macAddress === macAddress.toLowerCase();\n          })[0]) === null || _a === void 0 ? void 0 : _a.deviceId;\n          if (matchedDeviceID) {\n            this.searchedMACAddress = macAddress;\n            this.getDeviceDetail(matchedDeviceID, macAddress);\n          }\n        }\n      }), error => {\n        this.pageErrorHandle(error);\n      };\n    }\n    buildeServiceProfileList(profileLists) {\n      let serviceList = [];\n      profileLists.forEach(item => {\n        if (item.configurations.filter(service => {\n          return service.category.indexOf('Service') !== -1;\n        }).length === 1) {\n          item.configurations.forEach(category => {\n            if (category.category.indexOf('Service') !== -1) {\n              const cateObj = {\n                name: item.name,\n                _id: item._id,\n                orgId: item.orgId,\n                configurations: category,\n                VLAN: this.getVLANValue(category),\n                Mode: category.parameterValues.Mode,\n                BridgeMemberPort: this.getBridgePort(category.parameterValues),\n                defaultConnectionService: category.parameterValues.defaultConnectionService !== undefined ? category.parameterValues.defaultConnectionService : false,\n                IPTVSSID: category.parameterValues.EnableIPTV_SSID !== undefined ? category.parameterValues.EnableIPTV_SSID : false\n              };\n              serviceList.push(cateObj);\n            }\n          });\n          this.addDeviceObj.configurationObj['seriviceList'] = serviceList;\n        }\n      });\n    }\n    getBridgePort(parameterValues) {\n      const videoServiceBridgePort = [{\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.15\",\n        \"displayName\": \"5GHz IPTV SSID\"\n      }, {\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.1\",\n        \"displayName\": \"LAN Port 1\"\n      }, {\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.2\",\n        \"displayName\": \"LAN Port 2\"\n      }, {\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.3\",\n        \"displayName\": \"LAN Port 3\"\n      }, {\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.4\",\n        \"displayName\": \"LAN Port 4\"\n      },\n      //.6 added To fix CCL-36445\n      {\n        \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.6\",\n        \"displayName\": \"5GHz IPTV SSID\"\n      },\n      // {\n      //   \"value\": \"InternetGatewayDevice.Layer2Bridging.AvailableInterface.17\",\n      //   \"displayName\": \"LAN Port 1\"\n      //   },\n      //TO fix CCL-35127\n      {\n        \"value\": \"InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1\",\n        \"displayName\": \"LAN Port 1\"\n      }, {\n        \"value\": \"InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2\",\n        \"displayName\": \"LAN Port 2\"\n      }, {\n        \"value\": \"InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.3\",\n        \"displayName\": \"LAN Port 3\"\n      }, {\n        \"value\": \"InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.4\",\n        \"displayName\": \"LAN Port 4\"\n      }\n      //InternetGatewayDevice.Layer2Bridging.AvailableInterface.6\n      ];\n\n      if (parameterValues.X_CALIX_SXACC_AE_L2_BRIDGE_MBR_PORTS) {\n        return parameterValues.X_CALIX_SXACC_AE_L2_BRIDGE_MBR_PORTS;\n      }\n      if (parameterValues.BridgedInterface) {\n        let bridgePort = [];\n        videoServiceBridgePort.forEach(item => {\n          if (parameterValues.BridgedInterface.indexOf(item.value) !== -1) {\n            bridgePort.push(item.displayName.replace('LAN Port ', ''));\n          }\n        });\n        return bridgePort;\n      }\n      if (parameterValues.ExosBridgedInterface) {\n        let bridgePort = [];\n        videoServiceBridgePort.forEach(item => {\n          if (parameterValues.ExosBridgedInterface.indexOf(item.value) !== -1) {\n            bridgePort.push(item.displayName.replace('LAN Port ', ''));\n          }\n        });\n        return bridgePort;\n      }\n    }\n    getVLANValue(category) {\n      if (category.parameterValues.Mode === 'ONT Full Bridge' || category.parameterValues.Mode === 'ONT Half Bridge') {\n        return category.parameterValues.VLANID !== undefined ? category.parameterValues.VLANID : 0;\n      } else {\n        return category.parameterValues.X_000631_VlanMuxID !== undefined ? category.parameterValues.X_000631_VlanMuxID : 0;\n      }\n    }\n    buildBWProfile(profileList) {\n      const bwProfile = profileList.filter(profile => {\n        return profile.innerProfileCategory === 'Bandwidth';\n      });\n      if (bwProfile && bwProfile[0] && bwProfile[0]._id) {\n        bwProfile.unshift({\n          _id: '',\n          name: ''\n        });\n      }\n      this.addDeviceObj.configurationObj['serviceBWList'] = bwProfile;\n    }\n    patchVlaue(deviceID = undefined) {\n      if (this.editDeviceObj) {\n        this.addDeviceObj = {\n          isNewRecord: false,\n          addDeviceTab: [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL],\n          showModeErrorMsg: false,\n          showDeviceIDErrorMsg: false,\n          showModelErrorMsg: false,\n          configurationObj: Object.assign({\n            defaultLanValidation: false\n          }, this.addDeviceObj.configurationObj),\n          device: this.patchDeviceData(deviceID),\n          isUnifiedPrimarySSID: false,\n          toggeledUnifiedPrimarySSID: false,\n          services: {\n            configuredService: this.editDeviceObj.data || this.editDeviceObj.video || this.editDeviceObj.voice ? 'No' : 'Yes',\n            dataService: this.editDeviceObj.data ? this.patchDataServiceData() : this.initSeriveObjects('Data'),\n            videoService: this.editDeviceObj.video ? this.patchVideoServiceData() : this.initSeriveObjects('Video'),\n            voiceService: this.editDeviceObj.voice ? this.patchVoiceServiceData() : this.initSeriveObjects('Voice'),\n            ontDataService: this.editDeviceObj.services ? this.patchONTServiceData('Data Service') : [],\n            ontVideoService: this.editDeviceObj.services ? this.patchONTServiceData('Video Service') : [],\n            wifiSSID: this.editDeviceObj.wifi ? this.patchWifiData() : this.initSeriveObjects('WIFI'),\n            showVideoServiceByDefault: !history.state.isNewRecord ? true : false,\n            showDataServiceByDefault: !history.state.isNewRecord ? true : false,\n            isCMS: this.isCMS\n          },\n          settings: this.editDeviceObj.ports ? this.pathSettingsData() : this.initSeriveObjects('Settings')\n        };\n        if (this.editDeviceObj.rgConfigMode) {\n          this.addDeviceObj.services.configuredService = \"Yes\";\n        }\n        if (this.editMode) {\n          this.tempWifiObj = JSON.parse(JSON.stringify(this.addDeviceObj.services.wifiSSID));\n        }\n      }\n    }\n    patchWifiData() {\n      let allowedWifissids = [\"X_CALIX_SXACC_GUEST_2DOT4GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_2DOT4GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\", \"X_CALIX_SXACC_GUEST_5GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_6GHZ_SSID\", \"X_CALIX_SXACC_GUEST_6GHZ_SSID\", \"UNIFIED_PRIMARY_SSID\"];\n      let allwifiObj = {};\n      // this.editDeviceObj.wifi[\"UNIFIED_PRIMARY_SSID\"] = {};\n      for (let key of Object.keys(this.editDeviceObj.wifi)) {\n        if (allowedWifissids.indexOf(key) === -1) {\n          continue;\n        }\n        const wifiObject = {\n          name: this.editDeviceObj.wifi[key].SSID,\n          serviceEnabled: this.editDeviceObj.wifi[key].Enable,\n          securityType: this.editDeviceObj.wifi[key].BeaconType,\n          encryption: this.editDeviceObj.wifi[key].IEEE11iEncryptionModes ? this.editDeviceObj.wifi[key].IEEE11iEncryptionModes : \"\",\n          passphrase: this.editDeviceObj.wifi[key].KeyPassphrase,\n          //encryption: this.editDeviceObj.wifi[key].WPAEncryptionModes,\n          broadcastEnabled: this.editDeviceObj.wifi[key].SSIDAdvertisementEnabled,\n          mumimoEnabled: this.editDeviceObj.wifi[key].MUMIMOEnabled,\n          enableDfsChannels: this.editDeviceObj.wifi[key].EnableDfsChannels,\n          isUnifiedPrimarySSID: this.editDeviceObj.wifi[key].isUnifiedPrimarySSID\n        };\n        // if (!_.isEmpty(_.pickBy(wifiObject, _.identity)))\n        //   allwifiObj[key] = _.pickBy(wifiObject, _.identity);\n        if (!_.isEmpty(_.pickBy(wifiObject, function (value, key) {\n          return !(value === undefined || value === \"\" || value === \" \");\n        }))) allwifiObj[key] = _.pickBy(wifiObject, function (value, key) {\n          return !(value === undefined || value === \"\" || value === \" \");\n        });\n      }\n      // if (allwifiObj[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"]) {\n      //   var _PRIMARY_5GHZ_SSID = Object.assign({}, allwifiObj[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"])\n      //   allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = _PRIMARY_5GHZ_SSID;\n      // }\n      return allwifiObj;\n    }\n    pathSettingsData() {\n      const settingsKey = ['lanPortOne', 'lanPortTwo', 'lanPortThree', 'lanPortFour'];\n      if (this.editDeviceObj.ports['eth-5']) settingsKey.push('lanPortFive');\n      const patchedObj = {};\n      patchedObj['isPowerSaving'] = !this.editDeviceObj.enableRgOnBattery;\n      let portObj = {\n        adminState: 'Enable',\n        duplex: 'Auto',\n        DHCPLeaseLimit: 0,\n        powerSaving: true,\n        speed: 'Auto'\n      };\n      if (this.editDeviceObj.ports) {\n        settingsKey.forEach((key, index) => {\n          const settingsObj = this.editDeviceObj.ports['eth-' + (index + 1)];\n          if (settingsObj) {\n            portObj = {\n              adminState: settingsObj.Enable !== undefined ? settingsObj.Enable ? 'Enable' : 'Disable' : 'Enable',\n              duplex: settingsObj.DuplexMode !== undefined ? settingsObj.DuplexMode : 'Auto',\n              DHCPLeaseLimit: settingsObj.DhcpLeaseLimit !== undefined ? settingsObj.DhcpLeaseLimit : 0,\n              powerSaving: settingsObj.OnBatteryEnable !== undefined ? !settingsObj.OnBatteryEnable : true,\n              speed: settingsObj.MaxBitRate !== undefined ? settingsObj.MaxBitRate : 'Auto'\n            };\n          }\n          patchedObj[key] = portObj;\n        });\n      }\n      return patchedObj;\n    }\n    patchONTServiceData(serviceType) {\n      const patchObj = [];\n      if (this.editDeviceObj.services) {\n        this.editDeviceObj.services.forEach(service => {\n          var _a, _b;\n          if (service.category === serviceType) {\n            const obj = {\n              PPPoEPwd: ((_a = service === null || service === void 0 ? void 0 : service.pppoe) === null || _a === void 0 ? void 0 : _a.Password) ? service.pppoe.Password : \"\",\n              PPPoEUsername: ((_b = service === null || service === void 0 ? void 0 : service.pppoe) === null || _b === void 0 ? void 0 : _b.Username) ? service.pppoe.Username : \"\",\n              isServiceEnabled: service.Enable ? true : false,\n              isBWOverRide: service.Overrides && service.Overrides.BwProfile ? true : false,\n              isVLANOverRide: service.Overrides && service.Overrides.VlanId !== undefined ? true : false,\n              bandwidthProfile: service.Overrides && service.Overrides.BwProfile ? service.Overrides.BwProfile : this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n                return profile._id === service.ProfileId;\n              })[0].configurations.parameterValues.X_CALIX_SXACC_BW_PROFILE,\n              vLAN: service.Overrides && service.Overrides.VlanId !== undefined ? service.Overrides.VlanId : this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n                return profile._id === service.ProfileId;\n              })[0].VLAN,\n              serviceProfile: this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n                return profile._id === service.ProfileId;\n              })[0],\n              bridgeMBRPort: this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n                return profile._id === service.ProfileId;\n              })[0].configurations.parameterValues.X_CALIX_SXACC_AE_L2_BRIDGE_MBR_PORTS\n            };\n            patchObj.push(obj);\n          }\n        });\n      }\n      return patchObj;\n    }\n    patchDeviceData(deviceID) {\n      var _a, _b;\n      return {\n        regId: deviceID,\n        selectedModel: this.deviceModels.includes((_a = this.editDeviceObj) === null || _a === void 0 ? void 0 : _a.modelName) ? (_b = this.editDeviceObj) === null || _b === void 0 ? void 0 : _b.modelName : undefined,\n        deviceMode: this.editDeviceObj.opMode,\n        //isDisableModel: this.editDeviceObj.modelName ? true : false,\n        isDisableModel: /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/.test(deviceID),\n        isStaticGroup: this.getStaticGroupList().length > 0 ? 'Yes' : 'No',\n        selectedStaticGroup: this.getStaticGroupList()\n      };\n    }\n    getStaticGroupList() {\n      let selectedStaticGroup = [];\n      if (this.editDeviceObj.staticGroupMember) {\n        this.editDeviceObj.staticGroupMember.forEach(group => {\n          if (group.memberInfo.toLowerCase() === this.editDeviceObj.deviceId.toLowerCase()) {\n            selectedStaticGroup.push(group.groupId);\n          }\n        });\n      }\n      return selectedStaticGroup;\n    }\n    patchDataServiceData() {\n      return {\n        PPPoEUsername: this.editDeviceObj.data.pppoe ? this.editDeviceObj.data.pppoe.Username : undefined,\n        PPPoEPwd: this.editDeviceObj.data.pppoe ? this.editDeviceObj.data.pppoe.Password : undefined,\n        vLAN: this.editDeviceObj.data.VlanId,\n        priority: this.editDeviceObj.data.Pbit,\n        bandwidth: this.editDeviceObj.data.BwProfile,\n        isDataService: this.editDeviceObj.data.Enable\n      };\n    }\n    patchVideoServiceData() {\n      return {\n        isVideoService: this.editDeviceObj.video.Enable,\n        vLAN: this.editDeviceObj.video.VlanId,\n        priority: this.editDeviceObj.video.Pbit,\n        bandwidth: this.editDeviceObj.video.BwProfile\n      };\n    }\n    patchVoiceServiceData() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n      let ipAddress = '';\n      //CCL-38091\n      if (this.editDeviceObj.voice && !((_a = this.editDeviceObj.voice) === null || _a === void 0 ? void 0 : _a.X_CALIX_SXACC_RG_WAN)) {\n        this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN = {};\n      }\n      /***\r\n       * CCL-28604\r\n       */\n      if (((_c = (_b = this.editDeviceObj) === null || _b === void 0 ? void 0 : _b.voice) === null || _c === void 0 ? void 0 : _c.ServiceType) === 'SIP') {\n        ipAddress = (_d = this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN) === null || _d === void 0 ? void 0 : _d.ExternalIPAddress;\n      } else {\n        if (((_e = this.editDeviceObj.voice) === null || _e === void 0 ? void 0 : _e.X_CALIX_SXACC_RG_WAN) && ((_f = this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN) === null || _f === void 0 ? void 0 : _f.ServiceConnectionType) == \"DHCP\") {\n          ipAddress = ((_g = this.editDeviceObj.voice) === null || _g === void 0 ? void 0 : _g.X_000631_Opt81ClientFQDN) ? this.editDeviceObj.voice.X_000631_Opt81ClientFQDN : '';\n        } else {\n          ipAddress = ((_j = (_h = this.editDeviceObj.voice) === null || _h === void 0 ? void 0 : _h.X_CALIX_SXACC_RG_WAN) === null || _j === void 0 ? void 0 : _j.ExternalIPAddress) ? (_k = this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN) === null || _k === void 0 ? void 0 : _k.ExternalIPAddress : '';\n        }\n      }\n      let ipHostName = '';\n      if (this.editDeviceObj.opMode === 'Managed ONT') {\n        ipHostName = ((_m = (_l = this.editDeviceObj) === null || _l === void 0 ? void 0 : _l.voice) === null || _m === void 0 ? void 0 : _m.X_000631_Opt81ClientFQDN) ? this.editDeviceObj.voice.X_000631_Opt81ClientFQDN : '';\n      }\n      return {\n        serviceType: this.editDeviceObj.opMode === 'Managed ONT' ? this.patchServiceType('Voice Service') : this.editDeviceObj.voice.ServiceType,\n        VoiceProfile: this.editDeviceObj.opMode === 'RG' ? this.patchVoiceProfile('Voice Service') : this.editDeviceObj.services,\n        faxRelay: this.editDeviceObj.voice.FaxT38 ? this.editDeviceObj.voice.FaxT38.Enable : false,\n        dialPlan: this.editDeviceObj.voice.DialPlan,\n        addressType: this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN.ServiceConnectionType,\n        ipAddress: ipAddress,\n        subnetMask: this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN.SubnetMask,\n        defaultGateway: this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN.DefaultGateway,\n        dnsServers: this.editDeviceObj.voice.X_CALIX_SXACC_RG_WAN.DNSServers,\n        showVocieService: !history.state.isNewRecord ? true : false,\n        lineOne: this.patchVoiceLineData(1),\n        lineTwo: this.patchVoiceLineData(2),\n        ipHostName: ipHostName\n      };\n    }\n    patchServiceType(serviceType) {\n      let sericeType = undefined;\n      this.editDeviceObj.services.forEach(service => {\n        if (service.category === serviceType) {\n          sericeType = this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n            return profile._id === service.ProfileId;\n          })[0];\n        }\n      });\n      return sericeType;\n    }\n    patchVoiceProfile(VoiceProfile) {\n      var _a;\n      let voiceProfille = undefined;\n      (_a = this.editDeviceObj.services) === null || _a === void 0 ? void 0 : _a.forEach(service => {\n        if (service.category === VoiceProfile) {\n          voiceProfille = this.addDeviceObj.configurationObj['seriviceList'].filter(profile => {\n            return profile._id === service.ProfileId;\n          })[0];\n        }\n      });\n      return voiceProfille || '';\n    }\n    patchVoiceLineData(lineIndex) {\n      if (this.editDeviceObj.voice.Line[lineIndex].Enable === 'Enabled') {\n        return {\n          username: this.editDeviceObj.voice.Line[lineIndex].SIP ? this.editDeviceObj.voice.Line[lineIndex].SIP.AuthUserName : undefined,\n          password: this.editDeviceObj.voice.Line[lineIndex].SIP ? this.editDeviceObj.voice.Line[lineIndex].SIP.AuthPassword : undefined,\n          uri: this.editDeviceObj.voice.Line[lineIndex].SIP ? this.editDeviceObj.voice.Line[lineIndex].SIP.URI : undefined,\n          isCallWaiting: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.CallWaitingEnable : false,\n          isCallerId: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.CallerIDEnable : false,\n          isDirectCon: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.X_000631_DirectConnectEnable : false,\n          isThreeWayCalling: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.X_000631_ThreewayCallingEnable : false,\n          isVoiceService: this.editDeviceObj.voice.Line[lineIndex].Enable === 'Enabled',\n          direConnectNum: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.X_000631_DirectConnectNumber : undefined,\n          directConnectTimer: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? Number(this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.X_000631_DirectConnectTimer) : undefined,\n          messageWaitIndi: this.editDeviceObj.voice.Line[lineIndex].CallingFeatures ? this.editDeviceObj.voice.Line[lineIndex].CallingFeatures.MWIEnable : false,\n          terminateId: this.editDeviceObj.voice.Line[lineIndex].X_000631_H248 ? this.editDeviceObj.voice.Line[lineIndex].X_000631_H248.TerminationId : undefined,\n          isGR303: this.editDeviceObj.voice.Line[lineIndex].MGCP ? this.editDeviceObj.voice.Line[lineIndex].MGCP.X_000631_GR303 : undefined,\n          CRV: this.editDeviceObj.voice.Line[lineIndex].X_000631_TdmGw ? this.editDeviceObj.voice.Line[lineIndex].X_000631_TdmGw.Crv : undefined,\n          systemLoss: this.patchSystemLoss(lineIndex),\n          systemRXLoss: this.editDeviceObj.voice.Line[lineIndex].VoiceProcessing.ReceiveGain / 10,\n          systemTXLoss: this.editDeviceObj.voice.Line[lineIndex].VoiceProcessing.TransmitGain / 10\n        };\n      } else {\n        // return {\n        //   username: undefined,\n        //   password: undefined,\n        //   uri: undefined,\n        //   isCallWaiting: (lineIndex === 1) ? false : true,\n        //   isCallerId: (lineIndex === 1) ? false : true,\n        //   isDirectCon: false,\n        //   isThreeWayCalling: (lineIndex === 1) ? false : true,\n        //   isVoiceService: (this.editDeviceObj.voice.Line[lineIndex].Enable === 'Enabled'),\n        //   direConnectNum: undefined,\n        //   directConnectTimer: undefined,\n        //   messageWaitIndi: (lineIndex === 1) ? false : true,\n        //   systemLoss: 'ANSI',  // to fix CCL-25408\n        //   systemRXLoss: -9,\n        //   systemTXLoss: -3\n        // }\n        return this.initVoiceLineObj();\n      }\n    }\n    initSeriveObjects(serviceName) {\n      switch (serviceName) {\n        case 'Data':\n          return {\n            isDataService: true,\n            vLAN: '',\n            priority: '',\n            bandwidth: '',\n            PPPoEPwd: '',\n            PPPoEUsername: ''\n          };\n          break;\n        case 'Video':\n          return {\n            isVideoService: false,\n            vLAN: '',\n            priority: '',\n            bandwidth: ''\n          };\n          break;\n        case 'Voice':\n          return {\n            serviceType: 'SIP',\n            faxRelay: false,\n            dialPlan: 'system-default',\n            addressType: 'DHCP',\n            ipAddress: '',\n            subnetMask: '',\n            defaultGateway: '',\n            dnsServers: '',\n            lineOne: this.initVoiceLineObj(),\n            lineTwo: this.initVoiceLineObj()\n          };\n          break;\n        case 'WIFI':\n          return {\n            X_CALIX_SXACC_PRIMARY_2DOT4GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined\n            },\n            X_CALIX_SXACC_GUEST_2DOT4GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined\n            },\n            X_CALIX_SXACC_PRIMARY_5GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined,\n              mumimoEnabled: undefined,\n              enableDfsChannels: undefined\n            },\n            X_CALIX_SXACC_GUEST_5GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined,\n              mumimoEnabled: undefined,\n              enableDfsChannels: undefined\n            },\n            X_CALIX_SXACC_PRIMARY_6GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined,\n              mumimoEnabled: undefined,\n              enableDfsChannels: undefined\n            },\n            X_CALIX_SXACC_GUEST_6GHZ_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined,\n              mumimoEnabled: undefined,\n              enableDfsChannels: undefined\n            },\n            isUnifiedPrimarySSID: false,\n            toggeledUnifiedPrimarySSID: false,\n            UNIFIED_PRIMARY_SSID: {\n              encryption: '',\n              showPassPhrase: false,\n              passphrase: '',\n              securityType: '',\n              broadcastEnabled: undefined,\n              serviceEnabled: undefined,\n              mumimoEnabled: undefined,\n              enableDfsChannels: undefined\n            }\n          };\n          break;\n        case 'Settings':\n          return {\n            isPowerSaving: true,\n            lanPortOne: {\n              adminState: 'Enable',\n              powerSaving: true,\n              speed: 'Auto',\n              duplex: 'Auto',\n              DHCPLeaseLimit: 0\n            },\n            lanPortTwo: {\n              adminState: 'Enable',\n              powerSaving: true,\n              speed: 'Auto',\n              duplex: 'Auto',\n              DHCPLeaseLimit: 0\n            },\n            lanPortThree: {\n              adminState: 'Enable',\n              powerSaving: true,\n              speed: 'Auto',\n              duplex: 'Auto',\n              DHCPLeaseLimit: 0\n            },\n            lanPortFour: {\n              adminState: 'Enable',\n              powerSaving: true,\n              speed: 'Auto',\n              duplex: 'Auto',\n              DHCPLeaseLimit: 0\n            }\n          };\n          break;\n        default:\n          break;\n      }\n    }\n    initVoiceLineObj() {\n      return {\n        username: undefined,\n        password: undefined,\n        uri: undefined,\n        isCallWaiting: true,\n        isCallerId: true,\n        isDirectCon: false,\n        isThreeWayCalling: true,\n        isVoiceService: false,\n        direConnectNum: undefined,\n        directConnectTimer: 0,\n        messageWaitIndi: true,\n        systemLoss: 'ANSI',\n        systemRXLoss: -9,\n        systemTXLoss: -3\n      };\n    }\n    initAddDeviceOject(deviceID, model, opMode) {\n      var _a, _b;\n      this.addDeviceObj = {\n        isNewRecord: true,\n        addDeviceTab: [SubscriberManagement.DEVICE_LABEL, SubscriberManagement.SERVICE_LABEL],\n        configurationObj: {\n          defaultLanValidation: false\n        },\n        showModeErrorMsg: false,\n        showDeviceIDErrorMsg: false,\n        showModelErrorMsg: false,\n        isUnifiedPrimarySSID: false,\n        toggeledUnifiedPrimarySSID: false,\n        device: {\n          regId: deviceID,\n          selectedModel: model ? model : undefined,\n          deviceMode: opMode ? opMode : undefined,\n          isDisableModel: ((_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.isDisableModel) ? true : false,\n          isStaticGroup: 'No',\n          selectedStaticGroup: []\n        },\n        services: {\n          configuredService: 'Yes',\n          ontDataService: [],\n          ontVideoService: [],\n          dataService: this.initSeriveObjects('Data'),\n          videoService: this.initSeriveObjects('Video'),\n          voiceService: this.initSeriveObjects('Voice'),\n          wifiSSID: this.initSeriveObjects('WIFI'),\n          showVideoServiceByDefault: false,\n          showDataServiceByDefault: false\n        },\n        settings: this.initSeriveObjects('Settings')\n      };\n    }\n    onTabChange(index, type = null) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n      if (!((_c = (_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.regId) === null || _c === void 0 ? void 0 : _c.trim()) && index > 0) {\n        this.addDeviceObj.showDeviceIDErrorMsg = true;\n        return;\n      }\n      if (!this.addDeviceObj.device.selectedModel && index > 0) {\n        this.addDeviceObj.showModeErrorMsg = true;\n        return;\n      }\n      if (!this.addDeviceObj.device.deviceMode && index > 0) {\n        this.addDeviceObj.showModelErrorMsg = true;\n        return;\n      }\n      if (this.addDeviceObj.configurationObj.defaultLanValidation === true) {\n        return;\n      }\n      if (((_e = (_d = this.addDeviceObj) === null || _d === void 0 ? void 0 : _d.device) === null || _e === void 0 ? void 0 : _e.isStaticGroup) == 'Yes') {\n        this.staticGrpError = ((_f = this.addDeviceObj) === null || _f === void 0 ? void 0 : _f.device.selectedStaticGroup.length) <= 0 ? true : false;\n        if (this.staticGrpError) return;\n      }\n      if (((_h = (_g = this.addDeviceObj) === null || _g === void 0 ? void 0 : _g.device) === null || _h === void 0 ? void 0 : _h.isStaticGroup) == 'No') this.staticGrpError = false;\n      // if (!(_.isEmpty(this.voiceServiceValidation()) && !this.dataVidoeServiceValidation())) {\n      //   return;\n      // }\n      if (index > 0 && ((_j = history === null || history === void 0 ? void 0 : history.state) === null || _j === void 0 ? void 0 : _j.isProvision) && this.isPRConfiguredOutside) this.addDeviceObj.services.configuredService = 'Yes';\n      if (index > 0) this.isProvision = false;\n      this.activeTab = this.addDeviceObj.addDeviceTab[index];\n      this.disableNextBtn = false;\n      this.selectedTabIndex = index;\n      this.isTabChange = !this.isTabChange;\n      if (this.levelsPassed < index) {\n        this.levelsPassed = index;\n      }\n      if (!this.editMode && index != 2) {\n        this.addDeviceObj.services.wifiSSID.UNIFIED_PRIMARY_SSID = {};\n        this.addDeviceObj.isUnifiedPrimarySSID = false;\n      }\n    }\n    voiceServiceValidation() {\n      if (this.addDeviceObj.services.voiceService.addressType === 'Static') {\n        for (let key of Object.keys(this.addDeviceObj.services.voiceService)) {\n          if (key === 'ipAddress' && !this.addDeviceObj.services.voiceService[key]) {\n            this.addDeviceObj.services.voiceService.inValidIP = true;\n          } else if (key === 'subnetMask' && !this.addDeviceObj.services.voiceService[key]) {\n            this.addDeviceObj.services.voiceService.inValidSubnet = true;\n          } else if (key === 'defaultGateway' && !this.addDeviceObj.services.voiceService[key]) {\n            this.addDeviceObj.services.voiceService.inValidgateway = true;\n          }\n        }\n      }\n      const voiceServiceValidation = Object.assign({}, _.pickBy(this.addDeviceObj.services.voiceService, function (value, key) {\n        return _.startsWith(key, \"inValid\") && value === true;\n      }), this.lineServiceValidation('lineOne'), this.lineServiceValidation('lineTwo'));\n      return voiceServiceValidation;\n    }\n    dataVidoeServiceValidation() {\n      if (this.addDeviceObj.services.dataService.inValidVLan || this.addDeviceObj.services.videoService.inValidVLan) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    lineServiceValidation(line) {\n      if (this.addDeviceObj.services.voiceService[line] && this.addDeviceObj.services.voiceService[line].isVoiceService) {\n        if (!this.addDeviceObj.services.voiceService[line]['password'] && this.addDeviceObj.services.voiceService.serviceType === 'SIP') {\n          this.addDeviceObj.services.voiceService[line].inValidPWD = true;\n        }\n        if (!this.addDeviceObj.services.voiceService[line]['uri'] && this.addDeviceObj.services.voiceService.serviceType === 'SIP') {\n          this.addDeviceObj.services.voiceService[line].inValidURI = true;\n        }\n        if (!this.addDeviceObj.services.voiceService[line]['direConnectNum'] && this.addDeviceObj.services.voiceService.serviceType === 'SIP' && this.addDeviceObj.services.voiceService[line].isDirectCon) {\n          this.addDeviceObj.services.voiceService[line].inValidDireConnectNum = true;\n        }\n        if (!this.addDeviceObj.services.voiceService[line]['username'] && this.addDeviceObj.services.voiceService.serviceType === 'SIP') {\n          this.addDeviceObj.services.voiceService[line].inValidUserName = true;\n        }\n        if (!this.addDeviceObj.services.voiceService[line]['terminateId'] && this.addDeviceObj.services.voiceService.serviceType === 'H.248') {\n          this.addDeviceObj.services.voiceService[line].inValidTerminateId = true;\n        }\n        if (!this.addDeviceObj.services.voiceService[line]['CRV'] && this.addDeviceObj.services.voiceService.serviceType === 'X_000631_TDMGW') {\n          this.addDeviceObj.services.voiceService[line].inValidCRV = true;\n        }\n      }\n      const result = _.pickBy(this.addDeviceObj.services.voiceService[line], function (value, key) {\n        return _.startsWith(key, \"inValid\") && value === true;\n      });\n      return result;\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorMessage = this.language['Access Denied'];\n      } else {\n        this.errorMessage = this.ssoService.pageErrorHandle(err);\n      }\n      this.loader = false;\n      this.isError = true;\n      $(\"body\").scrollTop(0);\n    }\n    buildWIFIReqObj() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n      let allowedWifissids = [\"X_CALIX_SXACC_GUEST_2DOT4GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_2DOT4GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\", \"X_CALIX_SXACC_GUEST_5GHZ_SSID\", \"X_CALIX_SXACC_PRIMARY_6GHZ_SSID\", \"X_CALIX_SXACC_GUEST_6GHZ_SSID\", \"UNIFIED_PRIMARY_SSID\"];\n      let allwifiObj = {};\n      for (let key of Object.keys(this.addDeviceObj.services.wifiSSID)) {\n        if (allowedWifissids.indexOf(key) === -1) {\n          continue;\n        }\n        if (!this.checkWifiSSIDForBuildKeys(key)) continue;\n        let prevWifiValues = ((_b = (_a = this.deviceProvRecord) === null || _a === void 0 ? void 0 : _a.wifi) === null || _b === void 0 ? void 0 : _b[key]) ? (_d = (_c = this.deviceProvRecord) === null || _c === void 0 ? void 0 : _c.wifi) === null || _d === void 0 ? void 0 : _d[key] : {};\n        if (((_g = (_f = (_e = this.deviceProvRecord) === null || _e === void 0 ? void 0 : _e.wifi) === null || _f === void 0 ? void 0 : _f[key]) === null || _g === void 0 ? void 0 : _g.SSID) == undefined) {\n          prevWifiValues['SSID'] = \"\";\n        }\n        if (((_k = (_j = (_h = this.deviceProvRecord) === null || _h === void 0 ? void 0 : _h.wifi) === null || _j === void 0 ? void 0 : _j[key]) === null || _k === void 0 ? void 0 : _k.KeyPassphrase) == undefined) {\n          prevWifiValues['KeyPassphrase'] = \"\";\n        }\n        if (this.addDeviceObj.services.wifiSSID[key].serviceEnabled == 'undefined') {\n          this.addDeviceObj.services.wifiSSID[key].serviceEnabled = undefined;\n        } else if (this.addDeviceObj.services.wifiSSID[key].serviceEnabled == 'true') {\n          this.addDeviceObj.services.wifiSSID[key].serviceEnabled = true;\n        } else if (this.addDeviceObj.services.wifiSSID[key].serviceEnabled == 'false') {\n          this.addDeviceObj.services.wifiSSID[key].serviceEnabled = false;\n        }\n        if (this.addDeviceObj.services.wifiSSID[key].name != undefined) {\n          this.addDeviceObj.services.wifiSSID[key].name = this.addDeviceObj.services.wifiSSID[key].name.trim();\n        }\n        if (this.addDeviceObj.services.wifiSSID[key].passphrase != undefined) {\n          this.addDeviceObj.services.wifiSSID[key].passphrase = this.addDeviceObj.services.wifiSSID[key].passphrase.trim();\n        }\n        let wifiObject = {\n          SSID: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.SSID) != this.addDeviceObj.services.wifiSSID[key].name ? this.addDeviceObj.services.wifiSSID[key].name != undefined ? this.addDeviceObj.services.wifiSSID[key].name : undefined : undefined,\n          Enable: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.Enable) != this.addDeviceObj.services.wifiSSID[key].serviceEnabled ? this.addDeviceObj.services.wifiSSID[key].serviceEnabled != undefined ? this.addDeviceObj.services.wifiSSID[key].serviceEnabled : undefined : undefined,\n          SSIDAdvertisementEnabled: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.SSIDAdvertisementEnabled) != this.addDeviceObj.services.wifiSSID[key].broadcastEnabled ? this.addDeviceObj.services.wifiSSID[key].broadcastEnabled != undefined ? this.addDeviceObj.services.wifiSSID[key].broadcastEnabled : undefined : undefined,\n          BeaconType: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.BeaconType) != this.addDeviceObj.services.wifiSSID[key].securityType ? this.addDeviceObj.services.wifiSSID[key].securityType != undefined && this.addDeviceObj.services.wifiSSID[key].securityType !== \"\" ? this.addDeviceObj.services.wifiSSID[key].securityType : undefined : undefined,\n          MUMIMOEnabled: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.MUMIMOEnabled) != this.addDeviceObj.services.wifiSSID[key].mumimoEnabled ? this.addDeviceObj.services.wifiSSID[key].mumimoEnabled != undefined ? this.addDeviceObj.services.wifiSSID[key].mumimoEnabled : undefined : undefined,\n          EnableDfsChannels: (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.EnableDfsChannels) != this.addDeviceObj.services.wifiSSID[key].enableDfsChannels ? this.addDeviceObj.services.wifiSSID[key].enableDfsChannels != undefined ? this.addDeviceObj.services.wifiSSID[key].enableDfsChannels : undefined : undefined\n        };\n        if (this.addDeviceObj.services.wifiSSID[key].securityType !== 'Basic') {\n          wifiObject['IEEE11iEncryptionModes'] = (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.IEEE11iEncryptionModes) != this.addDeviceObj.services.wifiSSID[key].encryption ? typeof this.addDeviceObj.services.wifiSSID[key].encryption === 'string' && this.addDeviceObj.services.wifiSSID[key].encryption !== \"\" ? this.addDeviceObj.services.wifiSSID[key].encryption : undefined : undefined;\n          wifiObject['KeyPassphrase'] = (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.KeyPassphrase) != this.addDeviceObj.services.wifiSSID[key].passphrase ? this.addDeviceObj.services.wifiSSID[key].passphrase != undefined ? this.addDeviceObj.services.wifiSSID[key].passphrase : undefined : undefined;\n          wifiObject['WPAEncryptionModes'] = (prevWifiValues === null || prevWifiValues === void 0 ? void 0 : prevWifiValues.IEEE11iEncryptionModes) != this.addDeviceObj.services.wifiSSID[key].encryption ? typeof this.addDeviceObj.services.wifiSSID[key].encryption === 'string' && this.addDeviceObj.services.wifiSSID[key].encryption !== \"\" ? this.addDeviceObj.services.wifiSSID[key].encryption : undefined : undefined;\n        } else {\n          wifiObject['IEEE11iEncryptionModes'] = undefined;\n          wifiObject['KeyPassphrase'] = undefined;\n          wifiObject['WPAEncryptionModes'] = undefined;\n        }\n        if (!_.isEmpty(_.pickBy(wifiObject, function (value, key) {\n          return !(value === undefined || value === \"undefined\" || value === null);\n        }))) allwifiObj[key] = _.pickBy(wifiObject, function (value, key) {\n          return !(value === undefined || value === \"undefined\" || value === null);\n        });\n      }\n      if (((_l = this.addDeviceObj) === null || _l === void 0 ? void 0 : _l.isUnifiedPrimarySSID) && !this.addDeviceObj.toggeledUnifiedPrimarySSID) {\n        var unifiedPrimarySsid = Object.assign({}, (_o = (_m = this.addDeviceObj) === null || _m === void 0 ? void 0 : _m.services) === null || _o === void 0 ? void 0 : _o.wifiSSID[\"UNIFIED_PRIMARY_SSID\"]);\n        unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? true : delete unifiedPrimarySsid.enableDfsChannels;\n        unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? true : delete unifiedPrimarySsid.mumimoEnabled;\n        delete allwifiObj[\"X_CALIX_SXACC_PRIMARY_2DOT4GHZ_SSID\"];\n        var fivePrimarySsid = Object.assign({}, allwifiObj[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"]);\n        var sixPrimarySsid = Object.assign({}, allwifiObj[\"X_CALIX_SXACC_PRIMARY_6GHZ_SSID\"]);\n        var fiveKeys = Object.keys(fivePrimarySsid);\n        var sixKeys = Object.keys(sixPrimarySsid);\n        if ((fiveKeys === null || fiveKeys === void 0 ? void 0 : fiveKeys.length) > 0) {\n          let fiveWifiObject = {\n            MUMIMOEnabled: fivePrimarySsid === null || fivePrimarySsid === void 0 ? void 0 : fivePrimarySsid.MUMIMOEnabled,\n            EnableDfsChannels: fivePrimarySsid === null || fivePrimarySsid === void 0 ? void 0 : fivePrimarySsid.EnableDfsChannels\n          };\n          allwifiObj[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"] = {};\n          allwifiObj[\"X_CALIX_SXACC_PRIMARY_5GHZ_SSID\"] = fiveWifiObject;\n        }\n        if ((sixKeys === null || sixKeys === void 0 ? void 0 : sixKeys.length) > 0) {\n          let sixWifiObject = {\n            MUMIMOEnabled: fivePrimarySsid === null || fivePrimarySsid === void 0 ? void 0 : fivePrimarySsid.MUMIMOEnabled\n          };\n          allwifiObj[\"X_CALIX_SXACC_PRIMARY_6GHZ_SSID\"] = {};\n          allwifiObj[\"X_CALIX_SXACC_PRIMARY_6GHZ_SSID\"] = sixWifiObject;\n        }\n        let unifiedWifiObject = {\n          SSID: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.name,\n          Enable: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.serviceEnabled,\n          SSIDAdvertisementEnabled: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.broadcastEnabled,\n          BeaconType: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.securityType\n        };\n        if ((unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.securityType) !== 'Basic') {\n          unifiedWifiObject['IEEE11iEncryptionModes'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.encryption;\n          unifiedWifiObject['KeyPassphrase'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.passphrase;\n          unifiedWifiObject['WPAEncryptionModes'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.encryption;\n        } else {\n          unifiedWifiObject['IEEE11iEncryptionModes'] = undefined;\n          unifiedWifiObject['KeyPassphrase'] = undefined;\n          unifiedWifiObject['WPAEncryptionModes'] = undefined;\n        }\n        allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = {};\n        //  allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = unifiedWifiObject;\n        allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = _.pickBy(unifiedWifiObject, function (value, key) {\n          return !(value === undefined || value === \"undefined\" || value === null || value === \"\");\n        });\n      } else if (!((_p = this.addDeviceObj) === null || _p === void 0 ? void 0 : _p.isUnifiedPrimarySSID) && !this.addDeviceObj.toggeledUnifiedPrimarySSID) {\n        delete allwifiObj[\"UNIFIED_PRIMARY_SSID\"];\n      } else if (this.editMode && ((_q = this.addDeviceObj) === null || _q === void 0 ? void 0 : _q.isUnifiedPrimarySSID)) {\n        var unifiedPrimarySsid = Object.assign({}, (_s = (_r = this.addDeviceObj) === null || _r === void 0 ? void 0 : _r.services) === null || _s === void 0 ? void 0 : _s.wifiSSID[\"UNIFIED_PRIMARY_SSID\"]);\n        let unifiedWifiObject = {\n          SSID: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.name,\n          Enable: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.serviceEnabled,\n          SSIDAdvertisementEnabled: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.broadcastEnabled,\n          BeaconType: unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.securityType\n        };\n        if ((unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.securityType) !== 'Basic') {\n          unifiedWifiObject['IEEE11iEncryptionModes'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.encryption;\n          unifiedWifiObject['KeyPassphrase'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.passphrase;\n          unifiedWifiObject['WPAEncryptionModes'] = unifiedPrimarySsid === null || unifiedPrimarySsid === void 0 ? void 0 : unifiedPrimarySsid.encryption;\n        } else {\n          unifiedWifiObject['IEEE11iEncryptionModes'] = undefined;\n          unifiedWifiObject['KeyPassphrase'] = undefined;\n          unifiedWifiObject['WPAEncryptionModes'] = undefined;\n        }\n        allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = {};\n        allwifiObj[\"UNIFIED_PRIMARY_SSID\"] = _.pickBy(unifiedWifiObject, function (value, key) {\n          return !(value === undefined || value === \"undefined\" || value === null || value === \"\");\n        });\n      }\n      return allwifiObj;\n    }\n    buildDataReqObj() {\n      let dataReqObj = {};\n      if (this.addDeviceObj.services.dataService.isDataService) {\n        dataReqObj = {\n          Pbit: this.addDeviceObj.services.dataService.priority,\n          pppoe: _.pickBy({\n            Password: this.addDeviceObj.services.dataService.PPPoEPwd,\n            Username: this.addDeviceObj.services.dataService.PPPoEUsername\n          }, function (value, key) {\n            return !(value === undefined || value === \"\" || value === \" \");\n          }),\n          Enable: this.addDeviceObj.services.dataService.isDataService,\n          VlanId: this.addDeviceObj.services.dataService.vLAN !== '' ? Number(this.addDeviceObj.services.dataService.vLAN) : undefined,\n          BwProfile: this.addDeviceObj.services.dataService.bandwidth\n        };\n        if (typeof dataReqObj['Pbit'] === 'object') {\n          delete dataReqObj['Pbit'];\n        }\n        if (!Object.keys(dataReqObj['pppoe']).length) {\n          delete dataReqObj['pppoe'];\n        }\n      } else {\n        dataReqObj = {\n          Enable: this.addDeviceObj.services.dataService.isDataService,\n          BwProfile: this.addDeviceObj.services.dataService.bandwidth\n        };\n      }\n      // if (typeof dataReqObj['pbit'] === 'object') {\n      // }\n      if (!this.addDeviceObj.services.dataService.bandwidth) {\n        delete dataReqObj['BwProfile'];\n      }\n      return dataReqObj;\n    }\n    buildVideoReqObj() {\n      let videoReqObj = {};\n      if (this.addDeviceObj.services.videoService.isVideoService) {\n        videoReqObj = {\n          Pbit: this.addDeviceObj.services.videoService.priority,\n          Enable: this.addDeviceObj.services.videoService.isVideoService,\n          VlanId: this.addDeviceObj.services.videoService.vLAN !== '' ? Number(this.addDeviceObj.services.videoService.vLAN) : undefined,\n          BwProfile: this.addDeviceObj.services.videoService.bandwidth\n        };\n        if (typeof videoReqObj['Pbit'] === 'object') {\n          delete videoReqObj['Pbit'];\n        }\n      } else {\n        videoReqObj = {\n          Enable: this.addDeviceObj.services.videoService.isVideoService,\n          BwProfile: this.addDeviceObj.services.videoService.bandwidth\n        };\n      }\n      return videoReqObj;\n    }\n    buildVoiceReqObj() {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      const isSIPStatic = this.addDeviceObj.services.voiceService.addressType === 'Static' || this.addDeviceObj.device.deviceMode === 'Managed ONT';\n      // let serviceType = '';\n      // if (!history.state.isNewRecord) {\n      //   serviceType = this.addDeviceObj.services.voiceService.serviceType;\n      // } else {\n      //   serviceType = (this.addDeviceObj.device.deviceMode === 'Managed ONT' && this.addDeviceObj.services.voiceService.serviceType?.configurationObj?.parameterValues) ? this.addDeviceObj.services.voiceService.serviceType.configurations.parameterValues.Type :\n      //     this.addDeviceObj.services.voiceService.serviceType;\n      // }\n      const serviceType = this.addDeviceObj.device.deviceMode === 'Managed ONT' ? (_e = (_d = (_c = (_b = (_a = this.addDeviceObj) === null || _a === void 0 ? void 0 : _a.services) === null || _b === void 0 ? void 0 : _b.voiceService) === null || _c === void 0 ? void 0 : _c.serviceType) === null || _d === void 0 ? void 0 : _d.configurations) === null || _e === void 0 ? void 0 : _e.parameterValues.Type : typeof this.addDeviceObj.services.voiceService.serviceType === 'object' && this.addDeviceObj.services.voiceService.serviceType ? this.addDeviceObj.services.voiceService.serviceType.value : this.addDeviceObj.services.voiceService.serviceType;\n      let voiceReqObj = {};\n      // if (this.addDeviceObj.device.deviceMode !== 'Managed ONT' && this.addDeviceObj.services?.voiceService && Object.keys(this.addDeviceObj.services?.voiceService).length && this.addDeviceObj.services.voiceService.serviceType) {\n      if (this.addDeviceObj.services.voiceService.showVocieService && this.addDeviceObj.device.deviceMode === 'Managed ONT' || this.addDeviceObj.device.deviceMode !== 'Managed ONT' && ((_f = this.addDeviceObj.services) === null || _f === void 0 ? void 0 : _f.voiceService) && Object.keys((_g = this.addDeviceObj.services) === null || _g === void 0 ? void 0 : _g.voiceService).length && this.addDeviceObj.services.voiceService.serviceType) {\n        voiceReqObj = {\n          Line: {\n            1: this.buildLineObject('lineOne'),\n            2: this.buildLineObject('lineTwo')\n          },\n          DialPlan: this.addDeviceObj.services.voiceService.dialPlan,\n          ServiceType: serviceType === 'TDM GW' ? 'X_000631_TDMGW' : serviceType,\n          X_CALIX_SXACC_RG_WAN: _.pickBy({\n            ServiceConnectionType: this.addDeviceObj.services.voiceService.addressType,\n            DNSServers: isSIPStatic ? this.addDeviceObj.services.voiceService.dnsServers : undefined,\n            DefaultGateway: isSIPStatic ? this.addDeviceObj.services.voiceService.defaultGateway : undefined,\n            ExternalIPAddress: isSIPStatic ? this.addDeviceObj.services.voiceService.ipAddress : undefined,\n            SubnetMask: isSIPStatic ? this.addDeviceObj.services.voiceService.subnetMask : undefined\n          }, _.identity)\n        };\n        /** fix CCL-23821 */\n        if (voiceReqObj['ServiceType'] !== 'SIP') {\n          delete voiceReqObj['DialPlan'];\n        }\n        if (serviceType === 'H.248' || serviceType === 'MGCP') {\n          /***\r\n           * CCL-28604\r\n           */\n          if (((_h = this.addDeviceObj.services.voiceService) === null || _h === void 0 ? void 0 : _h.addressType) === 'DHCP') {\n            voiceReqObj['X_000631_Opt81ClientFQDN'] = this.addDeviceObj.services.voiceService.ipAddress;\n          }\n        }\n        if (this.addDeviceObj.device.deviceMode === 'Managed ONT') {\n          voiceReqObj['X_000631_Opt81ClientFQDN'] = this.addDeviceObj.services.voiceService.ipHostName;\n        }\n        if (serviceType === 'SIP') {\n          voiceReqObj['FaxT38'] = {\n            Enable: this.addDeviceObj.services.voiceService.faxRelay\n          };\n        }\n      }\n      return voiceReqObj;\n    }\n    buildLineObject(Line) {\n      const serviceType = this.addDeviceObj.device.deviceMode === 'Managed ONT' ? this.addDeviceObj.services.voiceService.serviceType.configurations.parameterValues.Type : this.addDeviceObj.services.voiceService.serviceType;\n      // let serviceType = '';\n      // if (!history.state.isNewRecord) {\n      //   serviceType = this.addDeviceObj.services.voiceService.serviceType;\n      // } else {\n      //   serviceType = (this.addDeviceObj.device.deviceMode === 'Managed ONT' && this.addDeviceObj.services.voiceService.serviceType?.configurationObj?.parameterValues) ? this.addDeviceObj.services.voiceService.serviceType.configurations.parameterValues.Type :\n      //     this.addDeviceObj.services.voiceService.serviceType;\n      // }\n      if (serviceType === 'SIP') {\n        if (this.addDeviceObj.services.voiceService[Line] && this.addDeviceObj.services.voiceService[Line].isVoiceService) {\n          return {\n            SIP: _.pickBy({\n              URI: this.addDeviceObj.services.voiceService[Line].uri,\n              AuthPassword: this.addDeviceObj.services.voiceService[Line].password,\n              AuthUserName: this.addDeviceObj.services.voiceService[Line].username\n            }, function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            }),\n            Enable: this.addDeviceObj.services.voiceService[Line].isVoiceService ? 'Enabled' : 'Disabled',\n            CallingFeatures: _.omitBy({\n              MWIEnable: this.addDeviceObj.services.voiceService[Line].messageWaitIndi,\n              CallerIDEnable: this.addDeviceObj.services.voiceService[Line].isCallerId,\n              CallWaitingEnable: this.addDeviceObj.services.voiceService[Line].isCallWaiting,\n              X_000631_DirectConnectTimer: Number(this.addDeviceObj.services.voiceService[Line].directConnectTimer),\n              X_000631_DirectConnectEnable: this.addDeviceObj.services.voiceService[Line].isDirectCon,\n              X_000631_DirectConnectNumber: this.addDeviceObj.services.voiceService[Line].direConnectNum,\n              X_000631_ThreewayCallingEnable: this.addDeviceObj.services.voiceService[Line].isThreeWayCalling\n            }, _.isNil),\n            VoiceProcessing: _.pickBy({\n              ReceiveGain: this.addDeviceObj.services.voiceService[Line].systemRXLoss != undefined ? Number(this.addDeviceObj.services.voiceService[Line].systemRXLoss) * 10 : -90,\n              TransmitGain: this.addDeviceObj.services.voiceService[Line].systemTXLoss != undefined ? Number(this.addDeviceObj.services.voiceService[Line].systemTXLoss) * 10 : -30\n            }, function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            })\n          };\n        } else {\n          return {\n            Enable: 'Disabled'\n          };\n        }\n      } else {\n        if (this.addDeviceObj.services.voiceService[Line] && this.addDeviceObj.services.voiceService[Line].isVoiceService) {\n          // if (this.addDeviceObj.services.voiceService[Line].systemRXLoss && Math.abs(this.addDeviceObj.services.voiceService[Line].systemRXLoss) < 1) {\n          //   this.addDeviceObj.services.voiceService[Line].systemRXLoss = Number(this.addDeviceObj.services.voiceService[Line].systemRXLoss) * 10;\n          // }\n          // if (this.addDeviceObj.services.voiceService[Line].systemTXLoss && Math.abs(this.addDeviceObj.services.voiceService[Line].systemTXLoss) < 1) {\n          //   this.addDeviceObj.services.voiceService[Line].systemTXLoss = Number(this.addDeviceObj.services.voiceService[Line].systemTXLoss) * 10;\n          // }\n          let lionObj = {\n            VoiceProcessing: _.pickBy({\n              ReceiveGain: this.addDeviceObj.services.voiceService[Line].systemRXLoss != undefined ? Number(this.addDeviceObj.services.voiceService[Line].systemRXLoss) * 10 : -90,\n              TransmitGain: this.addDeviceObj.services.voiceService[Line].systemTXLoss != undefined ? Number(this.addDeviceObj.services.voiceService[Line].systemTXLoss) * 10 : -30\n            }, function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            }),\n            Enable: this.addDeviceObj.services.voiceService[Line].isVoiceService ? 'Enabled' : 'Disabled'\n          };\n          if (serviceType === 'H.248') {\n            lionObj['X_000631_H248'] = {\n              TerminationId: this.addDeviceObj.services.voiceService[Line].terminateId\n            };\n          }\n          if (serviceType === 'MGCP') {\n            lionObj['MGCP'] = {\n              X_000631_GR303: this.addDeviceObj.services.voiceService[Line].isGR303 === undefined ? false : this.addDeviceObj.services.voiceService[Line].isGR303\n            };\n          }\n          if (serviceType === 'X_000631_TDMGW') {\n            lionObj['X_000631_TdmGw'] = {\n              Crv: this.addDeviceObj.services.voiceService[Line].CRV\n            };\n          }\n          return lionObj;\n        } else {\n          return {\n            Enable: 'Disabled'\n          };\n        }\n      }\n    }\n    buildPortsObj() {\n      let portObjs = {};\n      let i = 0;\n      for (let key of Object.keys(this.addDeviceObj.settings)) {\n        if (Object.keys(this.addDeviceObj.settings[key]).length > 0) {\n          i++;\n          let portObj = {};\n          if (this.addDeviceObj.settings[key].DHCPLeaseLimit !== '') {\n            portObj['DhcpLeaseLimit'] = this.addDeviceObj.settings[key].DHCPLeaseLimit;\n          }\n          if (this.addDeviceObj.settings[key].speed) {\n            portObj['MaxBitRate'] = this.addDeviceObj.settings[key].speed;\n          }\n          if (this.addDeviceObj.settings[key].adminState !== \"Enable\") {\n            portObj['Enable'] = false;\n          } else {\n            portObj['Enable'] = true;\n          }\n          if (this.addDeviceObj.settings[key].hasOwnProperty('powerSaving')) {\n            portObj['OnBatteryEnable'] = !this.addDeviceObj.settings[key].powerSaving; //TO fix CCL-35150\n          }\n          //to fix CCL-38136\n          // if (this.addDeviceObj.settings[key].duplex && this.addDeviceObj.settings[key].duplex.trim() !== 'Auto') {\n          //   portObj['OnBatteryEnable'] = false;\n          // }\n          if (this.addDeviceObj.settings[key].duplex !== '') {\n            portObj['DuplexMode'] = this.addDeviceObj.settings[key].duplex;\n          }\n          portObjs['eth-' + i] = _.pickBy(portObj, function (value, key) {\n            return !(value === undefined || value === \"\" || value === \" \");\n          });\n        }\n      }\n      return _.pickBy(portObjs, function (value, key) {\n        return !(value === undefined || value === \"\" || value === \" \");\n      });\n    }\n    checkSettingsChanged(settingsObj) {\n      let defaultVal = {\n        isPowerSaving: true,\n        lanPortOne: {\n          adminState: 'Enable',\n          powerSaving: true,\n          speed: 'Auto',\n          duplex: 'Auto',\n          DHCPLeaseLimit: 0\n        },\n        lanPortTwo: {\n          adminState: 'Enable',\n          powerSaving: true,\n          speed: 'Auto',\n          duplex: 'Auto',\n          DHCPLeaseLimit: 0\n        },\n        lanPortThree: {\n          adminState: 'Enable',\n          powerSaving: true,\n          speed: 'Auto',\n          duplex: 'Auto',\n          DHCPLeaseLimit: 0\n        },\n        lanPortFour: {\n          adminState: 'Enable',\n          powerSaving: true,\n          speed: 'Auto',\n          duplex: 'Auto',\n          DHCPLeaseLimit: 0\n        }\n      };\n      if (JSON.stringify(defaultVal) === JSON.stringify(settingsObj)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    buildONTModeReqObject() {\n      var _a, _b, _c, _d, _e, _f, _g;\n      const serviceObj = [];\n      if (this.addDeviceObj.services.ontDataService.length > 0) {\n        this.addDeviceObj.services.ontDataService.forEach(data => {\n          var _a;\n          const dataObj = {\n            Enable: data.isServiceEnabled,\n            ProfileId: (_a = data === null || data === void 0 ? void 0 : data.serviceProfile) === null || _a === void 0 ? void 0 : _a._id\n          };\n          if (data.isBWOverRide || data.isVLANOverRide) {\n            dataObj['Overrides'] = {};\n            if (data.isBWOverRide && data.bandwidthProfile) {\n              dataObj['Overrides']['BwProfile'] = data.bandwidthProfile;\n            }\n            if (data.isVLANOverRide) {\n              dataObj['Overrides']['VlanId'] = Number(data.vLAN);\n            }\n          }\n          if (data.PPPoEUsername || data.PPPoEPwd) {\n            dataObj[\"pppoe\"] = {\n              \"Password\": data.PPPoEPwd,\n              \"Username\": data.PPPoEUsername\n            };\n          }\n          serviceObj.push(dataObj);\n        });\n      }\n      if (this.addDeviceObj.services.ontVideoService.length > 0) {\n        const videoObj = {\n          Enable: (_a = this.addDeviceObj.services.ontVideoService[0]) === null || _a === void 0 ? void 0 : _a.isServiceEnabled,\n          ProfileId: (_c = (_b = this.addDeviceObj.services.ontVideoService[0]) === null || _b === void 0 ? void 0 : _b.serviceProfile) === null || _c === void 0 ? void 0 : _c._id\n        };\n        if (this.addDeviceObj.services.ontVideoService[0].isBWOverRide || this.addDeviceObj.services.ontVideoService[0].isVLANOverRide) {\n          videoObj['Overrides'] = {};\n          if (this.addDeviceObj.services.ontVideoService[0].isBWOverRide && this.addDeviceObj.services.ontVideoService[0].bandwidthProfile) {\n            videoObj['Overrides']['BwProfile'] = this.addDeviceObj.services.ontVideoService[0].bandwidthProfile;\n          }\n          if (this.addDeviceObj.services.ontVideoService[0].isVLANOverRide) {\n            videoObj['Overrides']['VlanId'] = Number(this.addDeviceObj.services.ontVideoService[0].vLAN);\n          }\n        }\n        serviceObj.push(videoObj);\n      }\n      if (this.addDeviceObj.services.voiceService.showVocieService) {\n        const voiceObj = {\n          Enable: this.addDeviceObj.services.voiceService.showVocieService,\n          ProfileId: (_g = (_f = (_e = (_d = this.addDeviceObj) === null || _d === void 0 ? void 0 : _d.services) === null || _e === void 0 ? void 0 : _e.voiceService) === null || _f === void 0 ? void 0 : _f.serviceType) === null || _g === void 0 ? void 0 : _g._id\n        };\n        serviceObj.push(voiceObj);\n      }\n      return serviceObj;\n    }\n    changedOpmode(event) {\n      this.updatedOpmode = event;\n    }\n    onSaveDeviceInfo() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\n      this.closeAlert();\n      if (_.isEmpty(this.voiceServiceValidation()) && !this.dataVidoeServiceValidation()) {\n        this.loader = true;\n        if (this.duplicateSbcrbrAscDevice) {\n          this.error = true;\n          this.loader = false;\n          this.errorInfo = 'Error! Subscriber already has an associated device with the same ID.';\n          return;\n        }\n        if (!history.state.isNewRecord && this.addDeviceObj && !this.isCMS && this.addDeviceObj.services.configuredService === 'Yes' && typeof this.editDeviceObj === \"object\" && (this.editDeviceObj.data || this.editDeviceObj.video || this.editDeviceObj.voice)) {\n          if (!this.confirmDeleteServicesAssociateWithSbscrbr) {\n            this.loader = false;\n            this.deleteServicesAssociateWithSbscrbrMsg = 'Do you want to delete the services associated with the subscriber?';\n            $(\"html, body\").animate({\n              scrollTop: 0\n            }, \"slow\");\n            return;\n          }\n        } else {\n          this.loader = false;\n          this.deleteServicesAssociateWithSbscrbrMsg = '';\n        }\n        let provisioningRecord;\n        if (this.updatedOpmode) {\n          this.addDeviceObj.device.deviceMode = this.updatedOpmode;\n          this.updatedOpmode = null;\n        }\n        if (this.editDeviceObj && this.editDeviceObj.rgConfigMode) {\n          this.editDeviceObj.wifi = this.buildWIFIReqObj();\n          let tempProvRec = Object.assign({}, this.editDeviceObj);\n          delete tempProvRec.staticGroupMember;\n          provisioningRecord = tempProvRec;\n        } else {\n          provisioningRecord = {\n            wifi: this.buildWIFIReqObj(),\n            // orgId: this.orgId,\n            opMode: this.addDeviceObj.device.deviceMode,\n            deviceId: this.addDeviceObj.device.regId ? this.addDeviceObj.device.regId.trim() : '',\n            modelName: this.addDeviceObj.device.selectedModel,\n            subscriberId: this.subscriberInfo.subscriberId\n          };\n          if (history.state.isNewRecord || this.editDeviceObj) {\n            if (this.addDeviceObj.services.configuredService === 'No') {\n              if ((_b = (_a = this.addDeviceObj.services.voiceService) === null || _a === void 0 ? void 0 : _a.VoiceProfile) === null || _b === void 0 ? void 0 : _b._id) {\n                provisioningRecord['services'] = [{\n                  Enable: true,\n                  ProfileId: ((_d = (_c = this.addDeviceObj.services.voiceService) === null || _c === void 0 ? void 0 : _c.VoiceProfile) === null || _d === void 0 ? void 0 : _d._id) ? (_f = (_e = this.addDeviceObj.services.voiceService) === null || _e === void 0 ? void 0 : _e.VoiceProfile) === null || _f === void 0 ? void 0 : _f._id : (_h = (_g = this.editDeviceObj) === null || _g === void 0 ? void 0 : _g.services) === null || _h === void 0 ? void 0 : _h.ProfileId,\n                  category: ((_k = (_j = this.addDeviceObj.services.voiceService.VoiceProfile) === null || _j === void 0 ? void 0 : _j.configurations) === null || _k === void 0 ? void 0 : _k.category) ? (_m = (_l = this.addDeviceObj.services.voiceService.VoiceProfile) === null || _l === void 0 ? void 0 : _l.configurations) === null || _m === void 0 ? void 0 : _m.category : (_p = (_o = this.editDeviceObj) === null || _o === void 0 ? void 0 : _o.services) === null || _p === void 0 ? void 0 : _p.category\n                }];\n              }\n            }\n          }\n          if (!history.state.isNewRecord || typeof this.editDeviceObj === \"object\" && this.editDeviceObj._id) {\n            provisioningRecord['_id'] = this.editDeviceObj._id;\n          }\n          if (this.addDeviceObj.device.deviceMode !== 'Managed ONT' && this.addDeviceObj.device.deviceMode !== 'WAP' && this.addDeviceObj.device.deviceMode !== 'WAP-IGMP' && this.addDeviceObj.services.configuredService === 'No') {\n            provisioningRecord['data'] = _.pickBy(this.buildDataReqObj(), function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            }), provisioningRecord['video'] = _.pickBy(this.buildVideoReqObj(), function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            }), provisioningRecord['voice'] = _.pickBy(this.buildVoiceReqObj(), function (value, key) {\n              return !(value === undefined || value === \"\" || value === \" \");\n            });\n            //if (this.addDeviceObj?.device.selectedModel == 'GPR2032H') {\n            if (!this.voiceStatus) {\n              delete provisioningRecord['voice'];\n              delete provisioningRecord['services'];\n            }\n            //console.log(\"voice status\",this.voiceStatus)\n            // if (!this.addDeviceObj.services.voiceService.showVocieService)\n            // {\n            //   delete provisioningRecord['voice'];\n            //   delete provisioningRecord['services'];\n            // }\n            // if (!provisioningRecord['video']?.Enable) {\n            //   delete provisioningRecord['video'];\n            // }\n            // if (!provisioningRecord['data']?.Enable) {\n            //   delete provisioningRecord['data'];\n            // }\n            // if(this.addDeviceObj.services.videoService.serviceProfile.Mode)\n            // {\n            //   delete provisioningRecord['voice'];\n            // }\n          } else if (this.addDeviceObj.device.deviceMode !== 'Managed ONT' && this.addDeviceObj.services.configuredService === 'Yes') {\n            delete provisioningRecord['data'];\n            delete provisioningRecord['video'];\n            delete provisioningRecord['voice'];\n            delete provisioningRecord['services'];\n          } else if (this.addDeviceObj.device.deviceMode === 'Managed ONT') {\n            provisioningRecord['services'] = this.buildONTModeReqObject();\n            if (!this.checkSettingsChanged(this.addDeviceObj.settings)) {\n              provisioningRecord['ports'] = this.buildPortsObj();\n            }\n            provisioningRecord['enableRgOnBattery'] = !this.addDeviceObj.settings.isPowerSaving;\n            if (provisioningRecord['services'].length) {\n              if (this.addDeviceObj.services.voiceService.showVocieService) {\n                const serviceType = (_u = (_t = (_s = (_r = (_q = this.addDeviceObj) === null || _q === void 0 ? void 0 : _q.services) === null || _r === void 0 ? void 0 : _r.voiceService) === null || _s === void 0 ? void 0 : _s.serviceType) === null || _t === void 0 ? void 0 : _t.configurations) === null || _u === void 0 ? void 0 : _u.parameterValues.Type;\n                if (!serviceType) {\n                  this.error = true;\n                  this.errorInfo = this.language['Please select profile for added services'] ? this.language['Please select profile for added services'] : 'Please select profile for added services';\n                  return;\n                }\n                provisioningRecord['voice'] = _.pickBy(this.buildVoiceReqObj(), function (value, key) {\n                  return !(value === undefined || value === \"\" || value === \" \");\n                });\n              }\n              const noProfiles = provisioningRecord['services'].filter(el => !el.ProfileId);\n              if (noProfiles.length) {\n                this.error = true;\n                this.errorInfo = this.language['Please select profile for added services'] ? this.language['Please select profile for added services'] : 'Please select profile for added services';\n                return;\n              }\n              const noVoiceProfiles = provisioningRecord['services'].filter(el => !el.ProfileId);\n              if (noVoiceProfiles.length) {\n                this.error = true;\n                this.errorInfo = this.language['Please select voice profile for added services'] ? this.language['Please select voice profile for added services'] : 'Please select voice profile for added services';\n                return;\n              }\n              if (provisioningRecord['voice'] && Object.keys(provisioningRecord['voice']).length === 0 || !this.voiceStatus) {\n                delete provisioningRecord['voice'];\n              }\n            } else {\n              delete provisioningRecord['voice'];\n            }\n          }\n        }\n        if (this.addDeviceObj.device.isStaticGroup === \"Yes\" && this.addDeviceObj.device.selectedStaticGroup || history.state && history.state.editDeviceObj && history.state.editDeviceObj.staticGroupMember) {\n          let newStaticGrpArr = [];\n          let sgIds = this.addDeviceObj.device.selectedStaticGroup ? this.addDeviceObj.device.selectedStaticGroup : [];\n          if (sgIds && this.addDeviceObj.device.isStaticGroup === \"Yes\") {\n            sgIds.forEach(id => {\n              newStaticGrpArr.push({\n                //\"type\": this.staticGroupTypes[id] ? this.staticGroupTypes[id] : 'FSAN',\n                \"type\": /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/.test(this.addDeviceObj.device.regId) ? 'MAC Address' : /^CXNK[A-Z\\0-9]{8}/.test(this.addDeviceObj.device.regId) ? 'FSAN' : null,\n                \"groupId\": id,\n                \"memberInfo\": this.addDeviceObj.device.regId ? this.addDeviceObj.device.regId.trim() : ''\n              });\n            });\n          }\n          provisioningRecord['newStaticGroup'] = newStaticGrpArr;\n          if (history.state && history.state.editDeviceObj && history.state.editDeviceObj.staticGroupMember) {\n            let oldStaticGrpArr = [];\n            let sgIds = history.state.editDeviceObj.staticGroupMember;\n            sgIds.forEach(element => {\n              oldStaticGrpArr.push({\n                \"_id\": element['_id'],\n                \"type\": element['type'],\n                \"groupId\": element['groupId'],\n                \"memberInfo\": element['memberInfo']\n              });\n            });\n            provisioningRecord['oldStaticGroup'] = oldStaticGrpArr;\n          }\n        }\n        // if (this.addDeviceObj.services?.dataService && Object.keys(this.addDeviceObj.services?.dataService).length) {\n        //   provisioningRecord[\"data\"] = {};\n        //   if (this.addDeviceObj.services.dataService.bandwidth) {\n        //     provisioningRecord[\"data\"][\"BwProfile\"] = this.addDeviceObj.services.dataService.bandwidth;\n        //   }\n        //   if (this.addDeviceObj.services.dataService.isDataService) {\n        //     provisioningRecord[\"data\"][\"Enable\"] = true;\n        //   }\n        //   if (this.addDeviceObj.services.dataService.priority) {\n        //     provisioningRecord[\"data\"][\"Pbit\"] = this.addDeviceObj.services.dataService.priority;\n        //   }\n        //   if (this.addDeviceObj.services.dataService.vLAN) {\n        //     provisioningRecord[\"data\"][\"VlanId\"] = parseInt(this.addDeviceObj.services.dataService.vLAN);\n        //   }\n        //   if (this.addDeviceObj.services.dataService.PPPoEPwd || this.addDeviceObj.services.dataService.PPPoEUsername) {\n        //     provisioningRecord[\"data\"][\"pppoe\"] = {};\n        //     if (this.addDeviceObj.services.dataService.PPPoEUsername) {\n        //       provisioningRecord[\"data\"][\"pppoe\"][\"Username\"] = this.addDeviceObj.services.dataService.PPPoEUsername;\n        //     }\n        //     if (this.addDeviceObj.services.dataService.PPPoEPwd) {\n        //       provisioningRecord[\"data\"][\"pppoe\"][\"Password\"] = this.addDeviceObj.services.dataService.PPPoEPwd;\n        //     }\n        //   }\n        // }\n        // if (this.addDeviceObj.services?.videoService && Object.keys(this.addDeviceObj.services?.videoService).length) {\n        //   provisioningRecord[\"video\"] = {};\n        //   if (this.addDeviceObj.services.videoService.bandwidth) {\n        //     provisioningRecord[\"video\"][\"BwProfile\"] = this.addDeviceObj.services.videoService.bandwidth;\n        //   }\n        //   if (this.addDeviceObj.services.videoService.isVideoService) {\n        //     provisioningRecord[\"video\"][\"Enable\"] = true;\n        //   }\n        //   if (this.addDeviceObj.services.videoService.priority) {\n        //     provisioningRecord[\"video\"][\"Pbit\"] = this.addDeviceObj.services.videoService.priority;\n        //   }\n        //   if (this.addDeviceObj.services.videoService.vLAN) {\n        //     provisioningRecord[\"video\"][\"VlanId\"] = parseInt(this.addDeviceObj.services.videoService.vLAN);\n        //   }\n        // }\n        // if (this.addDeviceObj.services?.voiceService && Object.keys(this.addDeviceObj.services?.voiceService).length) {\n        //   provisioningRecord[\"voice\"] = {};\n        //   if (this.addDeviceObj.services.voiceService.dialPlan) {\n        //     provisioningRecord[\"voice\"][\"DialPlan\"] = this.addDeviceObj.services.voiceService.dialPlan;\n        //   }\n        //   if (this.addDeviceObj.services.voiceService.faxRelay) {\n        //     provisioningRecord[\"voice\"][\"FaxT38\"] = {};\n        //     provisioningRecord[\"voice\"][\"FaxT38\"][\"Enable\"] = this.addDeviceObj.services.voiceService.faxRelay;\n        //   }\n        //   if (this.addDeviceObj.services.voiceService.serviceType) {\n        //     provisioningRecord[\"voice\"][\"ServiceType\"] = this.addDeviceObj.services.voiceService.serviceType;\n        //   }\n        //   if (this.addDeviceObj.services.voiceService.addressType) {\n        //     provisioningRecord[\"voice\"][\"X_CALIX_SXACC_RG_WAN\"] = {};\n        //     provisioningRecord[\"voice\"][\"X_CALIX_SXACC_RG_WAN\"][\"ServiceConnectionType\"] = this.addDeviceObj.services.voiceService.addressType;\n        //   }\n        //   if (this.addDeviceObj.services.voiceService.lineOne) {\n        //     let data = this.addDeviceObj.services.voiceService.lineOne;\n        //     let obj = {\n        //       \"SIP\": {\n        //         \"URI\": data[\"uri\"] ? data[\"uri\"] : \"\",\n        //         \"AuthPassword\": data[\"password\"] ? data[\"password\"] : \"\",\n        //         \"AuthUserName\": data[\"username\"] ? data[\"username\"] : \"\",\n        //       },\n        //       \"Enable\": \"Enabled\",\n        //       \"CallingFeatures\": {\n        //         \"MWIEnable\": false,\n        //         \"CallerIDEnable\": false,\n        //         \"CallWaitingEnable\": false,\n        //         \"X_000631_DirectConnectTimer\": 0,\n        //         \"X_000631_DirectConnectEnable\": false,\n        //         \"X_000631_DirectConnectNumber\": \"\",\n        //         \"X_000631_ThreewayCallingEnable\": false\n        //       },\n        //       \"VoiceProcessing\": {\n        //         \"ReceiveGain\": -9,\n        //         \"TransmitGain\": -3\n        //       }\n        //     };\n        //   }\n        // }\n        // return;\n        // if (provisioningRecord && provisioningRecord?.services && provisioningRecord?.services.length) {\n        //   const noProfiles = provisioningRecord?.services.filter(el => !el.ProfileId);\n        //   if (noProfiles.length) {\n        //     return;\n        //   }\n        // }\n        const addDeviceObj = {\n          isNeedAssociateDeviceToSubscriber: history.state.isNewRecord,\n          subscriber: {\n            _id: this.subscriberInfo.subscriberId ? this.subscriberInfo.subscriberId : this.subscriberInfo._id,\n            account: this.subscriberInfo.account,\n            subscriberLocationId: this.subscriberInfo.subscriberLocationId,\n            name: this.subscriberInfo.name,\n            serviceAddress: this.subscriberInfo.serviceAddress,\n            phone: this.subscriberInfo.phone,\n            email: this.subscriberInfo.email\n          },\n          deviceId: !history.state.isNewRecord && this.editDeviceObj ? (_v = this.editDeviceObj.deviceId) === null || _v === void 0 ? void 0 : _v.trim() : (_x = (_w = this.addDeviceObj.device) === null || _w === void 0 ? void 0 : _w.regId) === null || _x === void 0 ? void 0 : _x.trim(),\n          //deviceId: this.addDeviceObj.device.regId.trim(),\n          provisioningRecord: provisioningRecord\n        };\n        this.loader = true;\n        if (!history.state.isNewRecord || typeof this.editDeviceObj === \"object\" && this.editDeviceObj._id) {\n          if (this.checkKeyPassPhraseLength(addDeviceObj)) {\n            this.managementService.updateDeviceBySubscriber(addDeviceObj).subscribe(res => {\n              if (typeof res === 'object' && res && res['errorCode'] && res['errorMessage']) {\n                this.isError = true;\n                this.errorMessage = `Error! Fail to update subscriber: ${res['errorMessage']}`;\n                this.loader = false;\n              } else {\n                setTimeout(() => {\n                  this.loader = false;\n                  this.router.navigate(['/support/netops-management'], {\n                    queryParams: {\n                      searchText: this.searchText || ''\n                    }\n                  });\n                }, 2000);\n              }\n            }, err => {\n              this.pageErrorHandle(err);\n            });\n          } else {\n            this.loader = false;\n            this.isError = true;\n            this.errorMessage = `Error! WIFI Password incorrect`;\n          }\n        } else {\n          if (this.checkKeyPassPhraseLength(addDeviceObj)) {\n            this.managementService.addDevice(addDeviceObj).subscribe(res => {\n              if (res && res['errorCode'] && res['errorMessage']) {\n                this.isError = true;\n                this.errorMessage = `Error! Fail to update subscriber: ${res['errorMessage']}`;\n                this.loader = false;\n              } else {\n                setTimeout(() => {\n                  this.loader = false;\n                  this.router.navigate(['/support/netops-management'], {\n                    queryParams: {\n                      searchText: this.searchText || ''\n                    }\n                  });\n                }, 2000);\n              }\n            }, err => {\n              this.loader = false;\n              this.pageErrorHandle(err);\n            });\n          } else {\n            this.loader = false;\n            this.isError = true;\n            this.errorMessage = `Error! WIFI Password incorrect`;\n          }\n        }\n      }\n    }\n    // checkKeyPassPhraseLength(obj) {\n    //   let wifi = obj.provisioningRecord.wifi;\n    //   let res = true;\n    //   if (wifi) {\n    //     let objKeys = Object.keys(wifi);\n    //     objKeys.forEach(key => {\n    //       if (wifi[key].KeyPassphrase) {\n    //         if (wifi[key].KeyPassphrase.length < 8 ||\n    //           wifi[key].KeyPassphrase.length > 63) {\n    //           res = false;\n    //         }\n    //       }\n    //     })\n    //   }\n    //   return res;\n    // }\n    checkKeyPassPhraseLength(addDeviceOb) {\n      var _a;\n      let obj = (_a = addDeviceOb.provisioningRecord) === null || _a === void 0 ? void 0 : _a.wifi;\n      let res = true;\n      if (obj) {\n        var tempObj = this.tempWifiObj;\n        let objKeys = Object.keys(obj);\n        objKeys.forEach(key => {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5;\n          if (tempObj) {\n            var temp = tempObj[key];\n            if ((temp === null || temp === void 0 ? void 0 : temp.securityType) == \"Basic\" && ((_a = obj[key]) === null || _a === void 0 ? void 0 : _a.securityType) != \"Basic\" && ((_c = (_b = obj[key]) === null || _b === void 0 ? void 0 : _b.passphrase) === null || _c === void 0 ? void 0 : _c.length) == 0) {\n              res = false;\n            } else if ((temp === null || temp === void 0 ? void 0 : temp.passphrase) && ((_e = (_d = obj[key]) === null || _d === void 0 ? void 0 : _d.passphrase) === null || _e === void 0 ? void 0 : _e.length) == 0 && ((_f = obj[key]) === null || _f === void 0 ? void 0 : _f.securityType) != \"Basic\") {\n              res = false;\n            }\n          }\n          // if (tempObj) {\n          //   var temp = tempObj[key];\n          //   if (key != \"UNIFIED_PRIMARY_SSID\" && temp?.securityType == \"Basic\" && obj[key]?.securityType != \"Basic\" && obj[key]?.passphrase?.length == 0) {\n          //     res = false;\n          //   }\n          // }\n          if (tempObj) {\n            var temp = tempObj[key];\n            if ((temp === null || temp === void 0 ? void 0 : temp.securityType) == \"Basic\" && ((_g = obj[key]) === null || _g === void 0 ? void 0 : _g.securityType) != \"Basic\") {\n              if (((_h = obj[key].passphrase) === null || _h === void 0 ? void 0 : _h.length) < 8 || ((_j = obj[key].passphrase) === null || _j === void 0 ? void 0 : _j.length) > 63) {\n                res = false;\n              }\n            }\n          }\n          if ((_k = obj[key]) === null || _k === void 0 ? void 0 : _k.passphrase) {\n            if (obj[key].passphrase.length < 8 || obj[key].passphrase.length > 63) {\n              res = false;\n            }\n            //let regexp = new RegExp('^[a-zA-Z0-9]+$')\n            let regexp = new RegExp(/^(?=.*[a-zA-Z0-9])[A-Za-z\\d[\\]{};:=<>_+^#$@!%*?&]{8,}$/gm);\n            if (!regexp.test(obj[key].passphrase)) {\n              res = false;\n            }\n            if (/^\\s+|\\s+$/g.test(obj[key].passphrase)) {\n              res = false;\n            }\n          }\n          if ((_l = obj[key]) === null || _l === void 0 ? void 0 : _l.SSID) {\n            if (!new RegExp(SSIDNamePattern).test(obj[key].SSID)) {\n              res = false;\n            }\n            if (obj[key].SSID.length > 32) {\n              res = false;\n            }\n            // if (!(obj[key]?.securityType)) {\n            //   res = false;\n            // }\n          }\n\n          if (this.editMode) {\n            var oldName = (_m = tempObj[key]) === null || _m === void 0 ? void 0 : _m.name;\n            var newName = obj[key].name;\n            var oldSecurityType = (_o = tempObj[key]) === null || _o === void 0 ? void 0 : _o.securityType;\n            var newSecurityType = (_p = obj[key]) === null || _p === void 0 ? void 0 : _p.securityType;\n            if (oldName && newName == \"\") {\n              res = false;\n            } else if (key == \"UNIFIED_PRIMARY_SSID\") {\n              //  if (!oldName) {\n              if ((newName === null || newName === void 0 ? void 0 : newName.length) > 0) {\n                if (!((_q = obj[key]) === null || _q === void 0 ? void 0 : _q.securityType)) {\n                  res = false;\n                }\n                // else if ((oldName && (oldName != newName)) && (oldSecurityType && (oldSecurityType != newSecurityType))) {\n                //   res = false;\n                // }\n                else if (((_r = obj[key]) === null || _r === void 0 ? void 0 : _r.securityType) && ((_s = obj[key]) === null || _s === void 0 ? void 0 : _s.securityType) !== 'Basic') {\n                  if (!((_t = obj[key]) === null || _t === void 0 ? void 0 : _t.passphrase) && (!oldName || !oldSecurityType)) {\n                    res = false;\n                  } else if (oldName && oldName != newName) {\n                    if (((_v = (_u = obj[key]) === null || _u === void 0 ? void 0 : _u.passphrase) === null || _v === void 0 ? void 0 : _v.length) == 0) {\n                      res = false;\n                    }\n                  } else if (oldSecurityType && oldSecurityType != newSecurityType) {\n                    if (((_x = (_w = obj[key]) === null || _w === void 0 ? void 0 : _w.passphrase) === null || _x === void 0 ? void 0 : _x.length) == 0) {\n                      res = false;\n                    }\n                  }\n                }\n                // else if ((oldName && (oldName != newName)) && (oldSecurityType && (oldSecurityType != newSecurityType))) {\n                //   //res=\n                // }\n              } else if ((_y = obj[key]) === null || _y === void 0 ? void 0 : _y.securityType) {\n                if (((_z = obj[key]) === null || _z === void 0 ? void 0 : _z.securityType) !== 'Basic') {\n                  if ((newName === null || newName === void 0 ? void 0 : newName.length) == 0) {\n                    res = false;\n                  }\n                  if (!((_0 = obj[key]) === null || _0 === void 0 ? void 0 : _0.passphrase)) {\n                    res = false;\n                  }\n                } else if (((_1 = obj[key]) === null || _1 === void 0 ? void 0 : _1.securityType) == 'Basic') {\n                  if ((newName === null || newName === void 0 ? void 0 : newName.length) == 0) {\n                    res = false;\n                  }\n                }\n              } else if (oldName && newName == \"\") {\n                res = false;\n              }\n              // }\n            }\n          } else if (!this.editMode) {\n            if (key == \"UNIFIED_PRIMARY_SSID\") {\n              if (((_2 = obj[key].name) === null || _2 === void 0 ? void 0 : _2.length) == 0) {\n                res = false;\n              }\n              if (((_4 = (_3 = obj[key]) === null || _3 === void 0 ? void 0 : _3.passphrase) === null || _4 === void 0 ? void 0 : _4.length) == 0 && ((_5 = obj[key]) === null || _5 === void 0 ? void 0 : _5.securityType) !== 'Basic') {\n                res = false;\n              }\n            }\n          }\n        });\n      }\n      return res;\n    }\n    closeDeleteServicesAssociateWithSbscrbrMsg() {\n      this.deleteServicesAssociateWithSbscrbrMsg = '';\n    }\n    confirmDeleteServicesAssociateWithSbscrbrMsg() {\n      this.confirmDeleteServicesAssociateWithSbscrbr = true;\n      this.onSaveDeviceInfo();\n    }\n    getStaticGroupMemebers() {\n      let obj = {};\n      this.managementService.getStaticGroupMembers(this.orgId).subscribe(res => {\n        if (res) {\n          res.forEach(element => {\n            obj[element.groupId] = element.type;\n          });\n        }\n        this.staticGroupTypes = obj;\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    getDeviceModels() {\n      let params = {\n        orgId: this.ssoService.getOrgId()\n      };\n      return this.http.get(`${environment.SUPPORT_URL}/netops-device/device-type?matcher=${JSON.stringify(params)}`).subscribe(json => {\n        let obj = {};\n        if (json) {\n          json.forEach(element => {\n            if (element && element.modelName) {\n              obj[element['modelName'].trim()] = true;\n            }\n          });\n          this.deviceModels = Object.keys(obj);\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n    getWifiSsidMngrStngs(obj) {\n      this.wifiSsidMngrStngsValues = obj;\n    }\n    getbSmbMode(value) {\n      this.bSmbMode = value;\n    }\n    disableComplete(event) {\n      this.disableFinishBtn = event;\n      this.cd.detectChanges();\n    }\n    disableNext(event) {\n      this.disableNextBtn = event;\n    }\n    voiceStatusres(event) {\n      this.voiceStatus = event;\n    }\n    patchSystemLoss(lineIndex) {\n      let systemTXLoss = this.editDeviceObj.voice.Line[lineIndex].VoiceProcessing.TransmitGain / 10;\n      let systemRXLoss = this.editDeviceObj.voice.Line[lineIndex].VoiceProcessing.ReceiveGain / 10;\n      if (systemTXLoss === -4 && systemRXLoss === -11) {\n        return \"ETSI-PSTN\";\n      } else if (systemTXLoss === -3 && systemRXLoss === -9) {\n        return \"ANSI\";\n      } else if (systemTXLoss === -2 && systemRXLoss === -4) {\n        return \"GR-909\";\n      } else {\n        return 'Manual';\n      }\n    }\n    checkWifiSSIDForBuildKeys(key) {\n      if (key == 'X_CALIX_SXACC_PRIMARY_2DOT4GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['2DOT4GHZ_PRIMARY'];\n      } else if (key == 'X_CALIX_SXACC_PRIMARY_5GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['5GHZ_PRIMARY'];\n      } else if (key == 'X_CALIX_SXACC_GUEST_2DOT4GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['2DOT4GHZ_PRIMARY'] && !this.ssoService.acceptGSModel(this.addDeviceObj.device.selectedModel);\n      } else if (key == 'X_CALIX_SXACC_GUEST_5GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['5GHZ_GUEST'] && !this.ssoService.acceptGSModel(this.addDeviceObj.device.selectedModel);\n      } else if (key == 'X_CALIX_SXACC_PRIMARY_6GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['6GHZ_PRIMARY'];\n      } else if (key == 'X_CALIX_SXACC_GUEST_6GHZ_SSID') {\n        return this.wifiSsidMngrStngsValues['6GHZ_GUEST'] && !this.ssoService.acceptGSModel(this.addDeviceObj.device.selectedModel);\n      } else if (key == 'UNIFIED_PRIMARY_SSID') {\n        return this.wifiSsidMngrStngsValues['5GHZ_PRIMARY'];\n      }\n      return false;\n    }\n    getSubscriberServices() {\n      var _a, _b, _c, _d;\n      this.isPRConfiguredOutside = false;\n      let selectedDeviceInfo = JSON.parse(this.managementService.getSelectedDeviceInfo());\n      let subsciberId = ((_a = this.subscriberInfo) === null || _a === void 0 ? void 0 : _a.subscriberId) ? (_b = this.subscriberInfo) === null || _b === void 0 ? void 0 : _b.subscriberId : ((_c = selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.editDeviceObj) === null || _c === void 0 ? void 0 : _c.subscriberId) ? (_d = selectedDeviceInfo === null || selectedDeviceInfo === void 0 ? void 0 : selectedDeviceInfo.editDeviceObj) === null || _d === void 0 ? void 0 : _d.subscriberId : '';\n      if (!subsciberId) return;\n      this.subServicesSubscription = this.managementService.getSubscriberServices(subsciberId).subscribe(res => {\n        if (res) {\n          res.forEach(el => {\n            if (el.activate) {\n              this.isPRConfiguredOutside = true;\n            }\n          });\n        }\n      }, err => {});\n    }\n    editDevice(deviceInfo, deviceId, opModeWithOnt = '') {\n      this.managementService.getDeviceInfo(this.orgId, deviceId).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/support/netops-management/subscriber-wizard'], {\n            state: {\n              subscriberData: deviceInfo,\n              isNewRecord: false,\n              editDeviceObj: res,\n              searchText: this.searchText || '',\n              isProvision: this.isProvision\n            }\n          });\n        } else {\n          this.service.getDeviceInfo(deviceId).subscribe(json => {\n            let prObj = {\n              \"wifi\": {},\n              // \"orgId\": this.orgId,\n              \"opMode\": json && json.opMode ? json.opMode : '',\n              \"deviceId\": deviceId,\n              \"modelName\": json && json.modelName ? json.modelName : '',\n              \"subscriberId\": deviceInfo.subscriberId,\n              \"opModeWithOnt\": opModeWithOnt,\n              \"staticGroupMember\": []\n            };\n            this.router.navigate(['/support/netops-management/subscriber-wizard'], {\n              state: {\n                subscriberData: deviceInfo,\n                isNewRecord: false,\n                editDeviceObj: prObj,\n                searchText: this.searchText || '',\n                isProvision: this.isProvision\n              }\n            });\n          }, err => {\n            let prObj = {\n              \"wifi\": {},\n              // \"orgId\": this.orgId,\n              \"opMode\": \"\",\n              \"deviceId\": deviceId,\n              \"modelName\": \"\",\n              \"subscriberId\": deviceInfo.subscriberId,\n              \"opModeWithOnt\": opModeWithOnt,\n              \"staticGroupMember\": []\n            };\n            this.router.navigate(['/support/netops-management/subscriber-wizard'], {\n              state: {\n                subscriberData: deviceInfo,\n                isNewRecord: false,\n                editDeviceObj: prObj,\n                searchText: this.searchText || '',\n                isProvision: this.isProvision\n              }\n            });\n          });\n        }\n      }, err => {\n        this.pageErrorHandle(err);\n      });\n    }\n  }\n  SubscriberWizardComponent.ɵfac = function SubscriberWizardComponent_Factory(t) {\n    return new (t || SubscriberWizardComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.DataServiceService), i0.ɵɵdirectiveInject(i4.DeviceGroupService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.HttpClient), i0.ɵɵdirectiveInject(i7.ProfileService), i0.ɵɵdirectiveInject(i8.ManagementService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i9.Title));\n  };\n  SubscriberWizardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubscriberWizardComponent,\n    selectors: [[\"app-subscriber-wizard\"]],\n    decls: 23,\n    vars: 18,\n    consts: [[1, \"d-flex\", \"justify-content-end\", \"ccl-navbar\"], [1, \"col-xs-12\"], [1, \"mb-0\", \"pl-4\", \"pb-3\"], [\"routerLink\", \"/support/netops-management/subscriber-management\", \"routerLinkActive\", \"active\", 1, \"w-s-nowrap\", \"addDeviceClass\", 3, \"queryParams\"], [\"src\", \"assets/img/ic_close-44px.svg\", \"alt\", \"\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-danger fade show my-3\", 4, \"ngIf\"], [\"id\", \"subscriberWizard\", 1, \"subscriber-wizard\"], [\"id\", \"addDevice\", 1, \"net-ops-secondary-title\"], [1, \"stepper-main\", \"mt-3\"], [1, \"stepper-ui\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pos-action-btn\"], [\"type\", \"button\", 1, \"btn-arrow\", \"btn-arr-prev\", \"btn-grey\", \"mr-2\", \"float-left\", 3, \"disabled\", \"ngClass\", \"click\"], [\"src\", \"assets/img/ic_chevronleft_grey.svg\"], [\"type\", \"button\", \"class\", \"btn-arrow btn-arr-nxt primary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn-default primary px-3\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"py-3 warning-msg\", 4, \"ngIf\"], [\"class\", \"alert alert-info margin-top-20 align-middle\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"class\", \"d-inline-flex\", 3, \"innerHtml\", 4, \"ngIf\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [3, \"title\", \"ngClass\", \"click\"], [\"type\", \"button\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"primary\", 3, \"disabled\", \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"disabled\", \"click\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"py-3\", \"warning-msg\"], [1, \"btn-con-sec\", \"float-right\"], [\"id\", \"deleteServicesAssociateWithSbscrbrMsgCnfrmBtn\", 1, \"btn\", \"warn-btn\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"warn-btn\", 3, \"click\"], [1, \"alert\", \"alert-info\", \"margin-top-20\", \"align-middle\"], [3, \"addDeviceObj\", \"staticGroupList\", \"editMode\", \"isProvision\", \"deviceModels\", \"_staticGrpError\", \"checkDeviceDiscovery\", \"bSmbMode\", \"tabChange\", \"onValidateExistingDevice\", \"changedOpMode\", \"wifiSsidMngrStngs\", \"bSmbModeEmit\", 4, \"ngIf\"], [3, \"addDeviceObj\", \"isPRConfiguredOutside\", \"editMode\", \"bSmbMode\", \"wifiSsidMngrStngsValues\", \"tempWifiObj\", \"disableFinish\", \"disableNext\", \"voiceStatussen\", \"wifiSsidMngrStngs\", 4, \"ngIf\"], [3, \"addDeviceObj\", \"disableFinish\", 4, \"ngIf\"], [3, \"addDeviceObj\", \"staticGroupList\", \"editMode\", \"isProvision\", \"deviceModels\", \"_staticGrpError\", \"checkDeviceDiscovery\", \"bSmbMode\", \"tabChange\", \"onValidateExistingDevice\", \"changedOpMode\", \"wifiSsidMngrStngs\", \"bSmbModeEmit\"], [3, \"addDeviceObj\", \"isPRConfiguredOutside\", \"editMode\", \"bSmbMode\", \"wifiSsidMngrStngsValues\", \"tempWifiObj\", \"disableFinish\", \"disableNext\", \"voiceStatussen\", \"wifiSsidMngrStngs\"], [3, \"addDeviceObj\", \"disableFinish\"]],\n    template: function SubscriberWizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"p\", 2);\n        i0.ɵɵelementStart(3, \"a\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, SubscriberWizardComponent_div_5_Template, 8, 3, \"div\", 5);\n        i0.ɵɵtemplate(6, SubscriberWizardComponent_div_6_Template, 6, 1, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"span\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"section\", 9);\n        i0.ɵɵelementStart(11, \"ul\", 10);\n        i0.ɵɵtemplate(12, SubscriberWizardComponent_li_12_Template, 4, 7, \"li\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 12);\n        i0.ɵɵelementStart(14, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function SubscriberWizardComponent_Template_button_click_14_listener() {\n          return ctx.onTabChange(ctx.selectedTabIndex - 1);\n        });\n        i0.ɵɵelement(15, \"img\", 14);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SubscriberWizardComponent_button_17_Template, 3, 2, \"button\", 15);\n        i0.ɵɵtemplate(18, SubscriberWizardComponent_button_18_Template, 2, 2, \"button\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, SubscriberWizardComponent_div_19_Template, 5, 1, \"div\", 17);\n        i0.ɵɵtemplate(20, SubscriberWizardComponent_div_20_Template, 11, 4, \"div\", 18);\n        i0.ɵɵtemplate(21, SubscriberWizardComponent_div_21_Template, 3, 1, \"div\", 19);\n        i0.ɵɵtemplate(22, SubscriberWizardComponent_div_22_Template, 4, 3, \"div\", 20);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(14, _c1, ctx.searchText));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isError || ctx.addDeviceObj.showModeErrorMsg || ctx.addDeviceObj.showDeviceIDErrorMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[ctx.pageTitle]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.addDeviceObj.addDeviceTab);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.selectedTabIndex === 0)(\"ngClass\", i0.ɵɵpureFunction1(16, _c2, ctx.selectedTabIndex !== 0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Previous, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTabIndex + 1 !== (ctx.addDeviceObj.addDeviceTab == null ? null : ctx.addDeviceObj.addDeviceTab.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTabIndex + 1 === (ctx.addDeviceObj.addDeviceTab == null ? null : ctx.addDeviceObj.addDeviceTab.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.deleteServicesAssociateWithSbscrbrMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bSmbMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.subscriberInfo);\n      }\n    },\n    directives: [i5.RouterLinkWithHref, i5.RouterLinkActive, i10.NgIf, i10.NgForOf, i10.NgClass, i11.DeviceWizardComponent, i12.ServiceWizardComponent, i13.SettingsWizardComponent],\n    styles: [\"#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .stepper-main[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-items:center;flex-direction:column;position:relative}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .stepper[_ngcontent-%COMP%]{width:100%;display:flex;flex:0 0 100%;position:relative}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--1[_ngcontent-%COMP%], #subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--2[_ngcontent-%COMP%], #subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--3[_ngcontent-%COMP%], #subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--4[_ngcontent-%COMP%], #subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--5[_ngcontent-%COMP%]{width:calc(100% / 5);padding:5px 25px;background:#ebeaef!important;color:gray;text-align:center;cursor:pointer!important;border-radius:20px}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .stepper[_ngcontent-%COMP%]   .step[_ngcontent-%COMP%]:first-child{border-top-left-radius:20px;border-bottom-left-radius:20px}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--1[_ngcontent-%COMP%]{z-index:55!important}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--2[_ngcontent-%COMP%]{z-index:44!important;transform:translate(-20px)}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--3[_ngcontent-%COMP%]{z-index:33!important;transform:translate(-40px)}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--4[_ngcontent-%COMP%]{z-index:22!important;transform:translate(-60px)!important}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step--5[_ngcontent-%COMP%]{z-index:11!important;transform:translate(-80px)!important}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step-active[_ngcontent-%COMP%]{background:#0279ff!important;color:#fff!important;z-index:99!important;border-radius:20px!important}#subscriberWizard.subscriber-wizard[_ngcontent-%COMP%]   .step-success[_ngcontent-%COMP%]{background:#82bf00!important;color:#fff!important;z-index:101!important;border-radius:20px!important}.subscriber-wizard[_ngcontent-%COMP%]{position:relative}.close-box[_ngcontent-%COMP%]{font-size:24px;font-weight:300;color:gray}.btn-arrow.btn-grey[_ngcontent-%COMP%]{border:1px solid #CCCCCC!important;background-color:#f8f8fa!important;color:#4c4c4c!important}.stepper-main[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;flex-direction:column;position:relative}.stepper-ui[_ngcontent-%COMP%]{display:flex;list-style:none;margin:0 0 10px;padding:0;overflow:hidden;width:100%}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:0 10px 0 30px;color:#1a1f22;position:relative;height:32px;border-top:1px solid #0279ff;border-bottom:1px solid #0279ff;border-right:0px!important;border-left:0px!important;outline:none!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:relative;z-index:2}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:after{content:\\\"\\\";width:30px;height:100%;background:transparent;position:absolute;top:0;right:-10px;transform:rotate(48deg);z-index:1;border:1px ridge transparent;border-top-color:#0279ff;border-right-color:#0279ff;border-top-right-radius:5px}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]{color:#fff}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:after{background-color:#0279ff!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]{background-color:#82bf00!important;border-color:#82bf00}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:after{background-color:#82bf00!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:disabled{background-color:#82bf00!important;border-color:#82bf00!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:after{border-top-color:#fff!important;border-right-color:#fff!important;border-style:solid}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:after{border-top-color:#0279ff!important;border-right-color:#0279ff!important;border-style:solid}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:first-child   button[_ngcontent-%COMP%]{border-top-left-radius:30px;border-bottom-left-radius:30px}button[_ngcontent-%COMP%]:disabled{background:transparent!important;border-color:#0279ff!important;cursor:not-allowed;color:#4c4c4c}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#f5faff;color:#0279ff}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:after{background-color:#f5faff}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;right:0;top:-1px;width:20px;height:32px;background-color:transparent;border-top:1px solid #0279ff;border-bottom:1px solid #0279ff;z-index:9}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{color:#1a1f22}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:after{background-color:#fff}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:disabled   span[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:disabled   span[_ngcontent-%COMP%]{opacity:.8;color:#fff!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:before, .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:before{display:none}.btn-arr-nxt[_ngcontent-%COMP%]:disabled{background:#0279ff!important;border:1px solid #0279ff!important;cursor:not-allowed;opacity:.5;color:#81bcff}.pos-action-btn[_ngcontent-%COMP%]{position:absolute;right:0px;top:0px}\"]\n  });\n  return SubscriberWizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}