{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport { Subject } from 'rxjs';\nimport * as $ from \"jquery\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../app/shared/services/sso-auth.service\";\nexport let ExosReportService = /*#__PURE__*/(() => {\n  class ExosReportService {\n    constructor(http, auth) {\n      this.http = http;\n      this.auth = auth;\n      this.result$ = new Subject();\n      this.routersCount = 0;\n    }\n    getExosReport(spid) {\n      spid = spid ? spid : window.localStorage.getItem('calix.spid');\n      this.doService = this.http.get(environment.SP_API_BASE_URL + '/report/exos?spid=' + spid).subscribe(jdata => {\n        if (jdata && jdata.subscribers) {\n          var data = jdata.subscribers;\n          var length = data.length;\n          var i, j;\n          var routers = [];\n          var routersLen = 0;\n          var type = '';\n          var installedDate, unInstalledDate;\n          var name, d, ld, email, html;\n          for (i = 0; i < length; i++) {\n            if (!data[i]) {\n              continue;\n            }\n            d = new Date(data[i].created);\n            ld = d.toLocaleString();\n            name = data[i].first_name + ' ' + data[i].last_name;\n            routers = data[i].routers;\n            routersLen = routers.length;\n            for (j = 0; j < routersLen; j++) {\n              type = routers[j].type;\n              if (j == 0) {\n                html += '<tr style=\"text-align: center; vertical-align: middle;\" id=\"' + data[i].email + j + '\"><td rowspan=\"' + routersLen + '\">' + this.Capitalization(name) + '</td><td rowspan=\"' + routersLen + '\">' + data[i].email + '</td><td>' + routers[j].mac_addr + '</td><td>' + routers[j].fsan_serial_number + '</td><td>' + routers[j].model_number + '</td><td>' + routers[j].type + '</td></tr>';\n              } else {\n                html += '<tr style=\"text-align: center; vertical-align: middle;\" id=\"' + data[i].user_id + j + '\"><td>' + routers[j].mac_addr + '</td><td>' + routers[j].fsan_serial_number + '</td><td>' + routers[j].model_number + '</td><td>' + routers[j].type + '</td></tr>';\n              }\n            }\n          }\n          $(\"#DLtoExcel\").show();\n          this.routersCount = jdata.total;\n          var rcHtml = '<span> Number of Subscribers : </span><span> ' + this.routersCount + ' </span>';\n          if (this.routersCount) {\n            $(\"#container_count_div\").html(rcHtml);\n          } else {\n            $(\"#container_count_div\").html(\"\");\n          }\n        } else {\n          $(\"#DLtoExcel\").hide();\n        }\n        $(\"#billing-report-body\").html(html);\n        $(\"#billing-report-table\").show();\n        $(\"#container_count_div\").show();\n        $(\"#billing-report-table\").show();\n        this.result$.next(this.routersCount);\n      }, err => {\n        //console.log(err);\n        this.result$.next({\n          error: true,\n          errorMsg: err.statusText\n        });\n      });\n    }\n    Capitalization(str) {\n      if (typeof str == 'undefined') {\n        return str;\n      }\n      return str.toLowerCase().replace(/\\b./g, function (a) {\n        return a.toUpperCase();\n      });\n    }\n    undoService() {\n      if (this.doService) {\n        this.doService.unsubscribe();\n      }\n    }\n  }\n  ExosReportService.ɵfac = function ExosReportService_Factory(t) {\n    return new (t || ExosReportService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  ExosReportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExosReportService,\n    factory: ExosReportService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExosReportService;\n})();","map":null,"metadata":{},"sourceType":"module"}