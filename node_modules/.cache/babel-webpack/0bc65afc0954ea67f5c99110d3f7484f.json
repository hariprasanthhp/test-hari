{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../assets/language/english.service\";\nimport * as i2 from \"../assets/language/french.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/assets/language/spanish.service\";\nimport * as i5 from \"src/assets/language/german.service\";\nexport let TranslateService = /*#__PURE__*/(() => {\n  class TranslateService {\n    constructor(english, french, activeRoute, spanish, german) {\n      this.english = english;\n      this.french = french;\n      this.activeRoute = activeRoute;\n      this.spanish = spanish;\n      this.german = german;\n      this.selectedLanguage = new Subject();\n      this.languageLocalStorage = sessionStorage.getItem('defaultLanguage');\n      this.fr = {\n        \"emptyTable\": \"Pas de données disponibles dans la table\",\n        \"info\": \"Affichage de _START_ à _END_ des _TOTAL_ entrées\",\n        \"infoEmpty\": \"Affichage de 0 à 0 des 0 entrées\",\n        \"infoFiltered\": \"(filtrées à partir des _MAX_ entrées totales)\",\n        \"infoPostFix\": \"\",\n        \"thousands\": \",\",\n        \"lengthMenu\": \"Affiche _MENU_ entrées\",\n        \"loadingRecords\": \"Chargement...\",\n        \"processing\": \"En traitement...\",\n        \"search\": \"Recherche:\",\n        \"zeroRecords\": \"Aucun enregistrement correspondant trouvé\",\n        \"paginate\": {\n          \"first\": \"Le début\",\n          \"last\": \"Dernière\",\n          \"next\": \"Suivant\",\n          \"previous\": \"Précédent\"\n        }\n      };\n      this.fr2 = {\n        \"Showing\": \"Affichage\",\n        \"to\": \"à\",\n        \"of\": \"de\",\n        \"entries\": \"entrées\",\n        \"paginate\": {\n          \"First\": \"Le début\",\n          \"Last\": \"Dernière\",\n          \"Next\": \"Suivant\",\n          \"Previous\": \"Précédent\"\n        }\n      };\n      this.es = {\n        \"emptyTable\": \"No hay datos disponibles en la tabla\",\n        \"info\": \"Se muestran del _START_ al _END_ de _TOTAL_ resultados\",\n        \"infoEmpty\": \"Se muestran del 0 al 0 de 0 resultados\",\n        \"infoFiltered\": \"(filtrado de un total de _MAX_ entradas)\",\n        \"infoPostFix\": \"\",\n        \"thousands\": \",\",\n        \"lengthMenu\": \"Mostrar _MENU_ resultados\",\n        \"loadingRecords\": \"loadingRecords...\",\n        \"processing\": \"processing...\",\n        \"search\": \"Buscar:\",\n        \"zeroRecords\": \"No se han encontrado registros coincidentes\",\n        \"paginate\": {\n          \"first\": \"Primero\",\n          \"last\": \"Último\",\n          \"next\": \"Siguiente\",\n          \"previous\": \"Anterior\"\n        }\n      };\n      this.en = {\n        \"info\": \"Showing _START_ to _END_ of _TOTAL_ entries\"\n      };\n      this.de_DE = {\n        \"emptyTable\": \"Keine Daten in Tabelle verfügbar\",\n        \"info\": \"Angezeigt _START_ bis _END_ von _TOTAL_ ergebnissen\",\n        \"infoEmpty\": \"Angezeigt 0 bis 0 von 0 ergebnissen\",\n        \"infoFiltered\": \"(gefiltert aus _MAX_ Einträgen)\",\n        \"infoPostFix\": \"\",\n        \"thousands\": \",\",\n        \"lengthMenu\": \"Zeige _MENU_ Ergebnisse\",\n        \"loadingRecords\": \"loadingRecords...\",\n        \"processing\": \"processing...\",\n        \"search\": \"Suche\",\n        \"zeroRecords\": \"Keine passenden Datensätze gefunden\",\n        \"paginate\": {\n          \"first\": \"Erste Seite\",\n          \"last\": \"Letzte\",\n          \"next\": \"Weiter\",\n          \"previous\": \"Zurück\"\n        }\n      };\n      if (this.languageLocalStorage == null || this.languageLocalStorage == 'en') {\n        this.defualtLanguage = this.english.data;\n        // this.ngSelectConfig.notFoundText = this.english.data.noItemsFound;\n        this.selectedLanguage.next(this.english.data);\n      } else if (this.languageLocalStorage == 'fr') {\n        this.defualtLanguage = this.french.data;\n        // this.ngSelectConfig.notFoundText = this.french.data.noItemsFound;\n        this.selectedLanguage.next(this.french.data);\n      } else if (this.languageLocalStorage == 'es') {\n        this.defualtLanguage = this.spanish.data;\n        // this.ngSelectConfig.notFoundText = this.spanish.data.noItemsFound;\n        this.selectedLanguage.next(this.spanish.data);\n      } else if (this.languageLocalStorage == 'de_DE') {\n        this.defualtLanguage = this.german.data;\n        // this.ngSelectConfig.notFoundText = this.german.data.noItemsFound;\n        this.selectedLanguage.next(this.german.data);\n      }\n    }\n    changeLanguage(language, fromLogin) {\n      if (language == 'en') {\n        this.selectedLanguage.next(this.english.data);\n        this.defualtLanguage = this.english.data;\n      } else if (language == 'fr') {\n        this.selectedLanguage.next(this.french.data);\n        this.defualtLanguage = this.french.data;\n      } else if (language == 'es') {\n        this.selectedLanguage.next(this.spanish.data);\n        this.defualtLanguage = this.spanish.data;\n      } else if (language == 'de_DE') {\n        this.defualtLanguage = this.german.data;\n        this.selectedLanguage.next(this.german.data);\n      }\n      sessionStorage.setItem('defaultLanguage', language);\n      let urls = this.activeRoute.url;\n      console.log(urls.split('/')[1]);\n      let modulesToSkipForPendo = ['systemAdministration', 'organization-admin', 'shad'];\n      if (modulesToSkipForPendo.indexOf(urls.split('/')[1]) !== -1) {\n        console.log('need to install pendo api');\n        return;\n      } else {\n        if (fromLogin) {\n          return;\n        }\n        console.log('pendo is installed');\n        this.upDatePendo(language);\n      }\n    }\n    upDatePendo(language) {\n      try {\n        pendo.updateOptions({\n          visitor: {\n            id: localStorage.getItem(\"calix.userId\"),\n            lang: language\n          },\n          account: {\n            id: localStorage.getItem(\"calix.spid\")\n          }\n        });\n      } catch (err) {}\n    }\n    getFRTable() {\n      let fr = {\n        \"emptyTable\": \"Aucune donnée disponible dans le tableau\",\n        \"info\": \"Affichage de _START_ à _END_ des _TOTAL_ entrées\",\n        \"infoEmpty\": \"Affichage de 0 à 0 des 0 entrées\",\n        \"infoFiltered\": \"(filtrées à partir des _MAX_ entrées totales)\",\n        \"infoPostFix\": \"\",\n        \"thousands\": \",\",\n        \"lengthMenu\": \"Afficher les _MENU_ entrées\",\n        \"loadingRecords\": \"Chargement...\",\n        \"processing\": \"En traitement...\",\n        \"search\": \"Chercher:\",\n        \"zeroRecords\": \"Aucun enregistrement correspondant trouvé\",\n        \"paginate\": {\n          \"first\": \"Le début\",\n          \"last\": \"Dernière\",\n          \"next\": \"Suivant\",\n          \"previous\": \"Précédent\"\n        }\n      };\n      return fr;\n    }\n  }\n  TranslateService.ɵfac = function TranslateService_Factory(t) {\n    return new (t || TranslateService)(i0.ɵɵinject(i1.EnglishJSON), i0.ɵɵinject(i2.FrenchJSON), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.Spanish), i0.ɵɵinject(i5.German));\n  };\n  TranslateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TranslateService,\n    factory: TranslateService.ɵfac,\n    providedIn: 'root'\n  });\n  return TranslateService;\n})();","map":null,"metadata":{},"sourceType":"module"}