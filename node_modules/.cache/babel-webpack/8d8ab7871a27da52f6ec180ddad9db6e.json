{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ShortnumberPipe = /*#__PURE__*/(() => {\n  class ShortnumberPipe {\n    transform(number, round = true, tofix) {\n      if (tofix) {} else {\n        tofix = 2;\n      }\n      if (round) {\n        //note : 1e3 == 10pow(3) = 10 * 10 *10 = 1000\n        if (number == 0 || number == undefined) {\n          return 0;\n        } else {\n          if (number >= 0) {\n            if (number < 1e3) return number;\n            if (number >= 1e3 && number < 1e6) return (number / 1e3).toFixed(tofix) + \" K\";\n            if (number >= 1e6 && number < 1e9) return (number / 1e6).toFixed(tofix) + \" M\";\n            if (number >= 1e9 && number < 1e12) return (number / 1e9).toFixed(tofix) + \" G\";\n            if (number >= 1e12 && number < 1e15) return (number / 1e12).toFixed(tofix) + \" T\";\n            if (number >= 1e15 && number < 1e18) return (number / 1e15).toFixed(tofix) + \" P\";\n            if (number >= 1e18 && number < 1e21) return (number / 1e18).toFixed(tofix) + \" E\";\n            if (number >= 1e21 && number < 1e24) return (number / 1e21).toFixed(tofix) + \" Z\";\n            if (number >= 1e24) return (number / 1e24).toFixed(tofix) + \" Y\";\n          } else {\n            if (number > -1e3) return number;\n            if (number <= -1e3 && number > -1e6) return (number / 1e3).toFixed(tofix) + \" K\";\n            if (number <= -1e6 && number > -1e9) return (number / 1e6).toFixed(tofix) + \" M\";\n            if (number <= -1e9 && number > -1e12) return (number / 1e9).toFixed(tofix) + \" G\";\n            if (number <= -1e12 && number > -1e15) return (number / 1e12).toFixed(tofix) + \" T\";\n            if (number <= -1e15 && number > -1e18) return (number / 1e15).toFixed(tofix) + \" P\";\n            if (number <= -1e18 && number > -1e21) return (number / 1e18).toFixed(tofix) + \" E\";\n            if (number <= -1e21 && number > -1e24) return (number / 1e21).toFixed(tofix) + \" Z\";\n            if (number <= -1e24) return (number / 1e24).toFixed(tofix) + \" Y\";\n          }\n        }\n      } else {\n        if (number == 0 || number == undefined) {\n          return 0;\n        }\n        if (number >= 0) {\n          if (number < 1e3) return number;\n          if (number >= 1e3 && number < 1e6) return number / 1e3 + \" K\";\n          if (number >= 1e6 && number < 1e9) return number / 1e6 + \" M\";\n          if (number >= 1e9 && number < 1e12) return number / 1e9 + \" G\";\n          if (number >= 1e12 && number < 1e15) return number / 1e12 + \" T\";\n          if (number >= 1e15 && number < 1e18) return number / 1e15 + \" P\";\n          if (number >= 1e18 && number < 1e21) return number / 1e18 + \" E\";\n          if (number >= 1e21 && number < 1e24) return number / 1e21 + \" Z\";\n          if (number >= 1e24) return number / 1e24 + \" Y\";\n        } else {\n          if (number > -1e3) return number;\n          if (number <= -1e3 && number > -1e6) return number / 1e3 + \" K\";\n          if (number <= -1e6 && number > -1e9) return number / 1e6 + \" M\";\n          if (number <= -1e9 && number > -1e12) return number / 1e9 + \" G\";\n          if (number <= -1e12 && number > -1e15) return number / 1e12 + \" T\";\n          if (number <= -1e15 && number > -1e18) return number / 1e15 + \" P\";\n          if (number <= -1e18 && number > -1e21) return number / 1e18 + \" E\";\n          if (number <= -1e21 && number > -1e24) return number / 1e21 + \" Z\";\n          if (number <= -1e24) return number / 1e24 + \" Y\";\n        }\n      }\n    }\n  }\n  ShortnumberPipe.ɵfac = function ShortnumberPipe_Factory(t) {\n    return new (t || ShortnumberPipe)();\n  };\n  ShortnumberPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"shortnumber\",\n    type: ShortnumberPipe,\n    pure: true\n  });\n  return ShortnumberPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}