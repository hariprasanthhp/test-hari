{"ast":null,"code":"import { DatePipe, TitleCasePipe } from '@angular/common';\nimport { of, forkJoin, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../../../service/issue.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/app/sys-admin/services/common.service\";\nimport * as i6 from \"src/app/shared/services/export-excel.service\";\nimport * as i7 from \"../../../historyreport/service/history-chart-options.service\";\nimport * as i8 from \"src/app/shared/services/sso-auth.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../../../alarms-shared/alarm-details/alarm-details.component\";\nfunction CommonAlarmsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"span\", 14);\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r0.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction CommonAlarmsComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.export();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.language.Export);\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.language[\"Subscriber Impact\"]);\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const issue_r10 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.gotoSubscriberImpactedPage(issue_r10);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const issue_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(issue_r10 == null ? null : issue_r10.subject == null ? null : issue_r10.subject.impactedSubsCount);\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      const issue_r10 = ctx_r20.$implicit;\n      const i_r11 = ctx_r20.index;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵelementStart(1, \"span\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const issue_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", (issue_r10 == null ? null : issue_r10.subject == null ? null : issue_r10.subject.serviceAffecting) ? \"subscriber-impact-red\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (issue_r10 == null ? null : issue_r10.subject == null ? null : issue_r10.subject.serviceAffecting) ? \"Yes\" : \"No\", \" \");\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_tr_18_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_1_Template, 2, 1, \"div\", 31);\n    i0.ɵɵtemplate(2, CommonAlarmsComponent_ng_container_9_tr_18_td_13_div_2_Template, 3, 2, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const issue_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", issue_r10 == null ? null : issue_r10.subject == null ? null : issue_r10.subject.impactedSubsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(issue_r10 == null ? null : issue_r10.subject == null ? null : issue_r10.subject.impactedSubsCount));\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelement(3, \"span\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵelement(12, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CommonAlarmsComponent_ng_container_9_tr_18_td_13_Template, 3, 2, \"td\", 8);\n    i0.ɵɵelementStart(14, \"td\", 27);\n    i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_ng_container_9_tr_18_Template_td_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const issue_r10 = restoredCtx.$implicit;\n      const i_r11 = restoredCtx.index;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.viewDetails(issue_r10, i_r11);\n    });\n    i0.ɵɵelementStart(15, \"div\", 30);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const issue_r10 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(issue_r10[\"subject\"] && issue_r10[\"subject\"].perceivedSeverity && ctx_r8.colorClass[issue_r10[\"subject\"].perceivedSeverity] ? ctx_r8.colorClass[issue_r10[\"subject\"].perceivedSeverity] : \"black clear-sev-but\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", issue_r10[\"subject\"] ? ctx_r8.language[issue_r10[\"subject\"].perceivedSeverity] || issue_r10[\"subject\"].perceivedSeverity : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", issue_r10[\"subject\"] && issue_r10[\"subject\"][\"timeRaised\"] ? ctx_r8.convertToDateTime(issue_r10[\"subject\"][\"timeRaised\"]) : \"\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", issue_r10[\"time\"] ? ctx_r8.convertToDateTime(issue_r10[\"time\"]) : \"\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", issue_r10[\"subject\"] ? issue_r10[\"subject\"][\"alarmEventName\"] : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHtml\", issue_r10[\"subject\"][\"resourceForUI\"] ? issue_r10[\"subject\"][\"resourceForUI\"] : \"\", i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.connected);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(issue_r10[\"subject\"] ? issue_r10[\"subject\"].repairAction : \"\");\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"No data available in table\"]);\n  }\n}\nfunction CommonAlarmsComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\", 19);\n    i0.ɵɵelementStart(2, \"thead\", 20);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 21);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 22);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, CommonAlarmsComponent_ng_container_9_th_14_Template, 2, 1, \"th\", 23);\n    i0.ɵɵelementStart(15, \"th\", 24);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, CommonAlarmsComponent_ng_container_9_tr_18_Template, 17, 10, \"tr\", 25);\n    i0.ɵɵtemplate(19, CommonAlarmsComponent_ng_container_9_tr_19_Template, 3, 1, \"tr\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language.Severity, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r2.language[\"Reported Time\"], \"(UTC/\", ctx_r2.timeZone, \") \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r2.language[\"Synced Time\"], \" (UTC/\", ctx_r2.timeZone, \") \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language[\"Alarm Name\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Resource);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.connected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Recommendation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.list);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r2.list == null ? null : ctx_r2.list.length));\n  }\n}\nexport let CommonAlarmsComponent = /*#__PURE__*/(() => {\n  class CommonAlarmsComponent {\n    constructor(translateService, issueService, http, route, commonOrgService, exportExcelService, chartOptionService, router, sso) {\n      this.translateService = translateService;\n      this.issueService = issueService;\n      this.http = http;\n      this.route = route;\n      this.commonOrgService = commonOrgService;\n      this.exportExcelService = exportExcelService;\n      this.chartOptionService = chartOptionService;\n      this.router = router;\n      this.sso = sso;\n      this.hasWriteAccess = false;\n      this.transformedAlarms = ['multiple-onts-down-network', 'multiple-onts-down-pon', 'multiple-onts-down-olt'];\n      //@Input() apiUrl: any;\n      this.urls = this.router.url;\n      this._apiUrl = '';\n      this.baseUrl = `${environment.API_BASE_URL}analytics-engine/`;\n      this.list = [];\n      this.hasScopeAccess = false;\n      this.count = 0;\n      this.loading = true;\n      this.locked = false;\n      this.colors = {\n        MINOR: '#F3B426',\n        MAJOR: '#FC7235',\n        CRITICAL: '#C70000',\n        WARNING: \"#f7e9c1\",\n        INFO: \"#7cb5ec\"\n      };\n      this.colorClass = {\n        MINOR: 'minor-but',\n        MAJOR: 'major-but',\n        CRITICAL: 'critical-but',\n        WARNING: \"warning-but\",\n        INFO: \"severity-info-but\"\n      };\n      this.isDev = false;\n      this.severity = {\n        MINOR: 'assets/img/outline-error-minor.svg',\n        MAJOR: 'assets/img/outline-error-major.svg',\n        CRITICAL: 'assets/img/outline-error-red.svg',\n        WARNING: \"assets/img/outline-error-warning.svg\",\n        INFO: \"assets/img/outline-error-info.svg\"\n      };\n      this.interval = 15 * 1000;\n      this.filtersObj = {\n        'region': 'Region',\n        'location': 'Location',\n        'system': 'System',\n        'alarmCount': 'Display Limit',\n        'alarmEventName': 'Exclude Alarms',\n        'limit': 'Display Limit',\n        'fsan_serialno': 'FSAN',\n        'device_type': 'System Type'\n      };\n      this.filtersValue = ['region', 'location', 'system', 'alarmCount', 'limit'];\n      this.filters = ['region', 'location', 'system', 'fsan_serialno', 'device_type', 'alarmEventName', 'alarmCount', 'limit'];\n      this.appliedParams = {};\n      this.tableType = 'Table';\n      // totalGeoIssues: number = 0;\n      this.refreshMap = new Subject();\n      this.showAllSystemsinMapSubject = new Subject();\n      this.showAllSystemsinMap = true;\n      this.showAckShelveBtn = false;\n      this.fullData = {};\n      this.hideSource = false;\n      let base = `${environment.API_BASE}`;\n      if (base.indexOf('/dev.api.calix.ai') > -1) {\n        // || host.indexOf('localhost') > -1\n        this.isDev = true;\n      } else this.isDev = false;\n    }\n    get apiUrl() {\n      return this._apiUrl;\n    }\n    set apiUrl(apiUrl) {\n      var _a;\n      (_a = this.listObs) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      this._apiUrl = apiUrl;\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d;\n      console.log(`page loaded at ${new Date()}`);\n      let scopes = this.sso.getScopes();\n      const alertScopes = this.issueService.getAlertScopes();\n      if (((_b = scopes === null || scopes === void 0 ? void 0 : scopes[(_a = alertScopes === null || alertScopes === void 0 ? void 0 : alertScopes[this.issueService.getAlertType()]) === null || _a === void 0 ? void 0 : _a.realtime]) === null || _b === void 0 ? void 0 : _b.indexOf('write')) !== -1) {\n        this.hasWriteAccess = true;\n      }\n      this.timeZone = (_d = (_c = new Date().toString()) === null || _c === void 0 ? void 0 : _c.split(\" \")[5]) === null || _d === void 0 ? void 0 : _d.replace(/(.{2})$/, ':$1');\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.filterSubscription = this.issueService.issuesFilterChanged$.subscribe(value => {\n        console.log('received value');\n        if (this.tableType != 'Map') {\n          this.loadIntialData();\n        }\n      });\n      this.timer = setInterval(() => {\n        console.log(`timer triggered at ${new Date()}`);\n        this.loadIntialData();\n      }, this.interval);\n      if (this.issueService.getAlertType() === 'CONNECTIVITY') {\n        this.loadIntialData();\n      }\n    }\n    viewDetails(item, index) {\n      this.hideSource = false;\n      this.index = index;\n      this.showAckShelveBtn = true;\n      this.fullData = item;\n    }\n    loadIntialData() {\n      console.log(`api triggered at ${new Date()}`);\n      if (this.locked) {\n        return;\n      }\n      if (this.listObs) {\n        this.listObs.unsubscribe();\n      }\n      this.locked = true;\n      let params = Object.assign(Object.assign({}, this.issueService.getAppliedFilters()), {\n        alertType: this.issueService.getAlertType()\n      });\n      if (this.connected) {\n        if (!params['alarmCount']) {\n          params['alarmCount'] = 20;\n        }\n      } else {\n        if (!params['limit']) {\n          params['limit'] = 20;\n        }\n      }\n      let query = \"\";\n      for (var key in params) {\n        if (params[key] == undefined || key === 'systemStatus' || params[key] == '') {\n          continue;\n        }\n        if (this.connected && key === 'limit') {\n          continue;\n        } else if (!this.connected && (key === 'historyReport' || key === 'severity' || key === 'alarmCount' || key === 'alarmEventName')) {\n          continue;\n        }\n        if (query != \"\") {\n          query += \"&\";\n        }\n        query += key + \"=\" + encodeURIComponent(params[key]);\n      }\n      query += `&cco_ack=false&cco_shelv=false&historyReport=false`;\n      this.appliedParams = params;\n      this.issueService.setAppliedFilters(params);\n      const requests = {};\n      let types = ['top'];\n      let obj = {\n        top: `${this.apiUrl}`\n      };\n      if (query) {\n        obj['top'] = `${this.apiUrl}?${query}`;\n      }\n      if (!query) {\n        obj['top'] = `${this.apiUrl}?alarmCount=10`;\n      }\n      types.forEach(type => {\n        const req = this.http.get(`${obj[type]}`).pipe(catchError(err => {\n          err['api-error'] = true;\n          return of(err);\n        }));\n        requests[type] = req;\n      });\n      this.listObs = forkJoin(requests).subscribe(resp => {\n        if (resp['top'] === null || !resp['top']) {\n          this.loading = false;\n          this.locked = false;\n          this.list = [];\n          return;\n        }\n        if (resp['top'] && resp['top']['api-error']) {\n          this.pageErrorHandle(resp['top']);\n          this.loading = false;\n          this.list = [];\n          return;\n        }\n        if (resp && typeof resp['top'] === 'object' && !resp['top']) {\n          this.locked = false;\n        } else if (resp && resp['top'] && !resp['top']['api-error']) {\n          this.locked = false;\n        }\n        if (!this.connected) {\n          resp['top']['alarms'] = resp['top'];\n        }\n        this.loading = false;\n        this.count = 0;\n        let data = [];\n        if (resp && resp['top'] && resp['top']['alarms'] && resp['top']['alarms'].length || resp['top']['nfaAlarm'] && resp['top']['nfaAlarm'].length) {\n          this.count = Number(resp['top'].alarmCount) + Number(resp['top'].disconnectDeviceCount);\n          // this.count = resp['top'].alarmCount + resp['top'].disconnectDeviceCount;\n          let alarms = [];\n          // console.log(params['systemStatus'])\n          // if (params['systemStatus'] === 'disconnected') {\n          //   alarms = resp['top'].nfaAlarm;\n          // } else {\n          //   alarms = resp['top'].alarms;\n          // }\n          alarms = resp['top'].alarms;\n          alarms === null || alarms === void 0 ? void 0 : alarms.forEach(element => {\n            if (element && element['subject'] && element['subject']['deviceName']) {\n              element['subject']['deviceName'] = element['subject']['deviceName'].replace('device=', '');\n              element['subject']['deviceName'] = element['subject']['deviceName'].replace('DEVICE=', '');\n            }\n            element['subject']['resourceForUI'] = this.issueService.generateResourceForUI(element, element.type === 'EXA' ? true : false);\n            data.push(element);\n          });\n        }\n        this.list = data;\n      }, err => {\n        this.count = 0;\n        this.pageErrorHandle(err);\n      });\n    }\n    convertToDateTime(dateTime) {\n      if (!dateTime) {\n        return;\n      }\n      dateTime = Number(dateTime);\n      let pipe = new DatePipe('en-US');\n      return pipe.transform(new Date(dateTime), 'short');\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.error = true;\n      this.loading = false;\n    }\n    closeAlert() {\n      this.error = false;\n    }\n    export() {\n      var _a, _b;\n      let data = [];\n      let subTitle, title;\n      const obj = {\n        SYSTEM: 'System',\n        TRANSFORMED: 'Transformed',\n        HEALTH: 'Health',\n        CONNECTIVITY: 'Connectivity'\n      };\n      title = `${obj[this.issueService.getAlertType()]} Top Alarms`;\n      (_a = this.list) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n        let expObj = {\n          'Severity': `${element['subject'] && element['subject']['perceivedSeverity'] ? element['subject']['perceivedSeverity'] : ''}`,\n          'Reported Time': `${element['subject'] && element['subject']['timeRaised'] ? this.convertToDateTime(element['subject']['timeRaised']) : ''}`,\n          'Synced Time': `${element['time'] ? this.convertToDateTime(element['time']) : ''}`,\n          'Alarm Name': `${element['subject'] && element['subject']['alarmEventName'] ? element['subject']['alarmEventName'] : ''}`,\n          'Resource': `${element['subject'] && element['subject']['region'] ? element['subject']['region'] : ''}${element['subject'] && element['subject']['location'] ? `/${element['subject']['location']}` : ''}${element['subject'] && element['subject']['deviceName'] ? `/${element['subject']['deviceName']}` : ''}, ${element['subject'] && element['subject']['source'] ? element['subject']['source'] : ''} `,\n          'Region': `${element['subject'] && element['subject']['region'] ? element['subject']['region'] : ''}`,\n          'Location': `${element['subject'] && element['subject']['location'] ? `${element['subject']['location']}` : ''}`,\n          'System': `${element['subject'] && element['subject']['deviceName'] ? `${element['subject']['deviceName']}` : ''}`,\n          'AID': `${element['subject'] && element['subject']['source'] ? element['subject']['source'] : ''}`\n        };\n        if (this.connected) {\n          expObj['Subscriber Impact'] = `${element['subject'] && element['subject']['serviceAffecting'] ? element['subject']['impactedSubsCount'] ? element['subject']['impactedSubsCount'] : 'Yes' : 'No'}`;\n        }\n        expObj['Recommendation'] = `${element['subject'] && element['subject']['repairAction'] ? element['subject']['repairAction'] : ''}`;\n        data.push(expObj);\n      });\n      subTitle = `${title} \\r\\n${this.getSubTitle(this.appliedParams)}\\r\\n`;\n      // if (this.urls.includes('/cco/issues/device/realtime/current-issues')) {\n      //   subTitle = `${title} \\r\\n${this.getSubTitle(this.appliedParams)}\\r\\n`;\n      // } else if (this.urls.includes('/cco/issues/cloud-health/realtime/current-issues')) {\n      //   subTitle = `${title} \\r\\n${this.getSubTitleForAlarms(this.appliedParams)}\\r\\n`;\n      // } else if (this.urls.includes('/cco/issues/connectivity/realtime/current-issues')) {\n      //   subTitle = `${title} \\r\\n${this.getSubTitleForAlarms(this.appliedParams)}\\r\\n`;\n      // }\n      if (!((_b = this.list) === null || _b === void 0 ? void 0 : _b.length)) {\n        subTitle += `No data available`;\n      }\n      this.exportExcelService.downLoadCSV(title, data, subTitle);\n    }\n    getSubTitle(params) {\n      var _a;\n      let regions = this.chartOptionService.getRegionsObj();\n      let locations = this.chartOptionService.getLocationsObj();\n      let systems = this.chartOptionService.getSystemsObj();\n      let titlepipe = new TitleCasePipe();\n      let subTitle = '';\n      let deviceTypes = {\n        ALL: 'All',\n        ONT: 'ONT',\n        OLT: 'OLT'\n      };\n      (_a = this.filters) === null || _a === void 0 ? void 0 : _a.forEach((element, index) => {\n        if (this.connected && element === 'limit') {\n          return;\n        } else if (!this.connected && (element === 'historyReport' || element === 'severity' || element === 'alarmCount')) {\n          return;\n        }\n        if (params[element]) {\n          let name = [];\n          if (element === 'device_type') {\n            name = deviceTypes[params[element]];\n          } else if (element === 'region') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = regions[params[element][i]] ? regions[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = regions[params[element]] ? regions[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else if (element === 'location') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = locations[params[element][i]] ? locations[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = locations[params[element]] ? locations[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else if (element === 'system') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = systems[params[element][i]] ? systems[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = systems[params[element]] ? systems[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else {\n            name = params[element];\n          }\n          let skipAttribites = ['fsan_serialnumber', 'region', 'location', 'system', 'customCategory', 'alarmEventName', 'category', 'fsan_serialno'];\n          if (typeof name === 'object' && skipAttribites.indexOf(element) === -1) {\n            name = name.map(x => titlepipe.transform(x));\n          } else {\n            name = [name];\n          }\n          subTitle += `${this.filtersObj[element]}: ${name.join('&')} \\r\\n`;\n        }\n      });\n      return subTitle;\n    }\n    getSubTitleForAlarms(params) {\n      var _a;\n      let regions = this.chartOptionService.getRegionsObj();\n      let locations = this.chartOptionService.getLocationsObj();\n      let systems = this.chartOptionService.getSystemsObj();\n      let titlepipe = new TitleCasePipe();\n      let subTitle = '';\n      (_a = this.filtersValue) === null || _a === void 0 ? void 0 : _a.forEach((element, index) => {\n        if (this.connected && element === 'limit') {\n          return;\n        } else if (!this.connected && (element === 'historyReport' || element === 'severity' || element === 'alarmCount')) {\n          return;\n        }\n        if (params[element]) {\n          let name = [];\n          if (element === 'region') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = regions[params[element][i]] ? regions[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = regions[params[element]] ? regions[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else if (element === 'location') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = locations[params[element][i]] ? locations[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = locations[params[element]] ? locations[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else if (element === 'system') {\n            if (typeof params[element] === 'object') {\n              params[element].forEach((e, i) => {\n                let pointName = systems[params[element][i]] ? systems[params[element][i]].name : params[element][i];\n                name.push(pointName);\n              });\n            } else {\n              let pointName = systems[params[element]] ? systems[params[element]].name : params[element];\n              name.push(pointName);\n            }\n          } else {\n            name = params[element];\n          }\n          let skipAttribites = ['region', 'location', 'system'];\n          if (typeof name === 'object' && skipAttribites.indexOf(element) === -1) {\n            name = name.map(x => titlepipe.transform(x));\n          } else {\n            name = [name];\n          }\n          subTitle += `${this.filtersObj[element]}: ${name.join('&')} \\r\\n`;\n        }\n      });\n      return subTitle;\n    }\n    // clickView(type) {\n    //   this.tableType = type;\n    //   if (type == 'Map') {\n    //     this.issueService.fromMapNavigation(true);\n    //     this.issueService.setGeoMapFilters(true);\n    //   } else {\n    //     this.issueService.fromMapNavigation(false);\n    //     this.issueService.setGeoMapFilters(false);\n    //   }\n    // }\n    // geoMapIssues(issues){\n    //   this.totalGeoIssues = issues;\n    // }\n    refreshIssuesGeoMap() {\n      this.refreshMap.next(true);\n    }\n    gotoSubscriberImpactedPage(issue) {\n      var _a;\n      issue.redirectUrl = `/cco/alerts/${(_a = this.issueService.getAlertType()) === null || _a === void 0 ? void 0 : _a.toLowerCase()}/realtime/current-issues`;\n      localStorage.setItem('calix.impactedSubsFSANData', JSON.stringify(issue));\n      this.router.navigate(['/cco/system/subscribers-impact']);\n    }\n    ngOnDestroy() {\n      var _a;\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.refreshMap) {\n        this.refreshMap.unsubscribe();\n      }\n      if (this.showAllSystemsinMapSubject) {\n        this.showAllSystemsinMapSubject.unsubscribe();\n      }\n      if (this.geoMapfilterSubscription) {\n        this.geoMapfilterSubscription.unsubscribe();\n      }\n      (_a = this.filterSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      clearInterval(this.timer);\n    }\n    changeshowAllSystems() {\n      this.showAllSystemsinMap = !this.showAllSystemsinMap;\n      this.showAllSystemsinMapSubject.next(this.showAllSystemsinMap);\n    }\n    updateShowHealthySystemToggle(event) {\n      this.showAllSystemsinMap = event;\n      this.showAllSystemsinMapSubject.next(this.showAllSystemsinMap);\n    }\n    onAckShelve(data) {\n      var _a, _b, _c, _d;\n      if (typeof (data === null || data === void 0 ? void 0 : data.ack) !== 'undefined') {\n        if ((_a = this.list[this.index]) === null || _a === void 0 ? void 0 : _a.subject) {\n          this.list[this.index].subject.ccoAck = data === null || data === void 0 ? void 0 : data.ack;\n          if (data === null || data === void 0 ? void 0 : data.ack) {\n            (_b = this.list) === null || _b === void 0 ? void 0 : _b.splice(this.index, 1);\n          }\n        }\n      } else if (typeof (data === null || data === void 0 ? void 0 : data.shelve) !== 'undefined') {\n        if ((_c = this.list[this.index]) === null || _c === void 0 ? void 0 : _c.subject) {\n          this.list[this.index].subject.ccoShelved = data === null || data === void 0 ? void 0 : data.shelve;\n          if (data === null || data === void 0 ? void 0 : data.shelve) {\n            (_d = this.list) === null || _d === void 0 ? void 0 : _d.splice(this.index, 1);\n          }\n        }\n      }\n    }\n    onRefreshAckShelve(value) {\n      this.showAckShelveBtn = false;\n    }\n    gotoHomeGeomap() {\n      this.issueService.gotoHomeGeomap();\n    }\n  }\n  CommonAlarmsComponent.ɵfac = function CommonAlarmsComponent_Factory(t) {\n    return new (t || CommonAlarmsComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.IssueService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.CommonService), i0.ɵɵdirectiveInject(i6.ExportExcelService), i0.ɵɵdirectiveInject(i7.HistoryChartOptionsService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i8.SsoAuthService));\n  };\n  CommonAlarmsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommonAlarmsComponent,\n    selectors: [[\"app-common-alarms\"]],\n    inputs: {\n      apiUrl: \"apiUrl\",\n      connected: \"connected\"\n    },\n    decls: 14,\n    vars: 11,\n    consts: [[\"class\", \"w-100 alert alert-danger fade show my-3\", 4, \"ngIf\"], [1, \"row\", \"justify-content-end\", \"mb-3\"], [1, \"col-md-6\"], [1, \"d-flex\", \"justify-content-end\"], [\"id\", \"issues-real-time-export\", \"class\", \"btn-default btn-dft h-24-btn\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"issues-real-time-export\", 1, \"btn-default\", \"btn-dft\", \"h-24-btn\", \"ml-2\", 3, \"click\"], [1, \"d-flex\", \"w-100\", \"justify-content-end\", \"my-2\"], [1, \"col-sm-12\", \"col-md-12\", \"p-0\"], [4, \"ngIf\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myLargeModalLabel\", \"aria-hidden\", \"true\", \"data-backdrop\", \"static\", \"data-keyboard\", \"false\", 1, \"modal\", \"fade\", \"bd-example-modal-lg\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\", \"p-0\"], [3, \"fullData\", \"showAckShelveBtn\", \"hasWriteAccess\", \"hideSource\", \"connected\", \"clickedAlarmType\", \"alarmType\", \"ackShelveData\", \"refreshAckShelveBtn\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [\"id\", \"issues-real-time-export\", 1, \"btn-default\", \"btn-dft\", \"h-24-btn\", 3, \"click\"], [1, \"table\", \"table-borderless\", \"table-striped\", \"tbl-border-bottom\"], [1, \"border-bottom\"], [1, \"sorting-th-custom\"], [1, \"col-resource\"], [\"class\", \"max-w-90 w-75px\", \"id\", \"pendo_subscriber_impact\", 4, \"ngIf\"], [1, \"col-recom\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"pendo_subscriber_impact\", 1, \"max-w-90\", \"w-75px\"], [\"data-toggle\", \"modal\", \"data-target\", \".bd-example-modal-lg\", 1, \"pointer\", 3, \"click\"], [1, \"dot\"], [1, \"col-res-data\", \"subj-text\", 3, \"innerHtml\"], [1, \"subj-text\"], [\"class\", \"action-info-u primary p-blue pointer\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"pointer\", \"data-toggle\", \"modal\", \"data-target\", \".bd-example-modal-lg\", 3, \"click\", 4, \"ngIf\"], [1, \"action-info-u\", \"primary\", \"p-blue\", \"pointer\", 3, \"click\"], [3, \"ngClass\"], [\"colspan\", \"7\", 1, \"no-data-available\"]],\n    template: function CommonAlarmsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CommonAlarmsComponent_div_0_Template, 6, 1, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, CommonAlarmsComponent_button_4_Template, 2, 1, \"button\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CommonAlarmsComponent_Template_button_click_5_listener() {\n          return ctx.gotoHomeGeomap();\n        });\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, CommonAlarmsComponent_ng_container_9_Template, 20, 11, \"ng-container\", 8);\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelementStart(13, \"app-alarm-details\", 12);\n        i0.ɵɵlistener(\"ackShelveData\", function CommonAlarmsComponent_Template_app_alarm_details_ackShelveData_13_listener($event) {\n          return ctx.onAckShelve($event);\n        })(\"refreshAckShelveBtn\", function CommonAlarmsComponent_Template_app_alarm_details_refreshAckShelveBtn_13_listener($event) {\n          return ctx.onRefreshAckShelve($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.tableType == \"Table\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language[\"Map_View\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.tableType == \"Table\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"fullData\", ctx.fullData)(\"showAckShelveBtn\", ctx.showAckShelveBtn)(\"hasWriteAccess\", ctx.hasWriteAccess)(\"hideSource\", ctx.hideSource)(\"connected\", ctx.connected)(\"clickedAlarmType\", \"Alarm\")(\"alarmType\", \"Alarm\");\n      }\n    },\n    directives: [i9.NgIf, i10.AlarmDetailsComponent, i9.NgForOf, i9.NgClass],\n    styles: [\".btn-action-view[_ngcontent-%COMP%]{border-right:0}.btn-action-view[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:3px 20px;background:#fff;color:#0279ff;line-height:16px;height:24px;font-size:14px;box-shadow:none;border:1px solid #0279ff}.btn-action-view[_ngcontent-%COMP%]   .btn-active[_ngcontent-%COMP%]{background:#0279ff;color:#fff}.btn-std[_ngcontent-%COMP%]{border-radius:12px 0 0 12px}.btn-comp[_ngcontent-%COMP%]{border-radius:0 12px 12px 0}.count-label[_ngcontent-%COMP%]{background:#f8f8fa;border-radius:29px;font-size:14px;padding:0 13px;min-width:131px;min-height:24px;margin-bottom:0;line-height:24px}.btn-refresh[_ngcontent-%COMP%]{border:none;background:none;outline:none;padding:0}.h-24-btn[_ngcontent-%COMP%]{height:24px;line-height:16px!important;padding:3px 20px!important;font-size:14px}.modal.fade[_ngcontent-%COMP%]   .modal-dialog[_ngcontent-%COMP%]{border-radius:26px;max-width:67.68%!important}.col-recom[_ngcontent-%COMP%]   .subj-text[_ngcontent-%COMP%]{max-height:230px;overflow-y:auto}.white-space-preline[_ngcontent-%COMP%]{white-space:pre-line}.source-overflow-auto[_ngcontent-%COMP%]{max-height:275px;overflow-y:auto}.w-75px[_ngcontent-%COMP%]{width:75px!important}.maxh-overflow-auto[_ngcontent-%COMP%]{max-height:250px;overflow:auto}.c-auto[_ngcontent-%COMP%]{cursor:auto!important}.tbl-border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #cccccc}.subscriber-impact-red[_ngcontent-%COMP%]{color:#c70000}\"]\n  });\n  return CommonAlarmsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}