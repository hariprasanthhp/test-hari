{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject, forkJoin, of } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as $ from 'jquery';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../../performance-testing.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/sys-admin/services/common.service\";\nimport * as i5 from \"../../../../../../shared/services/sso-auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../../../../shared/directives/trim-space.directive\";\nimport * as i9 from \"angular-datatables\";\nconst _c0 = [\"device_input\"];\nfunction DevicesWizardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"span\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction DevicesWizardComponent_div_1_div_1_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.language[d_r14] || d_r14);\n  }\n}\nfunction DevicesWizardComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"span\", 34);\n    i0.ɵɵelement(2, \"img\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_div_1_div_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r12 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.closeAlert(i_r12);\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 37);\n    i0.ɵɵelementStart(6, \"h5\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ul\", 38);\n    i0.ɵɵtemplate(9, DevicesWizardComponent_div_1_div_1_li_9_Template, 2, 1, \"li\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const errorInfo_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r10.language[errorInfo_r11.title] || errorInfo_r11.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", errorInfo_r11.body);\n  }\n}\nfunction DevicesWizardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DevicesWizardComponent_div_1_div_1_Template, 10, 2, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.errors);\n  }\n}\nfunction DevicesWizardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.closeAlert();\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.successInfo, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Ok, \" \");\n  }\n}\nfunction DevicesWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"span\", 34);\n    i0.ɵɵelement(2, \"img\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 44);\n    i0.ɵɵelementStart(6, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_div_6_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.doDeleteDevieSN();\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_div_6_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.cancelDelete();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r3.language.Delete_Confimation, \" \\\"\", ctx_r3.deviceSN, \"\\\" ?\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.language.Cancel, \" \");\n  }\n}\nfunction DevicesWizardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"span\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Loading);\n  }\n}\nfunction DevicesWizardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 48);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_div_16_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const i_r23 = restoredCtx.index;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.removeData(i_r23);\n    });\n    i0.ɵɵelement(3, \"i\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r22, \" \");\n  }\n}\nfunction DevicesWizardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵelementStart(1, \"p\", 51);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.language.Device_Serial_No_Validation, \" \");\n  }\n}\nfunction DevicesWizardComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 52);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"div\", 53);\n    i0.ɵɵelementStart(5, \"a\", 54);\n    i0.ɵɵlistener(\"click\", function DevicesWizardComponent_tr_34_Template_a_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const item_r26 = restoredCtx.$implicit;\n      const i_r27 = restoredCtx.index;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.deleteDevice(item_r26, i_r27);\n    });\n    i0.ɵɵelement(6, \"i\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r26 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"id\", item_r26._id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r26, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r8.language.Delete);\n  }\n}\nfunction DevicesWizardComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 56);\n    i0.ɵɵelementStart(2, \"div\", 57);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language[\"No data available in table\"], \" \");\n  }\n}\nexport let DevicesWizardComponent = /*#__PURE__*/(() => {\n  class DevicesWizardComponent {\n    constructor(translateService, performanceService, router, commonOrgService, sso, cd) {\n      this.translateService = translateService;\n      this.performanceService = performanceService;\n      this.router = router;\n      this.commonOrgService = commonOrgService;\n      this.sso = sso;\n      this.cd = cd;\n      this.errorInfo = '';\n      this.successInfo = '';\n      this.loading = false;\n      this.tableRenderedOnce = false;\n      this.tableOptions = {\n        searching: false,\n        lengthChange: false,\n        paging: false,\n        info: false,\n        drawCallback: settings => {\n          this.tableRenderedOnce = true;\n        }\n      };\n      this.saveClicked = false;\n      this.formError = false;\n      this.deviceData = [];\n      this.devicesAdded = [];\n      this.outputdata = new EventEmitter();\n      this.activeTab = new EventEmitter();\n      this.dataAvailable = false;\n      this.dtOptions = {};\n      this.dtTrigger = new Subject();\n      this.isRerender = false;\n      this.protocols = [];\n      this.selectData = [];\n      this.intialPaste = true;\n      // Add Devices\n      this.errors = [];\n      this.btnDisabled = false;\n      this.deviceSN = '';\n      this.inputBoxData = '';\n      $('body').on('paste', '#device_input', event => {\n        return;\n        let items = [];\n        let inp = '';\n        if (this.intialPaste) {\n          this.deviceData = [];\n        }\n        this.intialPaste = false;\n        let deviceData = this.deviceData;\n        if (deviceData && deviceData.length) {\n          deviceData.forEach(element => {\n            if (this.devicesAdded.indexOf(element.trim()) === -1) {\n              items.push(element.trim());\n            }\n          });\n        } else {\n          this.deviceData = [];\n        }\n        //return;\n        // let ele = document.getElementById(\"device_input\") as HTMLElement;\n        // ele.click();\n        let delemiter = ' ';\n        let clipboardData = event.clipboardData || event.originalEvent.clipboardData;\n        let newTags = clipboardData.getData('text/plain');\n        newTags = newTags.trim();\n        newTags = newTags.replace(/,/g, ' ');\n        newTags = newTags.replace(/,\\s+/g, \" \");\n        newTags = newTags.replace(/\\n/g, \" \");\n        newTags = newTags.replace(/\\s\\s+/g, ' ');\n        // if ($('li[class=\"select2-selection__choice\"]').length) {\n        //   Options(\"destroy\").select2();\n        //   $('li[class=\"select2-selection__choice\"]').each(function () {\n        //   });\n        // }\n        Array.prototype.push.apply(items, newTags.split(\" \"));\n        if (items.length) {\n          let arr = [];\n          items.forEach(element => {\n            arr.push({\n              id: element.trim(),\n              text: element.trim()\n            });\n          });\n          items = this.getUniqueArr(items);\n          this.selectData = items;\n        }\n        newTags = ` ${newTags} `;\n        if (!newTags.endsWith(delemiter)) {\n          newTags += delemiter;\n        }\n        event.preventDefault();\n        event.target.value = '';\n        //event.target.value = '';\n        setTimeout(() => {\n          // let value = `${items.join(\" \")} `;\n          // event.target.value = value;\n          //$('#device_input').click();\n          this.deviceData = items;\n          return false;\n        }, 100);\n        this.cd.detectChanges();\n      });\n    }\n    getUniqueArr(arr = []) {\n      var uniqueNames = [];\n      $.each(arr, function (i, el) {\n        if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);\n      });\n      return uniqueNames;\n    }\n    ngOnInit() {\n      var _a, _b, _c;\n      this.selectData = this.selectData ? this.selectData : [];\n      this.protocols = ((_a = this.inputData) === null || _a === void 0 ? void 0 : _a.protocols) ? this.inputData.protocols : [];\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      if (this.inputData && this.inputData['verifyDevice']) {\n        let data = ((_b = this.inputData) === null || _b === void 0 ? void 0 : _b.devices) ? this.inputData.devices : [];\n        data = data ? this.removeDuplicates(data) : [];\n        this.inputData.devices = data;\n        this.deviceData = data;\n        this.devicesAdded = [];\n        this.addDevices();\n      } else {\n        this.devicesAdded = ((_c = this.inputData) === null || _c === void 0 ? void 0 : _c.devices) ? this.inputData.devices : [];\n      }\n      this.options = {\n        width: '300',\n        multiple: true,\n        tags: true,\n        tokenSeparators: [',', ' ', '\\t'],\n        selectOnClose: true\n      };\n      this.showTable();\n    }\n    ngOnDestroy() {\n      this.languageSubject.unsubscribe();\n      this.dtTrigger.unsubscribe();\n    }\n    ngAfterViewInit() {\n      let ele = document.getElementById(\"device_input\");\n      ele.addEventListener('contextmenu', e => {\n        //alert(\"You've tried to open context menu\"); //here you draw your own menu\n        e.preventDefault();\n      }, false);\n    }\n    ngAfterViewChecked() {\n      let ele = document.getElementById(\"device_input\");\n      ele.addEventListener('contextmenu', e => {\n        //alert(\"You've tried to open context menu\"); //here you draw your own menu\n        e.preventDefault();\n      }, false);\n    }\n    showTable() {\n      if (this.tableRenderedOnce) {\n        this.rerender();\n      } else {\n        setTimeout(() => {\n          this.dtTrigger.next();\n          this.tableRenderedOnce = true;\n          this.dataAvailable = true;\n        }, 100);\n      }\n    }\n    validate() {\n      this.formError = false;\n      if (!this.devicesAdded.length) {\n        this.formError = true;\n        return;\n      }\n    }\n    addDevices() {\n      this.inputData['verifyDevice'] = false;\n      this.errors = [];\n      let errors = [];\n      if (this.deviceData && this.deviceData.length) {\n        this.btnDisabled = true;\n        const requests = [];\n        //   if (this.devicesAdded.indexOf(device) !== -1) {\n        //   this.errorInfo = `Device Serial Number(s) already added.`;\n        //   this.error = true;\n        //   return;\n        // }\n        let dupSerNums = [];\n        this.deviceData.forEach((element, index, object) => {\n          if (this.devicesAdded.indexOf(element) !== -1) {\n            dupSerNums.push(`${element}`);\n            //return;\n          }\n\n          const req = this.performanceService.checkdeviceCafCapabilityBySN(element).pipe(catchError(err => of(err.status)));\n          requests.push(req);\n        });\n        if (dupSerNums.length) {\n          //errors.push(`Device Serial Number(s) already added. <br> <ul>${dupSerNums.join(\"\")}</ul>`);\n          errors.push({\n            title: `${'Device Serial Number(s) already added.'}`,\n            body: dupSerNums\n          });\n          this.error = true;\n          this.btnDisabled = false;\n          this.errors = errors;\n          this.deviceData = [];\n          this.selectData = [];\n          return;\n        }\n        //console.log(requests.length)\n        if (requests.length) {\n          this.loading = true;\n          forkJoin(requests).subscribe(response => {\n            this.loading = false;\n            this.btnDisabled = false;\n            let errserialNum = [];\n            let donotSupportSN = [];\n            response.forEach((element, index) => {\n              var _a, _b;\n              let newDevices = [];\n              if (typeof element == 'object') {\n                if (element && element.supported) {\n                  if ((_a = element === null || element === void 0 ? void 0 : element.details) === null || _a === void 0 ? void 0 : _a.protocol) {\n                    this.protocols.push((_b = element === null || element === void 0 ? void 0 : element.details) === null || _b === void 0 ? void 0 : _b.protocol);\n                    //this.inputData.protocols = this.protocols ? this.removeDuplicates(this.protocols) : [];\n                  }\n                  //this.devicesAdded.push(this.deviceData[index]);\n                  newDevices.push(this.deviceData[index]);\n                } else {\n                  donotSupportSN.push(`${this.deviceData[index]}`);\n                }\n              } else {\n                errserialNum.push(`${this.deviceData[index]}`);\n              }\n              setTimeout(() => {\n                this.deviceData = [];\n                //this.cd.detectChanges();\n                this.devicesAdded = [...this.devicesAdded, ...newDevices];\n                this.rerender();\n              }, 100);\n            });\n            this.deviceData = [];\n            this.selectData = [];\n            if (errserialNum.length) {\n              //errors.push(`No device found by the given device(s) serial number <br> <ul  style=\"list-style:disc\">${errserialNum.join(\"\")}</ul>`);\n              errors.push({\n                title: `${'No device found by the given device(s) serial number.'}`,\n                body: errserialNum\n              });\n              this.error = true;\n              $(\"html, body\").animate({\n                scrollTop: 0\n              }, \"slow\");\n            }\n            if (donotSupportSN.length) {\n              errors.push({\n                title: `${'Device(s) do(es) not support TR143 or Ookla.'}`,\n                body: donotSupportSN\n              });\n              this.error = true;\n              $(\"html, body\").animate({\n                scrollTop: 0\n              }, \"slow\");\n            }\n            this.errors = errors;\n            this.deviceData = [];\n            this.selectData = [];\n            //this.cd.detectChanges();\n          }, err => {\n            this.loading = false;\n          }, () => {\n            this.deviceData = [];\n            this.selectData = [];\n          });\n        } else {\n          this.errors = errors;\n        }\n      } else {\n        // this.errors.push({\n        //   title: `${'Please add atleast one System seriel number.' ? 'Please add atleast one System seriel number.' : 'Please add atleast one System seriel number.'}`,\n        //   body: []\n        // });\n        // $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\n        // setTimeout(() => {\n        //   this.errors = [];\n        // }, 3500);\n        this.saveClicked = true;\n      }\n      this.cd.detectChanges();\n    }\n    onChangeData(value) {\n      localStorage.removeItem('intialPaste');\n      if (value !== null && value.length === 0) {\n        this.deviceData = [];\n        this.selectData = [];\n        // this.deviceData = Object.assign([], []);\n        // this.selectData = Object.assign([], []);\n        setTimeout(() => {\n          this.clearInputs();\n        }, 1000);\n        this.cd.detectChanges();\n        return;\n      }\n      this.cd.detectChanges();\n      //let index = this.getArrIndexByValue(this.selectData, value);\n      // this.selectData.splice(index, 1);\n      // this.selectData = Object.assign({}, this.selectData);\n    }\n\n    clearInputs() {\n      this.intialPaste = true;\n    }\n    getArrIndexByValue(arr, value) {\n      for (var i = 0, iLen = arr.length; i < iLen; i++) {\n        if (arr[i].b == value) return i;\n      }\n    }\n    doDeleteDevieSN() {\n      this.saveClicked = false;\n      let index = this.devicesAdded.indexOf(this.deviceSN);\n      this.deviceSN = '';\n      if (index !== -1) {\n        this.devicesAdded.splice(index, 1);\n      }\n      if (!this.devicesAdded.length) {\n        //this.inputData.levelPassed = 1;\n        this.outputdata.emit(this.inputData);\n      }\n      this.rerender();\n    }\n    deleteDevice(item, index) {\n      this.saveClicked = false;\n      this.deviceSN = item;\n      $(\"html, body\").animate({\n        scrollTop: 0\n      }, \"slow\");\n    }\n    cancelDelete() {\n      this.deviceSN = '';\n    }\n    go_next() {\n      var _a, _b;\n      this.saveClicked = true;\n      this.validate();\n      if (this.formError) {\n        return;\n      }\n      this.inputData.devices = this.devicesAdded;\n      if (this.inputData.levelPassed <= 2) {\n        this.inputData.levelPassed = 2;\n      }\n      if (((_a = this.inputData) === null || _a === void 0 ? void 0 : _a.levelPassed) >= 3 && ((_b = this.inputData) === null || _b === void 0 ? void 0 : _b.protocols)) {\n        if (this.inputData.protocols.indexOf('TR143 1.0') === -1 && this.protocols.indexOf('TR143 1.0') !== -1) {\n          this.inputData.levelPassed = 2;\n        }\n      }\n      this.inputData.protocols = this.protocols ? this.removeDuplicates(this.protocols) : [];\n      this.outputdata.emit(this.inputData);\n      this.activeTab.emit('TestServerDetails');\n      return true;\n    }\n    gotoPrevious() {\n      var _a, _b;\n      this.inputData.devices = this.devicesAdded;\n      if (((_a = this.inputData) === null || _a === void 0 ? void 0 : _a.levelPassed) >= 3 && ((_b = this.inputData) === null || _b === void 0 ? void 0 : _b.protocols)) {\n        if (this.inputData.protocols.indexOf('TR143 1.0') === -1 && this.protocols.indexOf('TR143 1.0') !== -1) {\n          this.inputData.levelPassed = 2;\n        }\n      }\n      this.inputData.protocols = this.protocols ? this.removeDuplicates(this.protocols) : this.inputData.protocols;\n      this.outputdata.emit(this.inputData);\n      this.activeTab.emit('TestInstance');\n    }\n    rerender() {\n      if (this.tableRenderedOnce) {\n        this.dtElement.dtInstance.then(dtInstance => {\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n      } else {\n        setTimeout(() => {\n          this.dtTrigger.next();\n          this.tableRenderedOnce = true;\n          this.dataAvailable = true;\n        }, 100);\n      }\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = 'Access Denied';\n      } else {\n        this.errorInfo = this.sso.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n      this.errors.push({\n        title: this.errorInfo,\n        body: ''\n      });\n    }\n    closeAlert(index) {\n      this.error = false;\n      this.success = false;\n      this.errors.splice(index, 1);\n      this.errors = [...this.errors];\n    }\n    showSuccess(msg) {\n      this.closeAlert();\n      this.successInfo = msg;\n      this.success = true;\n    }\n    showError(msg) {\n      this.closeAlert();\n      this.errorInfo = msg;\n      this.error = true;\n    }\n    reload() {\n      var _a;\n      if (((_a = window.location.href) === null || _a === void 0 ? void 0 : _a.indexOf('/cco/operations/configuration/performance-testing')) !== -1) {\n        this.router.navigate(['./cco/operations/configuration/performance-testing']);\n        return;\n      }\n      this.sso.redirectByUrl([`support/netops-management/operations/performance-testing`, `cco/operations/cco-system-operations/performance-testing`, '', `/cco/operations/cco-subscriber-operations/operations/performance-testing`]);\n    }\n    removeDuplicates(arr) {\n      var uniqueNames = [];\n      $.each(arr, function (i, el) {\n        el = el.trim();\n        if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);\n      });\n      return uniqueNames;\n    }\n    pasteMakeList(event) {\n      event.preventDefault();\n      let clipboardData = event.clipboardData || window.clipboardData;\n      let values = clipboardData.getData('text');\n      this.makeList(values);\n    }\n    makeList(values) {\n      let data = '',\n        newTags = '';\n      if (values) {\n        data = values;\n        newTags = values;\n        $('#device_input').val('');\n      } else {\n        data = this.inputBoxData;\n        newTags = this.inputBoxData;\n      }\n      let items = [];\n      newTags = newTags.trim();\n      newTags = newTags.replace(/,/g, ' ');\n      newTags = newTags.replace(/,\\s+/g, \" \");\n      newTags = newTags.replace(/\\n/g, \" \");\n      newTags = newTags.replace(/\\s\\s+/g, ' ');\n      this.inputBoxData = '';\n      Array.prototype.push.apply(items, newTags.split(\" \"));\n      items = items.filter(el => el);\n      if (items.length) {\n        let arr = [];\n        items.forEach(element => {\n          if (element) {\n            arr.push({\n              id: element.trim(),\n              text: element.trim()\n            });\n          }\n        });\n        items = this.getUniqueArr(items);\n        let filteredData = [];\n        items.forEach(element => {\n          //if (!this.devicesAdded.includes(element) && !this.deviceData.includes(element)) {\n          if (!this.deviceData.includes(element)) {\n            filteredData.push(element.trim());\n          }\n        });\n        this.deviceData = [...this.deviceData, ...filteredData];\n      }\n    }\n    removeData(index) {\n      this.deviceData.splice(index, 1);\n    }\n    onCustomPasteClick(event) {\n      event.preventDefault();\n      this.device_input.nativeElement.focus();\n    }\n  }\n  DevicesWizardComponent.ɵfac = function DevicesWizardComponent_Factory(t) {\n    return new (t || DevicesWizardComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.PerformanceServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CommonService), i0.ɵɵdirectiveInject(i5.SsoAuthService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  DevicesWizardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DevicesWizardComponent,\n    selectors: [[\"app-devices-wizard\"]],\n    viewQuery: function DevicesWizardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.device_input = _t.first);\n      }\n    },\n    inputs: {\n      inputData: \"inputData\"\n    },\n    outputs: {\n      outputdata: \"outputdata\",\n      activeTab: \"activeTab\"\n    },\n    decls: 47,\n    vars: 22,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"w-100 alert alert-success fade show mt-3 flex-space-between\", 4, \"ngIf\"], [\"id\", \"deviceWizard\", 1, \"device-wizard\"], [1, \"per-titledeviceWizard\"], [1, \"mt-3\"], [\"class\", \"warning-msg\", 4, \"ngIf\"], [1, \"form-group\", \"ccl-form\", \"row\"], [1, \"col-2\", \"control-label\"], [1, \"error\"], [1, \"col-8\"], [1, \"custom-paste-input\", 3, \"click\"], [\"class\", \"custom-paste-list\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"device_input\", \"name\", \"device_input\", \"type\", \"text\", \"title\", \"\", \"required\", \"\", \"aria-required\", \"true\", \"aria-describedby\", \"device_input-error\", \"trimSpace\", \"\", 3, \"ngModel\", \"ngModelChange\", \"paste\", \"click\", \"keyup.Space\", \"keyup.enter\"], [\"device_input\", \"\"], [1, \"small-p\"], [\"id\", \"device_input-error\", \"class\", \"errorMessage\", 4, \"ngIf\"], [1, \"col-2\"], [\"type\", \"button\", \"id\", \"netops-add-device-btn\", 1, \"btn-default\", \"primary\", \"float-right\", 3, \"disabled\", \"click\"], [\"id\", \"netops-show-add-devices-table-list\", 1, \"mt-5\", 3, \"hidden\"], [\"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\", \"dtTrigger\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-inline-flex\", \"justify-content-start\", \"performance-testing-button\"], [\"type\", \"button\", \"id\", \"netops-perftest-add-device-previous-btn\", 1, \"btn-arrow\", \"btn-arr-prev\", \"btn-grey\", 3, \"click\"], [\"src\", \"assets/img/ic_chevronleft_grey.svg\"], [\"type\", \"button\", \"id\", \"netops-perftest-add-device-cancel-btn\", 1, \"btn-default\", \"btn-dft\", \"mx-2\", 3, \"click\"], [\"type\", \"button\", \"id\", \"netops-perftest-add-device-next-btn\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"primary\", 3, \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"class\", \"w-100 alert alert-danger fade show mt-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"mt-4\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"error-info-sec\", \"d-inline-flex\"], [1, \"device-ul\"], [4, \"ngFor\", \"ngForOf\"], [1, \"w-100\", \"alert\", \"alert-success\", \"fade\", \"show\", \"mt-3\", \"flex-space-between\"], [1, \"btn-default\", \"px-3\", \"ok-btn\", 3, \"click\"], [1, \"warning-msg\"], [\"src\", \"./assets/img/warning-icon.svg\"], [1, \"btn-con-sec\", \"float-right\"], [\"id\", \"deletePFBtn\", 1, \"btn\", \"warn-btn\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"warn-btn\", 3, \"click\"], [1, \"custom-paste-list\"], [\"data-key\", \"\", 1, \"remove-input-btn\", \"primary\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [\"id\", \"device_input-error\", 1, \"errorMessage\"], [1, \"pl-3\"], [3, \"id\"], [1, \"doc-dele-icon\"], [1, \"cursor-pointer\", 3, \"title\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash-o\"], [\"colspan\", \"2\"], [1, \"text-center\"]],\n    template: function DevicesWizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DevicesWizardComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, DevicesWizardComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, DevicesWizardComponent_div_2_Template, 4, 2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"h4\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtemplate(6, DevicesWizardComponent_div_6_Template, 10, 4, \"div\", 6);\n        i0.ɵɵtemplate(7, DevicesWizardComponent_div_7_Template, 5, 1, \"div\", 0);\n        i0.ɵɵelementStart(8, \"section\");\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementStart(12, \"span\", 9);\n        i0.ɵɵtext(13, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵlistener(\"click\", function DevicesWizardComponent_Template_div_click_15_listener($event) {\n          return ctx.onCustomPasteClick($event);\n        });\n        i0.ɵɵtemplate(16, DevicesWizardComponent_div_16_Template, 4, 1, \"div\", 12);\n        i0.ɵɵelementStart(17, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function DevicesWizardComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.inputBoxData = $event;\n        })(\"paste\", function DevicesWizardComponent_Template_input_paste_17_listener($event) {\n          return ctx.pasteMakeList($event);\n        })(\"click\", function DevicesWizardComponent_Template_input_click_17_listener() {\n          return ctx.makeList();\n        })(\"keyup.Space\", function DevicesWizardComponent_Template_input_keyup_Space_17_listener() {\n          return ctx.makeList();\n        })(\"keyup.enter\", function DevicesWizardComponent_Template_input_keyup_enter_17_listener() {\n          return ctx.makeList();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 15);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, DevicesWizardComponent_div_21_Template, 3, 1, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 17);\n        i0.ɵɵelementStart(23, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function DevicesWizardComponent_Template_button_click_23_listener() {\n          return ctx.addDevices();\n        });\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵelementStart(26, \"table\", 20);\n        i0.ɵɵelementStart(27, \"thead\");\n        i0.ɵɵelementStart(28, \"tr\");\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"tbody\");\n        i0.ɵɵtemplate(34, DevicesWizardComponent_tr_34_Template, 7, 3, \"tr\", 21);\n        i0.ɵɵtemplate(35, DevicesWizardComponent_tr_35_Template, 4, 1, \"tr\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 22);\n        i0.ɵɵelementStart(37, \"div\");\n        i0.ɵɵelementStart(38, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function DevicesWizardComponent_Template_button_click_38_listener() {\n          return ctx.gotoPrevious();\n        });\n        i0.ɵɵelement(39, \"img\", 24);\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\");\n        i0.ɵɵelementStart(42, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function DevicesWizardComponent_Template_button_click_42_listener() {\n          return ctx.reload();\n        });\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function DevicesWizardComponent_Template_button_click_44_listener() {\n          return ctx.go_next();\n        });\n        i0.ɵɵtext(45);\n        i0.ɵɵelement(46, \"img\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errors.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.success);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.deviceSN);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Device_ID, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.deviceData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputBoxData);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.EXOS_Systems);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.saveClicked && !ctx.devicesAdded.length);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.btnDisabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Add, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.dataAvailable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dtOptions\", ctx.tableOptions)(\"dtTrigger\", ctx.dtTrigger);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language.Device_ID);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Action);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.devicesAdded);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.devicesAdded.length);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Previous, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.cancel, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Next, \" \");\n      }\n    },\n    directives: [i6.NgIf, i6.NgForOf, i7.DefaultValueAccessor, i7.RequiredValidator, i8.TrimSpaceDirective, i7.NgControlStatus, i7.NgModel, i9.DataTableDirective],\n    styles: [\"ul.device-ul[_ngcontent-%COMP%]{margin-bottom:0;list-style:disc;margin-left:30px}.ng-select2[_ngcontent-%COMP%]{height:34px!important}.custom-paste-input[_ngcontent-%COMP%]{width:100%;min-height:38px;max-height:700px;line-height:inherit;border-radius:26px;background:#f8f8fa;padding:0 15px;font-size:14px;font-weight:400;color:#646363;border:1px solid transparent;cursor:text;display:flex;flex-direction:row;flex-wrap:wrap}.custom-paste-input[_ngcontent-%COMP%]   .custom-paste-list[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;min-height:29px;padding:3px 2px 0;font-size:14px;background-color:#e4e4e4;border:1px solid #aaa;border-radius:4px;cursor:default;margin:3px;word-break:break-all}.custom-paste-input[_ngcontent-%COMP%]   .custom-paste-list[_ngcontent-%COMP%]   .remove-input-btn[_ngcontent-%COMP%]{float:right;margin-right:5px;cursor:pointer}.custom-paste-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%!important;border:none}.custom-paste-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none!important}\"]\n  });\n  return DevicesWizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}