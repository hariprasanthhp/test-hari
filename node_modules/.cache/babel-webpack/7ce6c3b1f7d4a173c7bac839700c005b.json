{"ast":null,"code":"import { Component } from '@angular/core';\nimport * as Highcharts from \"highcharts/highstock\";\nimport { environment } from \"../../../../environments/environment\";\nimport customEvents from 'highcharts-custom-events';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../app-services/translate.service\";\nimport * as i3 from \"../../../shared/services/sso-auth.service\";\nimport * as i4 from \"../service/options-manager.service\";\nimport * as i5 from \"../service/realtime-common-functions.service\";\nimport * as i6 from \"../service/fa-utils.service\";\nimport * as i7 from \"../support-realtime.service\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../stream-path-chart/stream-path-chart.component\";\nimport * as i11 from \"../barchart/barchart.component\";\nimport * as i12 from \"@ng-select/ng-select\";\nimport * as i13 from \"@angular/forms\";\nconst _c0 = [\"realtimeFavCreatePop\"];\nconst _c1 = [\"recordCreatePop\"];\nfunction RealtimeComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.delay, \" \", ctx_r1.language[\"minute delay\"], \" \");\n  }\n}\nfunction RealtimeComponent_div_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵelementStart(3, \"div\", 18);\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Loading);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_2_ngx_stream_path_chart_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-stream-path-chart\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartName\", ctx_r9.rate)(\"yAxixTitle\", ctx_r9.rateUnit)(\"data\", ctx_r9.data.maxRate)(\"time\", ctx_r9.data.sendTime)(\"windowLen\", ctx_r9.windowLen)(\"history\", ctx_r9.cacheRateData);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵtemplate(2, RealtimeComponent_div_0_div_11_div_2_ngx_stream_path_chart_2_Template, 1, 6, \"ngx-stream-path-chart\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.data.maxRate && ctx_r6.showRealTime);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_3_ngx_stream_path_chart_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-stream-path-chart\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartName\", ctx_r10.packet)(\"yAxixTitle\", ctx_r10.packetUnit)(\"data\", ctx_r10.data.packet)(\"time\", ctx_r10.data.sendTime)(\"windowLen\", ctx_r10.windowLen)(\"history\", ctx_r10.cachePacketData);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵtemplate(2, RealtimeComponent_div_0_div_11_div_3_ngx_stream_path_chart_2_Template, 1, 6, \"ngx-stream-path-chart\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.data.packet && ctx_r7.showRealTime);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_4_ngx_barchart_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 48);\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r11.topEndPointUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r11.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_4_ngx_barchart_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 49);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r12.topEndPointDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r12.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_4_ngx_barchart_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 50);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r13.topAppsUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r13.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_4_ngx_barchart_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 51);\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r14.topAppsDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r14.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelementStart(2, \"div\", 29);\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵelementStart(4, \"p\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 32);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(9, \"span\", 33);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_0_div_11_div_4_Template_span_click_9_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return ctx_r15.fullscreen(\"TEP\");\n    });\n    i0.ɵɵtext(10, \"\\u00A0 \");\n    i0.ɵɵelement(11, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 35);\n    i0.ɵɵelementStart(13, \"div\", 36);\n    i0.ɵɵelementStart(14, \"div\", 37);\n    i0.ɵɵelementStart(15, \"span\", 38);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, RealtimeComponent_div_0_div_11_div_4_ngx_barchart_17_Template, 1, 3, \"ngx-barchart\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 40);\n    i0.ɵɵelementStart(19, \"div\", 37);\n    i0.ɵɵelementStart(20, \"span\", 38);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, RealtimeComponent_div_0_div_11_div_4_ngx_barchart_22_Template, 1, 3, \"ngx-barchart\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 42);\n    i0.ɵɵelementStart(24, \"div\", 29);\n    i0.ɵɵelementStart(25, \"div\", 30);\n    i0.ɵɵelementStart(26, \"p\", 31);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"span\", 32);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(31, \"span\", 43);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_0_div_11_div_4_Template_span_click_31_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return ctx_r17.fullscreen(\"TAPP\");\n    });\n    i0.ɵɵtext(32, \"\\u00A0 \");\n    i0.ɵɵelement(33, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 35);\n    i0.ɵɵelementStart(35, \"div\", 44);\n    i0.ɵɵelementStart(36, \"div\", 37);\n    i0.ɵɵelementStart(37, \"span\", 38);\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(39, RealtimeComponent_div_0_div_11_div_4_ngx_barchart_39_Template, 1, 3, \"ngx-barchart\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 46);\n    i0.ɵɵelementStart(41, \"div\", 37);\n    i0.ɵɵelementStart(42, \"span\", 38);\n    i0.ɵɵtext(43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(44, RealtimeComponent_div_0_div_11_div_4_ngx_barchart_44_Template, 1, 3, \"ngx-barchart\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r8.language.top5Endpoints);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.interval, \": 15 sec\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.upRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topEndPointUpChartoptions && ctx_r8.showRealTime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.downRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topEndPointDownChartoptions && ctx_r8.showRealTime);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r8.language.top5Applications);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.interval, \": 15 sec\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.upRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topAppsUpChartoptions && ctx_r8.showRealTime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.downRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topAppsDownChartoptions && ctx_r8.showRealTime);\n  }\n}\nfunction RealtimeComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵtemplate(2, RealtimeComponent_div_0_div_11_div_2_Template, 3, 1, \"div\", 21);\n    i0.ɵɵtemplate(3, RealtimeComponent_div_0_div_11_div_3_Template, 3, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, RealtimeComponent_div_0_div_11_div_4_Template, 45, 12, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.data[\"maxRate\"].length || ctx_r3.showRealTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.data[\"packet\"].length || ctx_r3.showRealTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.fsView);\n  }\n}\nfunction RealtimeComponent_div_0_div_19_ngx_barchart_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 58);\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r18.topEndPointUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r18.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_19_ngx_barchart_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 59);\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r19.topEndPointDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r19.updateFlag);\n  }\n}\nconst _c2 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction RealtimeComponent_div_0_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"ng-select\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_0_div_19_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_div_0_div_19_Template_ng_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.changeTopLength();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 32);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 54);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_0_div_19_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.closeFullscreen();\n    });\n    i0.ɵɵtext(7, \"\\u00A0 \");\n    i0.ɵɵelement(8, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 55);\n    i0.ɵɵelementStart(10, \"div\", 40);\n    i0.ɵɵelementStart(11, \"div\", 37);\n    i0.ɵɵelementStart(12, \"span\", 38);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementStart(14, \"b\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, RealtimeComponent_div_0_div_19_ngx_barchart_17_Template, 1, 3, \"ngx-barchart\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 40);\n    i0.ɵɵelementStart(19, \"div\", 37);\n    i0.ɵɵelementStart(20, \"span\", 38);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementStart(22, \"b\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, RealtimeComponent_div_0_div_19_ngx_barchart_25_Template, 1, 3, \"ngx-barchart\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r4.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r4.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(15, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.language.interval, \": 15 sec\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.tEPrcntData.upPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.tEPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", true);\n  }\n}\nfunction RealtimeComponent_div_0_div_20_ngx_barchart_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 64);\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r24.topAppsUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r24.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_20_ngx_barchart_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-barchart\", 65);\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r25.topAppsDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r25.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"ng-select\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_0_div_20_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_div_0_div_20_Template_ng_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.changeTopLength();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 32);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 60);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_0_div_20_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.closeFullscreen();\n    });\n    i0.ɵɵtext(7, \"\\u00A0 \");\n    i0.ɵɵelement(8, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 55);\n    i0.ɵɵelementStart(10, \"div\", 61);\n    i0.ɵɵelementStart(11, \"div\", 37);\n    i0.ɵɵelementStart(12, \"span\", 38);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, RealtimeComponent_div_0_div_20_ngx_barchart_14_Template, 1, 3, \"ngx-barchart\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 40);\n    i0.ɵɵelementStart(16, \"div\", 37);\n    i0.ɵɵelementStart(17, \"span\", 38);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, RealtimeComponent_div_0_div_20_ngx_barchart_19_Template, 1, 3, \"ngx-barchart\", 63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r5.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r5.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.interval, \": 15 sec\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.upRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.downRate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", true);\n  }\n}\nfunction RealtimeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"section\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"h5\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, RealtimeComponent_div_0_div_8_Template, 2, 2, \"div\", 8);\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtemplate(10, RealtimeComponent_div_0_div_10_Template, 6, 1, \"div\", 10);\n    i0.ɵɵtemplate(11, RealtimeComponent_div_0_div_11_Template, 5, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"section\", 2);\n    i0.ɵɵelementStart(13, \"div\", 3);\n    i0.ɵɵelementStart(14, \"h2\", 11);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 12);\n    i0.ɵɵelementStart(17, \"div\", 3);\n    i0.ɵɵelementStart(18, \"div\", 13);\n    i0.ɵɵtemplate(19, RealtimeComponent_div_0_div_19_Template, 26, 16, \"div\", 14);\n    i0.ɵɵtemplate(20, RealtimeComponent_div_0_div_20_Template, 20, 12, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.fsView);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language.trafficMonitorOverall);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.fsView);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.language.trafficMonitorOverall);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fsChartDetails.topChart == \"TEP\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fsChartDetails.topChart == \"TAPP\");\n  }\n}\ncustomEvents(Highcharts);\nexport let RealtimeComponent = /*#__PURE__*/(() => {\n  class RealtimeComponent {\n    constructor(router, customTranslateService, sso, optnsMngr, realTimeCommonFunctionService, utils, rtService, titleService) {\n      this.router = router;\n      this.customTranslateService = customTranslateService;\n      this.sso = sso;\n      this.optnsMngr = optnsMngr;\n      this.realTimeCommonFunctionService = realTimeCommonFunctionService;\n      this.utils = utils;\n      this.rtService = rtService;\n      this.titleService = titleService;\n      this.pageAvailable = false;\n      this.topEndPointUpXaxisArray = [];\n      this.topEndPointUpXaxisIdArray = [];\n      this.topEndPointUpXaxisSelection = false;\n      this.topEndPointDownXaxisArray = [];\n      this.topEndPointDownXaxisIdArray = [];\n      this.topEndPointDownXaxisSelection = false;\n      this.topAppsUpXaxisArray = [];\n      this.topAppsUpXaxisIdArray = [];\n      this.topAppsUpXaxisSelection = false;\n      this.topAppsDownXaxisArray = [];\n      this.topAppsDownXaxisIdArray = [];\n      this.topAppsDownXaxisSelection = false;\n      this.topLocationsUpXaxisArray = [];\n      this.topLocationsUpXaxisIdArray = [];\n      this.topLocationsUpXaxisSelection = false;\n      this.topLocationsDownXaxisArray = [];\n      this.topLocationsDownXaxisIdArray = [];\n      this.topLocationsDownXaxisSelection = false;\n      this.selectedTopLength = 5;\n      this.topLengths = [];\n      this.updateFlag = true;\n      this.fsView = false;\n      this.fsChartDetails = {};\n      this.showChart = false;\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.recordingComponent = Component;\n      this.favoriteComponent = Component;\n      this.startDate = new Date();\n      this.rate = '';\n      this.packet = '';\n      this.createFavorite = true;\n      this.createRecord = true;\n      this.windowLen = 5;\n      this.fsName = '';\n      this.data = {\n        maxRate: [],\n        packet: []\n      };\n      this.showRealTime = false;\n      this.tAPrcntData = {\n        downPercentage: '',\n        upPercentage: ''\n      };\n      this.tLPrcntData = {\n        downPercentage: '',\n        upPercentage: ''\n      };\n      this.tEPrcntData = {\n        downPercentage: '',\n        upPercentage: ''\n      };\n      this.tAData = {};\n      this.tLData = {};\n      this.tEPData = {};\n      this.showBars = false;\n      this.showTEPBars = false;\n      this.cachePacketData = {};\n      this.cacheRateData = {};\n      this.rateUnit = 'bps';\n      this.packetUnit = 'pps';\n      this.tepUpDataObj = {};\n      this.tepDownDataObj = {};\n      this.tapUpDataObj = {};\n      this.tapDownDataObj = {};\n      this.tlocUpDataObj = {};\n      this.tlocDownDataObj = {};\n      this.titleService.setTitle('Realtime - Data - Service - Service - Calix Cloud');\n      //this.checkAllOptions();\n      this.loading = true;\n      let breadCrumb = {\n        mainRouteKeyName: 'network',\n        mainRoute: '/fa/network',\n        subRouteKeyName: 'networkMenuRealTime',\n        subRoute: '/fa/network/realtime',\n        setSchedule: false\n      };\n    }\n    ngOnInit() {\n      this.sso.setActionLog('CSC', 'pageHit', 'realtime', window.location.href, 'realtime reports intiated');\n      this.rtService.delay$.subscribe(res => {\n        if (res) {\n          this.loading = false;\n          if (this.sso.getSubscriberEndpointId()) {\n            this.getDataByNewToken();\n          } else {\n            this.sso.subscriberEndPointId$.subscribe(id => {\n              console.log('subscribe', id);\n              if (id && this.router.url.indexOf('traffic-reports') !== -1) {\n                this.getDataByNewToken();\n              }\n            });\n          }\n          this.getRtData();\n          this.delay = Math.abs(this.sso.getRealtimeDelay()) / 60000;\n          this.delay = Number.isInteger(this.delay) ? this.delay : this.delay.toFixed(1);\n        }\n      });\n      this.language = this.customTranslateService.defualtLanguage;\n      this.rate = this.language.RATE;\n      this.packet = this.language.PACKET;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.customTranslateService.selectedLanguage.subscribe(data => {\n        this.rate = data.RATE;\n        this.packet = data.PACKET;\n        this.language = data;\n        if (this.fsView) {\n          this.createTopLengthItems();\n        }\n      });\n      this.topLengths = [{\n        name: 'Top 5',\n        value: 5\n      }];\n      let scope = this.sso.getScopes();\n      if (scope) {\n        if (scope && scope['cloud.fa.network.realtime'] && scope['cloud.fa.network.realtime'].indexOf('write') === -1) {\n          this.createFavorite = false;\n          this.createRecord = false;\n        }\n      }\n    }\n    ngAfterViewInit() {\n      this.favoriteComponent = this.realtimeFavCreatePop;\n      this.recordingComponent = this.recordCreatePop;\n    }\n    getChartOptions(data) {}\n    fullscreen(whichTop) {\n      this.fsChartDetails = {\n        topChart: whichTop\n      };\n      this.fsView = true;\n      this.fsName = whichTop;\n      this.modifyCurrentOptionsToFS(whichTop);\n      this.createTopLengthItems();\n    }\n    closeFullscreen() {\n      this.selectedTopLength = 5;\n      this.fsView = false;\n      if (this.fsName === 'TEP') {\n        let data = this.optnsMngr.getTopEP();\n        this.makeTEPEvents(data);\n      } else if (this.fsName === 'TAPP') {\n        let data = this.optnsMngr.getTopApp();\n        this.makeTAPPEvents(data);\n      } else if (this.fsName === 'TLOC') {\n        let data = this.optnsMngr.getTopLoc();\n        this.makeTLOCEvents(data);\n      }\n      this.fsName = '';\n      this.fsChartDetails = {};\n    }\n    modifyCurrentOptionsToFS(chart) {\n      switch (chart) {\n        case 'TEP':\n          this.fsChartDetails = {\n            topChart: 'TEP',\n            title: 'Endpoints'\n          };\n          let data = this.optnsMngr.getTopEP();\n          this.makeTEPEvents(data);\n          break;\n        case 'TAPP':\n          this.fsChartDetails = {\n            topChart: 'TAPP',\n            title: 'Applications'\n          };\n          let dataTapp = this.optnsMngr.getTopApp();\n          this.makeTAPPEvents(dataTapp);\n          break;\n        case 'TLOC':\n          // this.topLocationsUpChartoptions.chart.height = 560;\n          // delete this.topLocationsUpChartoptions.chart.width;\n          // this.topLocationsUpChartoptions.plotOptions.series.pointWidth = this.getFSPointWidth(this.selectedTopLength);\n          // this.topLocationsDownChartoptions.chart.height = 560;\n          // delete this.topLocationsDownChartoptions.chart.width;\n          // this.topLocationsDownChartoptions.plotOptions.series.pointWidth = this.getFSPointWidth(this.selectedTopLength);\n          this.fsChartDetails = {\n            topChart: 'TLOC',\n            title: 'Locations'\n          };\n          let dataTloc = this.optnsMngr.getTopLoc();\n          this.makeTLOCEvents(dataTloc);\n          break;\n        default:\n      }\n    }\n    ipAddress(data) {\n      ////console.log(data);\n    }\n    getFSPointWidth(len) {\n      let width = 14;\n      switch (len) {\n        case 5:\n          width = 60;\n          break;\n        case 10:\n          width = 30;\n          break;\n        case 20:\n          width = 15;\n          break;\n        case 30:\n          width = 10;\n          break;\n        default:\n      }\n      return width;\n    }\n    createTopLengthItems() {\n      this.topLengths = [{\n        name: this.language['Top 5 ' + this.fsChartDetails.title],\n        value: 5\n      }, {\n        name: this.language['Top 10 ' + this.fsChartDetails.title],\n        value: 10\n      }, {\n        name: this.language['Top 20 ' + this.fsChartDetails.title],\n        value: 20\n      }, {\n        name: this.language['Top 30 ' + this.fsChartDetails.title],\n        value: 30\n      }];\n    }\n    ngOnDestroy() {\n      // if (this.source) {\n      //   this.source.close();\n      // }\n      // this.source = null;\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      if (this.tASource) {\n        this.tASource.close();\n      }\n      if (this.tESource) {\n        this.tESource.close();\n      }\n      if (this.tLsource) {\n        this.tLsource.close();\n      }\n    }\n    checkAllOptions() {\n      this.checkAllOptionsInterval = setInterval(() => {\n        if (this.topEndPointUpChartoptions && this.topEndPointDownChartoptions && this.topAppsUpChartoptions && this.topAppsDownChartoptions && this.topLocationsUpChartoptions && this.topLocationsDownChartoptions) {\n          this.loading = false;\n          this.showChart = true;\n          clearInterval(this.checkAllOptionsInterval);\n        }\n      }, 500);\n    }\n    gotoHistory() {\n      this.router.navigate(['fa/traffic-record']);\n    }\n    getData() {\n      let orgId = this.sso.getOrgId();\n      let moniterType = 'EP';\n      //let moniterId = `73a3404f-6c34-43b5-b3ac-02c00d56558a`\n      let moniterId = this.sso.getSubscriberEndpointId();\n      // moniterId = `1346cba3-4c4b-4fd0-8489-0aa93b08eed6`\n      // orgId = 137573;\n      if (!moniterId) {\n        alert(\"subscriber endpoint id not set\");\n        //moniterId = '7167ec96-a3f4-4a31-882e-40847f131ae7';\n      }\n\n      if (this.source) {\n        this.source = null;\n      }\n      let url = `${environment.SUPPORT_URL}/rt/sse/${orgId}/${moniterType}/${moniterId}/TRF,TAPP,TEP`;\n      this.source = new EventSourcePolyfill(url, {\n        headers: {\n          'X-Calix-ClientID': environment.X_CALIX_CLIENTID,\n          'X-Calix-AccessToken': this.sso.getAccessToken()\n        }\n      });\n      this.source.addEventListener('open', message => {\n        console.log(JSON.stringify(message));\n        console.log(message);\n        console.log(new Date());\n      });\n      this.source.addEventListener('state', message => {\n        console.log(JSON.stringify(message));\n        console.log('state', message);\n        console.log(new Date());\n        let data = JSON.parse(message.data);\n        if (data['status'].toLowerCase() === 's300') {\n          this.data = {\n            sendTime: new Date().getTime(),\n            usage: [0, 0],\n            maxRate: [0, 0],\n            packet: [0, 0]\n          };\n          this.loading = false;\n          this.showRealTime = true;\n        }\n      });\n      this.source.addEventListener('message', message => {\n        //console.log(message.data);\n        console.log(JSON.parse(message.data));\n        let data = JSON.parse(message.data);\n        if (data.graphType === 'TRF') {\n          this.data = JSON.parse(message.data);\n          //this.data.usage = [Number(this.data.usage[0]) * 8 / 15, Number(this.data.usage[1]) * 8 / 15];\n        } else {\n          this.showBars = false;\n        }\n        // if (data.graphType === 'TLOC') {\n        //   //this.tAData = data;\n        //   this.optnsMngr.setTopLoc(data);\n        //   this.makeTLOCEvents(data);\n        // }\n        if (data.graphType === 'TAPP') {\n          //this.tAData = data;\n          this.optnsMngr.setTopApp(data);\n          this.makeTAPPEvents(data);\n        }\n        if (data.graphType === 'TEP') {\n          this.topEndPointUpChartoptions = null;\n          //this.tEPData = data;\n          this.optnsMngr.setTopEP(data);\n          this.makeTEPEvents(data);\n        }\n        this.loading = false;\n        this.showRealTime = true;\n      });\n      this.source.addEventListener('error', message => {\n        //console.log(JSON.parse(message));\n        this.source.close();\n        this.source = null;\n      });\n    }\n    getRtData() {\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      this.ratePacketStreamSubscription = this.rtService.ratePacketStreamData$.subscribe(data => {\n        console.log(\"subscription data\", data);\n        if (data.graphType === 'TRF') {\n          let tmpArr = data['monitorString'] ? data['monitorString'].split(\"/\") : [];\n          if (tmpArr[tmpArr.length - 2] == this.sso.getSubscriberEndpointId()) {\n            this.data = data;\n          }\n          this.showRealTime = true;\n        } else {\n          this.showBars = false;\n        }\n        this.loading = false;\n      });\n      this.rtSubscription = this.rtService.rtData$.subscribe(data => {\n        //console.log(\"subscription data\", data);\n        // if (data.graphType === 'TRF') {\n        //   this.data = data;\n        //   this.showRealTime = true;\n        // } else {\n        //   this.showBars = false;\n        // }\n        let tmpArr = data['monitorString'] ? data['monitorString'].split(\"/\") : [];\n        if (tmpArr[tmpArr.length - 2] !== this.sso.getSubscriberEndpointId()) {\n          return;\n        }\n        if (data.graphType === 'TAPP') {\n          //this.tAData = data;\n          this.optnsMngr.setTopApp(data);\n          this.makeTAPPEvents(data);\n        }\n        if (data.graphType === 'TEP') {\n          this.topEndPointUpChartoptions = null;\n          //this.tEPData = data;\n          this.optnsMngr.setTopEP(data);\n          this.makeTEPEvents(data);\n        }\n        this.loading = false;\n      });\n    }\n    makeTEPEvents(data) {\n      //let data: any = this.tEPData;\n      this.tEPrcntData = {\n        downPercentage: data.downPercentage,\n        upPercentage: data.upPercentage\n      };\n      let len = this.fsView && this.fsName === 'TEP' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.settepUpDataObj(data.upData);\n      this.settepDownDataObj(data.downData);\n      let topEndPointUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topEndPointDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topEndPointUpChartoptions.chart.height = this.fsView && this.fsName === 'TEP' ? 560 : 180;\n      topEndPointUpChartoptions.plotOptions.series.cursor = \"context-menu\";\n      topEndPointDownChartoptions.plotOptions.series.cursor = \"context-menu\";\n      topEndPointUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TEP' ? this.getFSPointWidth(upLen) : 14;\n      topEndPointDownChartoptions.chart.height = this.fsView && this.fsName === 'TEP' ? 560 : 180;\n      topEndPointDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TEP' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      topEndPointUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topEndPointUpChartXaxis text-primary\" id=\"${that.tepUpDataObj[this.value]}\" style=\"cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topEndPointUpChartoptions['plotOptions'].series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tepUpDataObj[this.value], 'Endpoints');\n        }\n      };\n      topEndPointDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topEndPointDownChartXaxis text-primary\" id=\"${that.tepDownDataObj[this.value]}\"  style=\" cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topEndPointDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tepDownDataObj[this.value], 'Endpoints');\n        }\n      };\n      // topEndPointUpChartoptions.plotOptions.series.color = '#FF8238';\n      topEndPointDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      this.topEndPointUpChartoptions = Object.assign({}, topEndPointUpChartoptions);\n      this.topEndPointDownChartoptions = Object.assign({}, topEndPointDownChartoptions);\n      // console.log(topEndPointUpChartoptions);\n      // console.log(topEndPointDownChartoptions);\n    }\n\n    makeTLOCEvents(data) {\n      //let data: any = this.tAData;\n      this.tLPrcntData = {\n        downPercentage: data.downPercentage,\n        upPercentage: data.upPercentage\n      };\n      let len = this.fsView && this.fsName === 'TLOC' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.settlocUpDataObj(data.upData);\n      this.settlocDownDataObj(data.downData);\n      let topLocationsUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topLocationsDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topLocationsUpChartoptions.chart.height = this.fsView && this.fsName === 'TLOC' ? 560 : 180;\n      delete topLocationsUpChartoptions.chart.width;\n      topLocationsUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TLOC' ? this.getFSPointWidth(upLen) : 14;\n      topLocationsDownChartoptions.chart.height = this.fsView && this.fsName === 'TLOC' ? 560 : 180;\n      delete topLocationsDownChartoptions.chart.width;\n      topLocationsDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TLOC' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      topLocationsUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topLocationsUpChartXaxis text-primary\" id=\"${that.tlocUpDataObj[this.value]}\"  style=\" cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topLocationsUpChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tlocUpDataObj[this.value], 'Locations');\n        }\n      };\n      topLocationsDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topLocationsDownChartXaxis text-primary\"   id=\"${that.tlocDownDataObj[this.value]}\" style=\" cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topLocationsDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tlocDownDataObj[this.value], 'Locations');\n        }\n      };\n      // topLocationsUpChartoptions.plotOptions.series.color = '#FF8238';\n      topLocationsDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      this.topLocationsUpChartoptions = Object.assign({}, topLocationsUpChartoptions);\n      this.topLocationsDownChartoptions = Object.assign({}, topLocationsDownChartoptions);\n    }\n    makeTAPPEvents(data) {\n      //let data: any = this.tAData;\n      this.tAPrcntData = {\n        downPercentage: data.downPercentage,\n        upPercentage: data.upPercentage\n      };\n      let len = this.fsView && this.fsName === 'TAPP' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.settapUpDataObj(data.upData);\n      this.settapDownDataObj(data.downData);\n      let topAppsUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topAppsDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topAppsUpChartoptions.plotOptions.series.cursor = \"context-menu\";\n      topAppsDownChartoptions.plotOptions.series.cursor = \"context-menu\";\n      topAppsUpChartoptions.chart.height = this.fsView && this.fsName === 'TAPP' ? 560 : 180;\n      delete topAppsUpChartoptions.chart.width;\n      topAppsUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TAPP' ? this.getFSPointWidth(upLen) : 14;\n      topAppsDownChartoptions.chart.height = this.fsView && this.fsName === 'TAPP' ? 560 : 180;\n      delete topAppsDownChartoptions.chart.width;\n      topAppsDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TAPP' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      topAppsUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topAppsUpChartXaxis text-primary\"  id=\"${that.tapUpDataObj[this.value]}\"  style=\" cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topAppsUpChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tapUpDataObj[this.value], 'Apps');\n        }\n      };\n      topAppsDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        formatter: function () {\n          return `<span class=\"topAppsDownChartXaxis text-primary \"  id=\"${that.tapDownDataObj[this.value]}\" style=\" cursor:context-menu\">${this.value}</span>`;\n        }\n      };\n      topAppsDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tapDownDataObj[this.value], 'Apps');\n        }\n      };\n      // topAppsUpChartoptions.plotOptions.series.color = '#FF8238';\n      topAppsDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      this.topAppsUpChartoptions = Object.assign({}, topAppsUpChartoptions);\n      this.topAppsDownChartoptions = Object.assign({}, topAppsDownChartoptions);\n      // console.log(this.topAppsDownChartoptions);\n      // console.log(this.topAppsUpChartoptions);\n    }\n\n    getDataByNewToken() {\n      this.cachePacketData = this.rtService.getCachedata('packet');\n      this.cacheRateData = this.rtService.getCachedata('rate');\n      // console.log(this.cacheRateData);\n      // console.log(this.cachePacketData);\n      let length = Object.keys(this.cachePacketData).length;\n      this.rateUnit = this.rtService.getCurrrentUnit('rate') ? this.rtService.getCurrrentUnit('rate') : 'bps';\n      this.packetUnit = this.rtService.getCurrrentUnit('packet') ? this.rtService.getCurrrentUnit('packet') : 'pps';\n      // console.log(this.rateUnit);\n      // console.log(this.packetUnit);\n      if (this.sso.getSubscriberEndpointId() !== window.localStorage.getItem('calix.temp_endpoint_id')) {\n        this.rtService.clearData();\n        this.cachePacketData = {};\n        this.cacheRateData = {};\n        if (this.rtSubscription) {\n          this.rtSubscription.unsubscribe();\n        }\n        if (this.ratePacketStreamSubscription) {\n          this.ratePacketStreamSubscription.unsubscribe();\n        }\n      }\n      window.localStorage.setItem('calix.temp_endpoint_id', this.sso.getSubscriberEndpointId());\n      if (Object.keys(this.cacheRateData).length) {\n        //this.loading = false;\n        //this.showRealTime = true;\n      } else {\n        this.sso.getAuthTokenByRT().subscribe(json => {\n          this.sso.setLoginInfo(json);\n          //this.getData();\n          this.rtService.getData();\n        }, err => {});\n      }\n    }\n    changeTopLength() {\n      //console.log('event called');\n      //this.loading = true;\n      if (this.fsName === 'TEP') {\n        let data = this.optnsMngr.getTopEP();\n        this.makeTEPEvents(data);\n      } else if (this.fsName === 'TAPP') {\n        let data = this.optnsMngr.getTopApp();\n        this.makeTAPPEvents(data);\n      } else if (this.fsName === 'TLOC') {\n        let data = this.optnsMngr.getTopLoc();\n        this.makeTLOCEvents(data);\n      }\n    }\n    settepUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tepUpDataObj = obj;\n    }\n    gettepUpDataObj() {\n      return this.tepUpDataObj;\n    }\n    settepDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tepDownDataObj = obj;\n    }\n    gettepDownDataObj() {\n      return this.tepDownDataObj;\n    }\n    settapUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tapUpDataObj = obj;\n    }\n    gettapUpDataObj() {\n      return this.tapUpDataObj;\n    }\n    settapDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tapDownDataObj = obj;\n    }\n    gettapDownDataObj() {\n      return this.tapDownDataObj;\n    }\n    settlocDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tlocDownDataObj = obj;\n    }\n    gettlocDownDataObj() {\n      return this.tlocDownDataObj;\n    }\n    settlocUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tlocUpDataObj = obj;\n    }\n    gettlocUpDataObj() {\n      return this.tlocUpDataObj;\n    }\n  }\n  RealtimeComponent.ɵfac = function RealtimeComponent_Factory(t) {\n    return new (t || RealtimeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.OptionsManagerService), i0.ɵɵdirectiveInject(i5.RealTimeCommonFunctionService), i0.ɵɵdirectiveInject(i6.FaUtilsService), i0.ɵɵdirectiveInject(i7.SupportRealtimeService), i0.ɵɵdirectiveInject(i8.Title));\n  };\n  RealtimeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RealtimeComponent,\n    selectors: [[\"ngx-realtime\"]],\n    viewQuery: function RealtimeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.realtimeFavCreatePop = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordCreatePop = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"col-md-12 col-12 mt-4\", 4, \"ngIf\"], [1, \"col-md-12\", \"col-12\", \"mt-4\"], [3, \"hidden\"], [1, \"row\"], [1, \"col-md-7\", \"col-lg-8\", \"col-xl-8\", \"col-12\", \"row\"], [1, \"with-info\"], [\"id\", \"trafficMonitorOverall\", 1, \"tab-content-title\", \"pr-2\"], [1, \"with-select\"], [\"class\", \"text-right\", 4, \"ngIf\"], [1, \"bg-light\", \"mt-3\", 2, \"height\", \"auto\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"tab-content-title\", \"col-md-3\"], [1, \"bg-light\", 2, \"height\", \"auto\"], [1, \"col-md-12\", \"col-12\"], [\"class\", \"card\", \"style\", \"height:auto;\", 4, \"ngIf\"], [1, \"text-right\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"col-md-12\", \"col-lg-6\", \"col-xl-6\", \"col-sm-12\"], [\"class\", \"card m-10\", 4, \"ngIf\"], [\"class\", \"col-md-12 col-lg-6 col-xl-6 col-sm-12\", 4, \"ngIf\"], [1, \"card\", \"m-10\"], [\"id\", \"ngx-stream-path-chart-rate\", 1, \"card-body\"], [3, \"chartName\", \"yAxixTitle\", \"data\", \"time\", \"windowLen\", \"history\", 4, \"ngIf\"], [3, \"chartName\", \"yAxixTitle\", \"data\", \"time\", \"windowLen\", \"history\"], [\"id\", \"ngx-stream-path-chart-packet\", 1, \"card-body\"], [1, \"card\", \"m-10\", 2, \"height\", \"auto\"], [1, \"board_head\"], [1, \"orange-text-wrapper\", 2, \"display\", \"inline-block\"], [1, \"orange-text\"], [1, \"ml20\"], [\"id\", \"open-fullscreen-top-endpoints\", 1, \"top5-fullscreen\", \"pointer\", 3, \"click\"], [1, \"fa\", \"fa-expand\"], [1, \"card-body\", \"row\", \"board_body\", 2, \"height\", \"210px\"], [\"id\", \"top-endpoints-up-chart-div\", 1, \"col-md-6\", \"col-12\"], [1, \"chart-info\"], [1, \"\"], [\"id\", \"top-endpoints-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-12\"], [\"id\", \"top-endpoints-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [1, \"card\", \"mt-2\", \"m-10\", 2, \"height\", \"auto\"], [\"id\", \"open-fullscreen-top-apps\", 1, \"top5-fullscreen\", \"pointer\", 3, \"click\"], [\"id\", \"top-apps-up-chart-div\", 1, \"col-md-6\", \"col-12\"], [\"id\", \"top-apps-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-apps-down-chart-div\", 1, \"col-md-6\", \"col-12\"], [\"id\", \"top-apps-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-endpoints-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-apps-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-apps-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [1, \"card\", 2, \"height\", \"auto\"], [\"id\", \"usage_criteria\", \"bindLabel\", \"name\", \"bindValue\", \"value\", \"placeholder\", \"\", 1, \"realtime-custom-select\", 3, \"items\", \"multiple\", \"ngModel\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\", \"change\"], [\"id\", \"close-fullscreen-top-endpoints\", 1, \"top5-fullscreen\", \"pointer\", 3, \"click\"], [1, \"card-body\", \"row\", \"board_body\", \"mt20\"], [\"id\", \"top-endpoints-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-endpoints-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"close-fullscreen-top-apps\", 1, \"top5-fullscreen\", \"pointer\", 3, \"click\"], [1, \"col-md-6\", \"col-6\"], [\"id\", \"top-apps-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-apps-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-apps-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-apps-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"]],\n    template: function RealtimeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RealtimeComponent_div_0_Template, 21, 9, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.pageAvailable);\n      }\n    },\n    directives: [i9.NgIf, i10.StreamPathChartComponent, i11.BarchartComponent, i12.NgSelectComponent, i13.NgControlStatus, i13.NgModel],\n    styles: [\".board_head[_ngcontent-%COMP%]{padding:5px 10px 0}.orange-text[_ngcontent-%COMP%]{color:#ff7f00}.ml20[_ngcontent-%COMP%]{margin-left:20px}.mt20[_ngcontent-%COMP%]{margin-top:20px}.top5-fullscreen[_ngcontent-%COMP%]{float:right}.board_body[_ngcontent-%COMP%]{padding:0!important}.chart-info[_ngcontent-%COMP%]{padding:0 10px!important}.ng-select.realtime-custom-select[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{color:#ff7f00!important;border:none!important;border-radius:0!important}.topEndPointUpChartXaxis[_ngcontent-%COMP%]:hover{cursor:pointer!important}.with-info[_ngcontent-%COMP%]{display:flex;align-items:center;padding-right:20px}.with-info[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{margin-bottom:0}.with-info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .with-select[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-left:10px}.with-select[_ngcontent-%COMP%]{display:flex;align-items:center}.deafult-select[_ngcontent-%COMP%]{border-radius:20px}.m-10[_ngcontent-%COMP%]{margin-bottom:10px}.highcharts-axis-line[_ngcontent-%COMP%]{display:none!important}@media only screen and (max-width: 500px){.discover-content[_ngcontent-%COMP%]{margin-left:0!important}}@media only screen and (min-width: 501px){.discover-content[_ngcontent-%COMP%]{margin-left:1.5rem!important}}\"]\n  });\n  return RealtimeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}