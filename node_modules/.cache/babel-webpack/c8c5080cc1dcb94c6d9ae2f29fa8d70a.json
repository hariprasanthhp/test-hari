{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../shared/services/sso-auth.service\";\nexport let PerformanceServiceService = /*#__PURE__*/(() => {\n  class PerformanceServiceService {\n    constructor(http, sso) {\n      this.http = http;\n      this.sso = sso;\n    }\n    GetPerformanceDataGrid(orgId) {\n      const ID = this.sso.getOrg(orgId);\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest?${ID}`);\n    }\n    GetServerDetails(designatedASNsOnly) {\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/ooklaServer`);\n    }\n    save(params) {\n      const ID = this.sso.getOrg(this.sso.getOrgId());\n      return this.http.post(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest?${ID}`, params);\n    }\n    delete(_id) {\n      return this.http.delete(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest/${_id}`);\n    }\n    suspend(_id) {\n      return this.http.put(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest/${_id}/suspend`, {});\n    }\n    resume(_id) {\n      return this.http.put(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest/${_id}/resume`, {});\n    }\n    view(_id) {\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest/${_id}`);\n    }\n    update(params) {\n      return this.http.put(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest/${params['_id']}`, params);\n    }\n    getPerfTestByName(name) {\n      const ID = this.sso.getOrg(this.sso.getOrgId());\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/cafIITest?${ID}name=${name}`);\n    }\n    checkdeviceCafCapabilityBySN(sn) {\n      const ID = this.sso.getOrg(this.sso.getOrgId());\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/cafCapability?${ID}deviceSn=${sn}`);\n    }\n    checkdeviceBySN(sn) {\n      const ID = this.sso.getOrg(this.sso.getOrgId());\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/checkdevice?${ID}deviceSn=${sn}`);\n    }\n    download(testId) {\n      const ID = this.sso.getOrg(this.sso.getOrgId());\n      return this.http.get(`${environment.SUPPORT_URL}/netops-perf-testing/testResult/zip?${ID}testId=${testId}`);\n    }\n  }\n  PerformanceServiceService.ɵfac = function PerformanceServiceService_Factory(t) {\n    return new (t || PerformanceServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  PerformanceServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PerformanceServiceService,\n    factory: PerformanceServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return PerformanceServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}