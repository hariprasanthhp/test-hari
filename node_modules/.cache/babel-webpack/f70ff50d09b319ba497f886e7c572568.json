{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { fromEvent, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app//shared/services/custom-translate.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"angular-datatables\";\nconst _c0 = [\"searchAlarmsInput\"];\nconst _c1 = [\"checkAllViewChild\"];\nfunction AlarmGroupsDatatableComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵlistener(\"click\", function AlarmGroupsDatatableComponent_span_5_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearSearch();\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AlarmGroupsDatatableComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AlarmGroupsDatatableComponent_div_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.addRemoveSelectedAlarmList(\"add\", ctx_r9.alarmData == null ? null : ctx_r9.alarmData.table);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"img\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.canAdd);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[\"Add Selected\"], \" \");\n  }\n}\nfunction AlarmGroupsDatatableComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AlarmGroupsDatatableComponent_div_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.addRemoveSelectedAlarmList(\"remove\", ctx_r11.alarmData == null ? null : ctx_r11.alarmData.table);\n    });\n    i0.ɵɵelement(2, \"img\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.canRemove);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.language[\"Remove Selected\"], \" \");\n  }\n}\nfunction AlarmGroupsDatatableComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵelementStart(4, \"div\", 32);\n    i0.ɵɵelementStart(5, \"span\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.language.Loading);\n  }\n}\nfunction AlarmGroupsDatatableComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function AlarmGroupsDatatableComponent_tr_33_Template_input_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r14 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onCheckRow(ctx_r15.alarmData == null ? null : ctx_r15.alarmData.tableType, $event, i_r14);\n    })(\"ngModelChange\", function AlarmGroupsDatatableComponent_tr_33_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const alarm_r13 = restoredCtx.$implicit;\n      return alarm_r13[\"isChecked\"] = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alarm_r13 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", alarm_r13[\"isChecked\"])(\"disabled\", alarm_r13[\"disabled\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alarm_r13.alarm_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alarm_r13.alarm_category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alarm_r13[\"severity\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alarm_r13[\"alarm_id\"]);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    showHideTable: a0\n  };\n};\nexport let AlarmGroupsDatatableComponent = /*#__PURE__*/(() => {\n  class AlarmGroupsDatatableComponent {\n    constructor(translateService, customTranslateService) {\n      this.translateService = translateService;\n      this.customTranslateService = customTranslateService;\n      this.canShowTableBody = false;\n      this.searchAlarm = undefined;\n      this.searchCategory = undefined;\n      this.searchSeverity = undefined;\n      this.language = {};\n      this.dtOptions = {};\n      this.dtTrigger = new Subject();\n      this.canAdd = false;\n      this.canRemove = false;\n      this.addRemoveAlarmList = new EventEmitter();\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n      this.germanTable = this.translateService.de_DE;\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        setTimeout(() => {\n          this._alarmData = Object.assign({}, this._alarmData);\n          this.alarmData = Object.assign({}, this.alarmData);\n        }, 1000);\n        this.tableLanguageOptions();\n        this.rerender();\n      });\n    }\n    set alarmData(value) {\n      this._alarmData = value;\n    }\n    get alarmData() {\n      return this._alarmData;\n    }\n    ngOnInit() {\n      jQuery.fn['dataTable'].ext.type.detect.unshift(function (d) {\n        return d === 'CRITICAL' || d === 'MAJOR' || d === 'MINOR' || d === 'WARNING' || d === 'INFO' ? 'severity-order' : null;\n      });\n      jQuery.fn['dataTable'].ext.type.order['severity-order-pre'] = function (d) {\n        switch (d) {\n          case 'CRITICAL':\n            return 1;\n          case 'MAJOR':\n            return 2;\n          case 'MINOR':\n            return 3;\n          case 'WARNING':\n            return 4;\n          case 'INFO':\n            return 5;\n        }\n        return 0;\n      };\n      if (this.alarmData.rerenderSubject) {\n        this.alarmData.rerenderSubject.subscribe(v => {\n          var _a;\n          this.rerender(true);\n          this.onCheckRow((_a = this.alarmData) === null || _a === void 0 ? void 0 : _a.tableType, undefined, -1);\n        });\n      }\n      this.renderTable(true);\n      if (this.canShowTableBodyInputSubject) {\n        this.canShowTableBodyInputSubject.subscribe(v => {\n          this.canShowTableBody = true;\n        });\n      }\n    }\n    ngAfterViewInit() {\n      fromEvent(this.searchAlarmsInput.nativeElement, 'keyup').pipe(filter(Boolean), debounceTime(1500), distinctUntilChanged(), tap(event => {\n        var _a;\n        this.searchAlarms(this.searchAlarmsInput.nativeElement.value, (_a = this.alarmData) === null || _a === void 0 ? void 0 : _a.table);\n      })).subscribe();\n    }\n    ngOnChanges(changes) {\n      if (!this.alarmData.searchCategory && !this.searchSeverity) {\n        if (changes.alarmData && changes.alarmData.currentValue) {\n          this.alarmData = changes.alarmData.currentValue;\n          this._actAlarmData = [...changes.alarmData.currentValue.data];\n        } else {\n          this.alarmData = changes.alarmData.currentValue;\n        }\n      }\n      if (this.alarmData.searchCategory && this.alarmData.searchCategory != '') {\n        // this.searchCustomData('category');\n        this.searchAlarms(this.alarmData.searchCategory, 'category');\n      }\n      if (this.searchSeverity && this.searchSeverity != '') {\n        // this.searchCustomData('severity');\n        this.searchAlarms(this.searchSeverity, 'severity');\n      }\n      if (this.searchAlarm && this.searchAlarm != '') {\n        this.searchAlarms(this.searchAlarm);\n      }\n    }\n    renderTable(rerender) {\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthChange: true,\n        processing: false,\n        dom: 'tipr',\n        order: [3, 'asc'],\n        columnDefs: this.alarmData.columnDefs\n        // columnDefs: [{ targets: [0], orderable: false }],\n        // columns : this.alarmData.columns\n      };\n\n      this.tableLanguageOptions();\n      setTimeout(() => {\n        this.dtTrigger.next();\n        this.rerender();\n      }, 200);\n      setTimeout(() => {\n        this.canShowTableBody = true;\n      }, 2500);\n    }\n    rerender(canShowTableBody) {\n      var _a;\n      if (canShowTableBody) {\n        this.canShowTableBody = false;\n      }\n      if (this.dtElement && ((_a = this.dtElement) === null || _a === void 0 ? void 0 : _a.dtInstance)) {\n        this.dtElement.dtInstance.then(dtInstance => {\n          // Destroy the table first\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n      }\n      if (canShowTableBody) {\n        setTimeout(() => {\n          this.canShowTableBody = true;\n        }, 2000);\n      }\n      if (canShowTableBody) {\n        setTimeout(() => {\n          this.handleCheckAll();\n        }, 2000);\n      }\n    }\n    handleCheckAll() {\n      let that = this;\n      let allSelected;\n      let tableColumn = 'alarm_id',\n        tableColumnIndex = 4;\n      if (that.alarmData.data.length > 0) {\n        that.checkAllViewChild.nativeElement.checked = true;\n        allSelected = true;\n      } else {\n        that.checkAllViewChild.nativeElement.checked = false;\n        allSelected = false;\n      }\n      this.dtElement.dtInstance.then(dtInstance => {\n        var _a;\n        if (((_a = dtInstance.rows({\n          search: 'applied'\n        })) === null || _a === void 0 ? void 0 : _a.data()) && dtInstance.rows({\n          search: 'applied'\n        }).data().length > 0) {\n          dtInstance.rows({\n            search: 'applied'\n          }).every(function () {\n            var data = this.data();\n            let obj = that._alarmData.data.find(el => el[tableColumn].trim() == data[tableColumnIndex].trim());\n            if (!obj['isChecked']) {\n              that.checkAllViewChild.nativeElement.checked = false;\n            }\n            if (!obj['selectedAlready']) {\n              allSelected = false;\n            }\n          });\n        } else {\n          that.checkAllViewChild.nativeElement.checked = false;\n          allSelected = false;\n        }\n        that.alarmData.allSelected = allSelected;\n      });\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.dtOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.dtOptions.language = this.esTable;\n      } else if (this.language && this.language.fileLanguage && this.language.fileLanguage == 'de_DE') {\n        this.dtOptions.language = this.germanTable;\n      } else if (this.language.fileLanguage == 'en' && this.dtOptions.language) {\n        delete this.dtOptions.language;\n      }\n    }\n    checkUncheckAll(table, event) {\n      let that = this;\n      let checked = event.target.checked;\n      let tableColumn = 'alarm_id',\n        tableColumnIndex = 4;\n      // page:'current',\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.rows({\n          \"search\": \"applied\"\n        }).every(function () {\n          var data = this.data();\n          let obj = that._alarmData.data.find(el => el[tableColumn].trim() == data[tableColumnIndex].trim());\n          if (obj) {\n            if (checked || !checked && !obj['disabled']) {\n              obj['isChecked'] = checked;\n            }\n          }\n        });\n      });\n      // this._alarmData.data.forEach((element) => {\n      //   if (checked || (!checked && !element['disabled'])) {\n      //     element['isChecked'] = checked;\n      //   }\n      // });\n      if (table == 'monitored') {\n        this.canRemove = checked;\n      } else {\n        this.canAdd = checked;\n      }\n      this.alarmData.data = [...this._alarmData.data];\n    }\n    onCheckRow(table, event, index) {\n      var _a;\n      if (event) {\n        this.alarmData.data[index]['isChecked'] = ((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.checked) ? event.target.checked : false;\n      }\n      if (table == 'monitored') {\n        this.canRemove = false;\n        if (this.alarmData.data.some(el => el['isChecked'])) {\n          this.canRemove = true;\n        }\n      } else if (table == 'non-monitored') {\n        this.canAdd = false;\n        this.alarmData.data.forEach(element => {\n          if (!element['selectedAlready'] && element['isChecked']) {\n            this.canAdd = true;\n          }\n        });\n      }\n    }\n    searchAlarms(term, type) {\n      this.canShowTableBody = false;\n      let columnIndex = 0;\n      if (type == 'category' || type == 'severity') {\n        if (term && term != '') {\n          if (typeof term == 'string') {\n            term = term;\n          } else {\n            term = term['id'];\n          }\n        } else {\n          term = '';\n        }\n        if (type == 'category') {\n          columnIndex = 2;\n          this.alarmData.searchCategory = term != '' ? term : undefined;\n          // this.searchSeverity = undefined;\n        } else {\n          columnIndex = 3;\n          // this.alarmData.searchCategory = undefined;\n          this.searchSeverity = term != '' ? term : undefined;\n          if (term && term != '') {\n            if (typeof term == 'string') {\n              term = term;\n            } else {\n              term = term['id'];\n            }\n            term = term.toUpperCase();\n          } else {\n            term = '';\n          }\n        }\n      } else {\n        columnIndex = 1;\n        this.searchAlarm = term;\n      }\n      //Disable individuals alarms check boxes if category / severity are undefined\n      if (this.alarmData.table == 'group') {\n        this.disableIndividualAlarmsCheckBoxes(true);\n      }\n      // if((!this.alarmData.searchCategory && this.searchSeverity) || (!this.searchSeverity && this.alarmData.searchCategory)){\n      //   this.rerender(true);\n      // }\n      setTimeout(() => {\n        this.dtElement.dtInstance.then(dtInstance => {\n          dtInstance.columns(columnIndex).search(term).draw();\n        });\n      });\n      setTimeout(() => {\n        this.handleCheckAll();\n        this.canShowTableBody = true;\n      }, 1500);\n    }\n    disableIndividualAlarmsCheckBoxes(hasSearch) {\n      let that = this;\n      let canSaveRemove = false;\n      that._alarmData.data.forEach(element => {\n        if (hasSearch && !element['selectedAlready']) {\n          element['disabled'] = false;\n          if (\n          // ((that.alarmData.searchSeverity &&\n          //   (that.alarmData.searchSeverity ==\n          //     that.alarmData.prevSearchSeverity ||\n          //     !that.alarmData.prevSearchSeverity)) ||\n          //   (that.alarmData.searchCategory &&\n          //     (that.alarmData.searchCategory ==\n          //       that.alarmData.prevSearchCategory ||\n          //       !that.alarmData.prevSearchCategory))) &&\n          element['isChecked']) {\n            // if (that.alarmData.searchSeverity) {\n            // if (\n            //   element['severity'] != that.alarmData.searchSeverity.toUpperCase()\n            // ) {\n            // element['isChecked'] = false;\n            // }\n            // } else if (that.alarmData.searchCategory) {\n            // if (element['category'] != that.alarmData.searchCategory) {\n            element['isChecked'] = false;\n            // }\n            // }\n          }\n        }\n        // else {\n        //   element['disabled'] = true;\n        // }\n      });\n\n      if (hasSearch) {\n        // if (that.alarmData.table == 'monitored') {\n        //   that.canRemove = checked;\n        // } else {\n        let searchItem = '',\n          searchId = '';\n        that.canAdd = false;\n        if (that.alarmData.searchCategory) {\n          searchItem = that.alarmData.searchCategory;\n          searchId = 'category';\n        }\n        if (that.alarmData.searchCategory && that.alarmData.searchCategory != '') {\n          if (!that._alarmData.data.filter(el => el.isChecked && searchItem == el[searchId]).every(el => el.selectedAlready)) {\n            that.canAdd = true;\n          } else {\n            that.canAdd = false;\n          }\n        }\n        // }\n        that.alarmData.allSelected = false;\n      } else {\n        that.alarmData.allSelected = true;\n      }\n      that.alarmData.data = [...that._alarmData.data];\n    }\n    addRemoveSelectedAlarmList(mode, table) {\n      this.canShowTableBody = false;\n      this.addRemoveAlarmList.emit({\n        mode: mode,\n        table: table\n      });\n    }\n    clearSearch() {\n      this.searchAlarms('', this.alarmData.table);\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n      this.dtTrigger.unsubscribe();\n    }\n  }\n  AlarmGroupsDatatableComponent.ɵfac = function AlarmGroupsDatatableComponent_Factory(t) {\n    return new (t || AlarmGroupsDatatableComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.CustomTranslateService));\n  };\n  AlarmGroupsDatatableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlarmGroupsDatatableComponent,\n    selectors: [[\"app-alarm-groups-datatable\"]],\n    viewQuery: function AlarmGroupsDatatableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchAlarmsInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkAllViewChild = _t.first);\n      }\n    },\n    inputs: {\n      canShowTableBodyInputSubject: \"canShowTableBodyInputSubject\",\n      alarmData: \"alarmData\"\n    },\n    outputs: {\n      addRemoveAlarmList: \"addRemoveAlarmList\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 34,\n    vars: 20,\n    consts: [[1, \"row\", \"justify-content-between\"], [1, \"col-12\", \"row\", \"pr-1\", \"pl-0\", \"ml-0\", \"mr-0\"], [1, \"ccl-form\", \"col-md-6\", \"pl-0\"], [\"type\", \"search\", \"id\", \"org-list-search\", 1, \"ccl-input\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"searchAlarmsInput\", \"\"], [\"aria-hidden\", \"true\", \"class\", \"custom-clear\", 3, \"click\", 4, \"ngIf\"], [1, \"serach-but\", \"btn-default\", \"primary\", \"btn-icon-md\", \"inline\", \"cursor-deft\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [\"class\", \"col-md-6 pr-0 text-right\", 4, \"ngIf\"], [1, \"drop-down-element\"], [1, \"row\"], [1, \"col-md-6\", \"pl-0\", \"mt-3\"], [1, \"ccl-form\"], [\"bindValue\", \"id\", \"bindLabel\", \"name\", 3, \"ngModel\", \"placeholder\", \"items\", \"ngModelChange\", \"change\", \"input\"], [\"class\", \"row mb-3\", 4, \"ngIf\"], [1, \"overflow-auto\", \"w-100\"], [\"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", \"dataTable\", \"custom-form-table\", \"alarm-table-alt\", 3, \"ngClass\", \"dtTrigger\", \"dtOptions\"], [\"scope\", \"col\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"name\", \"alarmCheckAll\", \"id\", \"alarmCheckAll\", 3, \"checked\", \"disabled\", \"click\"], [\"checkAllViewChild\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"custom-clear\", 3, \"click\"], [1, \"col-md-6\", \"pr-0\", \"text-right\"], [\"type\", \"button\", \"id\", \"nextbtn\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"primary\", \"px-3\", \"mr-2\", 3, \"disabled\", \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [\"type\", \"button\", \"id\", \"nextbtn\", 1, \"btn-arrow\", \"btn-arr-nxt\", \"px-3\", \"ml-2\", \"primary\", 3, \"disabled\", \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\", 1, \"mr-2\", \"ml-0\", 2, \"transform\", \"rotate(180deg)\"], [1, \"row\", \"mb-3\"], [1, \"col-md-12\"], [1, \"loader\", \"mt-5\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"type\", \"checkbox\", \"name\", \"alarm_name\", 3, \"ngModel\", \"disabled\", \"click\", \"ngModelChange\"]],\n    template: function AlarmGroupsDatatableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AlarmGroupsDatatableComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.searchAlarm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, AlarmGroupsDatatableComponent_span_5_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵelement(7, \"i\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, AlarmGroupsDatatableComponent_div_8_Template, 4, 2, \"div\", 8);\n        i0.ɵɵtemplate(9, AlarmGroupsDatatableComponent_div_9_Template, 4, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelementStart(13, \"div\", 12);\n        i0.ɵɵelementStart(14, \"ng-select\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AlarmGroupsDatatableComponent_Template_ng_select_ngModelChange_14_listener($event) {\n          return ctx.alarmData.searchCategory = $event;\n        })(\"change\", function AlarmGroupsDatatableComponent_Template_ng_select_change_14_listener($event) {\n          return ctx.searchAlarms($event, \"category\");\n        })(\"input\", function AlarmGroupsDatatableComponent_Template_ng_select_input_14_listener($event) {\n          return ctx.searchAlarms($event, \"category\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, AlarmGroupsDatatableComponent_div_15_Template, 7, 1, \"div\", 14);\n        i0.ɵɵelementStart(16, \"div\", 15);\n        i0.ɵɵelementStart(17, \"table\", 16);\n        i0.ɵɵelementStart(18, \"thead\");\n        i0.ɵɵelementStart(19, \"tr\");\n        i0.ɵɵelementStart(20, \"th\", 17);\n        i0.ɵɵelementStart(21, \"div\", 18);\n        i0.ɵɵelementStart(22, \"input\", 19, 20);\n        i0.ɵɵlistener(\"click\", function AlarmGroupsDatatableComponent_Template_input_click_22_listener($event) {\n          return ctx.checkUncheckAll(ctx.alarmData == null ? null : ctx.alarmData.tableType, $event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\", 17);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\", 17);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\", 17);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\", 17);\n        i0.ɵɵtext(31, \"Alarm Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"tbody\");\n        i0.ɵɵtemplate(33, AlarmGroupsDatatableComponent_tr_33_Template, 12, 6, \"tr\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[ctx.alarmData == null ? null : ctx.alarmData.searchPlaceHolder] || (ctx.alarmData[\"searchPlaceHolder\"] ? ctx.alarmData.searchPlaceHolder : \"\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.searchAlarm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.searchAlarm && ctx.searchAlarm.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.alarmData == null ? null : ctx.alarmData.tableType) == \"non-monitored\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.alarmData == null ? null : ctx.alarmData.tableType) == \"monitored\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[ctx.alarmData == null ? null : ctx.alarmData.searchCategoryPlaceHolder]);\n        i0.ɵɵproperty(\"ngModel\", ctx.alarmData.searchCategory)(\"items\", ctx.alarmData == null ? null : ctx.alarmData.categoryList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.canShowTableBody);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c2, !ctx.canShowTableBody))(\"dtTrigger\", ctx.dtTrigger)(\"dtOptions\", ctx.dtOptions);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"checked\", ctx.alarmData.allSelected)(\"disabled\", ctx.alarmData.allSelected || (ctx.alarmData == null ? null : ctx.alarmData.data.length) == 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Alarm Name\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language.Category);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.language[\"Severity\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.alarmData.data);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgIf, i5.NgSelectComponent, i6.DataTableDirective, i4.NgClass, i4.NgForOf, i3.CheckboxControlValueAccessor],\n    styles: [\".dataTable[_ngcontent-%COMP%]{width:100%!important}.drop-down-element[_ngcontent-%COMP%]{width:100%}.drop-down-element[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.alarm-table-alt[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding-top:5px!important;padding-bottom:5px!important}  .ng-clear-wrapper{display:block}.showHideTable[_ngcontent-%COMP%]{visibility:hidden}.custom-clear[_ngcontent-%COMP%]{position:absolute;right:69px;top:7px;z-index:999;cursor:pointer;width:20px;height:20px;text-align:center}.cursor-deft[_ngcontent-%COMP%]{cursor:default}\"]\n  });\n  return AlarmGroupsDatatableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}