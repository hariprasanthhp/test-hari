{"ast":null,"code":"import * as Highcharts from 'highcharts/highstock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/support-wifi.service\";\nimport * as i2 from \"../../services/support-wifi-chart-options.service\";\nimport * as i3 from \"src/app/sys-admin/services/common.service\";\nimport * as i4 from \"src/app-services/translate.service\";\nimport * as i5 from \"src/app/shared-utils/date-utils.service\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"@angular/common\";\nfunction ChannelScoreComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"div\", 9);\n    i0.ɵɵelement(3, \"span\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelScoreComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ChannelScoreComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction ChannelScoreComponent_div_2_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 22);\n    i0.ɵɵlistener(\"click\", function ChannelScoreComponent_div_2_li_6_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.changeTab(false, true);\n    });\n    i0.ɵɵelementStart(1, \"a\", 20);\n    i0.ɵɵtext(2, \" 5GHz \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r6.showTab24G === false));\n  }\n}\nfunction ChannelScoreComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"ul\", 18);\n    i0.ɵɵelementStart(3, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function ChannelScoreComponent_div_2_Template_li_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.changeTab(true, true);\n    });\n    i0.ɵɵelementStart(4, \"a\", 20);\n    i0.ɵɵtext(5, \" 2.4GHz \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ChannelScoreComponent_div_2_li_6_Template, 3, 3, \"li\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r2.showTab24G === true));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.show5gWidgets);\n  }\n}\nfunction ChannelScoreComponent_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.language[\"No Channel Score data available\"]);\n  }\n}\nfunction ChannelScoreComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ChannelScoreComponent_div_6_p_1_Template, 2, 1, \"p\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.language);\n  }\n}\nexport let ChannelScoreComponent = /*#__PURE__*/(() => {\n  class ChannelScoreComponent {\n    constructor(api, options, commonOrgService, translateService, dateUtils, ssoAuthService) {\n      this.api = api;\n      this.options = options;\n      this.commonOrgService = commonOrgService;\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.ssoAuthService = ssoAuthService;\n      this.Highcharts = Highcharts;\n      this.chartData = {};\n      this.chartData5G = [];\n      this.chartData24G = [];\n      this.showChart24G = false;\n      this.showTab24G = true;\n      this.showChart = false;\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.loadChart();\n      });\n    }\n    ngOnChanges() {\n      // const chart = Highcharts.chart('channel-scores-chart-24g', this.channelScoreData);\n      // const chart1 = Highcharts.chart('channel-scores-chart-5g', this.channelData);\n      this.getStartEndDates();\n      this.loadChart();\n    }\n    loadChart() {\n      this.apiDone = false;\n      // this.start = '2020-05-01T16:00:00Z';\n      // this.end = '2020-05-30T16:00:00Z';\n      //let logs = JSON.parse(this.channelChangeLogsData);\n      this.loading = true;\n      this.api.getChannelScoreData(this.orgId, this.fsan, this.start, this.end).subscribe(res => {\n        if (res && Object.keys(res).length) {\n          this.chartData = res;\n          if (res['24g']) {\n            this.chartData24G = res['24g'];\n          }\n          if (res['5g']) {\n            this.chartData5G = res['5g'];\n          }\n          // if (this.chartData24G.length) {\n          //   this.chartOptions24G = this.options.ChannelScoreChartOptions(this.chartData24G, '2.4G', this.language, this.channelChangeLogsData, this.ssidSelfHeal, this.radioSummary);\n          //   this.Highcharts.chart('channel-scores-chart-24g', this.chartOptions24G);\n          //   this.showChart24G = true;\n          // }\n          // if (this.chartData5G.length) {\n          //   this.chartOptions5G = this.options.ChannelScoreChartOptions(this.chartData5G, '5G', this.language, this.channelChangeLogsData, this.ssidSelfHeal, this.radioSummary);\n          //   if (this.show5gWidgets) {\n          //     this.Highcharts.chart('channel-scores-chart-5g', this.chartOptions5G);\n          //   }\n          //   this.showChart5G = true;\n          // }\n          this.changeTab(this.showTab24G);\n          this.apiDone = true;\n        } else {\n          // this.showChart24G = false;\n          // this.showChart5G = false;\n          this.changeTab(this.showTab24G);\n          this.apiDone = true;\n        }\n      }, err => {\n        this.changeTab(this.showTab24G);\n        this.pageErrorHandle(err);\n        this.apiDone = true;\n        // this.showChart24G = false;\n        // this.showChart5G = false;\n      });\n    }\n\n    getStartEndDates() {\n      //returns start date as 1st day from prev  month &end date is current day\n      let date = new Date();\n      let tomorrow = new Date();\n      let monthCount = 3;\n      let firstDay = new Date(date.getFullYear(), date.getMonth() - monthCount, 1);\n      tomorrow.setDate(new Date().getDate() + 1);\n      let lastDay = tomorrow;\n      this.start = this.dateUtils.getISODate(firstDay);\n      this.end = this.dateUtils.getISODate(lastDay);\n    }\n    calculatePercentage(cData) {\n      let interfer = parseInt(cData['ChannelInterferenceTime']) ? parseInt(cData['ChannelInterferenceTime']) : 0;\n      let used = parseInt(cData['ChannelUtilization']) ? parseInt(cData['ChannelUtilization']) : 0;\n      let free = 1000 - (interfer + used);\n      let percents = {\n        interfer: 0,\n        used: 0,\n        free: 0\n      };\n      if (interfer) {\n        percents.interfer = interfer / 1000 * 100;\n      }\n      if (used) {\n        percents.used = used / 1000 * 100;\n      }\n      if (free) {\n        percents.free = free / 1000 * 100;\n      }\n      return percents;\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.ssoAuthService.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n    }\n    closeAlert() {\n      this.error = false;\n    }\n    changeTab(is24G, click) {\n      if (click && this.showTab24G === is24G) return;\n      this.loading = true;\n      this.showTab24G = is24G ? true : false;\n      let chartData = this.chartData24G,\n        type = '2.4G';\n      if (!this.showTab24G) {\n        chartData = this.chartData5G;\n        type = '5G';\n      }\n      if (chartData) {\n        this.chartOptions = this.options.ChannelScoreChartOptions(chartData, type, this.language, this.channelChangeLogsData, this.ssidSelfHeal, this.radioSummary);\n        this.Highcharts.chart('channel-scores-chart', this.chartOptions);\n        this.showChart = true;\n        this.loading = false;\n      } else {\n        this.showChart = false;\n        this.loading = false;\n      }\n    }\n  }\n  ChannelScoreComponent.ɵfac = function ChannelScoreComponent_Factory(t) {\n    return new (t || ChannelScoreComponent)(i0.ɵɵdirectiveInject(i1.SupportWifiService), i0.ɵɵdirectiveInject(i2.SupportWifiChartOptionsService), i0.ɵɵdirectiveInject(i3.CommonService), i0.ɵɵdirectiveInject(i4.TranslateService), i0.ɵɵdirectiveInject(i5.DateUtilsService), i0.ɵɵdirectiveInject(i6.SsoAuthService));\n  };\n  ChannelScoreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChannelScoreComponent,\n    selectors: [[\"app-channel-score\"]],\n    inputs: {\n      airtimeData: \"airtimeData\",\n      fsan: \"fsan\",\n      orgId: \"orgId\",\n      start: \"start\",\n      end: \"end\",\n      ssidSelfHeal: \"ssidSelfHeal\",\n      radioSummary: \"radioSummary\",\n      show5gWidgets: \"show5gWidgets\",\n      channelChangeLogsData: \"channelChangeLogsData\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 5,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger  fade show\", 4, \"ngIf\"], [\"class\", \"row mt-2\", 4, \"ngIf\"], [1, \"row\", 2, \"min-height\", \"400px\"], [\"id\", \"wifi-channelscore-container\", 1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"channel-scores-chart\", 2, \"height\", \"400px\"], [\"class\", \"col-md-12\", \"id\", \"wifi-channelscore-info-container\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"row\", \"mt-2\"], [1, \"col-md-12\", \"px-0\", \"ccl-tabs\"], [\"id\", \"tabs\", 1, \"nav\", \"nav-tabs\"], [\"id\", \"wifi-historical-airtime-24g-tab\", 1, \"nav-item\", 3, \"click\"], [1, \"nav-link\", \"small\", 3, \"ngClass\"], [\"class\", \"nav-item\", \"id\", \"wifi-historical-airtime-5g-tab\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"wifi-historical-airtime-5g-tab\", 1, \"nav-item\", 3, \"click\"], [\"id\", \"wifi-channelscore-info-container\", 1, \"col-md-12\"], [4, \"ngIf\"]],\n    template: function ChannelScoreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChannelScoreComponent_div_0_Template, 4, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, ChannelScoreComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, ChannelScoreComponent_div_2_Template, 7, 4, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, ChannelScoreComponent_div_6_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", !ctx.showChart ? \"d-none\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showChart && ctx.apiDone);\n      }\n    },\n    directives: [i7.NgIf, i7.NgClass],\n    styles: [\"\"]\n  });\n  return ChannelScoreComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}