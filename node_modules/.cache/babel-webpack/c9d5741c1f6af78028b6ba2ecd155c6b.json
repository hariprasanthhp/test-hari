{"ast":null,"code":"import { asTRBL, getMid } from '../../layout/LayoutUtil';\nimport { DEFAULT_DISTANCE } from './AutoPlaceUtil';\nvar LOW_PRIORITY = 100;\n\n/**\n * A service that places elements connected to existing ones\n * to an appropriate position in an _automated_ fashion.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function AutoPlace(eventBus, modeling) {\n  eventBus.on('autoPlace', LOW_PRIORITY, function (context) {\n    var shape = context.shape,\n      source = context.source;\n    return getNewShapePosition(source, shape);\n  });\n\n  /**\n   * Append shape to source at appropriate position.\n   *\n   * @param {djs.model.Shape} source\n   * @param {djs.model.Shape} shape\n   *\n   * @return {djs.model.Shape} appended shape\n   */\n  this.append = function (source, shape, hints) {\n    eventBus.fire('autoPlace.start', {\n      source: source,\n      shape: shape\n    });\n\n    // allow others to provide the position\n    var position = eventBus.fire('autoPlace', {\n      source: source,\n      shape: shape\n    });\n    var newShape = modeling.appendShape(source, shape, position, source.parent, hints);\n    eventBus.fire('autoPlace.end', {\n      source: source,\n      shape: newShape\n    });\n    return newShape;\n  };\n}\nAutoPlace.$inject = ['eventBus', 'modeling'];\n\n// helpers //////////\n\n/**\n * Find the new position for the target element to\n * connect to source.\n *\n * @param  {djs.model.Shape} source\n * @param  {djs.model.Shape} element\n * @param  {Object} [hints]\n * @param  {Object} [hints.defaultDistance]\n *\n * @returns {Point}\n */\nfunction getNewShapePosition(source, element, hints) {\n  if (!hints) {\n    hints = {};\n  }\n  var distance = hints.defaultDistance || DEFAULT_DISTANCE;\n  var sourceMid = getMid(source),\n    sourceTrbl = asTRBL(source);\n\n  // simply put element right next to source\n  return {\n    x: sourceTrbl.right + distance + element.width / 2,\n    y: sourceMid.y\n  };\n}","map":null,"metadata":{},"sourceType":"module"}