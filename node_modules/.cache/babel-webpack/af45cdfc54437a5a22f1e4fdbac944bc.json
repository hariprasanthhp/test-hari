{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as Highcharts from 'highcharts/highstock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/cco-foundation/foundation-home/home-chart-options.service\";\nimport * as i2 from \"src/app-services/translate.service\";\nimport * as i3 from \"src/app/shared-utils/date-utils.service\";\nimport * as i4 from \"../foundation-home.service\";\nimport * as i5 from \"src/app/shared/services/sso-auth.service\";\nimport * as i6 from \"src/app/cco/cco-home/services/home-chart-options.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common\";\nfunction SystemStatusComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelementStart(4, \"span\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction SystemStatusComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵelement(2, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SystemStatusComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SystemStatusComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n}\nconst HighchartsMore = require(\"highcharts/highcharts-more\");\nconst HighchartsExporting = require(\"highcharts/modules/exporting\");\nHighchartsMore(Highcharts);\nHighchartsExporting(Highcharts);\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let SystemStatusComponent = /*#__PURE__*/(() => {\n  class SystemStatusComponent {\n    constructor(chartOptions, translateService, dateUtils, service, sso, ccoHomeService, router) {\n      this.chartOptions = chartOptions;\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.service = service;\n      this.sso = sso;\n      this.ccoHomeService = ccoHomeService;\n      this.router = router;\n      this.Out_sysStatus = new EventEmitter();\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.error = false;\n      this.errorInfo = '';\n      this.filterDays = '7';\n      this.MODULE = 'foundation';\n      this.ORG_ID = this.sso.getOrgId();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.loadChart();\n      });\n    }\n    ngOnInit() {\n      let url = this.router.url;\n      if (url.indexOf('/cco/home/system-service-trends') > -1) {\n        this.MODULE = 'cco';\n        this.filterDays = this.ccoHomeService.filterDays;\n        this.watchFilterDays();\n        setTimeout(() => {\n          this.loadChart();\n        }, 500);\n      } else {\n        this.MODULE = 'foundation';\n        this.filterDays = '7';\n        this.loadChart();\n      }\n    }\n    ngOnChanges() {\n      //this.loadChart();\n    }\n    loadChart() {\n      this.dataAvailable = false;\n      this.loading = true;\n      this.systemStatusSub = this.service.getSystemstatusChartData(this.ORG_ID, this.filterDays).subscribe(res => {\n        var _a;\n        let chartData = res;\n        this.chartData = this.chartDataModify(chartData);\n        if (((_a = this.chartData) === null || _a === void 0 ? void 0 : _a.categories.length) === 30) {\n          this.chartOptions.getCommonSubscribersChartOptionsfor30records(this.chartData, 'Number_of_Systems', true).subscribe(res => {\n            this.chartDataOptions = res;\n            this.dataAvailable = true;\n            Highcharts.setOptions({\n              lang: {\n                thousandsSep: ','\n              }\n            });\n            setTimeout(() => {\n              this.Highcharts.chart('system-status-graph-div', this.chartDataOptions);\n              this.loading = false;\n            }, 100);\n          });\n        } else {\n          this.chartOptions.getCommonSubscribersChartOptions(this.chartData, 'Number_of_Systems', true).subscribe(res => {\n            this.chartDataOptions = res;\n            this.dataAvailable = true;\n            Highcharts.setOptions({\n              lang: {\n                thousandsSep: ','\n              }\n            });\n            setTimeout(() => {\n              this.Highcharts.chart('system-status-graph-div', this.chartDataOptions);\n              this.loading = false;\n            }, 100);\n          });\n        }\n      }, err => {\n        let series = [{\n          name: this.language['Pre_Provisioned'],\n          data: []\n        }, {\n          name: this.language['active'],\n          data: []\n        }, {\n          name: this.language['Not Checked In'],\n          data: []\n        }];\n        let data = {\n          series: series,\n          categories: []\n        };\n        this.chartOptions.getCommonSubscribersChartOptions(data, 'Number_of_Systems', true).subscribe(res => {\n          this.chartDataOptions = res;\n          this.dataAvailable = true;\n          setTimeout(() => {\n            this.Highcharts.chart('system-status-graph-div', res);\n            this.loading = false;\n          }, 100);\n        });\n        this.loading = false;\n      });\n    }\n    chartDataModify(cData) {\n      let active = [],\n        preprovision = [],\n        offline = [],\n        series = [],\n        categories = [],\n        unassociate = [];\n      let data = {};\n      cData = this.chartOptions.sortByTimestamp(cData, 'time');\n      cData.forEach(el => {\n        categories.push(this.dateUtils.getChartFormatDate(el.time, 'M/d/yy', true));\n        let url = this.router.url;\n        if (url.indexOf('/cco/home/system-service-trends') > -1) {\n          el['active'] = el.rgActive ? el.rgActive : 0;\n          el['offline'] = el.rgOffline ? el.rgOffline : 0;\n        } else {\n          el['active'] = el.active ? el.active : 0;\n          el['offline'] = el.offline ? el.offline : 0;\n        }\n        el['preprovision'] = el.preprovision ? el.preprovision : 0;\n        el['unassociate'] = el.unassociate ? el.unassociate : 0;\n        active.push(parseInt(el.active));\n        preprovision.push(parseInt(el.preprovision));\n        offline.push(el.offline);\n        unassociate.push(el.unassociate);\n      });\n      this.catelength = categories.length - 1;\n      this.catelenth = categories.length - 2;\n      this.preproval = preprovision[this.catelength];\n      this.preprobefore = preprovision[this.catelenth];\n      this.activeval = active[this.catelength];\n      this.activebefore = active[this.catelenth];\n      this.unassociate = unassociate[this.catelength];\n      this.unassociatebefore = unassociate[this.catelenth];\n      if (this.preprobefore === 0 && this.preproval != 0) {\n        this.preprovper = (this.preproval * 100).toFixed();\n      } else {\n        this.preprovper = this.setpercentage(this.preproval, this.preprobefore, 2) == '0.00' ? '0' : this.setpercentage(this.preproval, this.preprobefore, 0);\n      }\n      if (this.activebefore == 0 && this.activeval != 0) {\n        this.activeper = (this.activeval * 100).toFixed();\n      } else {\n        this.activeper = this.setpercentage(this.activeval, this.activebefore, 2) == '0.00' ? '0' : this.setpercentage(this.activeval, this.activebefore, 0);\n      }\n      if (this.unassociatebefore == 0 && this.unassociate != 0) {\n        this.unassociateper = (this.unassociate * 100).toFixed();\n      } else {\n        this.unassociateper = this.setpercentage(this.unassociate, this.unassociatebefore, 2) == '0.00' ? '0' : this.setpercentage(this.unassociate, this.unassociatebefore, 0);\n      }\n      this.systemstatus = {\n        preprovision: this.preproval == undefined ? 0 : this.preproval,\n        active: this.activeval == undefined ? 0 : this.activeval,\n        unassociate: this.unassociate == undefined ? 0 : this.unassociate,\n        preprovisionper: Math.abs(this.preprovper == 'NaN' ? 0 : this.preprovper),\n        activeper: Math.abs(this.activeper == 'NaN' ? 0 : this.activeper),\n        unassociateper: Math.abs(this.unassociateper == 'NaN' ? 0 : this.unassociateper),\n        positiveOrNegative: this.checkPositvNegativ(this.preprovper),\n        positiveOrNegativeactive: this.checkPositvNegativ(this.activeper),\n        positiveOrNegativeunassociate: this.checkPositvNegativ(this.unassociateper)\n      };\n      this.Out_sysStatus.emit(this.systemstatus);\n      if (this.MODULE && this.MODULE == 'cco') {\n        this.ccoHomeService.setSystemStatusData(this.systemstatus);\n      }\n      series = [{\n        name: this.language['Pre_Provisioned'],\n        data: preprovision\n      }, {\n        name: this.language['active'],\n        data: active\n      }, {\n        name: this.language['Not Checked In'],\n        data: offline\n      }];\n      data = {\n        series: series,\n        categories: categories\n      };\n      return data;\n    }\n    setpercentage(a, b, degit) {\n      //return ((100 * ((a - b) / ((a + b) / 2))).toFixed(degit ? degit : 0))\n      return (100 * ((a - b) / b)).toFixed(degit ? degit : 2);\n    }\n    checkPositvNegativ(returnqlickdata) {\n      if (returnqlickdata == '0') {\n        return '+';\n      }\n      if (returnqlickdata.charAt(0) == '-') return '-';else return '+';\n    }\n    closeAlert() {}\n    ngOnDestroy() {\n      this.Out_sysStatus.emit(this.systemstatus);\n      // this.dataService.setSystemSubscription(this.subscriberForm.value);\n      if (this.filterDaysSubscription) this.filterDaysSubscription.unsubscribe();\n      if (this.systemStatusSub) this.systemStatusSub.unsubscribe();\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n    watchFilterDays() {\n      this.filterDaysSubscription = this.ccoHomeService.filterDays$.subscribe(value => {\n        this.filterDays = value;\n        this.loadChart();\n      });\n    }\n  }\n  SystemStatusComponent.ɵfac = function SystemStatusComponent_Factory(t) {\n    return new (t || SystemStatusComponent)(i0.ɵɵdirectiveInject(i1.HomeChartOptionsService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.FoundationHomeService), i0.ɵɵdirectiveInject(i5.SsoAuthService), i0.ɵɵdirectiveInject(i6.HomeChartOptionsService), i0.ɵɵdirectiveInject(i7.Router));\n  };\n  SystemStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SystemStatusComponent,\n    selectors: [[\"app-system-status\"]],\n    outputs: {\n      Out_sysStatus: \"Out_sysStatus\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"loader-wrapper\"], [\"class\", \"loader-wrapper-info\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [1, \"row\", \"max-h-400\"], [\"class\", \"col-md-12\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"loader-wrapper-info\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"system-status-graph-div\", 1, \"h-315\"]],\n    template: function SystemStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SystemStatusComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, SystemStatusComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, SystemStatusComponent_div_4_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataAvailable);\n      }\n    },\n    directives: [i8.NgIf, i8.NgClass],\n    styles: [\".max-h-400[_ngcontent-%COMP%]{max-height:400px}.h-315[_ngcontent-%COMP%]{height:315px}\"]\n  });\n  return SystemStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}