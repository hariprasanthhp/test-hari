{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode, ReflectiveInjector } from '@angular/core';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { CommonFunctionsService } from './app/shared/services/common-functions.service';\nconst injector = ReflectiveInjector.resolveAndCreate([CommonFunctionsService]);\nconst cryptoService = injector.get(CommonFunctionsService);\nif (environment.production) {\n  enableProdMode();\n}\n(() => __awaiter(void 0, void 0, void 0, function* () {\n  // let obj = {\n  //   \"apiURL\": \"https://stage.api.calix.ai\",\n  //   \"validate_scope\": true,\n  //   \"isCAInstance\": false,\n  //   \"isPreproduction\": false,\n  //   \"bingMapKey\": \"U2FsdGVkX182M6l2ZKfvnILzaTRTCKZEvmzutfjEo4CWw6kxCRhk/bh7La0E9PsWn8LpOooDaoOspvMTuZA7COvf/Fm/hIot8dwI8ZypeNEJdaikjvS6iepjxx3SOCBn\",\n  //   \"gojsKey\": \"U2FsdGVkX1/9cSUNt65DnVRO/lUBfVfMeEeNbCSk0wVy8aBLTiOFpjC+VVDh5g4YMjcm48EOLLE+Qx9IJ6C7cgkIuf1drSavCrxfFZU1g72lpqLkF0x2HRwo7/MeUrb8lNuDg9dCm9HIWfAaVAvG2aA21sSLQOvw0DbQCOiRlsOlEYtN+1pNdviK+CqF3LqLNIy4UFM+0X84NP/i6UNh9gAEvR5DVmqwy35IH3LWJSVkZ2IoKmLBE89D+G+TdgON3domccc9giXwtyAvScDQ61SQ3jT1w9mARuNsiDRz6Wlba7UcvRsT9/QjE5iy5uLJzwBfyiXE7759pRzjkanqVye+atkp4NB8pRJqrxfuiGM=\",\n  //   \"xCalixClientID\": \"U2FsdGVkX1+COwn0SPW2Rk3t2I2Kz/L+/eS37LONOmFQTa5+LbajhBc//DBi9rqFD8X8wRbyXjoMdCl2lilSmQ==\",\n  //   \"X_CALIX_SECURE_CLIENTID\": \"U2FsdGVkX1/yCgnNXvX8qnM0vZiPPZJJZhh3jDjTXWN26U1H0fz9Q3VdX7cdzTKU\",\n  //   \"mailchimpClinetId\": \"U2FsdGVkX1/CwT5xCP0zUD0PA2ICiN6otF80ASOrglc=\",\n  //   \"mailchimpSecret\": \"U2FsdGVkX1+1EfNtdA4Iopr9hQEocWDtyRdH89MOtXdPE++cMJZcS4YhVsqDSlj8BP+/Di5UeVrpXBljbYriUYoE5FkQ80Llpd6o545mHbI=\",\n  //   \"APP_ID\": \"U2FsdGVkX19alf+JXP1cM7NaQKOHxdaSLIqUYRv3jp5WldBRzSCWBfD0wnLwbJW4RavPQ70GlzVQAV39JmkNmg==\",\n  //   \"APP_ID_QLIK\": \"U2FsdGVkX18uN9IRk2irqabNMg3+6LUCo/dTi43+APxJvnVkfkROb1y9JvrhwfjY\",\n  //   \"BOARD_ID_QLIK\": \"U2FsdGVkX18PF/GsWHBO8JcTIqWQgZyUc4pcXrjAamUK2b8zisKY+5x7Qhbr59+8\",\n  //   \"QLIK_SUMMARY_URL\": \"U2FsdGVkX19z/KrZv+YZuwu31S9cfAjm+f5pFaJ7rKxuYSbfIbu4tWK9FKfI5WP4s0zbBcq1xzD+Cs88bcWEh/ymLapzJzgXBpKm2t2PkAtoRdAri/PGNbG1SoSfl1XEWF0nwGDTQPCO80//baEWThSUet39l7UU/FFL74iSVm4YHWdo5Oa43KM+RyeJXbZjHuW8Q+wG4qch15RFb39JHg==\",\n  //   \"QLIK_MAP_URL\": \"U2FsdGVkX1+FnwAdBJixBrbQCEQtTHIYz6wgCfAx4ICvhJ2irErnsIOdlwzdXEdykFa8ciCn8ErzPgL3iLtTknQhr1qj9nDBPM8zOLHaNiQZ1r1UJbMVSxcaZrRBY3KduJbMwfwRETSpcZdzRrOWajO0hiSLrCJdl4Zk17xL6rs=\",\n  //   \"QLIK_SMART_TABLE_URL\": \"U2FsdGVkX18UNk+balhxEQ4rZ/LL4ihclii/ZiO4sN+/4FaRYWo/OWVNThxd/Zc9GgfxQMfQpHEhBioR02DiTp0Ys7PTUaKpEQjSiXrt7dx1WUsK4lsrBwC1UxfjoD1GfYDdYCC5vpz8LekXUv2ijaEs+HSVLe+U/7P8d/6NTPo=\",\n  //   \"QLIk_ADVANCED_URL\": \"https://clouddashboards-stg.calix.com/ticket/extensions/InfoXD_New/InfoXD_New.html?\",\n  //   \"QLIK_CONFIG\": {\n  //     \"host\": \"clouddashboards-stg.calix.com\",\n  //     \"prefix\": \"/ticket/\",\n  //     \"port\": 443,\n  //     \"isSecure\": true\n  //   },\n  //   \"CCO_DASHBOARD_STREAM_ID\": \"U2FsdGVkX1+ImOGrbX/Cgw5aK2GN3zd4i6gi0DqMxDOuhmIJMs34n5RRXVzLoXKj\",\n  //   \"CSC_DASHBOARD_STREAM_ID\": \"U2FsdGVkX18J5B9oT0FCdoy/z2Sauti00OeWfjCiHh4rTMt5pAfnugDoipH0ihAZ\",\n  //   \"hubspotclientID\": \"U2FsdGVkX1+m0TAE0ICneIk39MfzNVChFgDwN6ZXGfefxIOeZvX4BKmlkWYcdiv6bjOdRfGa58T2SlMaB93SVw==\",\n  //   \"hubspotsecret\": \"U2FsdGVkX1//RCHXDbweNUL/Fg7booQCsG4JTWiM15PSdch96mrz/2VJaII2ZKvBYoUC6yqAli45HJKuN1//KA==\",\n  //   \"constantcontactclientID\": \"U2FsdGVkX1+Ze1OqjYGivH7QNzoKjwrICJUUhoro3vPlCE3JzHErL6BwX2SSrET1GFUVaYQYS6XdyGKGaH4W9g==\",\n  //   \"highchartExportURL\": \"U2FsdGVkX1+uyufQhWKm5tve/XChvJTlxKz2adtrH937gC5yqzHBvTsdUYOPq9egU47OmqujJyiSNFRiZkHl0w==\",\n  //   \"QLIK_SUMMARY_URL_AQUI\": \"U2FsdGVkX19dE/yYS0VUIepA7hCNN27kBxl1RXrb5AhIfhEpWM9WG3XFOm7fQgRYIbS41p0iV5Ch0iCjgb/8WwVCll9UQpUx2shMdX9tXpaXxkJ5W3JolN0AaLRwIuzrQqLIcsUQcxXlfRNHnxy++i2Zrb8u3MBm8zcetNgWz5hcclbKX/EBaxcgZCCrNk2uPFBe10+7Gi9gU1gNqSg4gg==\",\n  //   \"QLIK_MAP_URL_AQUI\": \"U2FsdGVkX19UPbvOYT2sa/jYJR4g8waY6dwIpjWDSj4EOHUTvvmWsfC7V9WnVX/7tAT5yc8alms57KHpQM45W+c05mFIXbYodJNBWJouF8VNng3v9Iijgl5GhCn3yVVwKq20B01HUfmd5oJOAQxXAo/c46QBIOQ9CayvcpgKjiA=\",\n  //   \"APP_ID_PRO\": \"U2FsdGVkX18vByf74ZtyFcMhIoG/IRmNEKHtuygManEGynyTJPGIu6Um1Y9ADGAG\",\n  //   \"BOARD_ID_PRO\": \"U2FsdGVkX18O5dNVTNXuiK+fG/Hy2ZaxutMJfvJu20Bv9s5ENdGVbKBmpymsAz4T\",\n  //   \"BOARD_ID_PRO_ADV\": \"U2FsdGVkX19jSlMjRhp9z9U4M13I6rABxzLmSGU8xrsy7dS/YbZ91yxgp9cowzL5\",\n  //   \"APP_ID_AQUISITION\": \"U2FsdGVkX1/a8btb3wqXMMgQYdkocUH3nbngJESxQo+1l2EXkLJT/DOGbR+gbeVAgSUmR6/eGFLylykq/dH1xQ==\"\n  // }\n  // let newConfig = {};\n  // let keys = Object.keys(obj);\n  // keys.forEach((key) => {\n  //   newConfig[cryptoService.encryptKeys(key).toString()] = obj[key];\n  // });\n  // console.log(JSON.stringify(newConfig));\n  // console.log(cryptoService.encryptKeys('test test '));\n  // console.log(cryptoService.decryptKeys(cryptoService.encryptKeys('test test ')));\n  const response = yield fetch('assets/config/config.json?version=23.3.0');\n  //const config = await response.json();\n  let newConfig = yield response.json();\n  const configVal = Object.values(newConfig).join('');\n  newConfig = JSON.parse(cryptoService.decryptObj(configVal));\n  const config = {};\n  let keys = Object.keys(newConfig);\n  keys.forEach(key => {\n    config[cryptoService.decryptKeys(key)] = newConfig[key];\n  });\n  let uri = config.apiURL;\n  let bingMapKey = cryptoService.decryptKeys(config.bingMapKey);\n  let gojsKey = cryptoService.decryptKeys(config.gojsKey);\n  const supportURL = config.supportURL;\n  const apiURI = uri;\n  let authApiHost = apiURI + '/v1/authentication';\n  let apiHost = apiURI + '/v1/shad';\n  let billingHost = apiURI;\n  if (config.isPreproduction) {\n    environment['IS_PRE_PRODUCTION'] = true;\n  }\n  if (uri.indexOf('dev.api.calix.ai') !== -1) {\n    //console.log(\"do override the dev constants\");\n    config.imageUploadAWSAccessKey = '';\n    config.imageUploadAWSAccessSecret = '';\n    config.imageUploadBucket = '';\n    // config.SUMMARY_URL = '';\n    // config.MAP_URL = '';\n    // config.SMART_TABLE_URL = '';\n    // config.ADVANCED_URL = '';\n    // config.QLIK_CONFIG = '';\n    config.SUMMARY_URL = config.QLIK_SUMMARY_URL;\n    config.MAP_URL = config.QLIK_MAP_URL;\n    config.SMART_TABLE_URL = config.QLIK_SMART_TABLE_URL;\n    config.ADVANCED_URL = config.QLIk_ADVANCED_URL;\n    config.QLIK_CONFIG = config.QLIK_CONFIG;\n    config.TRAFFIC_SOCKET_URL = 'wss://rtwsgw-dev.calix.com';\n  } else if (uri.indexOf('stage.api.calix.ai') !== -1) {\n    //console.log(\"do override the stage constants\");\n    config.imageUploadAWSAccessKey = '';\n    config.imageUploadAWSAccessSecret = '';\n    config.imageUploadBucket = '';\n    // config.SUMMARY_URL = 'https://clouddashboards-stg.calix.com/ticket/single/?appid=19fd173e-7a31-40eb-95f9-042897b32ecf&sheet=fa36e4e1-0de5-48b5-8571-43284aca1263';\n    // config.MAP_URL = 'https://clouddashboards-stg.calix.com/ticket/single/?appid=19fd173e-7a31-40eb-95f9-042897b32ecf&obj=BMAA';\n    // config.SMART_TABLE_URL = 'https://clouddashboards-stg.calix.com/ticket/single/?appid=19fd173e-7a31-40eb-95f9-042897b32ecf&obj=tXCJYE';\n    // config.ADVANCED_URL = 'https://clouddashboards-stg.calix.com/ticket/extensions/InfoXD_New/InfoXD_New.html?';\n    // config.QLIK_CONFIG = {\n    //   \"host\": \"clouddashboards-stg.calix.com\",\n    //   \"prefix\": \"/ticket/\",\n    //   \"port\": 443,\n    //   \"isSecure\": true\n    // };\n    //read from config\n    config.SUMMARY_URL = config.QLIK_SUMMARY_URL;\n    config.MAP_URL = config.QLIK_MAP_URL;\n    config.SMART_TABLE_URL = config.QLIK_SMART_TABLE_URL;\n    config.ADVANCED_URL = config.QLIk_ADVANCED_URL;\n    config.QLIK_CONFIG = config.QLIK_CONFIG;\n    config.TRAFFIC_SOCKET_URL = 'wss://rtwsgw-stg.calix.com';\n  } else {\n    if (config.isCAInstance) {\n      //console.log(\"do override the ca-prod constants\");\n      config.imageUploadAWSAccessKey = '';\n      config.imageUploadAWSAccessSecret = '';\n      config.imageUploadBucket = '';\n      config.SUMMARY_URL = config.QLIK_SUMMARY_URL;\n      config.MAP_URL = config.QLIK_MAP_URL;\n      config.SMART_TABLE_URL = config.QLIK_SMART_TABLE_URL;\n      config.ADVANCED_URL = config.QLIk_ADVANCED_URL;\n      config.QLIK_CONFIG = config.QLIK_CONFIG;\n    } else {\n      //console.log(\"do override the us-prod constants\");\n      config.imageUploadAWSAccessKey = '';\n      config.imageUploadAWSAccessSecret = '';\n      config.imageUploadBucket = '';\n      // config.SUMMARY_URL = 'https://clouddashboards-us.calix.com/ticket/single/?appid=ef6d021a-c172-4569-918a-c72792889c82&sheet=fa36e4e1-0de5-48b5-8571-43284aca1263';\n      // config.MAP_URL = 'https://clouddashboards-us.calix.com/ticket/single/?appid=ef6d021a-c172-4569-918a-c72792889c82&obj=BMAA';\n      // config.SMART_TABLE_URL = 'https://clouddashboards-us.calix.com/ticket/single/?appid=ef6d021a-c172-4569-918a-c72792889c82&obj=tXCJYE';\n      // config.ADVANCED_URL = 'https://clouddashboards-us.calix.com/ticket/extensions/InfoXD_New/InfoXD_New.html?';\n      // config.QLIK_CONFIG = {\n      //   \"host\": \"clouddashboards-us.calix.com\",\n      //   \"prefix\": \"/ticket/\",\n      //   \"port\": 443,\n      //   \"isSecure\": true\n      // };\n      config.SUMMARY_URL = config.QLIK_SUMMARY_URL;\n      config.MAP_URL = config.QLIK_MAP_URL;\n      config.SMART_TABLE_URL = config.QLIK_SMART_TABLE_URL;\n      config.ADVANCED_URL = config.QLIk_ADVANCED_URL;\n      config.QLIK_CONFIG = config.QLIK_CONFIG;\n    }\n  }\n  let ssoApiHost = apiURI;\n  let port = window.location.port;\n  let uibaseUrl = ('https:' == document.location.protocol ? 'https://' : 'http://') + location.hostname;\n  let uibaseUrlWOH = ('https:' == document.location.protocol ? 'https://' : 'http://') + location.hostname;\n  if (port) {\n    uibaseUrl += ':' + port;\n    uibaseUrlWOH += ':' + port;\n  }\n  const cmcApiHost = apiURI + '/v1/cmc/';\n  environment.API_BASE_URL = apiURI + '/v1/';\n  environment['apiHost'] = apiHost;\n  environment['API_BASE'] = apiURI;\n  environment['API_DOMAIN_NAME'] = apiHost;\n  environment['ADMIN_API_BASE_URL'] = apiHost + '/map/v1/admin/calix';\n  environment['SP_API_BASE_URL'] = apiHost;\n  environment['BILLING_API_BASE_URL'] = billingHost + '/map/v1/internal';\n  environment['BING_API_KEY'] = bingMapKey;\n  environment['GO_JS_KEY'] = gojsKey;\n  environment['MOBILE_API_BASE_URL'] = apiHost + '/map/v1/mobile';\n  environment['SSO_API_URL'] = ssoApiHost;\n  environment['X_CALIX_CLIENTID'] = cryptoService.decryptKeys(config.xCalixClientID);\n  environment['faAdminURL'] = apiURI + '/v1/fa/config/';\n  environment['calixAdminURL'] = apiURI + '/v1/admin/';\n  environment['faFrontEnd'] = apiURI + '/v1/fa/';\n  environment['cmcBaseURL'] = apiURI + '/v1/cmc/';\n  environment['AUTH_API_HOST'] = authApiHost;\n  environment['UI_BASE_URL'] = uibaseUrl;\n  environment['CMC_API_BASE_URL'] = cmcApiHost;\n  environment['faAdminCorrelatorURL'] = apiURI + '/v1/fa/correlator/';\n  environment['CALIX_ADMIN_BASE_URL'] = apiURI + '/v1/admin/';\n  environment['CALIX_ADMIN_ORG_BASE_URL'] = apiURI + '/v1/org/admin/';\n  environment['FA_API_BASE_URL'] = apiURI + '/v1/fa/';\n  environment['X_CALIX_SECURE_CLIENTID'] = cryptoService.decryptKeys(config.X_CALIX_SECURE_CLIENTID);\n  //environment['CSC_BASE_URL'] = `${cscUri}`;\n  //environment['CSC_LOGOUT_URL'] = `${cscUri}/logout`;\n  environment['CMC_DOWNLOAD_CSV_URL'] = uibaseUrlWOH + '/download/';\n  environment['TOS_API_URL'] = apiURI + '/v1/calix/authz/tos';\n  environment['FLOW_BASE_URL'] = apiURI + '/v1/flow/';\n  environment['IMAGE_UPLOAD_AWS_ACCESS_KEY'] = config.imageUploadAWSAccessKey;\n  environment['IMAGE_UPLOAD_AWS_ACCESS_SECRET'] = config.imageUploadAWSAccessSecret;\n  environment['IMAGE_UPLOAD_BUCKET'] = config.imageUploadBucket;\n  environment['CMC_DOWNLOAD_CSV_BUCKET'] = '';\n  environment['CMC_DOWNLOAD_CSV_AWS_ACCESS_KEY'] = '';\n  environment['CMC_DOWNLOAD_CSV_AWS_ACCESS_SECRET'] = '';\n  environment['SYS_ADMIN_ROUTE'] = 'systemAdministration';\n  environment['ORG_ADMIN_ROUTE'] = 'organization-admin';\n  environment['SUPPORT_URL'] = `${uri}/v1/csc`;\n  environment['UI_ASSETS_URL'] = `${uibaseUrl}/assets`;\n  environment['VALIDATE_SCOPE'] = config.validate_scope ? config.validate_scope : false;\n  environment['CALIX_URL'] = apiURI + '/v1/calix/';\n  // QLIK CONFIG\n  environment['SUMMARY_URL'] = config.SUMMARY_URL ? cryptoService.decryptKeys(config.SUMMARY_URL) : '';\n  environment['MAP_URL'] = config.MAP_URL ? cryptoService.decryptKeys(config.MAP_URL) : '';\n  environment['SMART_TABLE_URL'] = config.SMART_TABLE_URL ? cryptoService.decryptKeys(config.SMART_TABLE_URL) : '';\n  environment['ADVANCED_URL'] = config.ADVANCED_URL;\n  environment['APP_ID'] = config.APP_ID ? cryptoService.decryptKeys(config.APP_ID) : '';\n  environment['QLIK_CONFIG'] = config.QLIK_CONFIG;\n  environment['APP_ID_QLIK'] = config.APP_ID_QLIK ? cryptoService.decryptKeys(config.APP_ID_QLIK) : '';\n  environment['BOARD_ID_QLIK'] = config.BOARD_ID_QLIK ? cryptoService.decryptKeys(config.BOARD_ID_QLIK) : '';\n  environment['QLIK_SUMMARY_URL_AQUI'] = config.QLIK_SUMMARY_URL_AQUI ? cryptoService.decryptKeys(config.QLIK_SUMMARY_URL_AQUI) : '';\n  environment['QLIK_MAP_URL_AQUI'] = config.QLIK_MAP_URL_AQUI ? cryptoService.decryptKeys(config.QLIK_MAP_URL_AQUI) : '';\n  environment['APP_ID_PRO'] = config.APP_ID_PRO ? cryptoService.decryptKeys(config.APP_ID_PRO) : '';\n  environment['BOARD_ID_PRO'] = config.BOARD_ID_PRO ? cryptoService.decryptKeys(config.BOARD_ID_PRO) : '';\n  environment['BOARD_ID_PRO_ADV'] = config.BOARD_ID_PRO_ADV ? cryptoService.decryptKeys(config.BOARD_ID_PRO_ADV) : '';\n  environment['APP_ID_AQUISITION'] = config.APP_ID_AQUISITION ? cryptoService.decryptKeys(config.APP_ID_AQUISITION) : '';\n  environment['CCO_REPORTS_BASE_URL'] = apiURI + '/v1/fa-reporter/';\n  environment['MAILCHIMP_CLIENT_ID'] = cryptoService.decryptKeys(config.mailchimpClinetId);\n  environment['MAILCHIMP_CLIENT_SECRET'] = cryptoService.decryptKeys(config.mailchimpSecret);\n  environment['FA_ADMIN_CONFIG_URL'] = apiURI + '/v1/fa-config/';\n  environment['FOUNDATION_BASE_URL'] = apiURI + '/v1/foundation/';\n  environment['TRAFFIC_SOCKET_URL'] = config.TRAFFIC_SOCKET_URL;\n  environment['FOUNDATION_SERVICES_URL'] = apiURI + '/v1/billing/';\n  //To Enable/Disable Foundation Scope\n  environment['VALIDATE_FOUNDATION_SCOPE'] = true;\n  //console.log(environment['VALIDATE_FOUNDATION_SCOPE'], 'VALIDATE_FOUNDATION_SCOPE');\n  environment['COC_SERVICES_ACTIVATION_URL'] = `${apiURI}/v2/svc/activation`;\n  environment['HUBSPOT_CLIENT_ID'] = cryptoService.decryptKeys(config.hubspotclientID);\n  environment['HUBSPOT_CLIENT_SECRET_ID'] = cryptoService.decryptKeys(config.hubspotsecret);\n  environment['CCO_DASHBOARD_STREAM_ID'] = cryptoService.decryptKeys(config.CCO_DASHBOARD_STREAM_ID);\n  environment['CSC_DASHBOARD_STREAM_ID'] = cryptoService.decryptKeys(config.CSC_DASHBOARD_STREAM_ID);\n  environment['MYCOMMUNITYIQ_URL'] = apiURI + '/v1/mycommunityiq';\n  environment['COC_SERVICE_MIGRATION_URL'] = apiURI + '/v1/cco/service-migrator';\n  environment['CONSTANT_CLIENT_ID'] = cryptoService.decryptKeys(config.constantcontactclientID);\n  environment['highchartExportURL'] = cryptoService.decryptKeys(config.highchartExportURL);\n  environment['EMBEDDING_LINK'] = cryptoService.decryptKeys(config.EMBEDDING_LINK);\n  environment['QLIK_THOUTSPOT_INSIGHTS'] = cryptoService.decryptKeys(config.QLIK_THOUTSPOT_INSIGHTS);\n  /////TS////\n  environment['QLIK_TS_BASEURL'] = config.QLIK_TS_BASEURL ? cryptoService.decryptKeys(config.QLIK_TS_BASEURL) : '';\n  environment['QLIK_TS_ADVANCE_ID'] = config.QLIK_TS_ADVANCE_ID ? cryptoService.decryptKeys(config.QLIK_TS_ADVANCE_ID) : '';\n  environment['QLIK_TS_PROSPECT_ID'] = config.QLIK_TS_PROSPECT_ID ? cryptoService.decryptKeys(config.QLIK_TS_PROSPECT_ID) : '';\n  environment['QLIK_TS_TOKEN_URL'] = config.QLIK_TS_TOKEN_URL ? cryptoService.decryptKeys(config.QLIK_TS_TOKEN_URL) : '';\n  environment['QLIK_TS_VIZID'] = config.QLIK_TS_VIZID ? cryptoService.decryptKeys(config.QLIK_TS_VIZID) : '';\n  environment['QLIK_TS_KPIID'] = config.QLIK_TS_KPIID ? cryptoService.decryptKeys(config.QLIK_TS_KPIID) : '';\n  environment['QLIK_TS_REDIRECT'] = config.QLIK_TS_REDIRECT ? cryptoService.decryptKeys(config.QLIK_TS_REDIRECT) : '';\n  __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule).catch(err => console.error(err));\n}))();\n// platformBrowserDynamic().bootstrapModule(AppModule)\n//   .catch(err => console.error(err));","map":null,"metadata":{},"sourceType":"module"}