{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport { saveAs } from 'file-saver';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"src/app/shared/services/export-excel.service\";\nimport * as i6 from \"../cco-operations-reports.service\";\nimport * as i7 from \"src/app/sys-admin/services/common.service\";\nimport * as i8 from \"src/app/flow-config/services/common-functions.service\";\nimport * as i9 from \"@angular/platform-browser\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"angular-datatables\";\nfunction MappedEndpointListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language[\"Loading\"]);\n  }\n}\nfunction MappedEndpointListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵelement(2, \"img\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MappedEndpointListComponent_div_3_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r3.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language[\"Mapped Endpoint List\"], \" \");\n  }\n}\nfunction MappedEndpointListComponent_div_3_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 23);\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_10_table_1_tbody_13_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 30);\n    i0.ɵɵelementStart(1, \"td\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(5);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r13.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r13.name ? item_r13.name : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r13.ipAddress ? item_r13.ipAddress : \"\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r13.ipAddress ? item_r13.mappedBy ? item_r13.mappedBy : \"\" : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r13.discovered === true ? ctx_r12.language.Yes : ctx_r12.language.No, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r13.isAggGroup ? item_r13.isAggGroup : \"\", \" \");\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_10_table_1_tbody_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, MappedEndpointListComponent_div_3_div_10_table_1_tbody_13_tr_1_Template, 12, 6, \"tr\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.mappedEndpointData);\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_10_table_1_tbody_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 32);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r11.language[\"No data available in table\"]);\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_10_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 26);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 27);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 27);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, MappedEndpointListComponent_div_3_div_10_table_1_tbody_13_Template, 2, 1, \"tbody\", 28);\n    i0.ɵɵtemplate(14, MappedEndpointListComponent_div_3_div_10_table_1_tbody_14_Template, 4, 1, \"tbody\", 28);\n    i0.ɵɵelement(15, \"tbody\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r9.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r9.language.Subscriber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language.ip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"Mapped By\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"flowDiscovered\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.language[\"Aggregated Groups\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r9.mappedEndpointData == null ? null : ctx_r9.mappedEndpointData.length) != 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r9.mappedEndpointData == null ? null : ctx_r9.mappedEndpointData.length) || ctx_r9.tableCount != undefined && ctx_r9.tableCount == 0 || ctx_r9.filterCount != undefined && ctx_r9.filterCount == 0);\n  }\n}\nfunction MappedEndpointListComponent_div_3_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, MappedEndpointListComponent_div_3_div_10_table_1_Template, 16, 8, \"table\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.tableCountAvailable);\n  }\n}\nfunction MappedEndpointListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, MappedEndpointListComponent_div_3_div_1_Template, 6, 1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵtemplate(3, MappedEndpointListComponent_div_3_div_3_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵelementStart(6, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function MappedEndpointListComponent_div_3_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.export();\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵtemplate(8, MappedEndpointListComponent_div_3_span_8_Template, 1, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 10);\n    i0.ɵɵtemplate(10, MappedEndpointListComponent_div_3_div_10_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.error);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isCcoReports);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language.Export, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.exportLoading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showTable);\n  }\n}\nconst $ = require('jquery');\nclass DataTablesResponse {}\nexport let MappedEndpointListComponent = /*#__PURE__*/(() => {\n  class MappedEndpointListComponent {\n    constructor(translateService, sso, router, http, exportExcel, apiService, commonOrgService, commonFunctionsService, titleService) {\n      this.translateService = translateService;\n      this.sso = sso;\n      this.router = router;\n      this.http = http;\n      this.exportExcel = exportExcel;\n      this.apiService = apiService;\n      this.commonOrgService = commonOrgService;\n      this.commonFunctionsService = commonFunctionsService;\n      this.titleService = titleService;\n      this.mappedEndpointData = [];\n      this.dtOptions = {\n        order: [0, 'asc']\n      };\n      this.loading = true;\n      this.allMappedEndpointData = [];\n      this.hasScopeAccess = false;\n      this.showTable = true;\n      this.isDev = false;\n      this.error = false;\n      this.errorInfo = \"\";\n      this.isCcoReports = true;\n      let url = this.router.url;\n      this.ORG_ID = this.sso.getOrganizationID(url);\n      this.language = this.translateService.defualtLanguage;\n      if (this.language) {\n        this.pageAvailable = true;\n      }\n      this.tableLanguageOptions();\n      this.translateSubscribe = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.tableLanguageOptions();\n        this.showTable = false;\n        setTimeout(() => {\n          this.showTable = true;\n          this.tableCount = 0;\n          this.filterCount = 0;\n          this.mappedEndpointData = [];\n          this.getTableCount();\n        }, 100);\n        //this.setFilterOptions();\n        this.setTitle(this.router.url);\n      });\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n      let base = `${environment.API_BASE}`;\n      if (base.indexOf('/dev.api.calix.ai') > -1) {\n        this.isDev = true;\n      } else {\n        this.isDev = false;\n      }\n    }\n    setTitle(url) {\n      if (window.location.pathname.indexOf('/cco/operations/') > -1) {\n        this.titleService.setTitle(`${this.language['Mapped Endpoint List']} - ${this.language['Reports']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.isCcoReports = false;\n        this.titleService.setTitle(`${this.language['Mapped Endpoint List']} - ${this.language['Reports']} - ${this.language['Traffic']} - ${this.language['flowconfiguration']} - ${this.language['administration']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      this.setTitle(this.router.url);\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE && window.location.pathname.indexOf('/cco/operations/') > -1) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.operations.report.mappedeplists') !== -1) {\n              this.hasScopeAccess = true;\n              break;\n            }\n          }\n        }\n      } else {\n        this.hasScopeAccess = true;\n      }\n      if (!this.hasScopeAccess) {\n        this.sso.setPageAccess(false);\n        this.loading = false;\n        return;\n      }\n      this.getTableCount();\n      this.tableLanguageOptions();\n    }\n    ngOnDestroy() {\n      if (this.translateSubscribe) {\n        this.translateSubscribe.unsubscribe();\n      }\n      if (this.countSubs) {\n        this.countSubs.unsubscribe();\n      }\n      if (this.filterCountSubs) {\n        this.filterCountSubs.unsubscribe();\n      }\n    }\n    getTableCount() {\n      this.countSubs = this.apiService.getMappedEndpointCount(this.ORG_ID).subscribe(data => {\n        this.tableCount = data;\n        this.tableCountAvailable = true;\n        this.tableRender();\n        // setTimeout(() => {\n        //   this.getAllMappedEndpointData()\n        // }, 2000);\n      }, err => {\n        this.tableCountAvailable = true;\n        this.tableRender();\n        this.pageErrorHandle(err);\n      });\n    }\n    getFilterCount(url) {\n      // this.filterCount = 0;\n      this.filterCountSubs = this.http.get(url).subscribe(res => {\n        this.filterCount = res;\n      }, err => {\n        if (err.status == 404) {\n          this.filterCount = 0;\n        } else {\n          this.pageErrorHandle(err);\n        }\n      });\n    }\n    tableRender() {\n      const that = this;\n      let orgId = this.ORG_ID;\n      let pageNumber;\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint`;\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        serverSide: true,\n        searching: true,\n        processing: false,\n        order: [0, 'asc'],\n        ajax: (dataTablesParameters, callback) => {\n          this.sortBy = dataTablesParameters.order[0].column;\n          this.sortType = dataTablesParameters.order[0].dir;\n          let filterUrl;\n          this.filterCount = undefined;\n          let orderBy = parseInt(this.sortBy) == 0 ? 'name' : parseInt(this.sortBy) == 1 ? 'ip' : parseInt(this.sortBy) == 2 ? 'mappedby' : parseInt(this.sortBy) == 3 ? 'discovered' : 'aggGroup';\n          if (dataTablesParameters.start == 0) {\n            pageNumber = 0;\n          } else {\n            pageNumber = dataTablesParameters.start / dataTablesParameters.length;\n          }\n          if (dataTablesParameters.search.value.length < 2 && dataTablesParameters.search.value.length > 0) {\n            return;\n          }\n          let searchString = `&searchstring=`;\n          if (dataTablesParameters.search.value && dataTablesParameters.search.value.trim()) {\n            if (dataTablesParameters.search.value.length <= 2) {\n              return;\n            }\n            pageNumber = dataTablesParameters.start / dataTablesParameters.length;\n            searchString = `&searchstring=${dataTablesParameters.search.value.trim()}`;\n            filterUrl = `${environment.faAdminCorrelatorURL}flowendpoint?count=true&org-id=${orgId}${searchString}`;\n            this.getFilterCount(filterUrl);\n          }\n          url = `${environment.faAdminCorrelatorURL}flowendpoint?org-id=${orgId}&pagenumber=${pageNumber}&pagesize=${dataTablesParameters.length}&orderby=${orderBy}${searchString}&sortdirection=${this.sortType}`;\n          that.loading = true;\n          that.http.get(url).subscribe(resp => {\n            const isArray = Array.isArray(resp);\n            if (isArray) {\n              that.mappedEndpointData = resp;\n            } else {\n              that.mappedEndpointData = [resp];\n            }\n            this.setAggGroupValue();\n            that.closeAlert();\n            that.loading = false;\n            setTimeout(() => {\n              callback({\n                recordsTotal: that.tableCount ? that.tableCount : 0,\n                recordsFiltered: that.filterCount != undefined ? that.filterCount : that.tableCount ? that.tableCount : 0,\n                data: []\n              });\n            }, 100);\n          }, err => {\n            if (err.status == 404) {\n              that.mappedEndpointData = [];\n              this.dataAvailable = true;\n              that.loading = false;\n              callback({\n                recordsTotal: that.tableCount ? that.tableCount : 0,\n                recordsFiltered: that.filterCount != undefined ? that.filterCount : that.tableCount ? that.tableCount : 0,\n                data: []\n              });\n            } else {\n              this.pageErrorHandle(err);\n              this.dataAvailable = true;\n            }\n          });\n        },\n        drawCallback: Settings => {\n          this.tableLanguageOptions();\n        },\n        columnDefs: [{\n          targets: 4,\n          orderable: false\n        }],\n        columns: [{\n          data: 'ipAddress'\n        }, {\n          data: 'ipAddress'\n        }, {\n          data: 'cmMappedBy'\n        }, {\n          data: 'discovered'\n        }, {\n          data: 'aggGroup'\n        }]\n      };\n      this.tableLanguageOptions();\n    }\n    setAggGroupValue() {\n      this.mappedEndpointData.forEach(el => {\n        var _a;\n        el['isAggGroup'] = el && el.aggGroup ? ((_a = this.commonFunctionsService) === null || _a === void 0 ? void 0 : _a.validateUUID(el === null || el === void 0 ? void 0 : el.aggGroup)) ? this.language.Yes : this.language.No : this.language.No;\n      });\n    }\n    sortData(data, by, type) {\n      let sorted = [];\n      if (by == 0) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'name');\n      } else if (by == 1) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'ipAddress');\n      } else if (by == 2) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'mappedBy');\n      } else if (by == 3) {\n        sorted = this.commonFunctionsService.sortByColumn(data, type, 'discovered');\n      }\n      // sorted = this.combineLocations(sorted);\n      return sorted;\n    }\n    combineLocations(data) {\n      data = data ? data : [];\n      let locs = [],\n        locString = '';\n      data.forEach(e => {\n        if (e.locations && e.locations.length) {\n          // e.locations.forEach(lc => {\n          //   if (lc.serviceAddress) {\n          //     locs.push(lc.serviceAddress);\n          //   }\n          // });\n          e['locString'] = this.mergeLocations(e);\n        }\n        locs = [];\n      });\n      return data;\n    }\n    mergeLocations(e) {\n      let locs = [];\n      e.locations.forEach(lc => {\n        if (lc.location) {\n          locs.push(lc.location);\n        }\n      });\n      return locs.join(', ');\n    }\n    getAllMappedEndpointData() {\n      // const calls: Observable<any>[] = [];\n      this.tableCount = this.tableCount > 0 ? this.tableCount : 1;\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint?org-id=${this.ORG_ID}&pagesize=${this.tableCount}&orderby=name`;\n      this.http.get(url).subscribe(data => {\n        this.allMappedEndpointData = data;\n        this.exportAllData();\n      }, err => {\n        this.pageErrorHandle(err);\n        this.exportLoading = false;\n        //this.exportAllData();\n      });\n      // let pageLength = 1;\n      // if (this.tableCount > 1000) {\n      //   pageLength = Math.ceil(this.tableCount / 1000);\n      // }\n      // for (let i = 0; i < pageLength; i++) {\n      //   calls.push(this.apiService.getAllMappedEndpoints(this.ORG_ID, i));\n      // }\n      // forkJoin(calls).pipe(delay(500)).subscribe(\n      //   results => {\n      //     results.forEach((el) => {\n      //       this.allMappedEndpointData = [...this.allMappedEndpointData, ...el];\n      //     });\n      //     this.exportAllData();\n      //   },\n      //   (err: HttpErrorResponse) => {\n      //     this.pageErrorHandle(err);\n      //     this.exportAllData();\n      //   }\n      // );\n    }\n\n    getAllMappedEndpointDataForExportCSV() {\n      this.tableCount = this.tableCount > 0 ? this.tableCount : 1;\n      let url = `${environment.faAdminCorrelatorURL}flowendpoint/export?orderby=name&org-id=${this.ORG_ID}&pagesize=${this.tableCount}`;\n      this.http.get(url, {\n        responseType: 'text'\n      }).subscribe(data => {\n        this.exportLoading = false;\n        const blob = new Blob([data], {\n          type: 'text/csv'\n        });\n        saveAs(blob, 'Mapped_Endpoint_List.csv');\n      }, err => {\n        this.pageErrorHandle(err);\n        this.exportLoading = false;\n      });\n    }\n    export() {\n      if (this.exportLoading) {\n        return;\n      }\n      this.exportLoading = true;\n      this.getAllMappedEndpointDataForExportCSV();\n    }\n    exportAllData() {\n      // let name = this.commonFunctionsService.generateExportName('mapped_endpoint_list');\n      let name = 'Mapped_Endpoint_List';\n      let exportData = this.allMappedEndpointData ? this.exportDataConvertor(this.allMappedEndpointData) : [];\n      let extraData = `Mapped Endpoint List\\n\\r`;\n      if (exportData.length) {\n        this.exportExcel.downLoadCSV(name, exportData, extraData);\n      } else {\n        this.exportExcel.downLoadCSV(name, [], extraData);\n      }\n      setTimeout(() => {\n        this.exportLoading = false;\n      }, 3000);\n    }\n    exportDataConvertor(array) {\n      let exportData = [];\n      array.forEach(el => {\n        exportData.push({\n          'Subscriber': el.name ? el.name : '',\n          'IP': el.ipAddress ? el.ipAddress : '',\n          'Mapped By': el.mappedBy ? el.mappedBy : '',\n          'Flow Discovered': el.discovered === true ? this.language.Yes : this.language.No,\n          'Aggregated Groups': this.commonFunctionsService.validateUUID(el.aggGroup) ? this.language.Yes : this.language.No\n        });\n      });\n      return exportData;\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.dtOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.dtOptions.language = this.esTable;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.dtOptions.language = this.translateService.de_DE;\n      } else if (this.language.fileLanguage == 'en' && this.dtOptions.language) {\n        delete this.dtOptions.language;\n      }\n    }\n    pageErrorHandle(err) {\n      this.errorInfo = '';\n      this.error = true;\n      if (err.status == 400) {\n        this.loading = false;\n      } else {\n        if (err.status == 401) {\n          this.errorInfo = this.language['Access Denied'];\n        } else {\n          this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n        }\n        this.commonOrgService.pageScrollTop();\n      }\n      this.loading = false;\n    }\n    redraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    closeAlert() {\n      this.error = false;\n      this.errorInfo = \"\";\n    }\n  }\n  MappedEndpointListComponent.ɵfac = function MappedEndpointListComponent_Factory(t) {\n    return new (t || MappedEndpointListComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.SsoAuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.ExportExcelService), i0.ɵɵdirectiveInject(i6.CcoOperationsReportsService), i0.ɵɵdirectiveInject(i7.CommonService), i0.ɵɵdirectiveInject(i8.CommonFunctionsService), i0.ɵɵdirectiveInject(i9.Title));\n  };\n  MappedEndpointListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MappedEndpointListComponent,\n    selectors: [[\"app-mapped-endpoint-list\"]],\n    viewQuery: function MappedEndpointListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[\"class\", \"loader\", 4, \"ngIf\"], [\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"container\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [1, \"row\"], [\"class\", \"col-md-12 px-0 cco-secondary-title mb-1\", 4, \"ngIf\"], [1, \"row\", \"justify-content-end\"], [1, \"col-md-2\", \"my-2\", \"text-right\"], [\"type\", \"button\", \"id\", \"export\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [\"class\", \"spinner-border spinner-border-sm\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"class\", \"col-md-12 px-0 mt-2\", 4, \"ngIf\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"col-md-12\", \"px-0\", \"cco-secondary-title\", \"mb-1\"], [\"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"col-md-12\", \"px-0\", \"mt-2\"], [\"id\", \"management-table\", \"width\", \"100%\", \"datatable\", \"\", \"class\", \"row-border hover table-alter\", 3, \"dtOptions\", 4, \"ngIf\"], [\"id\", \"management-table\", \"width\", \"100%\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\"], [1, \"max-width-120\"], [4, \"ngIf\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [1, \"td-map-subsc\"], [\"colspan\", \"5\", 1, \"no-data-available\"]],\n    template: function MappedEndpointListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MappedEndpointListComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, MappedEndpointListComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"section\");\n        i0.ɵɵtemplate(3, MappedEndpointListComponent_div_3_Template, 11, 5, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n      }\n    },\n    directives: [i10.NgIf, i11.DataTableDirective, i10.NgForOf],\n    styles: [\".dataTables_filter{display:block!important}.max-width-120[_ngcontent-%COMP%]{max-width:131px}.td-map-subsc[_ngcontent-%COMP%]{word-break:break-word;min-width:280px;max-width:400px}\"]\n  });\n  return MappedEndpointListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}