{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let DeviceService = /*#__PURE__*/(() => {\n  class DeviceService {\n    constructor(http, Sso) {\n      this.http = http;\n      this.Sso = Sso;\n      this.efficiencyChart = false;\n    }\n    getdevices(serialnumber, orgId, isRefreshed = false) {\n      const ID = this.Sso.getOrg(orgId);\n      return this.http.get(environment.SUPPORT_URL + \"/device/client/all\" + `?${ID}serialNumber=${serialnumber}${isRefreshed ? '&forceRefresh=true' : ''}`).pipe(catchError(this.handleError));\n    }\n    getDeviceDetails(orgId, serialnumber, mac) {\n      const ID = this.Sso.getOrg(orgId);\n      return this.http.get(environment.SUPPORT_URL + \"/device/client/details\" + `?${ID}serialNumber=${serialnumber}&stationMac=${mac}`).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n    getClientScore(input) {\n      const {\n        sn,\n        orgId,\n        routerMac,\n        stationMac,\n        period,\n        start,\n        end,\n        tz\n      } = input;\n      const ID = this.Sso.getOrg(orgId);\n      return this.http.get(`${environment.SUPPORT_URL}/qoe/subscriber-experience/client-efficiency-score?${ID}serialNumber=${sn}&router_mac=${routerMac}&station_mac_addr=${stationMac}&period=${period}&startTime=${start}&endTime=${end}&timeZoneOffset=${tz}`).pipe(catchError(this.handleError));\n    }\n  }\n  DeviceService.ɵfac = function DeviceService_Factory(t) {\n    return new (t || DeviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  DeviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DeviceService,\n    factory: DeviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return DeviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}