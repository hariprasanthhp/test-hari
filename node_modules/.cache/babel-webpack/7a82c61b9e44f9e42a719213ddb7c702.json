{"ast":null,"code":"'use strict';\n\n(function (factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = factory;\n  } else {\n    factory(Highcharts);\n  }\n})(function (Highcharts) {\n  (function (H) {\n    H.wrap(H.seriesTypes.column.prototype, 'translate', function (proceed) {\n      const options = this.options;\n      const topMargin = options.topMargin || 0;\n      const bottomMargin = options.bottomMargin || 0;\n      proceed.call(this);\n      H.each(this.points, function (point) {\n        if (options.borderRadiusTopLeft || options.borderRadiusTopRight || options.borderRadiusBottomRight || options.borderRadiusBottomLeft) {\n          const w = point.shapeArgs.width;\n          const h = point.shapeArgs.height;\n          const x = point.shapeArgs.x;\n          const y = point.shapeArgs.y;\n          var radiusTopLeft = H.relativeLength(options.borderRadiusTopLeft || 0, w);\n          var radiusTopRight = H.relativeLength(options.borderRadiusTopRight || 0, w);\n          var radiusBottomRight = H.relativeLength(options.borderRadiusBottomRight || 0, w);\n          var radiusBottomLeft = H.relativeLength(options.borderRadiusBottomLeft || 0, w);\n          const maxR = Math.min(w, h) / 2;\n          radiusTopLeft = radiusTopLeft > maxR ? maxR : radiusTopLeft;\n          radiusTopRight = radiusTopRight > maxR ? maxR : radiusTopRight;\n          radiusBottomRight = radiusBottomRight > maxR ? maxR : radiusBottomRight;\n          radiusBottomLeft = radiusBottomLeft > maxR ? maxR : radiusBottomLeft;\n          point.dlBox = point.shapeArgs;\n          point.shapeType = 'path';\n          point.shapeArgs = {\n            d: ['M', x + radiusTopLeft, y + topMargin, 'L', x + w - radiusTopRight, y + topMargin, 'C', x + w - radiusTopRight / 2, y, x + w, y + radiusTopRight / 2, x + w, y + radiusTopRight, 'L', x + w, y + h - radiusBottomRight, 'C', x + w, y + h - radiusBottomRight / 2, x + w - radiusBottomRight / 2, y + h, x + w - radiusBottomRight, y + h + bottomMargin, 'L', x + radiusBottomLeft, y + h + bottomMargin, 'C', x + radiusBottomLeft / 2, y + h, x, y + h - radiusBottomLeft / 2, x, y + h - radiusBottomLeft, 'L', x, y + radiusTopLeft, 'C', x, y + radiusTopLeft / 2, x + radiusTopLeft / 2, y, x + radiusTopLeft, y, 'Z']\n          };\n        }\n      });\n    });\n  })(Highcharts);\n});","map":null,"metadata":{},"sourceType":"script"}