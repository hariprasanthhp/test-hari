{"ast":null,"code":"'use strict';\n\nvar forEach = require('lodash/forEach');\n\n/**\n * A handler that combines and executes multiple commands.\n *\n * All updates are bundled on the command stack and executed in one step.\n * This also makes it possible to revert the changes in one step.\n *\n * Example use case: remove the camunda:formKey attribute and in addition\n * add all form fields needed for the camunda:formData property.\n *\n * @class\n * @constructor\n */\nfunction MultiCommandHandler(commandStack) {\n  this._commandStack = commandStack;\n}\nMultiCommandHandler.$inject = ['commandStack'];\nmodule.exports = MultiCommandHandler;\nMultiCommandHandler.prototype.preExecute = function (context) {\n  var commandStack = this._commandStack;\n  forEach(context, function (command) {\n    commandStack.execute(command.cmd, command.context);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}