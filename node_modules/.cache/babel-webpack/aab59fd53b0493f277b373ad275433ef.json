{"ast":null,"code":"import { getExternalFileServer, postExternalFileServer, deleteExternalFileServer } from './endpoint';\nimport { HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let ExternalFileServerService = /*#__PURE__*/(() => {\n  class ExternalFileServerService {\n    constructor(http, sso) {\n      this.http = http;\n      this.sso = sso;\n    }\n    // Read\n    getExternalFileServer(orgId) {\n      const params = new HttpParams();\n      // .set('orgId', orgId)\n      if (this.sso.getOrg(orgId)) {\n        params.set(\"orgId\", orgId);\n      }\n      return this.http.get(getExternalFileServer, {\n        params\n      }).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    postExternalFileServer(body) {\n      return this.http.post(postExternalFileServer, body).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    deleteExternalFileServer(orgId) {\n      const params = new HttpParams();\n      // .set('orgId', orgId)\n      if (this.sso.getOrg(orgId)) {\n        params.set(\"orgId\", orgId);\n      }\n      return this.http.delete(deleteExternalFileServer, {\n        params\n      }).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    handleError(error) {\n      // Return an observable with a user-facing error message.\n      return throwError(error);\n    }\n  }\n  ExternalFileServerService.ɵfac = function ExternalFileServerService_Factory(t) {\n    return new (t || ExternalFileServerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  ExternalFileServerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExternalFileServerService,\n    factory: ExternalFileServerService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExternalFileServerService;\n})();","map":null,"metadata":{},"sourceType":"module"}