{"ast":null,"code":"import { isReverse } from './Connect';\nvar HIGH_PRIORITY = 1100,\n  LOW_PRIORITY = 900;\nvar MARKER_OK = 'connect-ok',\n  MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * Shows connection preview during connect.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ConnectPreview(injector, eventBus, canvas) {\n  var connectionPreview = injector.get('connectionPreview', false);\n  connectionPreview && eventBus.on('connect.move', function (event) {\n    var context = event.context,\n      canConnect = context.canExecute,\n      hover = context.hover,\n      source = context.source,\n      start = context.start,\n      startPosition = context.startPosition,\n      connectionStart = context.connectionStart,\n      connectionEnd = context.connectionEnd,\n      target = context.target;\n    if (!connectionStart) {\n      connectionStart = isReverse(context) ? {\n        x: event.x,\n        y: event.y\n      } : startPosition;\n    }\n    if (!connectionEnd) {\n      connectionEnd = isReverse(context) ? startPosition : {\n        x: event.x,\n        y: event.y\n      };\n    }\n    connectionPreview.drawPreview(context, canConnect, {\n      source: source || start,\n      target: target || hover,\n      connectionStart: connectionStart,\n      connectionEnd: connectionEnd\n    });\n  });\n  eventBus.on('connect.hover', LOW_PRIORITY, function (event) {\n    var context = event.context,\n      hover = event.hover,\n      canExecute = context.canExecute;\n\n    // ignore hover\n    if (canExecute === null) {\n      return;\n    }\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\n  });\n  eventBus.on(['connect.out', 'connect.cleanup'], HIGH_PRIORITY, function (event) {\n    var hover = event.hover;\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_OK);\n      canvas.removeMarker(hover, MARKER_NOT_OK);\n    }\n  });\n  connectionPreview && eventBus.on('connect.cleanup', function (event) {\n    connectionPreview.cleanUp(event.context);\n  });\n}\nConnectPreview.$inject = ['injector', 'eventBus', 'canvas'];","map":null,"metadata":{},"sourceType":"module"}