{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as Highcharts from 'highcharts/highstock';\nimport { DatePipe } from '@angular/common';\nimport { environment } from 'src/environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport { combineLatest, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/cco/cco-home/services/data.service\";\nimport * as i2 from \"src/app/cco-foundation/foundation-home/home-chart-options.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"src/app/shared-utils/date-utils.service\";\nimport * as i5 from \"../foundation-home.service\";\nimport * as i6 from \"src/app/shared/services/sso-auth.service\";\nimport * as i7 from \"src/app/cco/cco-home/services/home-chart-options.service\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"../../foundation-systems/foundation-manage/foundation-manage.service\";\nimport * as i10 from \"src/app/sys-admin/services/common.service\";\nimport * as i11 from \"@angular/common\";\nfunction CommandIqStatusComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction CommandIqStatusComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CommandIqStatusComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nconst HighchartsMore = require(\"highcharts/highcharts-more\");\nconst HighchartsExporting = require(\"highcharts/modules/exporting\");\nHighchartsMore(Highcharts);\nHighchartsExporting(Highcharts);\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nexport let CommandIqStatusComponent = /*#__PURE__*/(() => {\n  class CommandIqStatusComponent {\n    constructor(dataService, chartOptions, translateService, dateUtils, service, sso, ccoHomeService, router, systemservice, commonOrgService) {\n      this.dataService = dataService;\n      this.chartOptions = chartOptions;\n      this.translateService = translateService;\n      this.dateUtils = dateUtils;\n      this.service = service;\n      this.sso = sso;\n      this.ccoHomeService = ccoHomeService;\n      this.router = router;\n      this.systemservice = systemservice;\n      this.commonOrgService = commonOrgService;\n      this.Out_commandIQ = new EventEmitter();\n      this.Highcharts = Highcharts;\n      this.loading = true;\n      this.error = false;\n      this.errorInfo = '';\n      this.filterDays = '7';\n      this.ORG_ID = this.sso.getOrgId();\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.loadChart();\n      });\n    }\n    ngOnInit() {\n      let url = this.router.url;\n      this.getSmartBizEntitlement();\n      if (url.indexOf('/cco/home/system-service-trends') > -1) {\n        this.filterDays = this.ccoHomeService.filterDays;\n        this.watchFilterDays();\n        setTimeout(() => {\n          this.getCommandIQDatas();\n        }, 500);\n      } else {\n        this.filterDays = '7';\n        this.getCommandIQDatas();\n      }\n    }\n    getSmartBizEntitlement() {\n      var _a;\n      //debugger;\n      let entitlement = this.sso.getEntitlements();\n      entitlement['smallBizIQ'] = entitlement[218] ? entitlement[218] : [];\n      if (entitlement && ((_a = entitlement === null || entitlement === void 0 ? void 0 : entitlement.smallBizIQ) === null || _a === void 0 ? void 0 : _a.apptype) === 218) {\n        this.smallBizIQentitlement = true;\n      } else {\n        this.smallBizIQentitlement = false;\n      }\n    }\n    ngOnChanges() {\n      //this.loadChart();\n    }\n    getCommandIQDatas() {\n      this.loading = true;\n      let requestEndpoints = [];\n      let url = this.router.url;\n      requestEndpoints.push(`${environment.FOUNDATION_BASE_URL}dashboard/ciq?days=${this.filterDays ? this.filterDays : '7'}`);\n      if (this.smallBizIQentitlement) requestEndpoints.push(`${environment.FOUNDATION_BASE_URL}dashboard/ciqbiz?days=${this.filterDays ? this.filterDays : '7'}`);\n      const requests = [];\n      requestEndpoints.forEach(endpoint => {\n        const req = this.systemservice.callRestApi(endpoint).pipe(map(res => {\n          return res;\n        }), catchError(error => {\n          return of(error);\n        }));\n        requests.push(req);\n      });\n      this.combineLatest = combineLatest(requests);\n      this.makeParallelRequest();\n    }\n    makeParallelRequest() {\n      this.parallelReqSubscribtion = this.combineLatest.subscribe(response => {\n        let url = this.router.url;\n        if (response[0] && response[0].error) {\n          this.pageErrorHandle(response[0].error);\n          this.CommandIQ = [];\n        } else {\n          let CommandIQ = response[0] ? response[0] : [];\n          this.CommandIQ = CommandIQ === null || CommandIQ === void 0 ? void 0 : CommandIQ.histories;\n        }\n        if (response[1] && response[1].error) {\n          this.pageErrorHandle(response[1].error);\n          this.CommandIQBiz = [];\n        } else {\n          let CommandIQBiz = response[1] ? response[1] : [];\n          this.CommandIQBiz = CommandIQBiz === null || CommandIQBiz === void 0 ? void 0 : CommandIQBiz.histories;\n        }\n        setTimeout(() => {\n          this.loadChart();\n        }, 500);\n      }, err => {\n        this.loading = false;\n        //this.pageErrorHandle(err);\n        this.commonOrgService.pageScrollTop();\n      });\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = this.language['Access Denied'];\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.error = true;\n    }\n    loadChart() {\n      var _a;\n      this.chartData = this.chartDataModify(this.CommandIQ, this.CommandIQBiz);\n      if (((_a = this.chartData) === null || _a === void 0 ? void 0 : _a.categories.length) === 30) {\n        this.chartOptions.getCommonSubscribersChartOptionsfor30records(this.chartData, 'Number of Subscribers', true).subscribe(res => {\n          this.chartDataOptions = res;\n          Highcharts.setOptions({\n            lang: {\n              thousandsSep: ','\n            }\n          });\n          setTimeout(() => {\n            this.Highcharts.chart('commandiq-graph-div', this.chartDataOptions);\n            this.loading = false;\n          }, 100);\n        });\n      } else {\n        this.chartOptions.getCommonSubscribersChartOptions(this.chartData, 'Number of Subscribers', true).subscribe(res => {\n          this.chartDataOptions = res;\n          Highcharts.setOptions({\n            lang: {\n              thousandsSep: ','\n            }\n          });\n          setTimeout(() => {\n            this.Highcharts.chart('commandiq-graph-div', this.chartDataOptions);\n            this.loading = false;\n          }, 100);\n        });\n      }\n    }\n    chartDataModify(cData, cData1) {\n      let value = [],\n        series = [],\n        categories = [],\n        ciqbiz = [];\n      let data = {};\n      if (cData !== undefined) {\n        cData = this.chartOptions.sortByTimestamp(cData, 'date');\n        cData.forEach(el => {\n          categories.push(this.reverseString(el.date, 'M/d/yy'));\n          //categories.push(this.reverseString(el.date, 'M/d/yy'))\n          el['count'] = el.value ? el.value : 0;\n          //el.value = el.value + Math.floor(Math.random() * 1000) + 1500;\n          value.push(parseInt(el.count));\n        });\n      }\n      if (cData1 !== undefined) {\n        cData1 = this.chartOptions.sortByTimestamp(cData1, 'date');\n        cData1.forEach(el => {\n          if (cData == undefined) {\n            // categories.push(this.dateUtils.getChartFormatDate(el.date, 'M/d/yy', true))\n            categories.push(this.reverseString(el.date, 'M/d/yy'));\n          }\n          //categories.push(this.reverseString(el.date, 'M/d/yy'))\n          el['count'] = el.value ? el.value : 0;\n          //el.value = el.value + Math.floor(Math.random() * 1000) + 1500;\n          ciqbiz.push(parseInt(el.count));\n        });\n      }\n      this.catelength = categories.length - 1;\n      this.catelenth = categories.length - 2;\n      this.commandIq = value[this.catelength] ? value[this.catelength] : 0;\n      this.commandIqbiz = ciqbiz[this.catelength] ? ciqbiz[this.catelength] : 0;\n      this.commandIqbefore = value[this.catelenth] ? value[this.catelenth] : 0;\n      this.commandIqBizbefore = ciqbiz[this.catelenth] ? ciqbiz[this.catelenth] : 0;\n      this.CIQ = this.commandIq + this.commandIqbiz;\n      this.CIQBefore = this.commandIqbefore + this.commandIqBizbefore;\n      if (this.CIQBefore == 0 && this.CIQ != 0) {\n        this.commandIqper = (this.CIQ * 100).toFixed();\n      } else {\n        this.commandIqper = this.setpercentage(this.CIQ, this.CIQBefore, 2) == '0.00' ? '0' : this.setpercentage(this.CIQ, this.CIQBefore, 0);\n      }\n      this.commandIqstatus = {\n        commandIq: this.CIQ == undefined ? 0 : this.CIQ,\n        commandIqper: Math.abs(this.commandIqper == 'NaN' ? 0 : this.commandIqper),\n        positiveOrNegative: this.checkPositvNegativ(this.commandIqper)\n      };\n      this.Out_commandIQ.emit(this.commandIqstatus);\n      if (this.smallBizIQentitlement) {\n        series = [{\n          name: 'CommandIQ',\n          data: value\n        }, {\n          name: 'CommandWorx',\n          data: ciqbiz\n        }];\n      } else {\n        series = [{\n          name: 'CommandIQ',\n          data: value\n        }];\n      }\n      data = {\n        series: series,\n        categories: categories\n      };\n      return data;\n    }\n    reverseString(str, format) {\n      //debugger;\n      var string = str.toString();\n      var month = parseInt(string.slice(4, 6)) - 1;\n      let dateObj = new Date();\n      dateObj.setFullYear(string.slice(0, 4));\n      dateObj.setMonth(month);\n      dateObj.setDate(string.slice(6, 8));\n      let pipe = new DatePipe('en-US');\n      let dateString = '';\n      if (format) {\n        dateString = `${pipe.transform(dateObj, format)}`;\n      } else {\n        dateString = `${pipe.transform(dateObj, 'MM/dd/yyyy')}`;\n      }\n      return dateString;\n    }\n    setpercentage(a, b, degit) {\n      //return ((100 * ((a - b) / ((a + b) / 2))).toFixed(degit ? degit : 0))\n      return (100 * ((a - b) / b)).toFixed(degit ? degit : 2);\n    }\n    checkPositvNegativ(returnqlickdata) {\n      if (returnqlickdata == '0') {\n        return '+';\n      }\n      if (returnqlickdata.charAt(0) == '-') return '-';else return '+';\n    }\n    closeAlert() {}\n    ngOnDestroy() {\n      this.Out_commandIQ.emit(this.commandIqstatus);\n      // this.dataService.setSystemSubscription(this.subscriberForm.value);\n      if (this.filterDaysSubscription) this.filterDaysSubscription.unsubscribe();\n      if (this.commandIQSub) this.commandIQSub.unsubscribe();\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n    watchFilterDays() {\n      this.filterDaysSubscription = this.ccoHomeService.filterDays$.subscribe(value => {\n        this.filterDays = value;\n        this.getCommandIQDatas();\n      });\n    }\n  }\n  CommandIqStatusComponent.ɵfac = function CommandIqStatusComponent_Factory(t) {\n    return new (t || CommandIqStatusComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HomeChartOptionsService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DateUtilsService), i0.ɵɵdirectiveInject(i5.FoundationHomeService), i0.ɵɵdirectiveInject(i6.SsoAuthService), i0.ɵɵdirectiveInject(i7.HomeChartOptionsService), i0.ɵɵdirectiveInject(i8.Router), i0.ɵɵdirectiveInject(i9.FoundationManageService), i0.ɵɵdirectiveInject(i10.CommonService));\n  };\n  CommandIqStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommandIqStatusComponent,\n    selectors: [[\"app-command-iq-status\"]],\n    outputs: {\n      Out_commandIQ: \"Out_commandIQ\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"loader-wrapper\"], [\"class\", \"loader-wrapper-info\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert alert-danger fade show\", 4, \"ngIf\"], [1, \"row\", 2, \"max-height\", \"400px\"], [1, \"col-md-12\", 3, \"ngClass\"], [\"id\", \"commandiq-graph-div\", 2, \"height\", \"300px\"], [1, \"loader-wrapper-info\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"]],\n    template: function CommandIqStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, CommandIqStatusComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, CommandIqStatusComponent_div_2_Template, 6, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", 0);\n      }\n    },\n    directives: [i11.NgIf, i11.NgClass],\n    styles: [\"\"]\n  });\n  return CommandIqStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}