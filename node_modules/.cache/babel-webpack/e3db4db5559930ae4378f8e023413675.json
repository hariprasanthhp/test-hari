{"ast":null,"code":"import { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { isExpanded, isEventSubProcess } from 'bpmn-js/lib/util/DiUtil';\nimport { assign } from 'min-dash';\nvar REPLACE_WITH_COLLAPSED = 'replace-with-collapsed-subprocess',\n  REPLACE_WITH_EXPANDED = 'replace-with-expanded-subprocess';\nexport default function DisabledCollapsedSubprocessPopupProvider(popupMenu, bpmnReplace, translate) {\n  popupMenu.registerProvider('bpmn-replace', this);\n  this._bpmnReplace = bpmnReplace;\n  this._translate = translate;\n}\nDisabledCollapsedSubprocessPopupProvider.$inject = ['popupMenu', 'bpmnReplace', 'translate'];\n\n/**\n * Get all entries from original bpmn-js provider minus the ones that allow to model\n * collapsed subprocess.\n */\nDisabledCollapsedSubprocessPopupProvider.prototype.getPopupMenuEntries = function (element) {\n  var bpmnReplace = this._bpmnReplace,\n    translate = this._translate,\n    expandSubProcess = {\n      'expand-subprocess': {\n        className: 'bpmn-icon-subprocess-expanded',\n        label: translate('Expand (not reversible)'),\n        action: function () {\n          bpmnReplace.replaceElement(element, {\n            type: 'bpmn:SubProcess',\n            isExpanded: true\n          });\n        }\n      }\n    };\n  return function (entries) {\n    if (isTask(element)) {\n      delete entries[REPLACE_WITH_EXPANDED];\n      delete entries[REPLACE_WITH_COLLAPSED];\n      entries['replace-with-subprocess'] = {\n        className: 'bpmn-icon-subprocess-collapsed',\n        label: translate('Sub Process'),\n        action: function () {\n          bpmnReplace.replaceElement(element, {\n            type: 'bpmn:SubProcess',\n            isExpanded: false\n          });\n        }\n      };\n      return entries;\n    }\n    if (isSubProcess(element) && isExpanded(element)) {\n      delete entries[REPLACE_WITH_COLLAPSED];\n      return entries;\n    }\n    if (isSubProcess(element) && !isExpanded(element)) {\n      if (hasChildren(element)) {\n        return expandSubProcess;\n      }\n      delete entries[REPLACE_WITH_COLLAPSED];\n      delete entries[REPLACE_WITH_EXPANDED];\n      return assign(entries, expandSubProcess);\n    }\n    return entries;\n  };\n};\n\n// helper /////\nfunction isTask(element) {\n  return is(element, 'bpmn:Task');\n}\nfunction isSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && !is(element, 'bpmn:Transaction') && !isEventSubProcess(element);\n}\nfunction hasChildren(element) {\n  return element.children && element.children.length;\n}","map":null,"metadata":{},"sourceType":"module"}