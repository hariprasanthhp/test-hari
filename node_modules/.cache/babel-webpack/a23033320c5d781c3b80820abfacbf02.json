{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n  this.postExecuted('shape.replace', function (event) {\n    var oldShape = event.context.oldShape,\n      newShape = event.context.newShape;\n    if (!is(newShape, 'bpmn:SubProcess') || !is(oldShape, 'bpmn:Task') || !isExpanded(newShape)) {\n      return;\n    }\n    var position = getStartEventPosition(newShape);\n    modeling.createShape({\n      type: 'bpmn:StartEvent'\n    }, position, newShape);\n  });\n}\nSubProcessStartEventBehavior.$inject = ['injector', 'modeling'];\ninherits(SubProcessStartEventBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}","map":null,"metadata":{},"sourceType":"module"}