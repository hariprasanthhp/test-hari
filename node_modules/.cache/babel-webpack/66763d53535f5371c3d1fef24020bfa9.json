{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/workflow-datatable/workflow-datatable.component\";\nconst _c0 = [\"nonMonitoredView\"];\nconst _c1 = [\"monitoredView\"];\nconst _c2 = [\"deleteModal\"];\nfunction WorkflowAlarmsComponent_23_ng_template_0_Template(rf, ctx) {}\nfunction WorkflowAlarmsComponent_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, WorkflowAlarmsComponent_23_ng_template_0_Template, 0, 0, \"ng-template\", 26);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(52);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\nfunction WorkflowAlarmsComponent_48_ng_template_0_Template(rf, ctx) {}\nfunction WorkflowAlarmsComponent_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, WorkflowAlarmsComponent_48_ng_template_0_Template, 0, 0, \"ng-template\", 26);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(50);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\nfunction WorkflowAlarmsComponent_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language[\"There are no monitored alarms\"], \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language[\"From the left panel, select and add\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language[\"the alarms you wish to monitor\"], \"\");\n  }\n}\nfunction WorkflowAlarmsComponent_ng_template_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.language[\"There are no alarms\"], \"\");\n  }\n}\nfunction WorkflowAlarmsComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"h4\", 29);\n    i0.ɵɵtext(2, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function WorkflowAlarmsComponent_ng_template_53_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.close(\"No\");\n    });\n    i0.ɵɵelement(4, \"span\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 32);\n    i0.ɵɵelement(6, \"p\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵelementStart(8, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function WorkflowAlarmsComponent_ng_template_53_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.close(\"No\");\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function WorkflowAlarmsComponent_ng_template_53_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.doRemoveAlarms();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r9.removeName, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.no, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.Yes, \" \");\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    active: a0\n  };\n};\nexport let WorkflowAlarmsComponent = /*#__PURE__*/(() => {\n  class WorkflowAlarmsComponent {\n    constructor(translateService, modalService, dialogService) {\n      this.translateService = translateService;\n      this.modalService = modalService;\n      this.dialogService = dialogService;\n      this._workFlowAlarmsData = {};\n      this.alarmsActiveTab = 'individual_alarm';\n      this.selectedAlarmsActiveTab = 'selected_individual_alarms';\n      this.baseUrl = `${environment.API_BASE_URL}analytics-engine/`;\n      this.getWorkFlowAPIEmitter = new EventEmitter();\n      this.errorMsg = new EventEmitter();\n      this.canShowTableBodySubject = new Subject();\n    }\n    set workFlowAlarmsData(value) {\n      this._workFlowAlarmsData = value;\n    }\n    get workFlowAlarmsData() {\n      return this._workFlowAlarmsData;\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      if (!this.workFlowAlarmsData['alarmsFormEntered']) {\n        // this.workFlowAlarmsData.totMonitoredAlarms = 0;\n        this.workFlowAlarmsData['individualAlarmData'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData.individualAlarmData && this.workFlowAlarmsData.individualAlarmData.data ? this.workFlowAlarmsData.individualAlarmData.data : [],\n          cols: ['Alarm Name', 'Category'],\n          // dtOptions : this.dtOptions,\n          table: 'individual',\n          tableType: 'non-monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchCategory: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['searchCategory'] ? this.workFlowAlarmsData['individualAlarmData']['searchCategory'] : undefined,\n          searchSeverity: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['searchSeverity'] ? this.workFlowAlarmsData['individualAlarmData']['searchSeverity'] : undefined,\n          prevSearchCategory: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['prevSearchCategory'] ? this.workFlowAlarmsData['individualAlarmData']['prevSearchCategory'] : undefined,\n          prevSearchSeverity: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['prevSearchSeverity'] ? this.workFlowAlarmsData['individualAlarmData']['prevSearchSeverity'] : undefined,\n          categoryOrSeverity: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['categoryOrSeverity'] ? this.workFlowAlarmsData['individualAlarmData']['categoryOrSeverity'] : undefined,\n          searchPlaceHolder: 'Search Alarms',\n          searchCategoryPlaceHolder: 'Search Category',\n          searchSeverityPlaceHolder: 'Search Severity',\n          severityList: [{\n            id: 'critical',\n            name: 'Critical'\n          }, {\n            id: 'major',\n            name: 'Major'\n          }, {\n            id: 'minor',\n            name: 'Minor'\n          }, {\n            id: 'warning',\n            name: 'Warning'\n          }, {\n            id: 'info',\n            name: 'Info'\n          }],\n          categoryList: this.workFlowAlarmsData && this.workFlowAlarmsData['individualAlarmData'] && this.workFlowAlarmsData['individualAlarmData']['categoryList'] ? this.workFlowAlarmsData['individualAlarmData']['categoryList'] : [],\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [3, 4, 6, 7, 8]\n          }, {\n            \"type\": \"severity-order\",\n            \"targets\": -1\n          }],\n          order: [5, 'asc']\n        };\n        this.workFlowAlarmsData['groupAlarmData'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData['groupAlarmData'] && this.workFlowAlarmsData['groupAlarmData']['data'] ? this.workFlowAlarmsData['groupAlarmData']['data'] : [],\n          cols: ['Alarm Name'],\n          table: 'group',\n          tableType: 'non-monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchPlaceHolder: 'Search Alarm Category Subgroups',\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [1, 2, 5, 6, 7, 8]\n          }],\n          order: [3, 'asc']\n        };\n        this.workFlowAlarmsData['transformAlarmData'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData['transformAlarmData'] && this.workFlowAlarmsData['transformAlarmData']['data'] ? this.workFlowAlarmsData['transformAlarmData']['data'] : '',\n          cols: ['Alarm Name'],\n          table: 'transform',\n          tableType: 'non-monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchPlaceHolder: 'Search Transformed Alarms',\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [3, 2, 4, 5, 6, 7, 8]\n          }],\n          order: [1, 'asc']\n        };\n        this.workFlowAlarmsData['monitoredIndividualAlarm'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData['monitoredIndividualAlarm'] && this.workFlowAlarmsData['monitoredIndividualAlarm']['data'] ? this.workFlowAlarmsData['monitoredIndividualAlarm']['data'] : [],\n          cols: ['Alarm Name', 'Category'],\n          table: 'monitoredIndividual',\n          tableType: 'monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchCategory: undefined,\n          searchSeverity: undefined,\n          searchPlaceHolder: 'Search Alarms',\n          searchCategoryPlaceHolder: 'Search Category',\n          searchSeverityPlaceHolder: 'Search Severity',\n          severityList: [{\n            id: 'critical',\n            name: 'Critical'\n          }, {\n            id: 'major',\n            name: 'Major'\n          }, {\n            id: 'minor',\n            name: 'Minor'\n          }, {\n            id: 'warning',\n            name: 'Warning'\n          }, {\n            id: 'info',\n            name: 'Info'\n          }],\n          categoryList: this.workFlowAlarmsData && this.workFlowAlarmsData['monitoredIndividualAlarm'] && this.workFlowAlarmsData['monitoredIndividualAlarm']['categoryList'] ? this.workFlowAlarmsData['monitoredIndividualAlarm']['categoryList'] : [],\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [3, 4, 6, 7, 8]\n          }, {\n            \"type\": \"severity-order\",\n            \"targets\": -1\n          }],\n          order: [5, 'asc']\n        };\n        this.workFlowAlarmsData['monitoredGroupAlarm'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData['monitoredGroupAlarm'] && this.workFlowAlarmsData['monitoredGroupAlarm']['data'] ? this.workFlowAlarmsData['monitoredGroupAlarm']['data'] : [],\n          cols: ['Alarm Name'],\n          table: 'monitoredGroup',\n          tableType: 'monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchPlaceHolder: 'Search Alarm Category Subgroups',\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [1, 2, 5, 6, 7, 8]\n          }],\n          order: [3, 'asc']\n        };\n        this.workFlowAlarmsData['monitoredTransformAlarm'] = {\n          data: this.workFlowAlarmsData && this.workFlowAlarmsData['monitoredTransformAlarm'] && this.workFlowAlarmsData['monitoredTransformAlarm']['data'] ? this.workFlowAlarmsData['monitoredTransformAlarm']['data'] : [],\n          cols: ['Alarm Name'],\n          table: 'monitoredTransform',\n          tableType: 'monitored',\n          allSelected: false,\n          renderOnce: true,\n          rerenderSubject: new Subject(),\n          searchPlaceHolder: 'Search Transformed Alarms',\n          columnDefs: [{\n            targets: 0,\n            orderable: false\n          }, {\n            visible: false,\n            targets: [3, 2, 4, 5, 6, 7, 8]\n          }],\n          order: [1, 'asc']\n        };\n        this.workFlowAlarmsData['alarmsFormEntered'] = true;\n      }\n      this.callMultipleAPI();\n    }\n    callMultipleAPI() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // await Promise.all([\n        //   // get categories\n        //   this.getCategories(),\n        //   //group alarm data\n        //   this.getIndividualAlarmData(),\n        //   this.getGroupAlarmData(),\n        //   //individual alarm data\n        //   // this.getIndividualAlarmsData()\n        //   // this.getCustomCategories()\n        // ]);\n        //Call Get workflow API in alarm Notification page\n        this.getWorkFlowAPIEmitter.emit(true);\n      });\n    }\n    removeDuplicate(list, key) {\n      let elements = list.reduce(function (previous, current) {\n        var object = previous.filter(object => object[key] === current[key]);\n        if (object.length == 0) {\n          previous.push(current);\n        }\n        return previous;\n      }, []);\n      return elements;\n    }\n    addSelectedIndividualAlarmList() {\n      // if(this.workFlowAlarmsData.individualAlarmData.searchCategory && this.workFlowAlarmsData.individualAlarmData.searchCategory != ''){\n      //   this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity = undefined;\n      // }else if(this.workFlowAlarmsData.individualAlarmData.searchSeverity && this.workFlowAlarmsData.individualAlarmData.searchSeverity != ''){\n      //   this.workFlowAlarmsData.individualAlarmData.prevSearchCategory = undefined;\n      // }\n      let indAlarms = JSON.parse(JSON.stringify(this.workFlowAlarmsData.individualAlarmData.data.filter(el => el['isChecked'] == true)));\n      // this.workFlowAlarmsData.monitoredIndividualAlarm.data = [];\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = [...this.workFlowAlarmsData.monitoredIndividualAlarm.data, ...indAlarms.map(el => {\n        delete el['isChecked'];\n        delete el['disabled'];\n        delete el['selectedAlready'];\n        return el;\n      })];\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = this.removeDuplicate(this.workFlowAlarmsData.monitoredIndividualAlarm.data, 'alarm_id');\n      this.workFlowAlarmsData.individualAlarmData.data.forEach(el => {\n        if (el['isChecked'] == true) {\n          el['disabled'] = true;\n          el['selectedAlready'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredIndividualAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredIndividualAlarm);\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = [...this.workFlowAlarmsData.monitoredIndividualAlarm.data];\n      this.workFlowAlarmsData.individualAlarmData = Object.assign({}, this.workFlowAlarmsData.individualAlarmData);\n      this.calculateTotalMonitoredAlarms();\n      // this.workFlowAlarmsData.monitoredIndividualAlarm = {...this.workFlowAlarmsData.monitoredIndividualAlarm};\n      this.workFlowAlarmsData.monitoredIndividualAlarm.rerenderSubject.next(true);\n      this.workFlowAlarmsData.individualAlarmData.rerenderSubject.next(true);\n    }\n    addSelectedGroupAlarmList() {\n      let groupAlarms = JSON.parse(JSON.stringify(this.workFlowAlarmsData.groupAlarmData.data.filter(el => el['isChecked'] == true)));\n      // this.workFlowAlarmsData.monitoredGroupAlarm.data = [];\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = [...this.workFlowAlarmsData.monitoredGroupAlarm.data, ...groupAlarms.map(el => {\n        delete el['isChecked'];\n        delete el['disabled'];\n        delete el['selectedAlready'];\n        return el;\n      })];\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = this.removeDuplicate(this.workFlowAlarmsData.monitoredGroupAlarm.data, 'group_id');\n      this.workFlowAlarmsData.groupAlarmData.data.forEach(el => {\n        if (el['isChecked'] == true) {\n          el['disabled'] = true;\n          el['selectedAlready'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredGroupAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredGroupAlarm);\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = [...this.workFlowAlarmsData.monitoredGroupAlarm.data];\n      this.workFlowAlarmsData.groupAlarmData = Object.assign({}, this.workFlowAlarmsData.groupAlarmData);\n      this.calculateTotalMonitoredAlarms();\n      // this.workFlowAlarmsData.monitoredGroupAlarm = {...this.workFlowAlarmsData.monitoredGroupAlarm};\n      this.workFlowAlarmsData.monitoredGroupAlarm.rerenderSubject.next(true);\n      this.workFlowAlarmsData.groupAlarmData.rerenderSubject.next(true);\n    }\n    addSelectedTransformAlarmList() {\n      let transformAlarms = JSON.parse(JSON.stringify(this.workFlowAlarmsData.transformAlarmData.data.filter(el => el['isChecked'] == true)));\n      // this.workFlowAlarmsData.monitoredTransformAlarm.data = [];\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = [...this.workFlowAlarmsData.monitoredTransformAlarm.data, ...transformAlarms.map(el => {\n        delete el['isChecked'];\n        delete el['disabled'];\n        delete el['selectedAlready'];\n        return el;\n      })];\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = this.removeDuplicate(this.workFlowAlarmsData.monitoredTransformAlarm.data, 'alarmRuleId');\n      this.workFlowAlarmsData.transformAlarmData.data.forEach(el => {\n        if (el['isChecked'] == true) {\n          el['disabled'] = true;\n          el['selectedAlready'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredTransformAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredTransformAlarm);\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = [...this.workFlowAlarmsData.monitoredTransformAlarm.data];\n      this.workFlowAlarmsData.transformAlarmData = Object.assign({}, this.workFlowAlarmsData.transformAlarmData);\n      this.calculateTotalMonitoredAlarms();\n      // this.workFlowAlarmsData.monitoredTransformAlarm = {...this.workFlowAlarmsData.monitoredTransformAlarm};\n      this.workFlowAlarmsData.monitoredTransformAlarm.rerenderSubject.next(true);\n      this.workFlowAlarmsData.transformAlarmData.rerenderSubject.next(true);\n    }\n    removeSelectedIndividualAlarmList() {\n      this.workFlowAlarmsData.individualAlarmData.data.forEach(element => {\n        if (!element['selectedAlready'] && element['isChecked']) {\n          element['isChecked'] = false;\n          element['checkedTemporarily'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data.forEach(el => {\n        if (el['isChecked']) {\n          let obj = this.workFlowAlarmsData.individualAlarmData.data.filter(ele => ele.alarm_id == el['alarm_id']);\n          if (obj && obj.length > 0) {\n            obj.forEach(element => {\n              element['disabled'] = false;\n              element['isChecked'] = false;\n              element['selectedAlready'] = false;\n            });\n            // obj['disabled'] = false;\n            // obj['isChecked'] = false;\n          }\n        }\n      });\n\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = this.workFlowAlarmsData.individualAlarmData.data.filter(el => el['isChecked'] == true);\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = JSON.parse(JSON.stringify(this.workFlowAlarmsData.monitoredIndividualAlarm.data));\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data.forEach(el => {\n        el['disabled'] = false;\n        el['isChecked'] = false;\n        el['selectedAlready'] = false;\n      });\n      // if(this.workFlowAlarmsData.monitoredIndividualAlarm.data.length == 0){\n      //   this.workFlowAlarmsData.individualAlarmData.prevSearchCategory = undefined;\n      //   this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity = undefined;\n      // }\n      this.workFlowAlarmsData.individualAlarmData.data.forEach(element => {\n        if (element['checkedTemporarily']) {\n          element['isChecked'] = true;\n          element['checkedTemporarily'] = false;\n        }\n      });\n      this.calculateTotalMonitoredAlarms();\n      this.workFlowAlarmsData.individualAlarmData = Object.assign({}, this.workFlowAlarmsData.individualAlarmData);\n      this.workFlowAlarmsData.individualAlarmData.data = [...this.workFlowAlarmsData.individualAlarmData.data];\n      this.workFlowAlarmsData.monitoredIndividualAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredIndividualAlarm);\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = [...this.workFlowAlarmsData.monitoredIndividualAlarm.data];\n      this.workFlowAlarmsData.individualAlarmData.rerenderSubject.next(true);\n      this.workFlowAlarmsData.monitoredIndividualAlarm.rerenderSubject.next(true);\n    }\n    removeSelectedGroupAlarmList() {\n      this.workFlowAlarmsData.groupAlarmData.data.forEach(element => {\n        if (!element['selectedAlready'] && element['isChecked']) {\n          element['isChecked'] = false;\n          element['checkedTemporarily'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredGroupAlarm.data.forEach(el => {\n        if (el['isChecked']) {\n          let obj = this.workFlowAlarmsData.groupAlarmData.data.find(ele => ele.group_id == el['group_id']);\n          if (obj) {\n            obj['disabled'] = false;\n            obj['selectedAlready'] = false;\n            obj['isChecked'] = false;\n          }\n        }\n      });\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = this.workFlowAlarmsData.groupAlarmData.data.filter(el => el['isChecked'] == true);\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = JSON.parse(JSON.stringify(this.workFlowAlarmsData.monitoredGroupAlarm.data));\n      this.workFlowAlarmsData.monitoredGroupAlarm.data.forEach(el => {\n        el['disabled'] = false;\n        el['selectedAlready'] = false;\n        el['isChecked'] = false;\n      });\n      this.workFlowAlarmsData.groupAlarmData.data.forEach(element => {\n        if (element['checkedTemporarily']) {\n          element['isChecked'] = true;\n          element['checkedTemporarily'] = false;\n        }\n      });\n      this.calculateTotalMonitoredAlarms();\n      this.workFlowAlarmsData.groupAlarmData = Object.assign({}, this.workFlowAlarmsData.groupAlarmData);\n      this.workFlowAlarmsData.groupAlarmData.data = [...this.workFlowAlarmsData.groupAlarmData.data];\n      this.workFlowAlarmsData.monitoredGroupAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredGroupAlarm);\n      this.workFlowAlarmsData.monitoredGroupAlarm.data = [...this.workFlowAlarmsData.monitoredGroupAlarm.data];\n      // this.workFlowAlarmsData.groupAlarmData = {...this.workFlowAlarmsData.groupAlarmData};\n      // this.workFlowAlarmsData.monitoredGroupAlarm = {...this.workFlowAlarmsData.monitoredGroupAlarm};\n      this.workFlowAlarmsData.groupAlarmData.rerenderSubject.next(true);\n      this.workFlowAlarmsData.monitoredGroupAlarm.rerenderSubject.next(true);\n    }\n    removeSelectedTransformAlarmList() {\n      this.workFlowAlarmsData.transformAlarmData.data.forEach(element => {\n        if (!element['selectedAlready'] && element['isChecked']) {\n          element['isChecked'] = false;\n          element['checkedTemporarily'] = true;\n        }\n      });\n      this.workFlowAlarmsData.monitoredTransformAlarm.data.forEach(el => {\n        if (el['isChecked']) {\n          let obj = this.workFlowAlarmsData.transformAlarmData.data.find(ele => ele.alarmRuleId == el['alarmRuleId']);\n          if (obj) {\n            obj['disabled'] = false;\n            obj['isChecked'] = false;\n            obj['selectedAlready'] = false;\n          }\n        }\n      });\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = this.workFlowAlarmsData.transformAlarmData.data.filter(el => el['isChecked'] == true);\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = JSON.parse(JSON.stringify(this.workFlowAlarmsData.monitoredTransformAlarm.data));\n      this.workFlowAlarmsData.monitoredTransformAlarm.data.forEach(el => {\n        el['disabled'] = false;\n        el['isChecked'] = false;\n        el['selectedAlready'] = false;\n      });\n      this.workFlowAlarmsData.transformAlarmData.data.forEach(element => {\n        if (element['checkedTemporarily']) {\n          element['isChecked'] = true;\n          element['checkedTemporarily'] = false;\n        }\n      });\n      this.calculateTotalMonitoredAlarms();\n      this.workFlowAlarmsData.transformAlarmData = Object.assign({}, this.workFlowAlarmsData.transformAlarmData);\n      this.workFlowAlarmsData.transformAlarmData.data = [...this.workFlowAlarmsData.transformAlarmData.data];\n      this.workFlowAlarmsData.monitoredTransformAlarm = Object.assign({}, this.workFlowAlarmsData.monitoredTransformAlarm);\n      this.workFlowAlarmsData.monitoredTransformAlarm.data = [...this.workFlowAlarmsData.monitoredTransformAlarm.data];\n      // this.workFlowAlarmsData.transformAlarmData = {...this.workFlowAlarmsData.transformAlarmData};\n      // this.workFlowAlarmsData.monitoredTransformAlarm = {...this.workFlowAlarmsData.monitoredTransformAlarm};\n      this.workFlowAlarmsData.transformAlarmData.rerenderSubject.next(true);\n      this.workFlowAlarmsData.monitoredTransformAlarm.rerenderSubject.next(true);\n    }\n    calculateTotalMonitoredAlarms() {\n      let groupAlarms = this.workFlowAlarmsData.monitoredGroupAlarm.data.reduce((acc, curr) => {\n        return acc + Number(curr['no_of_alarms']);\n      }, 0);\n      this.workFlowAlarmsData.totMonitoredAlarms = this.workFlowAlarmsData.monitoredIndividualAlarm.data.length + groupAlarms + this.workFlowAlarmsData.monitoredTransformAlarm.data.length;\n    }\n    callAddRemove(data) {\n      if (data.table == 'group' && data.mode == 'add') {\n        this.selectedAlarmsActiveTab = 'selected_alarm_groups';\n        this.addSelectedGroupAlarmList();\n      } else if (data.table == 'transform' && data.mode == 'add') {\n        this.selectedAlarmsActiveTab = 'selected_transform_alarms';\n        this.addSelectedTransformAlarmList();\n      } else if (data.table == 'individual' && data.mode == 'add') {\n        this.selectedAlarmsActiveTab = 'selected_individual_alarms';\n        // this.checkCategorySeverity();\n        this.checkrulesExist();\n        // this.addSelectedIndividualAlarmList();\n      } else if (data.table == 'monitoredGroup' && data.mode == 'remove') {\n        this.alarmsActiveTab = 'alarm_group';\n        this.removeSelectedGroupAlarmList();\n      } else if (data.table == 'monitoredTransform' && data.mode == 'remove') {\n        this.alarmsActiveTab = 'transform_alarm';\n        this.removeSelectedTransformAlarmList();\n      } else if (data.table == 'monitoredIndividual' && data.mode == 'remove') {\n        this.alarmsActiveTab = 'individual_alarm';\n        this.removeSelectedIndividualAlarmList();\n      }\n    }\n    checkrulesExist() {\n      let alarmRulesObj = this.workFlowAlarmsData.individualAlarmData.data.filter(el => el['alarm_name'].includes('multiple-onts-down') && el['alarm_category'] == 'PON transformed' && el['isChecked'] == true);\n      if (alarmRulesObj.length == 0) {\n        this.errorMsg.emit(false);\n        this.addSelectedIndividualAlarmList();\n      } else {\n        let rulesnotExist = false;\n        let errorMessage = '';\n        // if(alarmRulesObj.every((el) => el['rulesnotexist'])){\n        //   errorMessage = this.language['No Transform Alarm Rules exist'];\n        //   rulesnotExist = true;\n        // }else{\n        alarmRulesObj.forEach(el => {\n          if (el['rulesnotexist']) {\n            errorMessage += this.language.rulesNotExist(el['alarm_name']);\n            rulesnotExist = true;\n          }\n        });\n        // }\n        if (rulesnotExist) {\n          this.errorMsg.emit(errorMessage);\n          this.canShowTableBodySubject.next(true);\n          return false;\n        } else {\n          this.errorMsg.emit(false);\n          this.addSelectedIndividualAlarmList();\n        }\n      }\n    }\n    checkCategorySeverity() {\n      let noOjcAdd = false;\n      let warningContent = undefined;\n      let name = '';\n      if (!this.workFlowAlarmsData.individualAlarmData.prevSearchCategory && !this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity && this.workFlowAlarmsData.individualAlarmData.searchCategory && this.workFlowAlarmsData.individualAlarmData.searchCategory != '' || !this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity && !this.workFlowAlarmsData.individualAlarmData.prevSearchCategory && this.workFlowAlarmsData.individualAlarmData.searchSeverity && this.workFlowAlarmsData.individualAlarmData.searchSeverity != '' || this.workFlowAlarmsData.individualAlarmData.searchCategory && this.workFlowAlarmsData.individualAlarmData.searchCategory != '' && this.workFlowAlarmsData.individualAlarmData.prevSearchCategory == this.workFlowAlarmsData.individualAlarmData.searchCategory || this.workFlowAlarmsData.individualAlarmData.searchSeverity && this.workFlowAlarmsData.individualAlarmData.searchSeverity != '' && this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity == this.workFlowAlarmsData.individualAlarmData.searchSeverity) {\n        noOjcAdd = true;\n      } else if (this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity == 'CATEGORY' && this.workFlowAlarmsData.individualAlarmData.searchSeverity && this.workFlowAlarmsData.individualAlarmData.searchSeverity != '') {\n        warningContent = `Are you sure you want to remove the Monitored Alarms in Category <b> (${this.workFlowAlarmsData.individualAlarmData.prevSearchCategory}-${this.workFlowAlarmsData.monitoredIndividualAlarm.data.length}) </b>?`;\n        name = '';\n      } else if (this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity == 'SEVERITY' && this.workFlowAlarmsData.individualAlarmData.searchCategory && this.workFlowAlarmsData.individualAlarmData.searchCategory != '') {\n        let severity = this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity.charAt(0).toUpperCase() + this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity.slice(1);\n        warningContent = `Are you sure you want to remove the Monitored Alarms in Severity <b> (${severity}-${this.workFlowAlarmsData.monitoredIndividualAlarm.data.length}) </b> ?`;\n      } else if (this.workFlowAlarmsData.individualAlarmData.searchCategory && this.workFlowAlarmsData.individualAlarmData.searchCategory != '' && this.workFlowAlarmsData.individualAlarmData.prevSearchCategory != this.workFlowAlarmsData.individualAlarmData.searchCategory) {\n        warningContent = `Are you sure you want to remove the Monitored Alarms in Category <b> (${this.workFlowAlarmsData.individualAlarmData.prevSearchCategory}-${this.workFlowAlarmsData.monitoredIndividualAlarm.data.length}) </b> ?`;\n      } else if (this.workFlowAlarmsData.individualAlarmData.searchSeverity && this.workFlowAlarmsData.individualAlarmData.searchSeverity != '' && this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity != this.workFlowAlarmsData.individualAlarmData.searchSeverity) {\n        let severity = this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity.charAt(0).toUpperCase() + this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity.slice(1);\n        warningContent = `Are you sure you want to remove the Monitored Alarms in Severity <b> (${severity}-${this.workFlowAlarmsData.monitoredIndividualAlarm.data.length}) </b> ?`;\n      }\n      if (noOjcAdd) {\n        if (this.workFlowAlarmsData.individualAlarmData.searchCategory) {\n          this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity = undefined;\n          this.workFlowAlarmsData.individualAlarmData.prevSearchCategory = this.workFlowAlarmsData.individualAlarmData.searchCategory;\n          this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity = 'CATEGORY';\n        }\n        if (this.workFlowAlarmsData.individualAlarmData.searchSeverity) {\n          this.workFlowAlarmsData.individualAlarmData.prevSearchCategory = undefined;\n          this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity = this.workFlowAlarmsData.individualAlarmData.searchSeverity;\n          this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity = 'SEVERITY';\n        }\n        this.addSelectedIndividualAlarmList();\n      } else {\n        // show popup\n        this.removeAlarms(warningContent);\n        // confirmed then execute following\n        // else no change in content\n      }\n    }\n\n    changeNavPills(pill, table, $event) {\n      $event.preventDefault();\n      if (table == 'non-monitored') {\n        this.alarmsActiveTab = pill;\n      } else {\n        this.selectedAlarmsActiveTab = pill;\n      }\n    }\n    removeAlarms(name) {\n      this.alarmRemoveError = '';\n      this.removeName = name;\n      if (this.modalRef) {\n        this.close();\n      }\n      this.modalRef = this.dialogService.open(this.deleteModal, {\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    close(type) {\n      this.modalLoader = false;\n      this.modalService.dismissAll();\n      this.modalRef.close();\n      if (type == 'No') {\n        this.canShowTableBodySubject.next(true);\n      }\n    }\n    closeAlert() {\n      this.canShowTableBodySubject.next(true);\n      this.alarmRemoveError = '';\n    }\n    doRemoveAlarms() {\n      if (this.workFlowAlarmsData.individualAlarmData.searchCategory) {\n        this.workFlowAlarmsData.individualAlarmData.prevSearchCategory = this.workFlowAlarmsData.individualAlarmData.searchCategory;\n        this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity = 'CATEGORY';\n      }\n      if (this.workFlowAlarmsData.individualAlarmData.searchSeverity) {\n        this.workFlowAlarmsData.individualAlarmData.prevSearchSeverity = this.workFlowAlarmsData.individualAlarmData.searchSeverity;\n        this.workFlowAlarmsData.individualAlarmData.categoryOrSeverity = 'SEVERITY';\n      }\n      this.workFlowAlarmsData.individualAlarmData.data.forEach(el => {\n        if (el['selectedAlready'] == true) {\n          el['disabled'] = false;\n          el['selectedAlready'] = false;\n          el['isChecked'] = false;\n        }\n      });\n      this.workFlowAlarmsData.monitoredIndividualAlarm.data = [];\n      this.addSelectedIndividualAlarmList();\n      this.close();\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n      // this.workFlowAlarmsData.individualAlarmData.rerenderSubject.unsubscribe();\n      // this.workFlowAlarmsData.groupAlarmData.rerenderSubject.unsubscribe();\n      // this.workFlowAlarmsData.transformAlarmData.rerenderSubject.unsubscribe();\n      // this.workFlowAlarmsData.monitoredTransformAlarm.rerenderSubject.unsubscribe();\n      // this.workFlowAlarmsData.monitoredIndividualAlarm.rerenderSubject.unsubscribe();\n      // this.workFlowAlarmsData.monitoredGroupAlarm.rerenderSubject.unsubscribe();\n    }\n  }\n\n  WorkflowAlarmsComponent.ɵfac = function WorkflowAlarmsComponent_Factory(t) {\n    return new (t || WorkflowAlarmsComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i2.NgbModal));\n  };\n  WorkflowAlarmsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkflowAlarmsComponent,\n    selectors: [[\"app-workflow-alarms\"]],\n    viewQuery: function WorkflowAlarmsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nonMonitoredView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monitoredView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModal = _t.first);\n      }\n    },\n    inputs: {\n      workFlowAlarmsData: \"workFlowAlarmsData\"\n    },\n    outputs: {\n      getWorkFlowAPIEmitter: \"getWorkFlowAPIEmitter\",\n      errorMsg: \"errorMsg\"\n    },\n    decls: 55,\n    vars: 26,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-between\"], [1, \"col-md-6\", \"pl-0\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"heading-4\"], [1, \"Lists\"], [1, \"box-list\"], [1, \"alarm-menu-list\"], [1, \"nav\", \"nav-pills\"], [\"nonMonitoredView\", \"\"], [\"data-toggle\", \"pill\", \"href\", \"#individual_alarms\", 3, \"ngClass\", \"click\"], [1, \"tab-content\"], [\"id\", \"individual_alarms\", 1, \"tab-pane\", \"alarm-menu-info\", 3, \"ngClass\"], [1, \"alarm-menu-info\"], [3, \"alarmData\", \"canShowTableBodyInputSubject\", \"addRemoveAlarmList\"], [4, \"ngIf\"], [1, \"col-md-6\", \"pr-0\"], [1, \"error\"], [\"monitoredView\", \"\"], [\"data-toggle\", \"pill\", \"href\", \"#individual_alarms_selected\", 3, \"ngClass\", \"click\"], [\"id\", \"individual_alarms_selected\", 1, \"tab-pane\", \"alarm-menu-info\", 3, \"ngClass\"], [3, \"alarmData\", \"addRemoveAlarmList\"], [\"noMonitoredAlarmsTemplate\", \"\"], [\"noAlarmsTemplate\", \"\"], [\"deleteModal\", \"\"], [3, \"ngTemplateOutlet\"], [1, \"text-center\", 2, \"color\", \"#808080\", \"margin-top\", \"100px\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"innerHtml\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn-default\", \"btn-dft\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"3px\", 3, \"click\"]],\n    template: function WorkflowAlarmsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"ul\", 9, 10);\n        i0.ɵɵelementStart(16, \"li\");\n        i0.ɵɵelementStart(17, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function WorkflowAlarmsComponent_Template_a_click_17_listener($event) {\n          return ctx.changeNavPills(\"individual_alarm\", \"non-monitored\", $event);\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵelementStart(20, \"div\", 13);\n        i0.ɵɵelementStart(21, \"div\", 14);\n        i0.ɵɵelementStart(22, \"app-workflow-datatable\", 15);\n        i0.ɵɵlistener(\"addRemoveAlarmList\", function WorkflowAlarmsComponent_Template_app_workflow_datatable_addRemoveAlarmList_22_listener($event) {\n          return ctx.callAddRemove($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, WorkflowAlarmsComponent_23_Template, 1, 1, undefined, 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 17);\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelementStart(26, \"div\", 4);\n        i0.ɵɵelementStart(27, \"div\", 5);\n        i0.ɵɵtext(28);\n        i0.ɵɵelementStart(29, \"span\", 18);\n        i0.ɵɵtext(30, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31);\n        i0.ɵɵpipe(32, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"span\", 6);\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 3);\n        i0.ɵɵelementStart(36, \"div\", 4);\n        i0.ɵɵelementStart(37, \"div\", 7);\n        i0.ɵɵelementStart(38, \"div\", 8);\n        i0.ɵɵelementStart(39, \"ul\", 9, 19);\n        i0.ɵɵelementStart(41, \"li\");\n        i0.ɵɵelementStart(42, \"a\", 20);\n        i0.ɵɵlistener(\"click\", function WorkflowAlarmsComponent_Template_a_click_42_listener($event) {\n          return ctx.changeNavPills(\"selected_individual_alarms\", \"monitored\", $event);\n        });\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 12);\n        i0.ɵɵelementStart(45, \"div\", 21);\n        i0.ɵɵelementStart(46, \"div\", 14);\n        i0.ɵɵelementStart(47, \"app-workflow-datatable\", 22);\n        i0.ɵɵlistener(\"addRemoveAlarmList\", function WorkflowAlarmsComponent_Template_app_workflow_datatable_addRemoveAlarmList_47_listener($event) {\n          return ctx.callAddRemove($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(48, WorkflowAlarmsComponent_48_Template, 1, 1, undefined, 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, WorkflowAlarmsComponent_ng_template_49_Template, 10, 3, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(51, WorkflowAlarmsComponent_ng_template_51_Template, 6, 1, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(53, WorkflowAlarmsComponent_ng_template_53_Template, 12, 3, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.language[\"All Alarms\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Select and add the alarms you wish to monitor\"], \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c3, ctx.alarmsActiveTab == \"individual_alarm\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.language.Alarms);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c3, ctx.alarmsActiveTab == \"individual_alarm\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"alarmData\", ctx.workFlowAlarmsData.individualAlarmData)(\"canShowTableBodyInputSubject\", ctx.canShowTableBodySubject);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.workFlowAlarmsData == null ? null : ctx.workFlowAlarmsData.individualAlarmData == null ? null : ctx.workFlowAlarmsData.individualAlarmData.data == null ? null : ctx.workFlowAlarmsData.individualAlarmData.data.length) <= 0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Monitored Alarms\"], \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" (\", i0.ɵɵpipeBind1(32, 16, ctx.workFlowAlarmsData.totMonitoredAlarms), \") \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"The following alarms will be monitored by this notification schedule\"], \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c3, ctx.selectedAlarmsActiveTab == \"selected_individual_alarms\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.language.Alarms);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c3, ctx.selectedAlarmsActiveTab == \"selected_individual_alarms\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"alarmData\", ctx.workFlowAlarmsData.monitoredIndividualAlarm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.workFlowAlarmsData == null ? null : ctx.workFlowAlarmsData.monitoredIndividualAlarm == null ? null : ctx.workFlowAlarmsData.monitoredIndividualAlarm.data == null ? null : ctx.workFlowAlarmsData.monitoredIndividualAlarm.data.length) <= 0);\n      }\n    },\n    directives: [i3.NgClass, i4.WorkflowDatatableComponent, i3.NgIf, i3.NgTemplateOutlet],\n    pipes: [i3.DecimalPipe],\n    styles: [\".heading-4[_ngcontent-%COMP%]{font-size:24px;font-style:normal;font-weight:400;line-height:30px;letter-spacing:0em;text-align:left;border-bottom:1px solid #CCCCCC;padding-bottom:5px}.Lists[_ngcontent-%COMP%]{font-size:15px;font-style:normal;font-weight:400;line-height:24px;letter-spacing:0em;text-align:left;color:gray}.box-list[_ngcontent-%COMP%]{border:1px solid #EBEAEF;box-sizing:border-box;box-shadow:2px 3px 43px -12px #4d4d4d26;border-radius:24px;padding:26px;height:940px;overflow-y:hidden;margin-top:16px;margin-bottom:24px}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding:0;margin:0;list-style:none;position:relative;border-radius:26px;background-color:#edf5ff;width:-moz-max-content;width:max-content}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline-block;min-width:110px;text-align:center}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;padding:4px 12px 4px 13px;color:#333;font-size:14px;line-height:18px;text-decoration:none}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#0054b2;color:#fff;border-radius:26px}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%]{background-color:#0054b2;color:#fff;border-radius:26px}.alarm-menu-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#fff}.alarm-menu-info[_ngcontent-%COMP%]{width:100%}.add-search-icon[_ngcontent-%COMP%]{background-color:#0279ff;width:40px;height:100%;border-radius:25px;position:absolute;right:15px;top:0px;padding:7px}  .dataTables_length{display:none!important}  .dataTables_filter{display:none!important}\"]\n  });\n  return WorkflowAlarmsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}