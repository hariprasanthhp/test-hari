{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/mask-directive\";\nimport * as i5 from \"../../../shared/directives/trim-space.directive\";\nconst _c0 = [\"notification_name\"];\nfunction WorkflowDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵelementStart(5, \"span\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction WorkflowDetailsComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.language[\"This field is required.\"], \" \");\n  }\n}\nfunction WorkflowDetailsComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Please fill out this field, 1-50 characters including letters, numbers and spaces only \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowDetailsComponent_div_12_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Please fill out this field, 1-50 characters including letters, numbers and spaces only \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowDetailsComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, WorkflowDetailsComponent_div_12_div_1_Template, 2, 1, \"div\", 23);\n    i0.ɵɵtemplate(2, WorkflowDetailsComponent_div_12_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(3, WorkflowDetailsComponent_div_12_div_3_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.workFlowDetailsData == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.workFlowDetailsData == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors.invalidName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.workFlowDetailsData == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors.invalidName) && (ctx_r1.workFlowDetailsData == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors == null ? null : ctx_r1.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].errors.maxlength));\n  }\n}\nexport let WorkflowDetailsComponent = /*#__PURE__*/(() => {\n  class WorkflowDetailsComponent {\n    constructor(translateService, formBuilder) {\n      this.translateService = translateService;\n      this.formBuilder = formBuilder;\n      // workFlowDetailsForm: FormGroup;\n      this._workFlowDetailsData = {};\n      this.getWorkFlowAPIEmitter = new EventEmitter();\n    }\n    set workFlowDetailsData(value) {\n      var _a, _b, _c;\n      this._workFlowDetailsData = value;\n      if ((value === null || value === void 0 ? void 0 : value.workflowId) != '') {\n        (_c = (_b = (_a = this.workFlowDetailsData) === null || _a === void 0 ? void 0 : _a.workFlowDetailsForm) === null || _b === void 0 ? void 0 : _b.controls['name']) === null || _c === void 0 ? void 0 : _c.disable();\n      }\n    }\n    get workFlowDetailsData() {\n      return this._workFlowDetailsData;\n    }\n    ngOnInit() {\n      if (this.loadOnEdit) {\n        this.loadOnEdit.subscribe(v => {\n          this.loading = v;\n        });\n      }\n      // if(this.workFlowDetailsData.workflowId == ''){\n      //   this.notification_name.nativeElement.focus();\n      // }\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      // this.workFlowDetailsForm = this.formBuilder.group({\n      //   name: ['', Validators.required],\n      //   description: [''],\n      // });\n      const filteringFormControl = this.workFlowDetailsData && this.workFlowDetailsData.workFlowDetailsForm ? this.workFlowDetailsData.workFlowDetailsForm.controls : {};\n      if (filteringFormControl) {\n        this.workFlowDetailsData.workFlowDetailsForm.valueChanges.subscribe(formValue => {\n          if (formValue.name) {\n            this.workFlowDetailsData.isNameEntered = true;\n          }\n        });\n      }\n    }\n    callMultipleAPI() {\n      return __awaiter(this, void 0, void 0, function* () {\n        //Call Get workflow API in alarm Notification page\n        this.getWorkFlowAPIEmitter.emit(true);\n      });\n    }\n    avoidInitialSpacing(event) {\n      if (event.target.selectionStart === 0 && event.code === 'Space') {\n        event.preventDefault();\n      }\n    }\n    keyPressAlphanumeric(event) {\n      var inp = String.fromCharCode(event.keyCode);\n      if (/[a-zA-Z0-9]/.test(inp)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n    clearSearch() {\n      this.workFlowDetailsData.description = '';\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n  }\n  WorkflowDetailsComponent.ɵfac = function WorkflowDetailsComponent_Factory(t) {\n    return new (t || WorkflowDetailsComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  WorkflowDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkflowDetailsComponent,\n    selectors: [[\"app-workflow-details\"]],\n    viewQuery: function WorkflowDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notification_name = _t.first);\n      }\n    },\n    inputs: {\n      workFlowDetailsData: \"workFlowDetailsData\",\n      loadOnEdit: \"loadOnEdit\"\n    },\n    outputs: {\n      getWorkFlowAPIEmitter: \"getWorkFlowAPIEmitter\"\n    },\n    decls: 24,\n    vars: 9,\n    consts: [[1, \"container\"], [\"class\", \"row mb-3\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-4\", \"px-0\"], [3, \"formGroup\"], [1, \"ccl-form\"], [\"for\", \"notification_name\"], [1, \"error\"], [\"type\", \"text\", \"id\", \"notification_name\", \"formControlName\", \"name\", \"aria-describedby\", \"name\", \"trimSpace\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [1, \"form-group\", \"ccl-form\", \"mt-2\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"minlength\", \"0\", \"maxlength\", \"200\", \"trimSpace\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"id\", \"the-count\", 1, \"text-right\"], [\"id\", \"current\"], [\"id\", \"maximum\"], [1, \"row\", \"mb-3\"], [1, \"col-md-12\"], [1, \"loader\", \"mt-5\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"errorMessage\"], [\"class\", \"mt-1\", 4, \"ngIf\"], [1, \"mt-1\"]],\n    template: function WorkflowDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, WorkflowDetailsComponent_div_2_Template, 7, 1, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementStart(9, \"span\", 7);\n        i0.ɵɵtext(10, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, WorkflowDetailsComponent_div_12_Template, 4, 3, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelementStart(14, \"label\", 11);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementStart(16, \"small\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"textarea\", 12);\n        i0.ɵɵelementStart(19, \"div\", 13);\n        i0.ɵɵelementStart(20, \"span\", 14);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"span\", 15);\n        i0.ɵɵtext(23, \"/200\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.language.Name, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.Name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].invalid) && ((ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].dirty) || (ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"] == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"name\"].touched)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" (\", ctx.language.Optional, \")\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.Decription);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate((ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"description\"] == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"description\"].value) ? ctx.workFlowDetailsData == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm == null ? null : ctx.workFlowDetailsData.workFlowDetailsForm.controls[\"description\"].value.length : 0);\n      }\n    },\n    directives: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.MaskDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i5.TrimSpaceDirective, i2.MinLengthValidator, i2.MaxLengthValidator],\n    styles: [\".disable[_ngcontent-%COMP%]{pointer-events:none}.cursornallow[_ngcontent-%COMP%]{cursor:not-allowed}input[_ngcontent-%COMP%]:disabled{cursor:no-drop}\"]\n  });\n  return WorkflowDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}