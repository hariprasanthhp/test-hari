{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { getCallOutcomeFilePath } from './endpoint';\nimport { getAuditReportFilePath } from './endpoint';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let CallOutcomeReportService = /*#__PURE__*/(() => {\n  class CallOutcomeReportService {\n    constructor(http, Sso) {\n      this.http = http;\n      this.Sso = Sso;\n    }\n    getCallOutcomeFilePath(orgId, duration, timezone) {\n      const params = new HttpParams()\n      // .set('orgId', orgId)\n      .set('duration', duration).set('timezone', timezone);\n      if (this.Sso.getOrg(orgId)) {\n        params.set(\"orgId\", orgId);\n      }\n      return this.http.get(getCallOutcomeFilePath, {\n        params,\n        responseType: 'text'\n      }).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    getAuditReportFilePath(orgId, duration, timeZone) {\n      const params = new HttpParams()\n      // .set('orgId', orgId)\n      .set('duration', duration).set('timeZone', timeZone);\n      if (this.Sso.getOrg(orgId)) {\n        params.set(\"orgId\", orgId);\n      }\n      return this.http.get(getAuditReportFilePath, {\n        params,\n        responseType: 'text'\n      }).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    handleError(error) {\n      // Return an observable with a user-facing error message.\n      return throwError(error);\n    }\n  }\n  CallOutcomeReportService.ɵfac = function CallOutcomeReportService_Factory(t) {\n    return new (t || CallOutcomeReportService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  CallOutcomeReportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CallOutcomeReportService,\n    factory: CallOutcomeReportService.ɵfac,\n    providedIn: 'root'\n  });\n  return CallOutcomeReportService;\n})();","map":null,"metadata":{},"sourceType":"module"}