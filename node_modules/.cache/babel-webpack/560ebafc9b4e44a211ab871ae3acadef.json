{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../../shared/services/cco-common.service\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"@angular/router\";\nexport let CcoNetworkSystemComponent = /*#__PURE__*/(() => {\n  class CcoNetworkSystemComponent {\n    constructor(translateService, ccoCommonService, sso, router) {\n      this.translateService = translateService;\n      this.ccoCommonService = ccoCommonService;\n      this.sso = sso;\n      this.router = router;\n      this.menus = {\n        network: false,\n        subscriber: false\n      };\n      this.currentPageSubs = this.ccoCommonService.currentPageData.subscribe(data => {\n        this.currentPage = data;\n        //console.log(this.currentPage)\n      });\n\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.systems.network') !== -1) {\n              this.menus['network'] = true;\n              continue;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.systems.subscriber') !== -1) {\n              this.menus['subscriber'] = true;\n              continue;\n            }\n          }\n        }\n      } else {\n        this.menus = {\n          network: true,\n          subscriber: true\n        };\n      }\n      if (!this.menus['network'] && this.menus['subscriber']) {\n        this.router.navigate(['/cco/system/cco-subscriber-system/system-table-view']);\n      }\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.currentPageSubs) this.currentPageSubs.unsubscribe();\n    }\n    downloadExport() {\n      this.ccoCommonService.doExport('network-system-table-list');\n    }\n  }\n  CcoNetworkSystemComponent.ɵfac = function CcoNetworkSystemComponent_Factory(t) {\n    return new (t || CcoNetworkSystemComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.CcoCommonService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  CcoNetworkSystemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CcoNetworkSystemComponent,\n    selectors: [[\"app-cco-network-system\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-md-12\"]],\n    template: function CcoNetworkSystemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i4.RouterOutlet],\n    styles: [\".test-container[_ngcontent-%COMP%]{display:flex;width:100%}.item[_ngcontent-%COMP%]{flex-grow:1;border-left:3px solid #cdcdcd;padding-left:20px}.item[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:22px;font-weight:600;line-height:32px}.item[_ngcontent-%COMP%] + .item[_ngcontent-%COMP%]{margin-left:2%}.system-details-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.system-details-item[_ngcontent-%COMP%]{align-items:flex-start;width:32%}.system-details-item[_ngcontent-%COMP%] + .system-details-item[_ngcontent-%COMP%]{margin-left:2%}\"]\n  });\n  return CcoNetworkSystemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}