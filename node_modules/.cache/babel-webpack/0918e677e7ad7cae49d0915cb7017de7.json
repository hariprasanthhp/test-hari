{"ast":null,"code":"/**\n * Remove from the beginning of a collection until it is empty.\n *\n * This is a null-safe operation that ensures elements\n * are being removed from the given collection until the\n * collection is empty.\n *\n * The implementation deals with the fact that a remove operation\n * may touch, i.e. remove multiple elements in the collection\n * at a time.\n *\n * @param {Array<Object>} [collection]\n * @param {Function} removeFn\n *\n * @return {Array<Object>} the cleared collection\n */\nexport function saveClear(collection, removeFn) {\n  if (typeof removeFn !== 'function') {\n    throw new Error('removeFn iterator must be a function');\n  }\n  if (!collection) {\n    return;\n  }\n  var e;\n  while (e = collection[0]) {\n    removeFn(e);\n  }\n  return collection;\n}","map":null,"metadata":{},"sourceType":"module"}