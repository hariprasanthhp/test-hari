{"ast":null,"code":"import properties from './implementation/Headers';\nimport elementHelper from 'bpmn-js-properties-panel/lib/helper/ElementHelper';\nimport cmdHelper from 'bpmn-js-properties-panel/lib/helper/CmdHelper';\nimport { isAny } from 'bpmn-js/lib/features/modeling/util/ModelingUtil';\nexport default function (group, element, bpmnFactory, translate) {\n  if (!canHaveHeaders(element)) {\n    return;\n  }\n  const propertiesEntry = properties(element, bpmnFactory, translate, {\n    id: 'headers',\n    modelProperties: ['key', 'value'],\n    labels: [translate('Key'), translate('Value')],\n    getParent: function (element, node, bo) {\n      return bo.extensionElements;\n    },\n    createParent: function (element, bo) {\n      const parent = elementHelper.createElement('bpmn:ExtensionElements', {\n        values: []\n      }, bo, bpmnFactory);\n      const cmd = cmdHelper.updateBusinessObject(element, bo, {\n        extensionElements: parent\n      });\n      return {\n        cmd: cmd,\n        parent: parent\n      };\n    }\n  });\n  if (propertiesEntry) {\n    group.entries.push(propertiesEntry);\n  }\n}\n\n// helpers ////////////////\n\nfunction canHaveHeaders(element) {\n  return isAny(element, ['bpmn:ServiceTask', 'bpmn:UserTask']);\n}","map":null,"metadata":{},"sourceType":"module"}