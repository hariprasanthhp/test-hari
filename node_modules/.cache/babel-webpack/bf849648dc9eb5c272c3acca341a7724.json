{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { getHSI, postHSI, updateHSI } from \"./endpoints\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let HSIService = /*#__PURE__*/(() => {\n  class HSIService {\n    constructor(http, sso) {\n      this.http = http;\n      this.sso = sso;\n    }\n    // Read\n    getHSI() {\n      const params = new HttpParams();\n      return this.http.get(getHSI, {\n        params\n      }).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    updateHSI(hsiModel) {\n      return this.http.put(updateHSI, hsiModel).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    postHSI(hsiModel) {\n      return this.http.post(postHSI, hsiModel).pipe(catchError(this.handleError) //  handle the error\n      );\n    }\n\n    handleError(error) {\n      // Return an observable with a user-facing error message.\n      return throwError(error);\n    }\n  }\n  HSIService.ɵfac = function HSIService_Factory(t) {\n    return new (t || HSIService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  HSIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HSIService,\n    factory: HSIService.ɵfac,\n    providedIn: 'root'\n  });\n  return HSIService;\n})();","map":null,"metadata":{},"sourceType":"module"}