{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n  getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n  entryFactory = require('../../../factory/EntryFactory'),\n  cmdHelper = require('../../../helper/CmdHelper');\nvar forEach = require('lodash/forEach');\nfunction getLinkEventDefinition(element) {\n  var bo = getBusinessObject(element);\n  var linkEventDefinition = null;\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function (eventDefinition) {\n      if (is(eventDefinition, 'bpmn:LinkEventDefinition')) {\n        linkEventDefinition = eventDefinition;\n      }\n    });\n  }\n  return linkEventDefinition;\n}\nmodule.exports = function (group, element, translate) {\n  var linkEvents = ['bpmn:IntermediateThrowEvent', 'bpmn:IntermediateCatchEvent'];\n  forEach(linkEvents, function (event) {\n    if (is(element, event)) {\n      var linkEventDefinition = getLinkEventDefinition(element);\n      if (linkEventDefinition) {\n        var entry = entryFactory.textField(translate, {\n          id: 'link-event',\n          label: translate('Link Name'),\n          modelProperty: 'link-name'\n        });\n        entry.get = function () {\n          return {\n            'link-name': linkEventDefinition.get('name')\n          };\n        };\n        entry.set = function (element, values) {\n          var newProperties = {\n            name: values['link-name']\n          };\n          return cmdHelper.updateBusinessObject(element, linkEventDefinition, newProperties);\n        };\n        group.entries.push(entry);\n      }\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}