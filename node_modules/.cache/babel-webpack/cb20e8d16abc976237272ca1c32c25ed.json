{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BlockPageService = /*#__PURE__*/(() => {\n  class BlockPageService {\n    constructor(http) {\n      this.http = http;\n      this.data = {\n        start: 0,\n        limit: 10\n      };\n      this.loading = false;\n      this.templateData = {};\n      this.result$ = new Subject();\n    }\n    getList(spid) {\n      let data;\n      if (this.loading) {\n        return;\n      }\n      this.loading = true;\n      data = this.data;\n      //console.log(data);\n      return this.doService = this.http.get(environment.SP_API_BASE_URL + '/template/blockpage/list?start=' + data['start'] + '&limit=' + data['limit'] + '&spid=' + spid).subscribe(res => {\n        this.data['start'] += res['results'].length;\n        if (this.data['start'] >= res['total']) {\n          res['showLoadMoreBtn'] = false;\n        } else {\n          res['showLoadMoreBtn'] = true;\n        }\n        for (let i = 0; i < res['results'].length; i++) {\n          this.templateData[res['results'][i].id] = res['results'][i];\n        }\n        localStorage.setItem(\"templateData\", JSON.stringify(this.templateData));\n        this.loading = false;\n        this.result$.next(res);\n      }, err => {\n        //console.log(err);\n        this.loading = false;\n        this.result$.next({\n          error: true,\n          errorMsg: err.statusText\n        });\n      }, () => {\n        this.loading = false;\n      });\n    }\n    setDefaultTemplate(templateId, spid) {\n      return this.http.post(environment.SP_API_BASE_URL + '/template/blockpage/set/default', {\n        id: templateId,\n        spid: spid\n      });\n    }\n    deleteTemplate(templateId, spid) {\n      //return this.http.delete(environment.SP_API_BASE_URL + '/template/blockpage/delete?id=' + templateId);\n      return this.http.request('DELETE', environment.SP_API_BASE_URL + '/template/blockpage/delete', {\n        body: {\n          id: templateId,\n          spid: spid\n        }\n      });\n    }\n    add(params) {\n      return this.http.put(environment.SP_API_BASE_URL + '/template/blockpage/add', params);\n    }\n    getListByTemplateId(id, spid) {\n      return this.http.get(environment.SP_API_BASE_URL + '/template/blockpage/list?id=' + id + '&spid=' + spid);\n    }\n    update(params) {\n      return this.http.post(environment.SP_API_BASE_URL + '/template/blockpage/update', params);\n    }\n    undoService() {\n      //this.data = {};\n      this.data = {\n        start: 0,\n        limit: 10\n      };\n      if (this.doService) {\n        this.doService.unsubscribe();\n      }\n    }\n    setIntialData() {\n      this.data = {\n        start: 0,\n        limit: 10\n      };\n    }\n  }\n  BlockPageService.ɵfac = function BlockPageService_Factory(t) {\n    return new (t || BlockPageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BlockPageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlockPageService,\n    factory: BlockPageService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlockPageService;\n})();","map":null,"metadata":{},"sourceType":"module"}