{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport * as isCidr from 'is-cidr';\nimport * as jquery from 'jquery';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../../../../shared/services/api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../../shared/services/sso-auth.service\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"src/app/shared/services/common-functions.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../../../../shared/directives/trim-space.directive\";\nimport * as i11 from \"angular-datatables\";\nconst _c0 = [\"subnetNgForm\"];\nconst _c1 = [\"subnet\"];\nconst _c2 = [\"subnetDeleteModalRef\"];\nconst _c3 = [\"addSubnet\"];\nconst _c4 = [\"closeModal\"];\nconst _c5 = [\"addSubnetConfigMOdal\"];\nfunction SubnetConfigComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.language[\"Access denied due to RBAC. Please consult your Organization Administrator for access.\"], \" \");\n  }\n}\nfunction SubnetConfigComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵelement(2, \"img\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"strong\", 38);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"? \");\n    i0.ɵɵelementStart(9, \"div\", 39);\n    i0.ɵɵelementStart(10, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_div_1_div_1_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.openDeleteConfirmation(ctx_r13.selectedSubnetObj, true);\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_div_1_div_1_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.closeDeleteConfirmation();\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.Confirmation, \", \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.delete_subnet_confirmation, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.selectedSubnetObj == null ? null : ctx_r9.selectedSubnetObj.subnet);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.language.Cancel, \" \");\n  }\n}\nfunction SubnetConfigComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"div\", 43);\n    i0.ɵɵelementStart(2, \"div\", 44);\n    i0.ɵɵelementStart(3, \"span\", 45);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r10.language.Loading);\n  }\n}\nfunction SubnetConfigComponent_div_1_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\", 46);\n    i0.ɵɵelementStart(1, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_div_1_p_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.addSubnetConfigMOdalOpen();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r11.language.Add_Subnet);\n  }\n}\nfunction SubnetConfigComponent_div_1_table_6_tr_7_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 53);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_div_1_table_6_tr_7_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const subnetObj_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return ctx_r22.openDeleteConfirmation(subnetObj_r20, \"\");\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(4);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r21.language.delete);\n  }\n}\nfunction SubnetConfigComponent_div_1_table_6_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 51);\n    i0.ɵɵtemplate(4, SubnetConfigComponent_div_1_table_6_tr_7_i_4_Template, 1, 1, \"i\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subnetObj_r20 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subnetObj_r20.subnet);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.hasWriteAccess);\n  }\n}\nfunction SubnetConfigComponent_div_1_table_6_tbody_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 54);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r19.language[\"No data available in table\"], \" \");\n  }\n}\nfunction SubnetConfigComponent_div_1_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 48);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"th\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"tbody\");\n    i0.ɵɵtemplate(7, SubnetConfigComponent_div_1_table_6_tr_7_Template, 5, 2, \"tr\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, SubnetConfigComponent_div_1_table_6_tbody_8_Template, 4, 1, \"tbody\", 50);\n    i0.ɵɵelement(9, \"tbody\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r12.dtOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r12.language.Subnet);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.subnetList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.subnetList != undefined && ctx_r12.subnetList.length === 0);\n  }\n}\nfunction SubnetConfigComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, SubnetConfigComponent_div_1_div_1_Template, 14, 5, \"div\", 31);\n    i0.ɵɵtemplate(2, SubnetConfigComponent_div_1_div_2_Template, 5, 1, \"div\", 32);\n    i0.ɵɵelementStart(3, \"div\", 33);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SubnetConfigComponent_div_1_p_5_Template, 3, 1, \"p\", 34);\n    i0.ɵɵtemplate(6, SubnetConfigComponent_div_1_table_6_Template, 10, 4, \"table\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.subnetDeleteModalRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.language[\"Subnet Configuration\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.subnetList && ctx_r1.hasWriteAccess && ctx_r1.allowSubnetConfig);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.countReceived);\n  }\n}\nfunction SubnetConfigComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r25.language[\"This field is required\"], \" \");\n  }\n}\nfunction SubnetConfigComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtemplate(1, SubnetConfigComponent_div_27_div_1_Template, 2, 1, \"div\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(26);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.required);\n  }\n}\nfunction SubnetConfigComponent_ng_template_35_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r31.language[\"This field is required\"], \" \");\n  }\n}\nfunction SubnetConfigComponent_ng_template_35_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtemplate(1, SubnetConfigComponent_ng_template_35_div_22_div_1_Template, 2, 1, \"div\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r29 = i0.ɵɵreference(21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r29.errors.required);\n  }\n}\nconst _c6 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction SubnetConfigComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_ng_template_35_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      ctx_r32.subnetValue = null;\n      return ctx_r32.closeSubnet();\n    });\n    i0.ɵɵelement(4, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵelementStart(6, \"div\", 10);\n    i0.ɵɵelementStart(7, \"span\", 11);\n    i0.ɵɵelement(8, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"div\", 13);\n    i0.ɵɵelementStart(10, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_ng_template_35_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r34 = i0.ɵɵnextContext();\n      ctx_r34.closeExistingAlert();\n      return ctx_r34.subnetValue = null;\n    });\n    i0.ɵɵelement(11, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"form\", 16, 17);\n    i0.ɵɵlistener(\"ngSubmit\", function SubnetConfigComponent_ng_template_35_Template_form_ngSubmit_12_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.onSubmit();\n    });\n    i0.ɵɵelementStart(14, \"label\", 18);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementStart(16, \"span\", 19);\n    i0.ɵɵtext(17, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 20);\n    i0.ɵɵelementStart(19, \"input\", 21, 22);\n    i0.ɵɵlistener(\"input\", function SubnetConfigComponent_ng_template_35_Template_input_input_19_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.closeExistingAlert();\n    })(\"ngModelChange\", function SubnetConfigComponent_ng_template_35_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.subnetValue = $event;\n    })(\"blur\", function SubnetConfigComponent_ng_template_35_Template_input_blur_19_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.removeUnwantedSpace(\"subnetValue\", ctx_r38.subnetValue);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(22, SubnetConfigComponent_ng_template_35_div_22_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 24);\n    i0.ɵɵelementStart(24, \"div\", 25);\n    i0.ɵɵelementStart(25, \"button\", 26);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 25);\n    i0.ɵɵelementStart(28, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function SubnetConfigComponent_ng_template_35_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r39 = i0.ɵɵnextContext();\n      ctx_r39.toggleSubnetConfigForm = false;\n      ctx_r39.subnetValue = null;\n      return ctx_r39.closeSubnet();\n    });\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r27 = i0.ɵɵreference(13);\n    const _r29 = i0.ɵɵreference(21);\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.language[\"Add Subnet\"]);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r8.language[ctx_r8.errorMessage] || ctx_r8.errorMessage, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.Enter_Subnet, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r8.language.CIDR_Format);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c6, _r27.submitted && _r29.invalid))(\"ngModel\", ctx_r8.subnetValue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", _r27.submitted && _r29.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.Save, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.cancel, \" \");\n  }\n}\nclass DataTablesResponse {}\nexport let SubnetConfigComponent = /*#__PURE__*/(() => {\n  class SubnetConfigComponent {\n    constructor(translateService, httpService, router, authService, modalService, titleService, CommonFunctionsService) {\n      this.translateService = translateService;\n      this.httpService = httpService;\n      this.router = router;\n      this.authService = authService;\n      this.modalService = modalService;\n      this.titleService = titleService;\n      this.CommonFunctionsService = CommonFunctionsService;\n      this.countReceived = false;\n      this.subnetDeleteModalRef = false;\n      // Initialize local variables.\n      this.toggleSubnetConfigForm = false;\n      this.dtOptions = {};\n      this.hasWriteAccess = false;\n      this.validateScopeStage = false;\n      // Url Constants.\n      this.subnetConfigUrl = `${environment[`SUPPORT_URL`]}/netops-subnet/subnet`;\n      this.dtTrigger = new Subject();\n      this.allowSubnetConfig = true;\n      this.hasScopeAccess = false;\n      this.frTable = this.translateService.fr;\n      this.esTable = this.translateService.es;\n      this.germanTable = this.translateService.de_DE;\n    }\n    setTitle(url) {\n      if (!this.router.url.includes('cco-foundation') && !this.router.url.includes('cco/services/configuration/subnet-configuration')) {\n        this.titleService.setTitle(`${this.language['Subnet Configuration']} - ${this.language['Configurations']} - ${this.language['NetOps']} - ${this.language['Support']} - ${this.language['Calix Cloud']}`);\n      } else if (this.router.url.includes('cco/services/configuration/subnet-configuration')) {\n        this.titleService.setTitle(`${this.language['Subnet Configuration']} - ${this.language['Configuration']} - ${this.language['Services']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.titleService.setTitle(`${this.language['subnets']} - ${this.language['settings']} - ${this.language['configuration']} - ${this.language['Deployment']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      var _a, _b;\n      // this.titleService.setTitle('Calix Cloud - Configurations - Subnet Configuration');\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.reDraw();\n        this.setTitle(this.router.url);\n        // this.rerender();\n      });\n\n      this.setTitle(this.router.url);\n      let scopes = this.authService.getScopes();\n      if (!this.router.url.includes('cco-foundation') && !this.router.url.includes('cco/services/configuration/subnet-configuration') && !this.router.url.includes('cco/operations/configuration/workflows')) {\n        if (environment.VALIDATE_SCOPE) {\n          scopes['cloud.rbac.csc.netops.config.subnet_config'] = scopes['cloud.rbac.csc.netops.config.subnet_config'] ? scopes['cloud.rbac.csc.netops.config.subnet_config'] : [];\n          if (scopes['cloud.rbac.csc.netops.config.subnet_config'].length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && scopes['cloud.rbac.csc.netops.config.subnet_config'] && scopes['cloud.rbac.csc.netops.config.subnet_config'].indexOf('write') !== -1) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      } else if (this.router.url.includes('cco/services/configuration/subnet-configuration') || this.router.url.includes('cco/operations/configuration/workflows')) {\n        if (environment.VALIDATE_SCOPE) {\n          if ((_a = scopes['cloud.rbac.coc.services.configuration.subnetconfiguration']) === null || _a === void 0 ? void 0 : _a.length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && ((_b = scopes['cloud.rbac.coc.services.configuration.subnetconfiguration']) === null || _b === void 0 ? void 0 : _b.includes('write'))) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      } else {\n        if (environment.VALIDATE_SCOPE) {\n          scopes['cloud.rbac.foundation.configurations'] = scopes['cloud.rbac.foundation.configurations'] ? scopes['cloud.rbac.foundation.configurations'] : [];\n          if (scopes['cloud.rbac.foundation.configurations'].length) {\n            this.hasScopeAccess = true;\n          }\n          if (scopes && scopes['cloud.rbac.foundation.configurations'].includes('write')) {\n            this.hasWriteAccess = true;\n          }\n        } else {\n          this.hasWriteAccess = true;\n          this.hasScopeAccess = true;\n        }\n      }\n      if (!this.hasScopeAccess) {\n        this.authService.setPageAccess(false);\n        return;\n      }\n      let enttlmnts = this.authService.getEntitlements();\n      if (this.router.url.includes('cco/operations') && enttlmnts[210] && !enttlmnts[102]) {\n        this.allowSubnetConfig = false;\n      }\n      // let base = `${environment.API_BASE}`;\n      // if (base.indexOf('/dev.api.calix.ai') > -1) {\n      //   this.validateScopeStage = true;\n      // } else this.validateScopeStage = false;\n      /*this.dtOptions = {\r\n        pagingType: 'full_numbers',\r\n        pageLength: 10,\r\n        lengthChange: false,\r\n        serverSide: true,\r\n        processing: false,\r\n        dom: 'tipr',\r\n        columnDefs: [\r\n          { targets: [0], orderable: true }\r\n        ],\r\n        order: [0, 'asc'],\r\n      };*/\n      this.subnetCount('1');\n    }\n    ngAfterViewInit() {}\n    addSubnetConfigMOdalOpen() {\n      this.modalRef = this.modalService.open(this.addSubnetConfigMOdal, {\n        centered: true,\n        windowClass: 'vid-med-modal'\n      });\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n    }\n    subnetCount(initload = '') {\n      this.loading = true;\n      this.httpService.get(this.subnetConfigUrl + '/count', this.constructHttpParam('', '', '')).subscribe(resp => {\n        this.dataCount = resp.count;\n        this.countReceived = true;\n        this.loading = false;\n        if (initload) {\n          this.loadSubnetConfigurationList();\n        }\n      }, error => {\n        this.loading = false;\n        //this.showErrorNotification(error);\n      });\n    }\n    /**\r\n     * @description - Method to load subnet configuration list.\r\n     */\n    loadSubnetConfigurationList() {\n      this.loading = true;\n      const that = this;\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthChange: false,\n        serverSide: true,\n        processing: false,\n        dom: 'tipr',\n        \"ordering\": false,\n        ajax: (dataTablesParameters, callback) => {\n          that.httpService.get(`${environment[`SUPPORT_URL`]}/netops-subnet/subnet`, that.constructHttpParam(dataTablesParameters.start, dataTablesParameters.length, 'list')).subscribe(subnetList => {\n            that.subnetList = subnetList;\n            that.loading = false;\n            callback({\n              recordsTotal: that.dataCount != undefined ? that.dataCount : 0,\n              recordsFiltered: that.dataCount != undefined ? that.dataCount : 0,\n              data: []\n            });\n          }, err => {\n            if (err.status == 404) {\n              that.subnetList = [];\n              setTimeout(() => {\n                callback({\n                  recordsTotal: that.dataCount != undefined ? that.dataCount : 0,\n                  recordsFiltered: that.dataCount != undefined ? that.dataCount : 0,\n                  data: []\n                });\n              }, 100);\n            } else {\n              that.showErrorNotification(err);\n            }\n          });\n        },\n        drawCallback: settings => {\n          this.changeTableStatusLanguage(settings);\n          let total = settings._iRecordsDisplay; // for server side rendering\n          let length = settings._iDisplayLength;\n          if (total <= length) {\n            $(settings.nTableWrapper).find('#users-table_last').addClass('disabled');\n          } else {\n            //$(settings.nTableWrapper).find('#users-table_last').removeClass('disabled');\n          }\n        },\n        columns: [{\n          data: 'Subnet'\n        }]\n      };\n      this.tableLanguageOptions();\n    }\n    changeTableStatusLanguage(dtObj) {\n      const nf = new Intl.NumberFormat();\n      this.tableCounts = {\n        searchText: dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\"),\n        total: dtObj._iRecordsTotal,\n        displayCount: dtObj._iDisplayLength,\n        displayed: dtObj._iRecordsDisplay,\n        start: dtObj._iDisplayStart\n      };\n      const isFrench = sessionStorage.getItem('defaultLanguage') == 'fr';\n      const isSpanish = sessionStorage.getItem('defaultLanguage') == 'es';\n      const isGermen = sessionStorage.getItem('defaultLanguage') == 'de_DE';\n      const filtered = `${dtObj.oPreviousSearch.sSearch.replace(/\\s+/g, \"\") ? isFrench ? `(filtrées à partir des ${nf.format(dtObj._iRecordsTotal)} entrées totales)` : isSpanish ? `(filtrado de un total de ${nf.format(dtObj._iRecordsTotal)} entradas)` : isGermen ? `(gefiltert aus ${nf.format(dtObj._iRecordsTotal)} Einträgen)` : `(filtered from ${nf.format(dtObj._iRecordsTotal)} total entries)` : ''}`;\n      const startCount = dtObj._iRecordsDisplay == 0 ? -1 : dtObj._iDisplayStart;\n      const showingCount = dtObj._iDisplayStart + dtObj._iDisplayLength > dtObj._iRecordsDisplay ? dtObj._iRecordsDisplay : dtObj._iDisplayStart + dtObj._iDisplayLength;\n      $('div [role=\"status\"]').text(isFrench ? `Affichage de ${nf.format(startCount + 1)} à ${nf.format(showingCount)} des ${nf.format(dtObj._iRecordsDisplay)} entrées ${filtered}` : isSpanish ? `Se muestran del ${nf.format(startCount + 1)} al ${nf.format(showingCount)} de ${nf.format(dtObj._iRecordsDisplay)} resultados ${filtered}` : isGermen ? `Angezeigt ${nf.format(startCount + 1)} bis ${nf.format(showingCount)} von ${nf.format(dtObj._iRecordsDisplay)} ergebnissen ${filtered}` : `Showing ${nf.format(startCount + 1)} to ${nf.format(showingCount)} of ${nf.format(dtObj._iRecordsDisplay)} entries ${filtered}`);\n      //$(\".dataTables_filter label\")[0].childNodes[0].nodeValue = isFrench ? 'Chercher:' : 'Search:';\n      //$(\".dataTables_length label\")[0].childNodes[0].nodeValue = isFrench ? 'Afficher les ' : 'Show ';\n      //$(\".dataTables_length label\")[0].childNodes[2].nodeValue = isFrench ? ' entrées' : ' entries';\n      $(\".first\").text(isFrench ? 'Le début' : isSpanish ? 'Primero' : isGermen ? 'Erste Seite' : 'First');\n      $(\".previous\").text(isFrench ? 'Précédent' : isSpanish ? 'Anterior' : isGermen ? 'Zurück' : 'Previous');\n      $(\".next\").text(isFrench ? 'Suivant' : isSpanish ? 'Siguiente' : isGermen ? 'Weiter' : 'Next');\n      $(\".last\").text(isFrench ? 'Dernière' : isSpanish ? 'Último' : isGermen ? 'Letzte' : 'Last');\n    }\n    reDraw() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.draw();\n      });\n    }\n    constructHttpParam(skip, limit, calls) {\n      this.httpParam = new HttpParams();\n      // this.httpParam = this.httpParam.set('orgId', this.authService.getOrgId());\n      if (this.authService.getOrg(this.orgId)) {\n        this.httpParam.set(\"orgId\", this.orgId);\n      }\n      if (calls == 'list') {\n        this.httpParam = this.httpParam.set('skip', skip);\n        this.httpParam = this.httpParam.set('limit', limit);\n      }\n      return this.httpParam;\n    }\n    /**\r\n     * @description - Method to toggle subnet add form.\r\n     */\n    toggleSubnet() {\n      this.toggleSubnetConfigForm = !this.toggleSubnetConfigForm;\n      if (this.toggleSubnetConfigForm) {\n        this.subnetNgForm.resetForm();\n        setTimeout(() => {\n          this.subnetFormControl.nativeElement.focus();\n        }, 100);\n      }\n    }\n    /**\r\n     * @description - Method to trigger submit.\r\n     */\n    onSubmit() {\n      if (this.subnetList.length > 1) {\n        var item = this.subnetList.find(item => item.subnet == this.subnetValue);\n      }\n      if (!this.subnetNgForm.valid) {\n        setTimeout(() => {\n          this.subnetFormControl.nativeElement.focus();\n        }, 100);\n        return;\n      } else if (!isCidr.v4(this.subnetValue.trim())) {\n        jquery('.alert').show();\n        if (parseInt(this.subnetValue.split('/')[1]) > 32) {\n          this.errorMessage = 'The subnet size cannot be greater than 32.';\n        } else {\n          this.errorMessage = 'Invalid IPv4 CIDR Format.';\n        }\n        return;\n      }\n      this.onSaveSubnetConfig();\n    }\n    /**\r\n     * @description - Method to save subnet config.\r\n     */\n    onSaveSubnetConfig() {\n      this.loading = true;\n      if (this.subnetNgForm.valid) {\n        this.httpService.post(this.subnetConfigUrl, this.constructSubnetConfigObj(), this.constructHttpParam('', '', '')).subscribe(subnetConfig => {\n          this.loading = false;\n          if (subnetConfig) {\n            this.toggleSubnetConfigForm = false;\n            // this.modalService.dismissAll();\n            // this.closeModal.nativeElement.click();\n            // this.subnetValue = null;\n            // this.closeAlert();\n            this.closeSubnet();\n            //reload table after save.\n            this.subnetCount();\n            if (this.countReceived) {\n              this.reDraw();\n            }\n            setTimeout(() => {\n              this.subnetValue = null;\n            }, 1000);\n          }\n        }, err => {\n          this.loading = false;\n          if (err.status == 409) {\n            jquery('.alert').show();\n            this.errorMessage = \"Conflict: Subnet overlaps existing range\";\n            return;\n          } else {\n            this.showErrorNotification(err);\n          }\n        });\n      }\n    }\n    /**\r\n     * @description - Method to construct subnet config post object.\r\n     */\n    constructSubnetConfigObj() {\n      const subnetValue = this.subnetNgForm.value;\n      var part = subnetValue[`subnet`].split(\"/\"); // part[0] = base address, part[1] = netmask\n      var ipaddress = part[0].split('.');\n      var netmaskblocks = [\"0\", \"0\", \"0\", \"0\"];\n      if (!/\\d+\\.\\d+\\.\\d+\\.\\d+/.test(part[1])) {\n        // part[1] has to be between 0 and 32\n        netmaskblocks = (\"1\".repeat(parseInt(part[1], 10)) + \"0\".repeat(32 - parseInt(part[1], 10))).match(/.{1,8}/g);\n        netmaskblocks = netmaskblocks.map(function (el) {\n          return parseInt(el, 2);\n        });\n      } else {\n        // xxx.xxx.xxx.xxx\n        netmaskblocks = part[1].split('.').map(function (el) {\n          return parseInt(el, 10);\n        });\n      }\n      var invertedNetmaskblocks = netmaskblocks.map(function (el) {\n        return el ^ 255;\n      });\n      var baseAddress = ipaddress.map(function (block, idx) {\n        return block & netmaskblocks[idx];\n      });\n      var broadcastaddress = ipaddress.map(function (block, idx) {\n        return block | invertedNetmaskblocks[idx];\n      });\n      //return [baseAddress.join('.'), broadcastaddress.join('.')];\n      const subnetObj = {\n        subnet: subnetValue[`subnet`],\n        start: baseAddress.join('.'),\n        end: broadcastaddress.join('.')\n      };\n      return subnetObj;\n    }\n    /**\r\n     * @description - Method to close alert.\r\n     */\n    closeAlert() {\n      jquery('.alert').hide('slow');\n      this.closeModal.nativeElement.click();\n    }\n    closeExistingAlert() {\n      jquery('.alert').hide('slow');\n    }\n    closeSubnet() {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n    }\n    /**\r\n     * @description - Method to delete subnet.\r\n     * @param - {any} subnetObj.\r\n     */\n    openDeleteConfirmation(subnetObj, action) {\n      this.selectedSubnetObj = subnetObj;\n      this.subnetDeleteModalRef = true;\n      if (action) {\n        this.loading = true;\n        const deleteSubnetByIdUrl = this.subnetConfigUrl + '/' + subnetObj._id;\n        this.httpService.delete(deleteSubnetByIdUrl).subscribe(() => {\n          this.selectedSubnetObj = null;\n          this.subnetDeleteModalRef = false;\n          this.loading = false;\n          // reload table after delete.\n          //this.dataCount= undefined;\n          this.subnetCount();\n          if (this.countReceived) {\n            this.reDraw();\n          }\n        }, error => {\n          this.showErrorNotification(error);\n        });\n      }\n      let scrollTop = document.getElementById('subnet-config');\n      if (scrollTop !== null) {\n        scrollTop.scrollIntoView({\n          behavior: 'smooth'\n        });\n        scrollTop = null;\n      }\n    }\n    /**\r\n     * @description - Method to show error snackbar.\r\n     * @param - { error }\r\n     */\n    showErrorNotification(error) {\n      // Needs to show error msg.\n      jquery('.alert').show();\n      this.errorMessage = error.error.error;\n    }\n    closeDeleteConfirmation() {\n      this.subnetDeleteModalRef = false;\n    }\n    tableLanguageOptions() {\n      if (this.language.fileLanguage == 'fr') {\n        this.dtOptions.language = this.frTable;\n      } else if (this.language.fileLanguage == 'es') {\n        this.dtOptions.language = this.esTable;\n      } else if (this.language.fileLanguage == 'de_DE') {\n        this.dtOptions.language = this.germanTable;\n      } else if (this.language.fileLanguage == 'en' && this.dtOptions.language) {\n        delete this.dtOptions.language;\n      }\n    }\n    rerender() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    }\n    removeUnwantedSpace(input, value) {\n      this[input] = this.CommonFunctionsService.trimSpaceFromNonObjectInputs(value);\n    }\n  }\n  SubnetConfigComponent.ɵfac = function SubnetConfigComponent_Factory(t) {\n    return new (t || SubnetConfigComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.SsoAuthService), i0.ɵɵdirectiveInject(i5.NgbModal), i0.ɵɵdirectiveInject(i6.Title), i0.ɵɵdirectiveInject(i7.CommonFunctionsService));\n  };\n  SubnetConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubnetConfigComponent,\n    selectors: [[\"app-subnet-config\"]],\n    viewQuery: function SubnetConfigComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n        i0.ɵɵviewQuery(_c4, 7);\n        i0.ɵɵviewQuery(_c5, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subnetNgForm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subnetFormControl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModalRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSubnet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSubnetConfigMOdal = _t.first);\n      }\n    },\n    decls: 37,\n    vars: 13,\n    consts: [[\"role\", \"alert\", \"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"id\", \"subnet-config\", \"class\", \"tab-pane position-relative\", 4, \"ngIf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModal\", \"aria-hidden\", \"true\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-subnet-con\", \"modal-dialog-centered\"], [1, \"modal-content\", \"modal-cus-pad\"], [1, \"modal-header\", \"border-0\"], [1, \"sub-title\"], [\"src\", \"assets/img/close-icon.svg\", \"data-dismiss\", \"modal\", \"alt\", \"\", 1, \"sub-close\", 3, \"click\"], [\"closeModal\", \"\"], [1, \"modal-body\"], [1, \"alert\", \"alert-danger\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [\"type\", \"button\", \"id\", \"hide-error-btn\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"id\", \"subnet-config-form\", \"autocomplete\", \"off\", \"novalidate\", \"\", 1, \"form-group\", \"ccl-form\", \"row\", 3, \"ngSubmit\"], [\"subnetNgForm\", \"ngForm\"], [\"for\", \"subnet-cidr\", 1, \"col-sm-4\", \"col-form-label\", \"pt-0\", \"pr-0\"], [1, \"error\"], [1, \"col-sm-8\"], [\"type\", \"text\", \"id\", \"subnet\", \"required\", \"\", \"spellcheck\", \"false\", \"autocomplete\", \"off\", \"placement\", \"bottom\", \"name\", \"subnet\", \"trimSpace\", \"\", 1, \"form-control\", 3, \"ngClass\", \"placeholder\", \"ngModel\", \"input\", \"ngModelChange\", \"blur\"], [\"subnet\", \"\", \"subnetFormControl\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"modal-footer\", \"mt-3\", \"border-0\"], [1, \"text-md-left\"], [\"id\", \"submit-btn\", \"type\", \"submit\", 1, \"btn-default\", \"primary\", \"px-3\", \"mr-2\", \"sm\", \"float-left\"], [\"type\", \"reset\", \"id\", \"cancel-btn\", 1, \"btn-default\", \"transparant\", \"px-3\", \"sm\", \"float-left\", 3, \"click\"], [\"addSubnetConfigMOdal\", \"\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [\"id\", \"subnet-config\", 1, \"tab-pane\", \"position-relative\"], [\"class\", \"py-3 warning-msg\", 4, \"ngIf\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"d-block\", \"d-sm-none\", \"ccl-Secondary-title\", \"mb-2\", \"col-md-12\", \"border-bottom\"], [\"class\", \"text-md-left mt-3\", 4, \"ngIf\"], [\"width\", \"100%\", \"id\", \"subnetConfigTable\", \"class\", \"row-border hover table-alter\", \"datatable\", \"\", 3, \"dtOptions\", 4, \"ngIf\"], [1, \"py-3\", \"warning-msg\"], [\"src\", \"./assets/img/warning-icon.svg\"], [1, \"f-size-18\"], [1, \"btn-con-sec\", \"float-right\"], [\"type\", \"button\", \"ngbAutofocus\", \"\", \"id\", \"confirm-btn\", 1, \"btn-default\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"id\", \"cancel-btn\", 1, \"btn-default\", \"btn-dft\", \"py-1\", 3, \"click\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"text-md-left\", \"mt-3\"], [\"type\", \"button\", 1, \"btn-default\", \"primary\", 3, \"click\"], [\"width\", \"100%\", \"id\", \"subnetConfigTable\", \"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-alter\", 3, \"dtOptions\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"text-right\"], [\"class\", \"fa fa-trash-o cursor-pointer del-action-icon\", 3, \"title\", \"click\", 4, \"ngIf\"], [1, \"fa\", \"fa-trash-o\", \"cursor-pointer\", \"del-action-icon\", 3, \"title\", \"click\"], [\"colspan\", \"8\", 1, \"no-data-available\"], [1, \"invalid-feedback\"], [1, \"modal-header\", \"mb-4\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"type\", \"reset\", \"id\", \"cancel-btn\", 1, \"btn-default\", \"btn-dft\", \"px-3\", \"sm\", \"float-left\", 3, \"click\"]],\n    template: function SubnetConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SubnetConfigComponent_div_0_Template, 2, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, SubnetConfigComponent_div_1_Template, 7, 5, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"img\", 7, 8);\n        i0.ɵɵlistener(\"click\", function SubnetConfigComponent_Template_img_click_8_listener() {\n          ctx.toggleSubnetConfigForm = false;\n          ctx.subnetValue = null;\n          return ctx.closeAlert();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"span\", 11);\n        i0.ɵɵelement(13, \"img\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"div\", 13);\n        i0.ɵɵelementStart(15, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function SubnetConfigComponent_Template_button_click_15_listener() {\n          ctx.closeExistingAlert();\n          return ctx.subnetValue = null;\n        });\n        i0.ɵɵelement(16, \"span\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"form\", 16, 17);\n        i0.ɵɵlistener(\"ngSubmit\", function SubnetConfigComponent_Template_form_ngSubmit_17_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(19, \"label\", 18);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementStart(21, \"span\", 19);\n        i0.ɵɵtext(22, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 20);\n        i0.ɵɵelementStart(24, \"input\", 21, 22);\n        i0.ɵɵlistener(\"input\", function SubnetConfigComponent_Template_input_input_24_listener() {\n          return ctx.closeExistingAlert();\n        })(\"ngModelChange\", function SubnetConfigComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.subnetValue = $event;\n        })(\"blur\", function SubnetConfigComponent_Template_input_blur_24_listener() {\n          return ctx.removeUnwantedSpace(\"subnetValue\", ctx.subnetValue);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, SubnetConfigComponent_div_27_Template, 2, 1, \"div\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 24);\n        i0.ɵɵelementStart(29, \"div\", 25);\n        i0.ɵɵelementStart(30, \"button\", 26);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 25);\n        i0.ɵɵelementStart(33, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function SubnetConfigComponent_Template_button_click_33_listener() {\n          ctx.toggleSubnetConfigForm = false;\n          ctx.subnetValue = null;\n          return ctx.closeAlert();\n        });\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, SubnetConfigComponent_ng_template_35_Template, 30, 11, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(18);\n        const _r5 = i0.ɵɵreference(26);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasScopeAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasScopeAccess);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.language[\"Add Subnet\"]);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"innerHtml\", ctx.language[ctx.errorMessage] || ctx.errorMessage, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Enter_Subnet, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.CIDR_Format);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c6, _r3.submitted && _r5.invalid))(\"ngModel\", ctx.subnetValue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r3.submitted && _r5.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Save, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.cancel, \" \");\n      }\n    },\n    directives: [i8.NgIf, i9.ɵNgNoValidate, i9.NgControlStatusGroup, i9.NgForm, i9.DefaultValueAccessor, i9.RequiredValidator, i10.TrimSpaceDirective, i8.NgClass, i9.NgControlStatus, i9.NgModel, i11.DataTableDirective, i8.NgForOf],\n    styles: [\".p-10[_ngcontent-%COMP%]{padding:10px}.p-15[_ngcontent-%COMP%]{padding:15px}.p-20[_ngcontent-%COMP%]{padding:20px}.p-25[_ngcontent-%COMP%]{padding:25px}.p-30[_ngcontent-%COMP%]{padding:30px}.p-35[_ngcontent-%COMP%]{padding:35px}.p-40[_ngcontent-%COMP%]{padding:40px}.p-45[_ngcontent-%COMP%]{padding:45px}.p-50[_ngcontent-%COMP%]{padding:50px}.p-55[_ngcontent-%COMP%]{padding:55px}.p-60[_ngcontent-%COMP%]{padding:60px}.pt-10[_ngcontent-%COMP%]{padding-top:10px}.pt-15[_ngcontent-%COMP%]{padding-top:15px}.pt-20[_ngcontent-%COMP%]{padding-top:20px}.pt-25[_ngcontent-%COMP%]{padding-top:25px}.pt-30[_ngcontent-%COMP%]{padding-top:30px}.pt-35[_ngcontent-%COMP%]{padding-top:35px}.pt-40[_ngcontent-%COMP%]{padding-top:40px}.pt-45[_ngcontent-%COMP%]{padding-top:45px}.pt-50[_ngcontent-%COMP%]{padding-top:50px}.pt-55[_ngcontent-%COMP%]{padding-top:55px}.pt-60[_ngcontent-%COMP%]{padding-top:60px}.mt-10[_ngcontent-%COMP%]{margin-top:10px}.mt-15[_ngcontent-%COMP%]{margin-top:15px}.mt-20[_ngcontent-%COMP%]{margin-top:20px}.mt-25[_ngcontent-%COMP%]{margin-top:25px}.mt-30[_ngcontent-%COMP%]{margin-top:30px}.mt-35[_ngcontent-%COMP%]{margin-top:35px}.mt-40[_ngcontent-%COMP%]{margin-top:40px}.mt-45[_ngcontent-%COMP%]{margin-top:45px}.mt-50[_ngcontent-%COMP%]{margin-top:50px}.mt-55[_ngcontent-%COMP%]{margin-top:55px}.mt-60[_ngcontent-%COMP%]{margin-top:60px}.mb0[_ngcontent-%COMP%]{margin-bottom:0}.mb1[_ngcontent-%COMP%]{margin-bottom:10px}.mb15[_ngcontent-%COMP%]{margin-bottom:15px}.mb2[_ngcontent-%COMP%]{margin-bottom:20px}.mb3[_ngcontent-%COMP%]{margin-bottom:30px}.mb4[_ngcontent-%COMP%]{margin-bottom:40px}.mb5[_ngcontent-%COMP%]{margin-bottom:50px}.mb6[_ngcontent-%COMP%]{margin-bottom:60px}.mb7[_ngcontent-%COMP%]{margin-bottom:70px}.mb8[_ngcontent-%COMP%]{margin-bottom:80px}.mb9[_ngcontent-%COMP%]{margin-bottom:90px}.primary[_ngcontent-%COMP%]{color:#0279ff}.secondary[_ngcontent-%COMP%]{color:#0054b2}.calixpurple[_ngcontent-%COMP%]{color:#43367d}.calixblue[_ngcontent-%COMP%]{color:#324a9d}.calixsky[_ngcontent-%COMP%]{color:#387cbf}.calixorange[_ngcontent-%COMP%]{color:#e97b00}.brightred[_ngcontent-%COMP%]{color:#ff3600}.lightred[_ngcontent-%COMP%]{color:#ff734f}.purple[_ngcontent-%COMP%]{color:#91479b}.error[_ngcontent-%COMP%]{color:#c70000}.warning[_ngcontent-%COMP%]{color:#ff8238}.warningt[_ngcontent-%COMP%]{color:#c74900}.success[_ngcontent-%COMP%]{color:#82bf00}.successt[_ngcontent-%COMP%]{color:#507500}.caution[_ngcontent-%COMP%]{color:#f7c343}.wgrey[_ngcontent-%COMP%]{color:#f8f8fa}.snowgrey[_ngcontent-%COMP%]{color:#ebeaef}.lgrey[_ngcontent-%COMP%]{color:#ccc}.calixgrey[_ngcontent-%COMP%]{color:#9e9e9e}.blastgrey[_ngcontent-%COMP%]{color:gray}.greyaa[_ngcontent-%COMP%]{color:#1a1f22}.darkgrey[_ngcontent-%COMP%]{color:#333}.calixblack[_ngcontent-%COMP%]{color:#1a1f22}.calixblack[_ngcontent-%COMP%]{color:#000}.calixred[_ngcontent-%COMP%]{color:#fb2d55}.calixgreen[_ngcontent-%COMP%]{color:#349885}.calixaqblue[_ngcontent-%COMP%]{color:#26c0eb}.title[_ngcontent-%COMP%]{font-size:42px;font-weight:300;line-height:53px}.title-second[_ngcontent-%COMP%]{font-size:24px!important;font-style:normal;font-weight:400!important;line-height:30px;letter-spacing:0em;text-align:left;color:#1a1f22}.heading-sm[_ngcontent-%COMP%]{font-size:16px;font-weight:600;line-height:22px}.listlabels[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:22px}.listdataem[_ngcontent-%COMP%]{font-size:13px;font-weight:600;line-height:21px}.listdata[_ngcontent-%COMP%]{font-size:13px;font-weight:400;line-height:24px}.formlabels[_ngcontent-%COMP%]{font-size:13px;font-weight:400;line-height:16px}.captions[_ngcontent-%COMP%]{font-size:11px;font-weight:600;line-height:13.2px}.chartno[_ngcontent-%COMP%]{font-size:10px;font-weight:400;line-height:12px}.btn-large[_ngcontent-%COMP%]{border-radius:26px;padding:12px;min-width:130px;text-align:center;font-size:20px;font-weight:400;color:#fff;box-shadow:5px 5px 10px #00000026;border:0}.btn-large.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-large.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-large.primary[_ngcontent-%COMP%]:focus{background:#0054b2;outline:none;box-shadow:none;border:0}.btn-large.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-large.btn-default[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c}.btn-large.btn-default[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-large.btn-default[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-large.btn-default.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-default[_ngcontent-%COMP%]{border-radius:16px;padding:5px;min-width:86px;text-align:center;font-size:16px;font-weight:400;color:#fff;box-shadow:3px 3px 6px #00000026;border:0}.btn-default.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-default.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-default.primary[_ngcontent-%COMP%]:focus{background:#0054b2}.btn-default.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-default.btn-dft[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c;border:1px solid #CCCCCC}.btn-default.btn-dft[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-default.btn-dft[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-default.btn-dft.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-small[_ngcontent-%COMP%]{border-radius:12px;padding:3px;min-width:70px;text-align:center;font-size:12px;font-weight:400;color:#fff;box-shadow:2px 2px 4px #00000026;border:0}.btn-small.primary[_ngcontent-%COMP%]{background:#0279ff}.btn-small.primary[_ngcontent-%COMP%]:hover{background:#0054b2}.btn-small.primary[_ngcontent-%COMP%]:focus{background:#EBEAEF}.btn-small.disabled[_ngcontent-%COMP%]{background:rgba(2,121,255,.26)}.btn-small.btn-default[_ngcontent-%COMP%]{background:#F8F8FA;color:#4c4c4c}.btn-small.btn-default[_ngcontent-%COMP%]:hover{background:#EBEAEF;color:#4c4c4c}.btn-small.btn-default[_ngcontent-%COMP%]:focus{background:#EBEAEF;color:#0279ff}.btn-small.btn-default.disabled[_ngcontent-%COMP%]{opacity:.49}.btn-round[_ngcontent-%COMP%]{border-radius:50%;width:32px;height:32px;display:flex;justify-content:center;align-items:center;border:0;background-position:center;background-repeat:no-repeat;padding:0}.btn-round.info-round[_ngcontent-%COMP%]{width:32px;height:32px}.btn-round.primary[_ngcontent-%COMP%]{background-color:#0279ff}.btn-round.primary[_ngcontent-%COMP%]:hover{background-color:#0054b2}.btn-round.primary[_ngcontent-%COMP%]:focus{background-color:#0054b2;outline:none;box-shadow:none;border:0}.btn-round[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none;border:0}.btn-round.btn-small-24[_ngcontent-%COMP%]{width:24px;height:24px}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]{background-color:#f8f8fa}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]:hover{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-round.btn-small-24.btn-grey[_ngcontent-%COMP%]:focus{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-arrow[_ngcontent-%COMP%]{height:32px;line-height:32px;min-width:110px;text-align:center;border:0;padding:0;box-shadow:2px 2px 4px #00000026;font-size:16px;font-weight:400;color:#1a1f22;justify-content:center;align-items:center;position:relative;border-radius:26px}.btn-arrow[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:relative;top:-2px}.btn-arrow.btn-arr-prev[_ngcontent-%COMP%]{box-shadow:none}.btn-arrow.btn-arr-prev[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-right:10px}.btn-arrow.btn-arr-nxt[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:10px}.btn-arrow.primary[_ngcontent-%COMP%]{background-color:#0279ff;color:#fff}.btn-arrow.primary[_ngcontent-%COMP%]:hover{background-color:#0054b2}.btn-arrow.primary[_ngcontent-%COMP%]:focus{background-color:#0054b2;outline:none;box-shadow:none;border:0}.btn-arrow.btn-grey[_ngcontent-%COMP%]{background-color:#f8f8fa}.btn-arrow.btn-grey[_ngcontent-%COMP%]:hover{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}.btn-arrow.btn-grey[_ngcontent-%COMP%]:focus{background-color:#ebeaef;background-position:center;background-repeat:no-repeat}[type=radio][_ngcontent-%COMP%]:checked, [type=radio][_ngcontent-%COMP%]:not(:checked){width:16px;height:16px;min-height:16px;position:relative!important;cursor:pointer;appearance:none;-webkit-appearance:none;-moz-appearance:none}[type=radio][_ngcontent-%COMP%]:checked:before, [type=radio][_ngcontent-%COMP%]:checked:after, [type=radio][_ngcontent-%COMP%]:not(:checked):before{content:\\\"\\\";position:absolute;border-radius:100%}[type=radio][_ngcontent-%COMP%]:checked:before{background:#0279FF;width:16px;height:16px;top:0px}[type=radio][_ngcontent-%COMP%]:checked:after{width:12px;height:12px;background:#0279FF;top:2px;left:2px;border:1px solid #ffffff;z-index:9}[type=radio][_ngcontent-%COMP%]:not(:checked):before{background:#ffffff;border:1px solid #CCCCCC;width:16px;height:16px}[type=radio][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%], [type=radio][_ngcontent-%COMP%]:not(:checked) + label[_ngcontent-%COMP%]{position:relative;padding-left:10px;cursor:pointer;display:inline-block;color:#666}[type=radio][_ngcontent-%COMP%]:checked:disabled:before{background:#b4d7ff}[type=radio][_ngcontent-%COMP%]:checked:disabled:after{background:#b4d7ff}[type=radio][_ngcontent-%COMP%]:disabled, [type=radio][_ngcontent-%COMP%]:disabled + label[_ngcontent-%COMP%]{cursor:not-allowed}[type=radio][_ngcontent-%COMP%]:not(:checked):hover:before{background:#ffffff;border:1px solid #0279FF}[type=radio][_ngcontent-%COMP%]:not(:checked):disabled:before{background:#F9F9FB;border:1px solid #e6e6e6}[type=radio][_ngcontent-%COMP%]:not(:checked):disabled:hover:before{background:#F9F9FB;border:1px solid #e6e6e6}[type=radio][_ngcontent-%COMP%]{border-color:transparent!important}[type=radio][_ngcontent-%COMP%]:focus{border-color:transparent!important}[type=radio][_ngcontent-%COMP%]:active{border-color:transparent!important}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border:none!important;border-bottom:2px solid #dee2e6!important}.collapsedata[_ngcontent-%COMP%]{margin-left:10px}.alert[_ngcontent-%COMP%]{display:none}.form-control.is-valid[_ngcontent-%COMP%], .form-control.is-invalid[_ngcontent-%COMP%]{background-image:none;padding-right:inherit}[_nghost-%COMP%]     .dataTables_empty{display:none}.alert-warning[_ngcontent-%COMP%]{line-height:1.5;padding:5px 10px;margin:10px 0}.warnbtn[_ngcontent-%COMP%]{float:right;margin:-5px 10px;padding:3px 5px}.modal.fade[_ngcontent-%COMP%]   .modal-dialog[_ngcontent-%COMP%]   .modal-content[_ngcontent-%COMP%]{padding:40px!important}.sub-title[_ngcontent-%COMP%]{font-size:42px;font-style:normal;font-weight:300;line-height:53px;letter-spacing:0em;text-align:left}.sub-close[_ngcontent-%COMP%]{position:absolute;right:30px;top:20px;cursor:pointer}.del-action-icon[_ngcontent-%COMP%]{color:#0279ff}.del-action-icon[_ngcontent-%COMP%]:hover{color:#0054b2}.modal-cus-pad[_ngcontent-%COMP%]{padding:16px!important;border-radius:26px!important}\"]\n  });\n  return SubnetConfigComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}