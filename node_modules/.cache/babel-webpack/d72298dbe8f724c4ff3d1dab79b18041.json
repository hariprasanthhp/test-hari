{"ast":null,"code":"import { translate } from '../../util/SvgTransformUtil';\nimport { getVisual } from '../../util/GraphicsUtil';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nvar LOW_PRIORITY = 750;\nexport default function CreatePreview(canvas, eventBus, graphicsFactory, previewSupport, styles) {\n  function createDragGroup(elements) {\n    var dragGroup = svgCreate('g');\n    svgAttr(dragGroup, styles.cls('djs-drag-group', ['no-events']));\n    var childrenGfx = svgCreate('g');\n    elements.forEach(function (element) {\n      // create graphics\n      var gfx;\n      if (element.hidden) {\n        return;\n      }\n      if (element.waypoints) {\n        gfx = graphicsFactory._createContainer('connection', childrenGfx);\n        graphicsFactory.drawConnection(getVisual(gfx), element);\n      } else {\n        gfx = graphicsFactory._createContainer('shape', childrenGfx);\n        graphicsFactory.drawShape(getVisual(gfx), element);\n        translate(gfx, element.x, element.y);\n      }\n\n      // add preview\n      previewSupport.addDragger(element, dragGroup, gfx);\n    });\n    return dragGroup;\n  }\n  eventBus.on('create.move', LOW_PRIORITY, function (event) {\n    var hover = event.hover,\n      context = event.context,\n      elements = context.elements,\n      dragGroup = context.dragGroup;\n\n    // lazily create previews\n    if (!dragGroup) {\n      dragGroup = context.dragGroup = createDragGroup(elements);\n    }\n    var defaultLayer;\n    if (hover) {\n      if (!dragGroup.parentNode) {\n        defaultLayer = canvas.getDefaultLayer();\n        svgAppend(defaultLayer, dragGroup);\n      }\n      translate(dragGroup, event.x, event.y);\n    } else {\n      svgRemove(dragGroup);\n    }\n  });\n  eventBus.on('create.cleanup', function (event) {\n    var context = event.context,\n      dragGroup = context.dragGroup;\n    if (dragGroup) {\n      svgRemove(dragGroup);\n    }\n  });\n}\nCreatePreview.$inject = ['canvas', 'eventBus', 'graphicsFactory', 'previewSupport', 'styles'];","map":null,"metadata":{},"sourceType":"module"}