{"ast":null,"code":"/*\n Highcharts JS v9.3.3 (2022-02-01)\n\n Highcharts Drilldown module\n\n Author: Torstein Honsi\n License: www.highcharts.com/license\n\n*/\n'use strict';\n\n(function (c) {\n  \"object\" === typeof module && module.exports ? (c[\"default\"] = c, module.exports = c) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/drilldown\", [\"highcharts\"], function (n) {\n    c(n);\n    c.Highcharts = n;\n    return c;\n  }) : c(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (c) {\n  function n(c, n, k, z) {\n    c.hasOwnProperty(n) || (c[n] = z.apply(null, k));\n  }\n  c = c ? c._modules : {};\n  n(c, \"Extensions/Drilldown.js\", [c[\"Core/Animation/AnimationUtilities.js\"], c[\"Core/Axis/Axis.js\"], c[\"Core/Chart/Chart.js\"], c[\"Core/Color/Color.js\"], c[\"Series/Column/ColumnSeries.js\"], c[\"Core/FormatUtilities.js\"], c[\"Core/Globals.js\"], c[\"Core/DefaultOptions.js\"], c[\"Core/Series/Point.js\"], c[\"Core/Series/Series.js\"], c[\"Core/Series/SeriesRegistry.js\"], c[\"Core/Renderer/SVG/SVGRenderer.js\"], c[\"Core/Axis/Tick.js\"], c[\"Core/Utilities.js\"]], function (c, n, k, z, t, G, H, I, u, B, x, J, C, p) {\n    var D = c.animObject,\n      K = G.format,\n      L = H.noop;\n    c = I.defaultOptions;\n    var m = p.addEvent,\n      M = p.removeEvent,\n      r = p.extend,\n      y = p.fireEvent,\n      v = p.merge,\n      N = p.objectEach,\n      w = p.pick,\n      O = p.syncTimeout;\n    x = x.seriesTypes.pie;\n    var E = 1;\n    r(c.lang, {\n      drillUpText: \"\\u25c1 Back to {series.name}\"\n    });\n    c.drilldown = {\n      activeAxisLabelStyle: {\n        cursor: \"pointer\",\n        color: \"#003399\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n      },\n      activeDataLabelStyle: {\n        cursor: \"pointer\",\n        color: \"#003399\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n      },\n      animation: {\n        duration: 500\n      },\n      drillUpButton: {\n        position: {\n          align: \"right\",\n          x: -10,\n          y: 10\n        }\n      }\n    };\n    J.prototype.Element.prototype.fadeIn = function (a) {\n      this.attr({\n        opacity: .1,\n        visibility: \"inherit\"\n      }).animate({\n        opacity: w(this.newOpacity, 1)\n      }, a || {\n        duration: 250\n      });\n    };\n    k.prototype.addSeriesAsDrilldown = function (a, b) {\n      this.addSingleSeriesAsDrilldown(a, b);\n      this.applyDrilldown();\n    };\n    k.prototype.addSingleSeriesAsDrilldown = function (a, b) {\n      var d = a.series,\n        g = d.xAxis,\n        f = d.yAxis,\n        e = [],\n        q = [],\n        h;\n      var l = this.styledMode ? {\n        colorIndex: w(a.colorIndex, d.colorIndex)\n      } : {\n        color: a.color || d.color\n      };\n      this.drilldownLevels || (this.drilldownLevels = []);\n      var c = d.options._levelNumber || 0;\n      (h = this.drilldownLevels[this.drilldownLevels.length - 1]) && h.levelNumber !== c && (h = void 0);\n      b = r(r({\n        _ddSeriesId: E++\n      }, l), b);\n      var k = d.points.indexOf(a);\n      d.chart.series.forEach(function (a) {\n        a.xAxis !== g || a.isDrilling || (a.options._ddSeriesId = a.options._ddSeriesId || E++, a.options._colorIndex = a.userOptions._colorIndex, a.options._levelNumber = a.options._levelNumber || c, h ? (e = h.levelSeries, q = h.levelSeriesOptions) : (e.push(a), a.purgedOptions = v({\n          _ddSeriesId: a.options._ddSeriesId,\n          _levelNumber: a.options._levelNumber,\n          selected: a.options.selected\n        }, a.userOptions), q.push(a.purgedOptions)));\n      });\n      a = r({\n        levelNumber: c,\n        seriesOptions: d.options,\n        seriesPurgedOptions: d.purgedOptions,\n        levelSeriesOptions: q,\n        levelSeries: e,\n        shapeArgs: a.shapeArgs,\n        bBox: a.graphic ? a.graphic.getBBox() : {},\n        color: a.isNull ? z.parse(l.color).setOpacity(0).get() : l.color,\n        lowerSeriesOptions: b,\n        pointOptions: d.options.data[k],\n        pointIndex: k,\n        oldExtremes: {\n          xMin: g && g.userMin,\n          xMax: g && g.userMax,\n          yMin: f && f.userMin,\n          yMax: f && f.userMax\n        },\n        resetZoomButton: this.resetZoomButton\n      }, l);\n      this.drilldownLevels.push(a);\n      g && g.names && (g.names.length = 0);\n      b = a.lowerSeries = this.addSeries(b, !1);\n      b.options._levelNumber = c + 1;\n      g && (g.oldPos = g.pos, g.userMin = g.userMax = null, f.userMin = f.userMax = null);\n      d.type === b.type && (b.animate = b.animateDrilldown || L, b.options.animation = !0);\n    };\n    k.prototype.applyDrilldown = function () {\n      var a = this.drilldownLevels;\n      if (a && 0 < a.length) {\n        var b = a[a.length - 1].levelNumber;\n        this.drilldownLevels.forEach(function (a) {\n          a.levelNumber === b && a.levelSeries.forEach(function (a) {\n            a.options && a.options._levelNumber === b && a.remove(!1);\n          });\n        });\n      }\n      this.resetZoomButton && (this.resetZoomButton.hide(), delete this.resetZoomButton);\n      this.pointer.reset();\n      this.redraw();\n      this.showDrillUpButton();\n      y(this, \"afterDrilldown\");\n    };\n    k.prototype.getDrilldownBackText = function () {\n      var a = this.drilldownLevels;\n      if (a && 0 < a.length) return a = a[a.length - 1], a.series = a.seriesOptions, K(this.options.lang.drillUpText || \"\", a);\n    };\n    k.prototype.showDrillUpButton = function () {\n      var a = this,\n        b = this.getDrilldownBackText(),\n        d = a.options.drilldown.drillUpButton,\n        g,\n        f = \"chart\" === d.relativeTo || \"spacingBox\" === d.relativeTo ? null : \"scrollablePlotBox\";\n      if (this.drillUpButton) this.drillUpButton.attr({\n        text: b\n      }).align();else {\n        var e = (g = d.theme) && g.states;\n        this.drillUpButton = this.renderer.button(b, null, null, function () {\n          a.drillUp();\n        }, g, e && e.hover, e && e.select).addClass(\"highcharts-drillup-button\").attr({\n          align: d.position.align,\n          zIndex: 7\n        }).add().align(d.position, !1, f);\n      }\n    };\n    k.prototype.drillUp = function () {\n      if (this.drilldownLevels && 0 !== this.drilldownLevels.length) {\n        for (var a = this, b = a.drilldownLevels, d = b[b.length - 1].levelNumber, g = b.length, f = a.series, e, c, h, l, k = function (b) {\n            f.forEach(function (a) {\n              a.options._ddSeriesId === b._ddSeriesId && (d = a);\n            });\n            var d = d || a.addSeries(b, !1);\n            d.type === h.type && d.animateDrillupTo && (d.animate = d.animateDrillupTo);\n            b === c.seriesPurgedOptions && (l = d);\n          }; g--;) if (c = b[g], c.levelNumber === d) {\n          b.pop();\n          h = c.lowerSeries;\n          if (!h.chart) for (e = f.length; e--;) if (f[e].options.id === c.lowerSeriesOptions.id && f[e].options._levelNumber === d + 1) {\n            h = f[e];\n            break;\n          }\n          h.xData = [];\n          c.levelSeriesOptions.forEach(k);\n          y(a, \"drillup\", {\n            seriesOptions: c.seriesPurgedOptions || c.seriesOptions\n          });\n          this.resetZoomButton && this.resetZoomButton.destroy();\n          l.type === h.type && (l.drilldownLevel = c, l.options.animation = a.options.drilldown.animation, h.animateDrillupFrom && h.chart && h.animateDrillupFrom(c));\n          l.options._levelNumber = d;\n          h.remove(!1);\n          l.xAxis && (e = c.oldExtremes, l.xAxis.setExtremes(e.xMin, e.xMax, !1), l.yAxis.setExtremes(e.yMin, e.yMax, !1));\n          c.resetZoomButton && (a.resetZoomButton = c.resetZoomButton, a.resetZoomButton.show());\n        }\n        this.redraw();\n        0 === this.drilldownLevels.length ? this.drillUpButton = this.drillUpButton.destroy() : this.drillUpButton.attr({\n          text: this.getDrilldownBackText()\n        }).align();\n        this.ddDupes.length = [];\n        y(a, \"drillupall\");\n      }\n    };\n    m(k, \"afterInit\", function () {\n      var a = this;\n      a.drilldown = {\n        update: function (b, d) {\n          v(!0, a.options.drilldown, b);\n          w(d, !0) && a.redraw();\n        }\n      };\n    });\n    m(k, \"afterShowResetZoom\", function () {\n      var a = this.resetZoomButton && this.resetZoomButton.getBBox(),\n        b = this.options.drilldown && this.options.drilldown.drillUpButton;\n      this.drillUpButton && a && b && b.position && b.position.x && this.drillUpButton.align({\n        x: b.position.x - a.width - 10,\n        y: b.position.y,\n        align: b.position.align\n      }, !1, b.relativeTo || \"plotBox\");\n    });\n    m(k, \"render\", function () {\n      (this.xAxis || []).forEach(function (a) {\n        a.ddPoints = {};\n        a.series.forEach(function (b) {\n          var d,\n            g = b.xData || [],\n            f = b.points;\n          for (d = 0; d < g.length; d++) {\n            var e = b.options.data[d];\n            \"number\" !== typeof e && (e = b.pointClass.prototype.optionsToObject.call({\n              series: b\n            }, e), e.drilldown && (a.ddPoints[g[d]] || (a.ddPoints[g[d]] = []), e = d - (b.cropStart || 0), a.ddPoints[g[d]].push(f && 0 <= e && e < f.length ? f[e] : !0)));\n          }\n        });\n        N(a.ticks, C.prototype.drillable);\n      });\n    });\n    t.prototype.animateDrillupTo = function (a) {\n      if (!a) {\n        var b = this,\n          d = b.drilldownLevel;\n        this.points.forEach(function (a) {\n          var b = a.dataLabel;\n          a.graphic && a.graphic.hide();\n          b && (b.hidden = \"hidden\" === b.attr(\"visibility\"), b.hidden || (b.hide(), a.connector && a.connector.hide()));\n        });\n        O(function () {\n          if (b.points) {\n            var a = [];\n            b.data.forEach(function (b) {\n              a.push(b);\n            });\n            b.nodes && (a = a.concat(b.nodes));\n            a.forEach(function (a, b) {\n              b = b === (d && d.pointIndex) ? \"show\" : \"fadeIn\";\n              var g = \"show\" === b ? !0 : void 0,\n                c = a.dataLabel;\n              if (a.graphic) a.graphic[b](g);\n              c && !c.hidden && (c.fadeIn(), a.connector && a.connector.fadeIn());\n            });\n          }\n        }, Math.max(this.chart.options.drilldown.animation.duration - 50, 0));\n        delete this.animate;\n      }\n    };\n    t.prototype.animateDrilldown = function (a) {\n      var b = this,\n        d = this.chart,\n        c = d.drilldownLevels,\n        f,\n        e = D(d.options.drilldown.animation),\n        q = this.xAxis,\n        h = d.styledMode;\n      a || (c.forEach(function (a) {\n        b.options._ddSeriesId === a.lowerSeriesOptions._ddSeriesId && (f = a.shapeArgs, h || (f.fill = a.color));\n      }), f.x += w(q.oldPos, q.pos) - q.pos, this.points.forEach(function (a) {\n        var d = a.shapeArgs;\n        h || (d.fill = a.color);\n        a.graphic && a.graphic.attr(f).animate(r(a.shapeArgs, {\n          fill: a.color || b.color\n        }), e);\n        a.dataLabel && a.dataLabel.fadeIn(e);\n      }), delete this.animate);\n    };\n    t.prototype.animateDrillupFrom = function (a) {\n      var b = D(this.chart.options.drilldown.animation),\n        d = this.group,\n        c = d !== this.chart.columnGroup,\n        f = this;\n      f.trackerGroups.forEach(function (a) {\n        if (f[a]) f[a].on(\"mouseover\");\n      });\n      c && delete this.group;\n      this.points.forEach(function (g) {\n        var e = g.graphic,\n          h = a.shapeArgs,\n          l = function () {\n            e.destroy();\n            d && c && (d = d.destroy());\n          };\n        e && h && (delete g.graphic, f.chart.styledMode || (h.fill = a.color), b.duration ? e.animate(h, v(b, {\n          complete: l\n        })) : (e.attr(h), l()));\n      });\n    };\n    x && r(x.prototype, {\n      animateDrillupTo: t.prototype.animateDrillupTo,\n      animateDrillupFrom: t.prototype.animateDrillupFrom,\n      animateDrilldown: function (a) {\n        var b = this.chart.drilldownLevels[this.chart.drilldownLevels.length - 1],\n          d = this.chart.options.drilldown.animation;\n        this.is(\"item\") && (d.duration = 0);\n        if (this.center) {\n          var c = b.shapeArgs,\n            f = c.start,\n            e = (c.end - f) / this.points.length,\n            k = this.chart.styledMode;\n          a || (this.points.forEach(function (a, g) {\n            var h = a.shapeArgs;\n            k || (c.fill = b.color, h.fill = a.color);\n            if (a.graphic) a.graphic.attr(v(c, {\n              start: f + g * e,\n              end: f + (g + 1) * e\n            }))[d ? \"animate\" : \"attr\"](h, d);\n          }), delete this.animate);\n        }\n      }\n    });\n    u.prototype.doDrilldown = function () {\n      this.runDrilldown();\n    };\n    u.prototype.runDrilldown = function (a, b, d) {\n      var c = this.series.chart,\n        f = c.options.drilldown,\n        e = (f.series || []).length;\n      c.ddDupes || (c.ddDupes = []);\n      for (; e-- && !k;) if (f.series[e].id === this.drilldown && -1 === c.ddDupes.indexOf(this.drilldown)) {\n        var k = f.series[e];\n        c.ddDupes.push(this.drilldown);\n      }\n      y(c, \"drilldown\", {\n        point: this,\n        seriesOptions: k,\n        category: b,\n        originalEvent: d,\n        points: \"undefined\" !== typeof b && this.series.xAxis.getDDPoints(b).slice(0)\n      }, function (b) {\n        var d = b.point.series && b.point.series.chart,\n          c = b.seriesOptions;\n        d && c && (a ? d.addSingleSeriesAsDrilldown(b.point, c) : d.addSeriesAsDrilldown(b.point, c));\n      });\n    };\n    n.prototype.drilldownCategory = function (a, b) {\n      this.getDDPoints(a).forEach(function (d) {\n        d && d.series && d.series.visible && d.runDrilldown && d.runDrilldown(!0, a, b);\n      });\n      this.chart.applyDrilldown();\n    };\n    n.prototype.getDDPoints = function (a) {\n      return this.ddPoints && this.ddPoints[a] || [];\n    };\n    C.prototype.drillable = function () {\n      var a = this.pos,\n        b = this.label,\n        d = this.axis,\n        c = \"xAxis\" === d.coll && d.getDDPoints,\n        f = c && d.getDDPoints(a),\n        e = d.chart.styledMode;\n      c && (b && f && f.length ? (b.drillable = !0, b.basicStyles || e || (b.basicStyles = v(b.styles)), b.addClass(\"highcharts-drilldown-axis-label\"), b.removeOnDrillableClick && M(b.element, \"click\"), b.removeOnDrillableClick = m(b.element, \"click\", function (b) {\n        b.preventDefault();\n        d.drilldownCategory(a, b);\n      }), e || b.css(d.chart.options.drilldown.activeAxisLabelStyle)) : b && b.drillable && b.removeOnDrillableClick && (e || (b.styles = {}, b.css(b.basicStyles)), b.removeOnDrillableClick(), b.removeClass(\"highcharts-drilldown-axis-label\")));\n    };\n    m(u, \"afterInit\", function () {\n      this.drilldown && !this.unbindDrilldownClick && (this.unbindDrilldownClick = m(this, \"click\", F));\n      return this;\n    });\n    m(u, \"update\", function (a) {\n      a = a.options || {};\n      a.drilldown && !this.unbindDrilldownClick ? this.unbindDrilldownClick = m(this, \"click\", F) : !a.drilldown && void 0 !== a.drilldown && this.unbindDrilldownClick && (this.unbindDrilldownClick = this.unbindDrilldownClick());\n    });\n    var F = function (a) {\n      var b = this.series;\n      b.xAxis && !1 === b.chart.options.drilldown.allowPointDrilldown ? b.xAxis.drilldownCategory(this.x, a) : this.runDrilldown(void 0, void 0, a);\n    };\n    m(B, \"afterDrawDataLabels\", function () {\n      var a = this.chart.options.drilldown.activeDataLabelStyle,\n        b = this.chart.renderer,\n        c = this.chart.styledMode;\n      this.points.forEach(function (d) {\n        var f = d.options.dataLabels,\n          e = w(d.dlOptions, f && f.style, {});\n        d.drilldown && d.dataLabel && (\"contrast\" !== a.color || c || (e.color = b.getContrast(d.color || this.color)), f && f.color && (e.color = f.color), d.dataLabel.addClass(\"highcharts-drilldown-data-label\"), c || d.dataLabel.css(a).css(e));\n      }, this);\n    });\n    var A = function (a, b, d, c) {\n      a[d ? \"addClass\" : \"removeClass\"](\"highcharts-drilldown-point\");\n      c || a.css({\n        cursor: b\n      });\n    };\n    m(B, \"afterDrawTracker\", function () {\n      var a = this.chart.styledMode;\n      this.points.forEach(function (b) {\n        b.drilldown && b.graphic && A(b.graphic, \"pointer\", !0, a);\n      });\n    });\n    m(u, \"afterSetState\", function () {\n      var a = this.series.chart.styledMode;\n      this.drilldown && this.series.halo && \"hover\" === this.state ? A(this.series.halo, \"pointer\", !0, a) : this.series.halo && A(this.series.halo, \"auto\", !1, a);\n    });\n    m(k, \"selection\", function (a) {\n      !0 === a.resetSelection && this.drillUpButton && (a = this.options.drilldown && this.options.drilldown.drillUpButton) && a.position && this.drillUpButton.align({\n        x: a.position.x,\n        y: a.position.y,\n        align: a.position.align\n      }, !1, a.relativeTo || \"plotBox\");\n    });\n    m(k, \"drillup\", function () {\n      this.resetZoomButton && (this.resetZoomButton = this.resetZoomButton.destroy());\n    });\n  });\n  n(c, \"masters/modules/drilldown.src.js\", [], function () {});\n});\n//# sourceMappingURL=drilldown.js.map","map":null,"metadata":{},"sourceType":"script"}