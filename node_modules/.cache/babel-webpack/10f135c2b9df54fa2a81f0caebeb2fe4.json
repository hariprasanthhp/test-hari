{"ast":null,"code":"import * as Highcharts from 'highcharts/highstock';\nimport { DatePipe } from '@angular/common';\nimport { TitleCasePipe } from '@angular/common';\nimport * as moment from 'moment-timezone';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"src/app-services/translate.service\";\nimport * as i5 from \"src/app/flow-config/services/network-devices-api.service\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"../services/common.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"primeng/calendar\";\nimport * as i10 from \"@angular/forms\";\nconst _c0 = [\"infoModal\"];\nfunction DevicesNamePlaceholderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵelementStart(1, \"div\", 58);\n    i0.ɵɵelementStart(2, \"div\", 59);\n    i0.ɵɵelementStart(3, \"span\", 60);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DevicesNamePlaceholderComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 13);\n    i0.ɵɵelementStart(1, \"a\", 61);\n    i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_li_16_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      ctx_r9.getPacketTimingData(\"seconds\");\n      ctx_r9.activeTab = \"packetTimingGraph\";\n      return ctx_r9.setPageTitle();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.MODULE === \"systemAdministration\" ? \"active\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.language.flow_timing);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.flowCountMsg);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_container_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"p\", 62);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r3.rangeForDuration, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_container_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"p\", 62);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r4.rangeForDelay, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_container_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"p\", 62);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r5.rangeForDuration, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_container_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"p\", 62);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r6.rangeForDelay, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DevicesNamePlaceholderComponent_ng_template_102_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 63);\n    i0.ɵɵelementStart(1, \"h4\", 64);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 65);\n    i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_ng_template_102_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.closeModal();\n    });\n    i0.ɵɵelement(4, \"span\", 66);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 67);\n    i0.ɵɵelementStart(6, \"div\", 68);\n    i0.ɵɵelementStart(7, \"p\", 69);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 70);\n    i0.ɵɵelementStart(10, \"button\", 71);\n    i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_ng_template_102_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.closeModal();\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.infoTitle);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r8.infoBody);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language[\"Okay\"], \" \");\n  }\n}\nconst _c1 = function () {\n  return {\n    width: \"100%\",\n    height: \"38px\"\n  };\n};\nconst _c2 = function () {\n  return {\n    height: \"36px\"\n  };\n};\nexport let DevicesNamePlaceholderComponent = /*#__PURE__*/(() => {\n  class DevicesNamePlaceholderComponent {\n    constructor(titleService, router, sso, translateService, networkDeviceApiService, dialogService, commonOrgService, titleCasePipe) {\n      var _a, _b, _c;\n      this.titleService = titleService;\n      this.router = router;\n      this.sso = sso;\n      this.translateService = translateService;\n      this.networkDeviceApiService = networkDeviceApiService;\n      this.dialogService = dialogService;\n      this.commonOrgService = commonOrgService;\n      this.titleCasePipe = titleCasePipe;\n      this.Highcharts = Highcharts;\n      this.show = {\n        loading: false,\n        chart: false,\n        durationFullChart: true,\n        delayFullChart: true,\n        durationShortChart: false,\n        delayShortChart: false,\n        fullChart: false,\n        flowCountInfo: false\n      };\n      this.deviceIp = '';\n      this.maxStartDate = new Date();\n      this.maxEndDate = new Date();\n      this.requestPayload = {\n        startDate: null,\n        endDate: null\n      };\n      this.packetTimingData = {};\n      this.rangeForDuration = '';\n      this.rangeForDelay = '';\n      this.packetTabValue = 'seconds';\n      this.activeTab = '';\n      this.flowCountMsg = '';\n      const url = this.router.url;\n      this.MODULE = this.sso.getRedirectModule(url);\n      this.ORG_ID = this.sso.getOrganizationID(url);\n      this.deviceIp = (_c = (_b = (_a = this.router.getCurrentNavigation()) === null || _a === void 0 ? void 0 : _a.extras) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c.deviceIp;\n      if (!this.deviceIp) {\n        this.router.navigate([`/${this.MODULE}/flowAnalyze/network/devices/devices-status`]);\n        return;\n      }\n      this.language = this.translateService.defualtLanguage;\n      this.languageSub = this.translateService.selectedLanguage.subscribe(data => {\n        var _a, _b;\n        this.language = data;\n        if ((_b = (_a = document.getElementById('packetTiming')) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('active')) {\n          this.loadPacketChart(this.packetTabValue);\n        } else {\n          this.getDecodeFlowCount();\n        }\n        this.setPageTitle();\n      });\n    }\n    ngOnInit() {\n      this.refreshGraph();\n      this.setPageTitle();\n    }\n    ngOnDestroy() {\n      if (this.languageSub) {\n        this.languageSub.unsubscribe();\n      }\n      if (this.getDeviceMetricSeriesSub) {\n        this.getDeviceMetricSeriesSub.unsubscribe();\n      }\n    }\n    configureDate() {\n      this.startDate = new Date();\n      this.startDate.setHours(0, 0, 0, 0);\n      this.endDate = new Date();\n      this.endDate.setHours(23, 59, 59, 999);\n      this.startDate.setDate(this.startDate.getDate() - 1);\n    }\n    routeToDeviceStatus() {\n      this.router.navigate([`${this.MODULE}/flowAnalyze/network/devices/devices-status`]);\n    }\n    onSelectStartTime(event, maxEndDateFlag) {\n      if (event) {\n        this.requestPayload.startDate = new Date(event);\n        this.requestPayload.startDate.setHours(0, 0, 0);\n        this.startDate = new Date(event);\n        this.startDate.setHours(0, 0, 0);\n        // this.requestPayload.startDate.setHours(12,30,0)\n        this.minEndDate = new Date(event);\n        new Date(this.minEndDate.setDate(this.requestPayload.startDate.getDate() + 1));\n        // this.requestPayload.startDate = this.requestPayloa`d.startDate.toLocaleString(\"en-US\", {\n        //   timeZone: \"America/Los_Angeles\"\n        // });`\n        if (maxEndDateFlag) {\n          this.requestPayload.endDate = new Date(event);\n          this.endDate = new Date(event);\n          new Date(this.requestPayload.endDate.setDate(this.requestPayload.startDate.getDate() + 30));\n          new Date(this.endDate.setDate(this.requestPayload.startDate.getDate() + 30));\n          this.maxEndDate = new Date(event);\n          new Date(this.maxEndDate.setDate(this.requestPayload.startDate.getDate() + 30));\n          if (this.maxEndDate > new Date()) {\n            this.maxEndDate = new Date();\n            this.requestPayload.endDate = new Date();\n            this.endDate = new Date();\n          }\n        }\n        this.maxStartDate = new Date(new Date().setDate(new Date().getDate() - 1));\n      } else {\n        this.requestPayload.startDate = '';\n      }\n    }\n    onSelectEndTime(event) {\n      if (event) {\n        this.requestPayload.endDate = new Date(event);\n        this.endDate = new Date(event);\n        // this.requestPayload.endDate.setHours(12,29,59)\n        this.requestPayload.endDate.setHours(23, 59, 59);\n        this.endDate.setHours(23, 59, 59);\n        // this.maxStartDate = new Date(event);\n        this.maxStartDate = new Date(new Date().setDate(new Date().getDate() - 1));\n        // new Date(this.maxStartDate.setDate(this.requestPayload.endDate.getDate() - 1));\n        // this.minStartDate = new Date();\n        // new Date(this.minStartDate.setDate(this.requestPayload.endDate.getDate() - 30));\n        // this.requestPayload.endDate = this.requestPayload.endDate.toLocaleString(\"en-US\", {\n        //   timeZone: \"America/Los_Angeles\"\n        // });\n        // console.log('minStartDate', this.minStartDate)\n      } else {\n        this.requestPayload.endDate = '';\n      }\n    }\n    expandDurationChart(flag) {\n      if (flag) {\n        document.getElementById('delay_collaps').style.display = 'none';\n        document.getElementById('duration_expand').style.display = 'block';\n        document.getElementById('delay_expand').style.display = 'none';\n        document.getElementById('duration_collaps').style.display = 'none';\n        this.show.durationFullChart = false;\n        this.show.delayFullChart = true;\n        this.show.fullChart = true;\n      } else {\n        document.getElementById('duration_expand').style.display = 'none';\n        document.getElementById('duration_collaps').style.display = 'block';\n        document.getElementById('delay_collaps').style.display = 'block';\n        document.getElementById('delay_expand').style.display = 'none';\n        this.show.fullChart = false;\n        this.show.durationFullChart = false;\n        this.show.delayFullChart = false;\n      }\n      this.loadPacketChart(this.packetTabValue);\n    }\n    expandDelayChart(flag) {\n      if (flag) {\n        document.getElementById('duration_expand').style.display = 'none';\n        document.getElementById('duration_collaps').style.display = 'none';\n        document.getElementById('delay_collaps').style.display = 'none';\n        document.getElementById('delay_expand').style.display = 'block';\n        this.show.fullChart = true;\n        this.show.delayFullChart = false;\n        this.show.durationFullChart = true;\n      } else {\n        document.getElementById('duration_expand').style.display = 'none';\n        document.getElementById('duration_collaps').style.display = 'block';\n        document.getElementById('delay_collaps').style.display = 'block';\n        document.getElementById('delay_expand').style.display = 'none';\n        this.show.fullChart = false;\n        this.show.durationFullChart = false;\n        this.show.delayFullChart = false;\n      }\n      this.loadPacketChart(this.packetTabValue);\n    }\n    hidePacketTimingGraph() {\n      this.show.fullChart = false;\n      this.show.delayFullChart = true;\n      this.show.durationFullChart = true;\n      this.show.durationShortChart = false;\n      this.show.delayShortChart = false;\n    }\n    getDecodeFlowCount() {\n      if (!this.requestPayload.startDate) {\n        this.infoTitle = this.language['Invalid request'];\n        this.infoBody = this.language['Start date required'];\n        this.openInfoModal();\n        return;\n      }\n      this.commonOrgService.closeAlert();\n      this.activeTab = 'decodeFlowCountGraph';\n      this.show.loading = true;\n      this.requestPayload.startDate = Math.floor(new Date(this.startDate).getTime() / 1000);\n      this.requestPayload.endDate = Math.floor(new Date(this.endDate).getTime() / 1000);\n      this.getDeviceMetricSeriesSub = this.networkDeviceApiService.DeviceMatricSeries(this.deviceIp, this.requestPayload.startDate, this.requestPayload.endDate, this.ORG_ID).subscribe(res => {\n        var _a, _b;\n        this.show.loading = false;\n        if (res && (res === null || res === void 0 ? void 0 : res.metricSeries)) {\n          document.getElementById('container').style.display = 'block';\n          const option = this.makeOptionsForLineChart(res);\n          this.Highcharts.chart('container', option);\n        } else {\n          document.getElementById('container').style.display = 'none';\n        }\n        this.show.flowCountInfo = (_b = (_a = document.getElementById('packetTiming')) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('active');\n      }, err => {\n        document.getElementById('container').style.display = 'none';\n        this.show.loading = false;\n        this.pageErrorHandle(err);\n      });\n    }\n    makeOptionsForLineChart(apiResponse) {\n      var _a, _b, _c, _d, _e;\n      let obj = {\n        time: []\n      };\n      let that = this;\n      let pipe = new DatePipe('en-US');\n      apiResponse.metricSeries.forEach(element => {\n        const arr = [];\n        element.metricValues.forEach(e => {\n          obj.time.push(e.time), arr.push((e === null || e === void 0 ? void 0 : e.value) || 0);\n        });\n        obj[element.metricName] = arr;\n      });\n      obj.time = [...new Set(obj.time)];\n      // obj.time = obj.time?.map(ele => pipe.transform(new Date((ele/1000000)), 'dd/MM/yyyy HH:mm'))\n      obj.time = (_a = obj.time) === null || _a === void 0 ? void 0 : _a.map(ele => moment.tz(ele / 1000000, moment.tz.guess()).format('MM/DD/YYYY HH:mm z'));\n      let tickInterval = 1;\n      if (obj.time && obj.time.length <= 45) {\n        tickInterval = 1;\n      } else if (obj.time && obj.time.length > 45) {\n        tickInterval = Math.floor(obj.time.length / 45);\n      }\n      const options = {\n        chart: {\n          type: 'line',\n          zoomType: 'xy'\n        },\n        time: {\n          useUTC: false\n        },\n        title: {\n          text: null\n        },\n        subtitle: {\n          text: null\n        },\n        mapNavigation: {\n          enableMouseWheelZoom: true\n        },\n        tooltip: {\n          formatter: function () {\n            var y = that.formatTooltip(this.x, this.series.userOptions.label, this.series.name, this.y);\n            return y;\n          }\n        },\n        xAxis: {\n          categories: obj.time ? obj.time : [],\n          tickInterval: tickInterval,\n          labels: {\n            allowOverlap: false,\n            maxStaggerLines: 1,\n            formatter: function () {\n              let label = this.value;\n              if (this.isLast) {\n                let len = this.axis.categories.length;\n                label = this.axis.categories[len - 1];\n              }\n              return label;\n            }\n          }\n        },\n        yAxis: {\n          title: {\n            text: `${this.language.flowRate} (${this.language.perSecond})`\n          },\n          min: 0,\n          minRange: 1\n        },\n        legend: {\n          align: 'center',\n          verticalAlign: 'bottom',\n          layout: 'horizontal',\n          symbolRadius: 0\n        },\n        lang: {\n          noData: this.language['No Data Available']\n        },\n        plotOptions: {\n          series: {\n            marker: {\n              enabled: ((_b = obj.packet_rate) === null || _b === void 0 ? void 0 : _b.length) == 1 || ((_c = obj.flow_rate) === null || _c === void 0 ? void 0 : _c.length) == 1 || ((_d = obj.virtual_packet_rate) === null || _d === void 0 ? void 0 : _d.length) == 1 || ((_e = obj.virtual_bit_Rate) === null || _e === void 0 ? void 0 : _e.length) == 1 ? true : false\n            }\n          },\n          column: {\n            stacking: 'normal',\n            dataLabels: {\n              enabled: false\n              //color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'\n            }\n          }\n        },\n\n        series: [{\n          showInLegend: true,\n          name: this.language.packetRate,\n          label: 'packetRate',\n          color: '#F7C343',\n          data: obj.packet_rate ? obj.packet_rate : []\n        }, {\n          showInLegend: true,\n          name: this.language.flowRate,\n          label: 'flowRate',\n          color: '#5ACFEA',\n          data: obj.flow_rate ? obj.flow_rate : []\n        }, {\n          showInLegend: true,\n          name: this.language.virtualPacketRate,\n          label: 'virtualPacketRate',\n          color: '#B926F0',\n          data: obj.virtual_packet_rate ? obj.virtual_packet_rate : []\n        }, {\n          showInLegend: true,\n          name: this.language.virtualBitRate,\n          label: 'virtualBitRate',\n          color: '#0027FF',\n          data: obj.virtual_bit_Rate ? obj.virtual_bit_Rate : []\n        }],\n        credits: {\n          enabled: false\n        }\n      };\n      return options;\n    }\n    getPacketTimingData(tabName, isRefresh = false) {\n      if (!isRefresh && this.activeTab === 'packetTimingGraph') {\n        return;\n      }\n      this.commonOrgService.closeAlert();\n      this.show.loading = true;\n      let secondsElement = document.getElementById('seconds');\n      secondsElement === null || secondsElement === void 0 ? void 0 : secondsElement.classList.remove('show');\n      secondsElement === null || secondsElement === void 0 ? void 0 : secondsElement.classList.remove('active');\n      let minutesElement = document.getElementById('minutes');\n      minutesElement.classList.remove('show');\n      minutesElement.classList.remove('active');\n      let millisecondElement = document.getElementById('milliseconds');\n      millisecondElement.classList.add('show');\n      millisecondElement.classList.add('active');\n      this.activeTab = 'packetTimingGraph';\n      this.getDeviceMetricSeriesSub = this.networkDeviceApiService.GetPacketTimingData(this.deviceIp, this.ORG_ID).subscribe(res => {\n        var _a, _b;\n        if (res && Object.keys(res).length) {\n          this.packetTimingData = res;\n          this.loadPacketChart(tabName);\n        } else {\n          this.packetTimingData = {};\n        }\n        this.show.flowCountInfo = (_b = (_a = document.getElementById('packetTiming')) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('active');\n        this.show.loading = false;\n      }, err => {\n        this.show.loading = false;\n        this.pageErrorHandle(err);\n      });\n    }\n    loadPacketChart(tabName) {\n      this.packetTabValue = tabName;\n      let categories_duration = [];\n      let categories_delay = [];\n      let yAxisDurationValue = [];\n      let yAxisDelayValue = [];\n      let option_duration, option_delay;\n      this.flowCount(this.packetTimingData);\n      switch (tabName) {\n        case 'seconds':\n          categories_duration = this.configureXaxisData('duration', tabName, 1000);\n          categories_duration[categories_duration.length - 1] = `>= ${categories_duration[categories_duration.length - 1]}`;\n          categories_delay = this.configureXaxisData('delay', tabName, 1000);\n          categories_delay[categories_delay.length - 1] = `>= ${categories_delay[categories_delay.length - 1]}`;\n          yAxisDurationValue = this.configureYAxisData('duration', tabName);\n          yAxisDelayValue = this.configureYAxisData('delay', tabName);\n          option_duration = this.makeOptionsForDurationChart(categories_duration, yAxisDurationValue, 'Seconds');\n          option_delay = this.makeOptionsForDelayChart(categories_delay, yAxisDelayValue, 'Seconds');\n          break;\n        case 'minutes':\n          categories_duration = this.configureXaxisData('duration', tabName, 60000);\n          categories_duration[categories_duration.length - 1] = `>= ${categories_duration[categories_duration.length - 1]}`;\n          categories_delay = this.configureXaxisData('delay', tabName, 60000);\n          categories_delay[categories_delay.length - 1] = `>= ${categories_delay[categories_delay.length - 1]}`;\n          yAxisDurationValue = this.configureYAxisData('duration', tabName);\n          yAxisDelayValue = this.configureYAxisData('delay', tabName);\n          option_duration = this.makeOptionsForDurationChart(categories_duration, yAxisDurationValue, 'Minutes');\n          option_delay = this.makeOptionsForDelayChart(categories_delay, yAxisDelayValue, 'Minutes');\n          break;\n        case 'hours':\n          categories_duration = this.configureXaxisData('duration', tabName, 3600000);\n          categories_duration[categories_duration.length - 1] = `>= ${categories_duration[categories_duration.length - 1]}`;\n          categories_delay = this.configureXaxisData('delay', tabName, 3600000);\n          categories_delay[categories_delay.length - 1] = `>= ${categories_delay[categories_delay.length - 1]}`;\n          yAxisDurationValue = this.configureYAxisData('duration', tabName);\n          yAxisDelayValue = this.configureYAxisData('delay', tabName);\n          option_duration = this.makeOptionsForDurationChart(categories_duration, yAxisDurationValue, 'Hours');\n          option_delay = this.makeOptionsForDelayChart(categories_delay, yAxisDelayValue, 'Hours');\n          break;\n        default:\n          break;\n      }\n      this.rangeForDuration = this.on_one_entry(this.packetTimingData['duration'][tabName]);\n      this.rangeForDelay = this.on_one_entry(this.packetTimingData['delay'][tabName]);\n      if (this.show.fullChart) {\n        this.Highcharts.chart('container_duration_expand', option_duration);\n        this.Highcharts.chart('container_delay_expand', option_delay);\n      } else {\n        this.Highcharts.chart('container_duration', option_duration);\n        this.Highcharts.chart('container_delay', option_delay);\n      }\n    }\n    flowCount(data) {\n      if (!data) return;\n      const millis = data.duration.seconds.created - data.duration.seconds.started;\n      const minutes = Math.round(millis / 60000);\n      this.flowCountMsg = \"\" + data.duration.seconds.total_count + \" \" + this.language.flow_last + \" \";\n      if (minutes == 0) {\n        this.flowCountMsg += Math.round(millis / 1000) + \" \" + this.language.Seconds;\n      } else {\n        this.flowCountMsg += minutes + \" \" + this.language.Minutes;\n      }\n    }\n    configureXaxisData(type, tabName, time) {\n      let stpeSize = this.packetTimingData[type][tabName].step / time;\n      let step = 0;\n      let xAxisData = [];\n      for (let index = 0; index < this.packetTimingData[type][tabName].size; index++) {\n        step = step + stpeSize;\n        xAxisData.push(step);\n      }\n      xAxisData = xAxisData === null || xAxisData === void 0 ? void 0 : xAxisData.map(e => e.toFixed(2));\n      return xAxisData;\n    }\n    configureYAxisData(type, tabName) {\n      var _a, _b;\n      let yAxisValue = [];\n      const totalXAxisValue = (_a = this.packetTimingData[type][tabName]['indicies']) === null || _a === void 0 ? void 0 : _a.reduce((a, b) => a + b, 0);\n      yAxisValue.push((_b = this.packetTimingData[type][tabName]['indicies']) === null || _b === void 0 ? void 0 : _b.map(e => {\n        if (e) {\n          return e / totalXAxisValue * 100;\n        } else {\n          return 0;\n        }\n      }));\n      yAxisValue = yAxisValue.flat();\n      return yAxisValue;\n    }\n    makeOptionsForDurationChart(categories, series, tabName) {\n      let options = {\n        chart: {\n          type: 'column',\n          zoomType: \"xy\"\n        },\n        title: {\n          text: ''\n        },\n        xAxis: {\n          categories: categories,\n          labels: {\n            style: {\n              textOverflow: 'ellipsis'\n            }\n          }\n        },\n        yAxis: {\n          // stackLabels: {\n          //   style: {\n          //       color: '#000000',\n          //       fontWeight: 'bold'\n          //   },\n          //   enabled: true,\n          //   verticalAlign: 'top'\n          // },\n          title: {\n            text: '%'\n          },\n          opposite: false,\n          min: 0,\n          max: 100,\n          labels: {\n            formatter: function () {\n              return `${this.value}`;\n            }\n          }\n        },\n        legend: {\n          reversed: false\n        },\n        lang: {\n          noData: this.language[\"No Data Available\"]\n        },\n        plotOptions: {\n          column: {\n            stacking: 'normal'\n          },\n          series: {\n            minPointLength: 3,\n            colors: [\"#0027FF\"]\n          }\n        },\n        tooltip: {\n          formatter: function () {\n            const s = `<p> <b>${this.x}</b><span> <b>${tabName}</b><br/></span><br>${this.y.toFixed(2)}% </p>`;\n            return s;\n          }\n        },\n        series: [{\n          name: this.titleCasePipe.transform(this.language[tabName]),\n          data: series\n        }],\n        credits: {\n          enabled: false\n        }\n      };\n      return options;\n    }\n    makeOptionsForDelayChart(categories, series, tabName) {\n      let options = {\n        chart: {\n          type: 'column',\n          zoomType: \"xy\"\n        },\n        title: {\n          text: ''\n        },\n        xAxis: {\n          categories: categories,\n          labels: {\n            style: {\n              textOverflow: 'ellipsis'\n            }\n          }\n        },\n        yAxis: {\n          // stackLabels: {\n          //   style: {\n          //       color: '#000000',\n          //       fontWeight: 'bold'\n          //   },\n          //   enabled: true,\n          //   verticalAlign: 'top'\n          // },\n          title: {\n            text: '%'\n          },\n          opposite: false,\n          min: 0,\n          max: 100,\n          labels: {\n            formatter: function () {\n              return `${this.value}`;\n            }\n          }\n        },\n        legend: {\n          reversed: false\n        },\n        lang: {\n          noData: this.language[\"No Data Available\"]\n        },\n        plotOptions: {\n          column: {\n            stacking: 'normal'\n          },\n          series: {\n            minPointLength: 3,\n            colors: [\"#5ACFEA\"]\n          }\n        },\n        tooltip: {\n          formatter: function () {\n            const s = `<p> <b>${this.x}<b/><span> <b>${tabName}</b><br/></span><br>${this.y.toFixed(2)}% </p>`;\n            return s;\n          }\n        },\n        series: [{\n          name: this.titleCasePipe.transform(this.language[tabName]),\n          data: series\n        }],\n        credits: {\n          enabled: false\n        }\n      };\n      return options;\n    }\n    openInfoModal() {\n      this.closeModal();\n      this.modalRef = this.dialogService.open(this.infoModal);\n    }\n    closeModal() {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n    }\n    formatBytes(bits, decimals = 2) {\n      if (!+bits) return '0 bps';\n      const k = 1000;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['bps', 'Kbps', 'Mbps', 'Gbps', 'Tbps', 'Pbps', 'Ebps', 'Zbps', 'Ybps'];\n      const i = Math.floor(Math.log(bits) / Math.log(k));\n      return `${parseFloat((bits / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n    }\n    formatPacket(packets, decimals = 2) {\n      if (!+packets) return '0 pps';\n      const k = 1000;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['pps', 'Kpps', 'Mpps', 'Gpps', 'Tbps', 'Ppps', 'Epps', 'Zpps', 'Ypsps'];\n      const i = Math.floor(Math.log(packets) / Math.log(k));\n      return `${parseFloat((packets / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n    }\n    formatTooltip(x, seriesLabel, seriesName, y) {\n      if (seriesLabel == 'virtualPacketRate') {\n        y = this.formatPacket(y);\n      }\n      if (seriesLabel == 'virtualBitRate') {\n        y = this.formatBytes(y);\n      }\n      return `<b>${x}</b><br><b>${seriesName}: ${y}</b>`;\n    }\n    on_one_entry(entry) {\n      let msg = '';\n      if (!entry) return msg;\n      let tot = entry.total_count || 0;\n      if (tot > 0) {\n        let miss = this.round10(entry.missing || 0, tot).toFixed(1);\n        let invalids = this.round10(entry.invalid || 0, tot).toFixed(1);\n        if ((entry.minval || 0) <= (entry.maxval || 0)) {\n          let minscale = this.time_scale(entry.minval || 0);\n          let maxscale = this.time_scale(entry.maxval || 0);\n          if (entry.minval != 0 && maxscale.short != minscale.short) {\n            var s = minscale.short;\n          } else {\n            var s = \"\";\n          }\n          msg = this.language.range + ': ' + minscale.value + \" \" + s + \"&thinsp;&harr;&thinsp;\" + \" \" + maxscale.value + \" \" + maxscale.name + \",&nbsp\" + this.language.missing + \":\" + miss + \"%, \" + this.language.invalid + \":\" + invalids + \"%\";\n        }\n      } else {\n        msg = this.language.range + ': ' + '0.0' + ' ' + this.language.Seconds + \"&thinsp;&harr;&thinsp;\" + '0.0' + \" \" + this.language.Seconds + \",&nbsp\" + this.language.missing + \":\" + '0.0' + \"%, \" + this.language.invalid + \":\" + '0.0' + \"%\";\n      }\n      return msg;\n    }\n    round10(val, tot) {\n      return Math.round(val / tot * 1000) / 10;\n    }\n    time_scale(val) {\n      let seconds = val / 1000;\n      if (seconds <= 120) {\n        return {\n          value: seconds.toFixed(1),\n          name: this.language.Seconds,\n          short: this.language.Seconds\n        };\n      }\n      let minutes = seconds / 60.0;\n      if (minutes <= 120) {\n        return {\n          value: minutes.toFixed(1),\n          name: this.language.Minutes,\n          short: this.language.Minutes\n        };\n      }\n      let hours = minutes / 60.0;\n      if (hours <= 48) {\n        return {\n          value: hours.toFixed(1),\n          name: this.language.hours,\n          short: this.language.hours\n        };\n      }\n      let days = hours / 24.0;\n      return {\n        value: days.toFixed(1),\n        name: this.language.days,\n        short: this.language.days\n      };\n    }\n    pageErrorHandle(err) {\n      var _a, _b;\n      let errorInfo = '';\n      if (err.status == 400 || err.status == 417) {\n        if (err.status == 417 && ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message)) {\n          this.infoBody = (_b = err === null || err === void 0 ? void 0 : err.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.infoBody = this.commonOrgService.pageInvalidRqstErrorHandle(err);\n        }\n        this.infoTitle = this.language['Invalid request'];\n        this.openInfoModal();\n        this.show.loading = false;\n      } else {\n        if (err.status == 401) {\n          errorInfo = this.language['Access Denied'];\n        } else {\n          errorInfo = this.commonOrgService.pageErrorHandle(err);\n        }\n        this.commonOrgService.openErrorAlert(errorInfo);\n        this.commonOrgService.pageScrollTop();\n        this.show.loading = false;\n      }\n    }\n    setPageTitle() {\n      this.titleService.setTitle(`${this.activeTab === 'packetTimingGraph' ? this.language.flow_timing : this.language.decoded_flow_count} - ${this.language['Bsp_Microsite_Status']} - ${this.language['devices']} - ${this.language['Network']} - ${this.language['flowconfiguration']} - ${this.MODULE === 'systemAdministration' ? this.language['System Administration'] : this.language['administration']} - ${this.language['Calix Cloud']}`);\n    }\n    routeToDecodeFlowCount() {\n      if (this.activeTab === 'decodeFlowCountGraph') {\n        return;\n      }\n      this.configureDate();\n      this.onSelectStartTime(this.startDate, false);\n      this.onSelectEndTime(this.endDate);\n      this.getDecodeFlowCount();\n      this.setPageTitle();\n    }\n    refreshGraph() {\n      var _a, _b;\n      const activeTab = this.activeTab;\n      this.configureDate();\n      this.onSelectStartTime(this.startDate, false);\n      this.onSelectEndTime(this.endDate);\n      this.getDecodeFlowCount();\n      if (this.MODULE === 'systemAdministration') {\n        this.getPacketTimingData('seconds', true);\n      }\n      this.show.flowCountInfo = (_b = (_a = document.getElementById('packetTiming')) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('active');\n      this.activeTab = activeTab;\n    }\n  }\n  DevicesNamePlaceholderComponent.ɵfac = function DevicesNamePlaceholderComponent_Factory(t) {\n    return new (t || DevicesNamePlaceholderComponent)(i0.ɵɵdirectiveInject(i1.Title), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.TranslateService), i0.ɵɵdirectiveInject(i5.NetworkDevicesApiService), i0.ɵɵdirectiveInject(i6.NgbModal), i0.ɵɵdirectiveInject(i7.CommonService), i0.ɵɵdirectiveInject(i8.TitleCasePipe));\n  };\n  DevicesNamePlaceholderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DevicesNamePlaceholderComponent,\n    selectors: [[\"app-devices-name-placeholder\"]],\n    viewQuery: function DevicesNamePlaceholderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infoModal = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([TitleCasePipe])],\n    decls: 104,\n    vars: 55,\n    consts: [[1, \"container\", \"px-0\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"cco-title\", \"d-inline-flex\", \"align-items-start\"], [3, \"click\"], [1, \"cursor-pointer\", \"d-inline-flex\", \"ml-3\", \"mt-3\"], [\"src\", \"../../../assets/img/ic_refresh.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"ccl-tabs\"], [1, \"nav\", \"nav-tabs\"], [\"class\", \"nav-item\", 4, \"ngIf\"], [1, \"nav-item\"], [\"data-toggle\", \"tab\", \"id\", \"docodeFlowCount\", \"data-target\", \"#tab-decoded-flow-count\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [4, \"ngIf\"], [\"id\", \"devicePlaceHoldertabs\", 1, \"tab-content\"], [\"id\", \"tab-packet-timing\", 1, \"tab-pane\", 3, \"ngClass\"], [\"id\", \"packetTimingList\", 1, \"nav\", \"nav-tabs\", \"nav-tab-list\", \"mt-3\", \"mb-2\"], [\"id\", \"milliseconds\", \"data-toggle\", \"tab\", \"data-target\", \"#packet-timing-minutes\", 1, \"btn\", \"btn-default\", \"active\", 3, \"click\"], [\"data-toggle\", \"tab\", \"id\", \"seconds\", \"data-target\", \"#packet-timing-minutes\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"data-toggle\", \"tab\", \"id\", \"minutes\", \"data-target\", \"#packet-timing-minutes\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"id\", \"packet-timing-minutes\", 1, \"tab-pane\", \"active\"], [1, \"tab-pane-content\"], [\"id\", \"duration_collaps\", 1, \"col-6\", \"mt-3\", 3, \"hidden\"], [1, \"d-flex\", \"w-100\", \"border-bottom\", \"justify-content-between\", \"pb-2\"], [\"id\", \"timing-minutes-duration\", 1, \"cco-secondary-title\"], [1, \"mwc-btns\", \"flex\", \"align-items-center\"], [\"id\", \"MinutesDurationExpand\", 1, \"btn-round\", \"btn-small-24\", \"btn-grey\", \"btn-expand\", 3, \"title\", \"click\"], [\"src\", \"../../../assets/img/ic_expand_grey.svg\"], [1, \"chart\", \"w-100\"], [\"id\", \"container_duration\", 1, \"cco-traffic-reports-container\"], [\"id\", \"delay_collaps\", 1, \"col-6\", \"mt-3\", 3, \"hidden\"], [\"id\", \"timing-minutes-delay\", 1, \"cco-secondary-title\"], [\"id\", \"MinutesDelayExpand\", 1, \"btn-round\", \"btn-small-24\", \"btn-grey\", \"btn-expand\", 3, \"title\", \"click\"], [\"id\", \"container_delay\", 1, \"cco-traffic-reports-container\"], [\"id\", \"duration_expand\", 1, \"col-12\", \"mt-3\", 3, \"hidden\"], [\"id\", \"\", 1, \"btn-round\", \"btn-small-24\", \"btn-grey\", \"btn-expand\", 3, \"title\", \"click\"], [\"src\", \"../../../assets/img/ic_expand_inverted_grey.svg\"], [\"id\", \"container_duration_expand\", 1, \"cco-traffic-reports-container\"], [\"id\", \"delay_expand\", 1, \"col-12\", \"mt-3\", 3, \"hidden\"], [\"id\", \"container_delay_expand\", 1, \"cco-traffic-reports-container\"], [\"id\", \"tab-decoded-flow-count\", 1, \"tab-pane\", \"show\", 3, \"ngClass\"], [1, \"row\", \"mt-3\"], [1, \"col-md-6\"], [1, \"col-md-6\", \"mb-2\"], [1, \"mb-0\"], [1, \"w-100\", \"ccl-form\"], [\"dateFormat\", \"mm-dd-yy\", 3, \"inputStyle\", \"maxDate\", \"styleClass\", \"placeholder\", \"ngModel\", \"readonlyInput\", \"showIcon\", \"onSelect\", \"ngModelChange\"], [\"dateFormat\", \"mm-dd-yy\", 3, \"minDate\", \"inputStyle\", \"maxDate\", \"styleClass\", \"placeholder\", \"ngModel\", \"readonlyInput\", \"showIcon\", \"onSelect\", \"ngModelChange\"], [1, \"col-md-6\", \"mb-2\", \"pt-4\", \"text-left\"], [\"type\", \"button\", 1, \"btn-default\", \"btn-primary\", \"mt-1\", 3, \"disabled\", \"click\"], [1, \"col-12\", \"mt-2\"], [1, \"d-flex\", \"border-bottom\", \"pb-2\"], [1, \"cco-secondary-title\"], [\"id\", \"container\", 1, \"cco-traffic-reports-container\"], [\"infoModal\", \"\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"data-toggle\", \"tab\", \"id\", \"packetTiming\", \"data-target\", \"#tab-packet-timing\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [1, \"chat-info-desc\", 3, \"innerHtml\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"modal-scrll\"], [1, \"w-100\"], [1, \"f-size-16px\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"]],\n    template: function DevicesNamePlaceholderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DevicesNamePlaceholderComponent_div_1_Template, 5, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementStart(7, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_a_click_7_listener() {\n          return ctx.refreshGraph();\n        });\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵelement(9, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_10_listener() {\n          return ctx.routeToDeviceStatus();\n        });\n        i0.ɵɵelement(11, \"span\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"ul\", 11);\n        i0.ɵɵtemplate(16, DevicesNamePlaceholderComponent_li_16_Template, 3, 2, \"li\", 12);\n        i0.ɵɵelementStart(17, \"li\", 13);\n        i0.ɵɵelementStart(18, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_a_click_18_listener() {\n          return ctx.routeToDecodeFlowCount();\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, DevicesNamePlaceholderComponent_ng_container_20_Template, 3, 1, \"ng-container\", 15);\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵelementStart(22, \"div\", 17);\n        i0.ɵɵelementStart(23, \"ul\", 18);\n        i0.ɵɵelementStart(24, \"li\", 13);\n        i0.ɵɵelementStart(25, \"a\", 19);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_a_click_25_listener() {\n          return ctx.loadPacketChart(\"seconds\");\n        });\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"li\", 13);\n        i0.ɵɵelementStart(28, \"a\", 20);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_a_click_28_listener() {\n          return ctx.loadPacketChart(\"minutes\");\n        });\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"li\", 13);\n        i0.ɵɵelementStart(31, \"a\", 21);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_a_click_31_listener() {\n          return ctx.loadPacketChart(\"hours\");\n        });\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 22);\n        i0.ɵɵelementStart(34, \"div\", 23);\n        i0.ɵɵelementStart(35, \"div\", 2);\n        i0.ɵɵelementStart(36, \"div\", 24);\n        i0.ɵɵelementStart(37, \"div\", 25);\n        i0.ɵɵelementStart(38, \"div\", 26);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 27);\n        i0.ɵɵelementStart(41, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_41_listener() {\n          return ctx.expandDurationChart(true);\n        });\n        i0.ɵɵelement(42, \"img\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 30);\n        i0.ɵɵtemplate(44, DevicesNamePlaceholderComponent_ng_container_44_Template, 2, 1, \"ng-container\", 15);\n        i0.ɵɵelement(45, \"div\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 32);\n        i0.ɵɵelementStart(47, \"div\", 25);\n        i0.ɵɵelementStart(48, \"div\", 33);\n        i0.ɵɵtext(49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 27);\n        i0.ɵɵelementStart(51, \"button\", 34);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_51_listener() {\n          return ctx.expandDelayChart(true);\n        });\n        i0.ɵɵelement(52, \"img\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"div\", 30);\n        i0.ɵɵtemplate(54, DevicesNamePlaceholderComponent_ng_container_54_Template, 2, 1, \"ng-container\", 15);\n        i0.ɵɵelement(55, \"div\", 35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 2);\n        i0.ɵɵelementStart(57, \"div\", 36);\n        i0.ɵɵelementStart(58, \"div\", 25);\n        i0.ɵɵelementStart(59, \"div\", 26);\n        i0.ɵɵtext(60);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"div\", 27);\n        i0.ɵɵelementStart(62, \"button\", 37);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_62_listener() {\n          return ctx.expandDurationChart(false);\n        });\n        i0.ɵɵelement(63, \"img\", 38);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"div\", 30);\n        i0.ɵɵtemplate(65, DevicesNamePlaceholderComponent_ng_container_65_Template, 2, 1, \"ng-container\", 15);\n        i0.ɵɵelement(66, \"div\", 39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 40);\n        i0.ɵɵelementStart(68, \"div\", 25);\n        i0.ɵɵelementStart(69, \"div\", 33);\n        i0.ɵɵtext(70);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"div\", 27);\n        i0.ɵɵelementStart(72, \"button\", 37);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_72_listener() {\n          return ctx.expandDelayChart(false);\n        });\n        i0.ɵɵelement(73, \"img\", 38);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 30);\n        i0.ɵɵtemplate(75, DevicesNamePlaceholderComponent_ng_container_75_Template, 2, 1, \"ng-container\", 15);\n        i0.ɵɵelement(76, \"div\", 41);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"div\", 42);\n        i0.ɵɵelementStart(78, \"div\", 23);\n        i0.ɵɵelementStart(79, \"div\", 43);\n        i0.ɵɵelementStart(80, \"div\", 44);\n        i0.ɵɵelementStart(81, \"div\", 2);\n        i0.ɵɵelementStart(82, \"div\", 45);\n        i0.ɵɵelementStart(83, \"label\", 46);\n        i0.ɵɵtext(84);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"div\", 47);\n        i0.ɵɵelementStart(86, \"p-calendar\", 48);\n        i0.ɵɵlistener(\"onSelect\", function DevicesNamePlaceholderComponent_Template_p_calendar_onSelect_86_listener($event) {\n          return ctx.onSelectStartTime($event, true);\n        })(\"ngModelChange\", function DevicesNamePlaceholderComponent_Template_p_calendar_ngModelChange_86_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"div\", 45);\n        i0.ɵɵelementStart(88, \"label\", 46);\n        i0.ɵɵtext(89);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"div\", 47);\n        i0.ɵɵelementStart(91, \"p-calendar\", 49);\n        i0.ɵɵlistener(\"onSelect\", function DevicesNamePlaceholderComponent_Template_p_calendar_onSelect_91_listener($event) {\n          return ctx.onSelectEndTime($event);\n        })(\"ngModelChange\", function DevicesNamePlaceholderComponent_Template_p_calendar_ngModelChange_91_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"div\", 50);\n        i0.ɵɵelementStart(93, \"button\", 51);\n        i0.ɵɵlistener(\"click\", function DevicesNamePlaceholderComponent_Template_button_click_93_listener() {\n          return ctx.getDecodeFlowCount();\n        });\n        i0.ɵɵtext(94);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(95, \"div\", 2);\n        i0.ɵɵelementStart(96, \"div\", 52);\n        i0.ɵɵelementStart(97, \"div\", 53);\n        i0.ɵɵelementStart(98, \"div\", 54);\n        i0.ɵɵtext(99);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"div\", 30);\n        i0.ɵɵelement(101, \"div\", 55);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(102, DevicesNamePlaceholderComponent_ng_template_102_Template, 12, 3, \"ng-template\", null, 56, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.show == null ? null : ctx.show.loading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.deviceIp, \" \");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.MODULE === \"systemAdministration\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.MODULE !== \"systemAdministration\" ? \"active\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.language.decoded_flow_count);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.show.flowCountInfo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.MODULE === \"systemAdministration\" ? \"active\" : \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.language.milliseconds);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.USeconds);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.minutes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", ctx.show.durationShortChart);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Duration, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language.expand);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.rangeForDuration);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.show.delayShortChart);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.delay);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language.expand);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.rangeForDelay);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.show.durationFullChart);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language.Duration, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language.subImpac_fullscreen_close_tip);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.rangeForDuration);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.show.delayFullChart);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language.delay);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language.subImpac_fullscreen_close_tip);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.rangeForDelay);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.MODULE !== \"systemAdministration\" ? \"active\" : \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.language[\"START_DATE\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(51, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"START_DATE\"]);\n        i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(52, _c2))(\"maxDate\", ctx.maxStartDate)(\"styleClass\", \"p-cal-custom\")(\"ngModel\", ctx.startDate)(\"readonlyInput\", true)(\"showIcon\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"END_DATE\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(53, _c1));\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language[\"END_DATE\"]);\n        i0.ɵɵproperty(\"minDate\", ctx.minEndDate)(\"inputStyle\", i0.ɵɵpureFunction0(54, _c2))(\"maxDate\", ctx.maxEndDate)(\"styleClass\", \"p-cal-custom\")(\"ngModel\", ctx.endDate)(\"readonlyInput\", true)(\"showIcon\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.startDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.language[\"apply\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.language.decoded_flow_count);\n      }\n    },\n    directives: [i8.NgIf, i8.NgClass, i9.Calendar, i10.NgControlStatus, i10.NgModel],\n    styles: [\".tab-pane.fade[_ngcontent-%COMP%]:not(.show) > .tab-pane-content[_ngcontent-%COMP%]{display:none}.tab-pane.fade.show[_ngcontent-%COMP%] > .tab-pane-content[_ngcontent-%COMP%]{display:block}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > .btn[_ngcontent-%COMP%]{padding:3px 20px!important;border:1px solid #0279FF;color:#0279ff;font-size:14px;line-height:16.67px!important}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > .btn[_ngcontent-%COMP%]:not(.active):hover{background-color:#0279ff;color:#fff}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > .btn.active[_ngcontent-%COMP%]{background-color:#0279ff;color:#fff}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > .btn[_ngcontent-%COMP%]{border-radius:0!important}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:first-child   .btn[_ngcontent-%COMP%]{border-top-left-radius:12px!important;border-bottom-left-radius:12px!important}.nav-tab-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:last-child   .btn[_ngcontent-%COMP%]{border-top-right-radius:12px!important;border-bottom-right-radius:12px!important}.chat-info-desc[_ngcontent-%COMP%]{font-family:Source Sans Pro!important;font-size:14px!important;color:#1a1f22;margin-bottom:5px;margin-top:10px}\"]\n  });\n  return DevicesNamePlaceholderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}