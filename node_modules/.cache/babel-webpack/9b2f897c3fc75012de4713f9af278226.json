{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { environment } from 'src/environments/environment';\nimport { maskString } from 'src/app/cco/shared/functions/cco-mask';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app-services/translate.service\";\nimport * as i3 from \"src/app/shared/services/sso-auth.service\";\nimport * as i4 from \"../../shared/traffic-realtime-options-manger.service\";\nimport * as i5 from \"src/app/cco/shared/services/websocket.service\";\nimport * as i6 from \"@angular/common/http\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"src/app/shared/services/common-functions.service\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"../../shared/stream-chart/stream-chart.component\";\nimport * as i12 from \"../../shared/bar-chart/bar-chart.component\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"@angular/forms\";\nimport * as i15 from \"../../../../shared/directives/trim-space.directive\";\nimport * as i16 from \"primeng/calendar\";\nconst _c0 = [\"recordingModal\"];\nconst _c1 = [\"faviouteModal\"];\nfunction RealtimeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelementStart(2, \"div\", 26);\n    i0.ɵɵelementStart(3, \"span\", 27);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.language.Loading);\n  }\n}\nfunction RealtimeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_11_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.createRecordingModal();\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelement(2, \"img\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r1.language.Record);\n  }\n}\nfunction RealtimeComponent_label_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 30);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"img\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language[\"Record In-Progress\"], \" \");\n  }\n}\nfunction RealtimeComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵelement(2, \"app-stream-chart\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"chartName\", \"RATE\")(\"yAxixTitle\", ctx_r3.rateUnit)(\"data\", ctx_r3.data.maxRate)(\"time\", ctx_r3.data.sendTime)(\"windowLen\", ctx_r3.windowLen)(\"history\", ctx_r3.cacheRateData);\n  }\n}\nfunction RealtimeComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵelement(2, \"app-stream-chart\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"chartName\", \"PACKET\")(\"yAxixTitle\", ctx_r4.packetUnit)(\"data\", ctx_r4.data.packet)(\"time\", ctx_r4.data.sendTime)(\"windowLen\", ctx_r4.windowLen)(\"history\", ctx_r4.cachePacketData);\n  }\n}\nfunction RealtimeComponent_div_22_app_bar_chart_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 57);\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r15.topEndPointUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r15.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_22_app_bar_chart_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 58);\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r16.topEndPointDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r16.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_22_app_bar_chart_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 59);\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r17.topAppsUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r17.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_22_app_bar_chart_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 60);\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r18.topAppsDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r18.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelementStart(2, \"div\", 38);\n    i0.ɵɵelementStart(3, \"div\", 39);\n    i0.ɵɵelementStart(4, \"p\", 40);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 41);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 42);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_22_Template_span_click_8_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.fullscreen(\"TEP\");\n    });\n    i0.ɵɵtext(9, \"\\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"h5\", 43);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 44);\n    i0.ɵɵelementStart(13, \"div\", 45);\n    i0.ɵɵelementStart(14, \"div\", 46);\n    i0.ɵɵelementStart(15, \"span\", 47);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementStart(17, \"b\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, RealtimeComponent_div_22_app_bar_chart_20_Template, 1, 3, \"app-bar-chart\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 49);\n    i0.ɵɵelementStart(22, \"div\", 46);\n    i0.ɵɵelementStart(23, \"span\", 47);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementStart(25, \"b\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, RealtimeComponent_div_22_app_bar_chart_28_Template, 1, 3, \"app-bar-chart\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 51);\n    i0.ɵɵelementStart(30, \"div\", 38);\n    i0.ɵɵelementStart(31, \"div\", 39);\n    i0.ɵɵelementStart(32, \"p\", 40);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"span\", 41);\n    i0.ɵɵtext(35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"span\", 52);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_22_Template_span_click_36_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.fullscreen(\"TAPP\");\n    });\n    i0.ɵɵtext(37, \"\\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"h5\", 43);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 44);\n    i0.ɵɵelementStart(41, \"div\", 53);\n    i0.ɵɵelementStart(42, \"div\", 46);\n    i0.ɵɵelementStart(43, \"span\", 47);\n    i0.ɵɵtext(44);\n    i0.ɵɵelementStart(45, \"b\");\n    i0.ɵɵtext(46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(48, RealtimeComponent_div_22_app_bar_chart_48_Template, 1, 3, \"app-bar-chart\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"div\", 55);\n    i0.ɵɵelementStart(50, \"div\", 46);\n    i0.ɵɵelementStart(51, \"span\", 47);\n    i0.ɵɵtext(52);\n    i0.ɵɵelementStart(53, \"b\");\n    i0.ɵɵtext(54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(56, RealtimeComponent_div_22_app_bar_chart_56_Template, 1, 3, \"app-bar-chart\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r5.language.top5Endpoints);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r5.language.interval, \": 15 \", ctx_r5.language.sec, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r5.language.lossofpon_fullscreen_tip);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language[\"Traffic_ Network_Top 5 Endpoints\"], \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.tEPrcntData.upPercentage, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.topEndPointUpChartoptions && ctx_r5.showRealTime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.tEPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.topEndPointDownChartoptions && ctx_r5.showRealTime);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r5.language.top5Applications);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r5.language.interval, \": 15 \", ctx_r5.language.sec, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r5.language.lossofpon_fullscreen_tip);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language[\"Traffic_ Network_Top 5 Applications\"], \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.tAPrcntData.upPercentage, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.topAppsUpChartoptions && ctx_r5.showRealTime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.tAPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.topAppsDownChartoptions && ctx_r5.showRealTime);\n  }\n}\nfunction RealtimeComponent_div_26_app_bar_chart_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 67);\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r22.topEndPointUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r22.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_26_app_bar_chart_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 68);\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r23.topEndPointDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r23.updateFlag);\n  }\n}\nconst _c2 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction RealtimeComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵelementStart(3, \"ng-select\", 62);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_26_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_div_26_Template_ng_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.changeTopLength();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 41);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 63);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_26_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.closeFullscreen();\n    });\n    i0.ɵɵtext(7, \"\\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"h5\", 43);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 64);\n    i0.ɵɵelementStart(11, \"div\", 49);\n    i0.ɵɵelementStart(12, \"div\", 46);\n    i0.ɵɵelementStart(13, \"span\", 47);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementStart(15, \"b\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, RealtimeComponent_div_26_app_bar_chart_18_Template, 1, 3, \"app-bar-chart\", 65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 49);\n    i0.ɵɵelementStart(20, \"div\", 46);\n    i0.ɵɵelementStart(21, \"span\", 47);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementStart(23, \"b\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(26, RealtimeComponent_div_26_app_bar_chart_26_Template, 1, 3, \"app-bar-chart\", 66);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r6.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r6.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(18, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r6.language.interval, \": 15 \", ctx_r6.language.sec, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r6.language.lossofpon_fullscreen_close_tip);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language[\"Traffic_ Network_Top 5 Endpoints\"], \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.tEPrcntData.upPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.topEndPointUpChartoptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.tEPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.topEndPointDownChartoptions);\n  }\n}\nfunction RealtimeComponent_div_27_app_bar_chart_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 73);\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r28.topAppsUpChartoptions)(\"type\", \"up\");\n  }\n}\nfunction RealtimeComponent_div_27_app_bar_chart_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 74);\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r29.topAppsDownChartoptions)(\"type\", \"down\");\n  }\n}\nfunction RealtimeComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵelementStart(3, \"ng-select\", 62);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_27_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_div_27_Template_ng_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.changeTopLength();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 41);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 69);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_27_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.closeFullscreen();\n    });\n    i0.ɵɵtext(7, \"\\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"h5\", 43);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 64);\n    i0.ɵɵelementStart(11, \"div\", 70);\n    i0.ɵɵelementStart(12, \"div\", 46);\n    i0.ɵɵelementStart(13, \"span\", 47);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementStart(15, \"b\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, RealtimeComponent_div_27_app_bar_chart_18_Template, 1, 2, \"app-bar-chart\", 71);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 49);\n    i0.ɵɵelementStart(20, \"div\", 46);\n    i0.ɵɵelementStart(21, \"span\", 47);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementStart(23, \"b\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(26, RealtimeComponent_div_27_app_bar_chart_26_Template, 1, 2, \"app-bar-chart\", 72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r7.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r7.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(18, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r7.language.interval, \": 15 \", ctx_r7.language.sec, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r7.language.lossofpon_fullscreen_close_tip);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.language[\"Traffic_ Network_Top 5 Applications\"], \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.tAPrcntData.upPercentage, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.topAppsUpChartoptions && true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.tAPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.topAppsDownChartoptions && true);\n  }\n}\nfunction RealtimeComponent_div_28_app_bar_chart_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 78);\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r34.topLocationsUpChartoptions)(\"type\", \"up\")(\"updateFlag\", ctx_r34.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_28_app_bar_chart_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bar-chart\", 78);\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"chartOptions\", ctx_r35.topLocationsDownChartoptions)(\"type\", \"down\")(\"updateFlag\", ctx_r35.updateFlag);\n  }\n}\nfunction RealtimeComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵelementStart(2, \"div\", 39);\n    i0.ɵɵelementStart(3, \"ng-select\", 62);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_div_28_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.selectedTopLength = $event;\n    })(\"change\", function RealtimeComponent_div_28_Template_ng_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.changeTopLength();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 41);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 75);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_div_28_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return ctx_r39.closeFullscreen();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 76);\n    i0.ɵɵelementStart(8, \"div\", 49);\n    i0.ɵɵelementStart(9, \"div\", 46);\n    i0.ɵɵelementStart(10, \"span\", 47);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"b\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, RealtimeComponent_div_28_app_bar_chart_15_Template, 1, 3, \"app-bar-chart\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 49);\n    i0.ɵɵelementStart(17, \"div\", 46);\n    i0.ɵɵelementStart(18, \"span\", 47);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementStart(20, \"b\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, RealtimeComponent_div_28_app_bar_chart_23_Template, 1, 3, \"app-bar-chart\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r8.topLengths)(\"multiple\", false)(\"ngModel\", ctx_r8.selectedTopLength)(\"ngModelOptions\", i0.ɵɵpureFunction0(17, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r8.language.interval, \": 15 \", ctx_r8.language.sec, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r8.language.lossofpon_fullscreen_close_tip);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.upRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.tLPrcntData.upPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topLocationsUpChartoptions && true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.language.downRate, \" (\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.tLPrcntData.downPercentage, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.language.ofTotal, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.topLocationsDownChartoptions && true);\n  }\n}\nfunction RealtimeComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 79);\n    i0.ɵɵelementStart(1, \"h5\", 80);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 81);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_29_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.close();\n    });\n    i0.ɵɵelement(4, \"span\", 82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 83);\n    i0.ɵɵelementStart(6, \"form\");\n    i0.ɵɵelementStart(7, \"div\", 84);\n    i0.ɵɵelementStart(8, \"label\", 85);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 86);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 87);\n    i0.ɵɵelementStart(12, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_29_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.createFavioute();\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_29_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return ctx_r44.close();\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.language.CreateTrafficFavorite);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r10.language.Name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r10.language.Name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.language.Cancel, \" \");\n  }\n}\nfunction RealtimeComponent_ng_template_31_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 113);\n    i0.ɵɵelementStart(1, \"span\", 114);\n    i0.ɵɵelement(2, \"img\", 115);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 116);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_31_div_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return ctx_r51.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 117);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r46.language[ctx_r46.errorInfo] || ctx_r46.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction RealtimeComponent_ng_template_31_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\", 118);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r47.language[\"Please enter the name\"], \" \");\n  }\n}\nfunction RealtimeComponent_ng_template_31_label_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 119);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"img\", 120);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r48.language[\"Record In-Progress\"], \" \");\n  }\n}\nfunction RealtimeComponent_ng_template_31_ng_template_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r53 = ctx.item;\n    const ctx_r49 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r49.language[item_r53.name] || item_r53.name, \" \");\n  }\n}\nfunction RealtimeComponent_ng_template_31_ng_template_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r54 = ctx.item;\n    const ctx_r50 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r50.language[item_r54.name] || item_r54.name, \" \");\n  }\n}\nconst _c3 = function () {\n  return {\n    width: \"100%\",\n    height: \"38px\"\n  };\n};\nconst _c4 = function () {\n  return {\n    height: \"36px\"\n  };\n};\nfunction RealtimeComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 79);\n    i0.ɵɵelementStart(1, \"h5\", 80);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 81);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_31_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r56 = i0.ɵɵnextContext();\n      return ctx_r56.close();\n    });\n    i0.ɵɵelement(4, \"span\", 82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 90);\n    i0.ɵɵtemplate(6, RealtimeComponent_ng_template_31_div_6_Template, 6, 1, \"div\", 91);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 83);\n    i0.ɵɵelementStart(8, \"div\", 92);\n    i0.ɵɵelementStart(9, \"label\", 93);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"span\", 94);\n    i0.ɵɵtext(12, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 95);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r58 = i0.ɵɵnextContext();\n      return ctx_r58.recordingName = $event;\n    })(\"change\", function RealtimeComponent_ng_template_31_Template_input_change_13_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r59 = i0.ɵɵnextContext();\n      return ctx_r59.changeName();\n    })(\"blur\", function RealtimeComponent_ng_template_31_Template_input_blur_13_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r60 = i0.ɵɵnextContext();\n      return ctx_r60.removeUnwantedSpace(\"recordingName\", ctx_r60.recordingName);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, RealtimeComponent_ng_template_31_div_14_Template, 3, 1, \"div\", 96);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 92);\n    i0.ɵɵelementStart(16, \"label\", 97);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"textarea\", 98);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_textarea_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r61 = i0.ɵɵnextContext();\n      return ctx_r61.description = $event;\n    })(\"blur\", function RealtimeComponent_ng_template_31_Template_textarea_blur_18_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r62 = i0.ɵɵnextContext();\n      return ctx_r62.removeUnwantedSpace(\"description\", ctx_r62.description);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 47);\n    i0.ɵɵelementStart(20, \"span\", 99);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementStart(22, \"span\", 94);\n    i0.ɵɵtext(23, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 100);\n    i0.ɵɵelementStart(25, \"label\", 101);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"input\", 102);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return ctx_r63.isNow = $event;\n    })(\"change\", function RealtimeComponent_ng_template_31_Template_input_change_27_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r64 = i0.ɵɵnextContext();\n      return ctx_r64.changeNowAndLater();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 100);\n    i0.ɵɵelementStart(29, \"label\", 103);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 104);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_input_ngModelChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r65 = i0.ɵɵnextContext();\n      return ctx_r65.isNow = $event;\n    })(\"change\", function RealtimeComponent_ng_template_31_Template_input_change_31_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r66 = i0.ɵɵnextContext();\n      return ctx_r66.changeNowAndLater();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"p-calendar\", 105);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_p_calendar_ngModelChange_32_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r67 = i0.ɵɵnextContext();\n      return ctx_r67.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(33, RealtimeComponent_ng_template_31_label_33_Template, 4, 1, \"label\", 106);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 107);\n    i0.ɵɵelementStart(35, \"label\", 108);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementStart(37, \"span\", 94);\n    i0.ɵɵtext(38, \"*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"ng-select\", 109);\n    i0.ɵɵlistener(\"ngModelChange\", function RealtimeComponent_ng_template_31_Template_ng_select_ngModelChange_39_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r68 = i0.ɵɵnextContext();\n      return ctx_r68.selectedDuration = $event;\n    });\n    i0.ɵɵtemplate(40, RealtimeComponent_ng_template_31_ng_template_40_Template, 1, 1, \"ng-template\", 110);\n    i0.ɵɵtemplate(41, RealtimeComponent_ng_template_31_ng_template_41_Template, 1, 1, \"ng-template\", 111);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"div\", 87);\n    i0.ɵɵelementStart(43, \"button\", 112);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_31_Template_button_click_43_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r69 = i0.ɵɵnextContext();\n      return ctx_r69.createRecording();\n    });\n    i0.ɵɵtext(44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function RealtimeComponent_ng_template_31_Template_button_click_45_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return ctx_r70.close();\n    });\n    i0.ɵɵtext(46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.language.CreateTrafficRecording);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.error);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r12.language.Name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r12.language.Name);\n    i0.ɵɵproperty(\"ngModel\", ctx_r12.recordingName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.isvalid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.language[\"Decription\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"\", ctx_r12.language[\"Description\"], \"..\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r12.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language[\"Start Time\"], \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r12.language.Now);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", true)(\"ngModel\", ctx_r12.isNow)(\"checked\", ctx_r12.isNow)(\"disabled\", ctx_r12.recordingStatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.language.Later);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", false)(\"ngModel\", ctx_r12.isNow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(40, _c3));\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r12.language.Date);\n    i0.ɵɵproperty(\"inputStyle\", i0.ɵɵpureFunction0(41, _c4))(\"autoZIndex\", true)(\"ngModel\", ctx_r12.date)(\"showIcon\", true)(\"showTime\", true)(\"hourFormat\", 24)(\"ngModelOptions\", i0.ɵɵpureFunction0(42, _c2))(\"disabled\", ctx_r12.showDate)(\"minDate\", ctx_r12.minDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.recordingStatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r12.language[\"Record Length\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", ctx_r12.items)(\"ngModel\", ctx_r12.selectedDuration)(\"ngModelOptions\", i0.ɵɵpureFunction0(43, _c2))(\"clearable\", false)(\"searchable\", false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r12.btnDisabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language.Confirm, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.language.Cancel, \" \");\n  }\n}\nlet TopEP = 'TEP',\n  TopApp = 'TAPP',\n  TopLoc = 'TLOC';\nexport let RealtimeComponent = /*#__PURE__*/(() => {\n  class RealtimeComponent {\n    constructor(route, router, translateService,\n    //private optnsMngr: OptionsManagerService, \n    sso, optnsMngr, websocketservice, http, dialogService, titleService, CommonFunctionsService) {\n      this.route = route;\n      this.router = router;\n      this.translateService = translateService;\n      this.sso = sso;\n      this.optnsMngr = optnsMngr;\n      this.websocketservice = websocketservice;\n      this.http = http;\n      this.dialogService = dialogService;\n      this.titleService = titleService;\n      this.CommonFunctionsService = CommonFunctionsService;\n      this.selectedOption = 1;\n      this.selectedTime = 1;\n      this.fsView = false;\n      this.showRealTime = true;\n      this.rate = 'RATE';\n      this.packet = 'PACKET';\n      this.rateUnit = 'bps';\n      this.packetUnit = 'pps';\n      this.windowLen = 5;\n      this.fsName = '';\n      this.fsChartDetails = {};\n      this.selectedTopLength = 5;\n      this.topLengths = [];\n      this.updateFlag = true;\n      this.topEndPointUpXaxisArray = [];\n      this.topEndPointUpXaxisIdArray = [];\n      this.topEndPointUpXaxisSelection = false;\n      this.topEndPointDownXaxisArray = [];\n      this.topEndPointDownXaxisIdArray = [];\n      this.topEndPointDownXaxisSelection = false;\n      this.topAppsUpXaxisArray = [];\n      this.topAppsUpXaxisIdArray = [];\n      this.topAppsUpXaxisSelection = false;\n      this.topAppsDownXaxisArray = [];\n      this.topAppsDownXaxisIdArray = [];\n      this.topAppsDownXaxisSelection = false;\n      this.topLocationsUpXaxisArray = [];\n      this.topLocationsUpXaxisIdArray = [];\n      this.topLocationsUpXaxisSelection = false;\n      this.topLocationsDownXaxisArray = [];\n      this.topLocationsDownXaxisIdArray = [];\n      this.topLocationsDownXaxisSelection = false;\n      this.tAPrcntData = {\n        downPercentage: '0',\n        upPercentage: '0'\n      };\n      this.tLPrcntData = {\n        downPercentage: '0',\n        upPercentage: '0'\n      };\n      this.tEPrcntData = {\n        downPercentage: '0',\n        upPercentage: '0'\n      };\n      this.tAData = {\n        upData: [],\n        downData: []\n      };\n      this.tLData = {\n        upData: [],\n        downData: []\n      };\n      this.tEPData = {\n        upData: [],\n        downData: []\n      };\n      this.data = {\n        maxRate: [],\n        packet: []\n      };\n      this.isConnected = true;\n      this.status = 'ONLINE'; //initializing as online by default\n      this.hasLocationAccess = false;\n      this.hasApplicationAccess = false;\n      this.hasWriteAccess = false;\n      this.isCcoTraffic = false;\n      this.cachePacketData = {};\n      this.cacheRateData = {};\n      this.tepUpDataObj = {};\n      this.tepDownDataObj = {};\n      this.tapUpDataObj = {};\n      this.tapDownDataObj = {};\n      this.tlocUpDataObj = {};\n      this.tlocDownDataObj = {};\n      this.date = new Date();\n      this.items = [{\n        name: \"0.5 Hour\",\n        value: '1'\n      }, {\n        name: \"1 Hour\",\n        value: '2'\n      }, {\n        name: \"1.5 Hour\",\n        value: '3'\n      }, {\n        name: \"2 Hour\",\n        value: '4'\n      }];\n      this.selectedDuration = \"1\";\n      this.isNow = true;\n      this.recordingName = \"\";\n      this.description = \"\";\n      this.isvalid = true;\n      this.minDate = new Date();\n      this.btnDisabled = false;\n      this.errorInfo = \"\";\n      this.error = false;\n      this.showDate = true;\n      this.recordingStatus = false;\n      this.connectionError = false;\n      this.connectionErrorInfo = \"\";\n      this.timeDiff = 0;\n      this.loading = true;\n      this.websocketservice.rtData$.next({});\n      this.websocketservice.ratePacketStreamData$.next({});\n      this.websocketservice.setMonitorType(\"EP\");\n      if (window.location.pathname.indexOf('cco/traffic/endpoints/realtime') > -1) {\n        this.isCcoTraffic = true;\n      }\n    }\n    setTitle(url) {\n      if (this.isCcoTraffic) {\n        this.titleService.setTitle(`${this.language['Real Time']} - ${this.language['Endpoints']} - ${this.language['Traffic']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      } else {\n        this.titleService.setTitle(`${this.language['Real Time']} - ${this.language['Endpoints']} - ${this.language['Traffic']} - ${this.language['flowconfiguration']} - ${this.language['administration']} - ${this.language['Calix Cloud']}`);\n      }\n    }\n    ngOnInit() {\n      this.sso.setPageAccess(true);\n      this.webSocketConnectionError();\n      this.getAggregateEndpointTraffic();\n      let that = this;\n      document.addEventListener(\"visibilitychange\", function () {\n        if (!document.hidden) {\n          if (that.websocketservice.getCurrentMonitorInfo('EP')) {\n            let filterData = that.websocketservice.getCurrentMonitorInfo('EP');\n            if (filterData && filterData['monitorId'] && filterData['monitorId'] === that.endPoinId) {\n              let params = {\n                \"orgId\": filterData.orgId,\n                \"monitorType\": \"EP\",\n                \"networkId\": filterData.networkId,\n                \"monitorId\": filterData['monitorId'],\n                \"graphType\": \"TRF\",\n                \"replay\": \"true\",\n                \"startTime\": filterData['startTime'],\n                \"endTime\": new Date().getTime()\n              };\n              that.send(\"EP\", params);\n              return;\n            }\n            that.websocketservice.listen('REPLAY');\n          }\n        }\n      });\n      //this.endPoinId = this.route.snapshot.params.id || 0;\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE && this.isCcoTraffic) {\n        if (scopes && (scopes['cloud.rbac.coc.traffic.network.realtime'].indexOf('write') !== -1 || scopes['cloud.rbac.coc.traffic.location.realtime'].indexOf('write') !== -1 || scopes['cloud.rbac.coc.traffic.applications.realtime'].indexOf('write') !== -1)) {\n          this.hasWriteAccess = true;\n        }\n        let validScopes = Object.keys(scopes);\n        if (validScopes) {\n          for (let i = 0; i < validScopes.length; i++) {\n            if (validScopes[i].indexOf('cloud.rbac.coc.traffic.location.realtime') !== -1) {\n              this.hasLocationAccess = true;\n            }\n            if (validScopes[i].indexOf('cloud.rbac.coc.traffic.applications.realtime') !== -1) {\n              this.hasApplicationAccess = true;\n            }\n          }\n        }\n      } else {\n        this.hasLocationAccess = true;\n        this.hasApplicationAccess = true;\n      }\n      this.delaySubs = this.websocketservice.delay$.subscribe(res => {\n        if (res) {\n          //this.loading = false;\n          this.wsDelay = Math.abs(this.sso.getRealtimeDelay()) / 60000;\n          this.wsDelay = Number.isInteger(this.wsDelay) ? this.wsDelay : this.wsDelay.toFixed(1);\n        }\n      });\n      let filterData = {};\n      if (this.websocketservice.getCurrentMonitorInfo('EP')) {\n        filterData = this.websocketservice.getCurrentMonitorInfo('EP');\n        if (filterData['monitorId'] !== this.route.snapshot.queryParamMap.get('id')) {\n          this.send('remove', 'EP');\n        }\n      }\n      this.endPoinId = this.route.snapshot.queryParamMap.get('id') || (filterData && filterData['monitorId'] ? filterData['monitorId'] : 0) || 0;\n      // this.ccoCommonService.setData(this.endPoinId);\n      //this.websocketservice.Checkconnectornot();\n      // this.websocketservice.listen('EP').subscribe((data) => {\n      // });\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.setTitle(this.router.url);\n        if (this.fsView) {\n          this.createTopLengthItems();\n        }\n        this.topAppsUpChartoptions = null;\n        this.topAppsDownChartoptions = null;\n        this.topEndPointUpChartoptions = null;\n        this.topEndPointDownChartoptions = null;\n        setTimeout(() => {\n          let epData = this.optnsMngr.getNetworkRealTimeGraphData(TopEP);\n          this.makeTEPEvents(epData);\n          let appData = this.optnsMngr.getNetworkRealTimeGraphData(TopApp);\n          this.makeTAPPEvents(appData);\n        }, 300);\n      });\n      this.setTitle(this.router.url);\n      //var endPointData = JSON.parse(sessionStorage.getItem('cco-endpoint'))\n      this.getRtData();\n      // this.orgId = this.sso.getOrgId();\n      let url = this.router.url;\n      this.orgId = this.sso.getOrganizationID(url);\n      this.orgid_tenantid = this.orgId + '_' + '0';\n      // this.endPoinId = endPointData.endPointId;\n      this.connectSubs = this.websocketservice.connectWS$.subscribe(res => {\n        if (res && !this.websocketservice.WebSocketServer.hasDisconnectedOnce) {\n          this.websocketservice.listen('EP');\n          this.websocketservice.listen('error_traffic_EP');\n          if (!filterData['monitorId'] || filterData['monitorId'] !== this.route.snapshot.queryParamMap.get('id')) {\n            this.send(\"EP\", {\n              \"orgId\": this.orgId,\n              \"monitorType\": \"EP\",\n              \"networkId\": this.orgid_tenantid,\n              \"monitorId\": this.endPoinId,\n              \"graphType\": \"TRF,TAPP,TEP\"\n            });\n          }\n          if (filterData && filterData['monitorId'] && filterData['monitorId'] === this.route.snapshot.queryParamMap.get('id')) {\n            let params = {\n              \"orgId\": filterData['orgId'],\n              \"monitorType\": \"EP\",\n              \"networkId\": filterData['networkId'],\n              \"monitorId\": filterData['monitorId'],\n              \"graphType\": \"TRF\",\n              \"replay\": \"true\",\n              \"startTime\": filterData['startTime'],\n              \"endTime\": new Date().getTime()\n            };\n            this.send(\"EP\", params);\n          }\n          this.websocketservice.listen('REPLAY');\n        }\n      });\n      this.websocketservice.setWindowLen(this.selectedOption);\n      this.getRecordingStatus();\n      this.checkLastSubscriptiontime();\n      this.reConnectWebSocket();\n      setTimeout(() => {\n        this.loading = false;\n      }, 15000);\n    }\n    ngAfterViewInit() {\n      var elmnt = document.getElementById(\"app-main-div\");\n      if (elmnt) {\n        elmnt.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n    send(eventname, data) {\n      this.websocketservice.emit(eventname, data);\n    }\n    clearFilter() {\n      this.selectedOption = 1;\n      this.selectedTime = 1;\n    }\n    fullscreen(whichTop) {\n      this.fsChartDetails = {\n        topChart: whichTop\n      };\n      this.fsView = true;\n      this.fsName = whichTop;\n      this.modifyCurrentOptionsToFS(whichTop);\n      this.createTopLengthItems();\n    }\n    createTopLengthItems() {\n      if (this.language && this.fsChartDetails.title) {\n        this.topLengths = [{\n          name: this.language['Top 5 ' + this.fsChartDetails.title],\n          value: 5\n        }, {\n          name: this.language['Top 10 ' + this.fsChartDetails.title],\n          value: 10\n        }, {\n          name: this.language['Top 20 ' + this.fsChartDetails.title],\n          value: 20\n        }, {\n          name: this.language['Top 30 ' + this.fsChartDetails.title],\n          value: 30\n        }];\n      }\n    }\n    modifyCurrentOptionsToFS(chart) {\n      switch (chart) {\n        case 'TEP':\n          this.fsChartDetails = {\n            topChart: 'TEP',\n            title: 'Endpoints'\n          };\n          let data = this.optnsMngr.getNetworkRealTimeGraphData(TopEP);\n          this.makeTEPEvents(data);\n          break;\n        case 'TAPP':\n          this.fsChartDetails = {\n            topChart: 'TAPP',\n            title: 'Applications'\n          };\n          let dataTapp = this.optnsMngr.getNetworkRealTimeGraphData(TopApp);\n          this.makeTAPPEvents(dataTapp);\n          break;\n        case 'TLOC':\n          this.fsChartDetails = {\n            topChart: 'TLOC',\n            title: 'Locations'\n          };\n          let dataTloc = this.optnsMngr.getNetworkRealTimeGraphData(TopLoc);\n          this.makeTLOCEvents(dataTloc);\n          break;\n        default:\n      }\n    }\n    closeFullscreen() {\n      this.selectedTopLength = 5;\n      this.fsView = false;\n      if (this.fsName === 'TEP') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopEP);\n        this.makeTEPEvents(data);\n      } else if (this.fsName === 'TAPP') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopApp);\n        this.makeTAPPEvents(data);\n      } else if (this.fsName === 'TLOC') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopLoc);\n        this.makeTLOCEvents(data);\n      }\n      this.fsName = '';\n      this.fsChartDetails = {};\n    }\n    changeTopLength() {\n      if (this.fsName === 'TEP') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopEP);\n        this.makeTEPEvents(data);\n      } else if (this.fsName === 'TAPP') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopApp);\n        this.makeTAPPEvents(data);\n      } else if (this.fsName === 'TLOC') {\n        let data = this.optnsMngr.getNetworkRealTimeGraphData(TopLoc);\n        // this.makeTLOCEvents(data);\n      }\n    }\n\n    getFSPointWidth(len) {\n      let width = 14;\n      switch (len) {\n        case 5:\n          width = 60;\n          break;\n        case 10:\n          width = 30;\n          break;\n        case 20:\n          width = 15;\n          break;\n        case 30:\n          width = 10;\n          break;\n        default:\n      }\n      return width;\n    }\n    ngOnDestroy() {\n      // if (this.source) {\n      //   this.source.close();\n      // }\n      // this.source = null;\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      if (this.cacheDataSubscription) {\n        this.cacheDataSubscription.unsubscribe();\n      }\n      if (this.tASource) {\n        this.tASource.close();\n      }\n      if (this.tESource) {\n        this.tESource.close();\n      }\n      if (this.tLsource) {\n        this.tLsource.close();\n      }\n      sessionStorage.removeItem('cco-endpoint');\n      if (this.interval) {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n      let data = {};\n      this.websocketservice.rtData$.next(data);\n      if (this.reConnectSubscription) {\n        this.reConnectSubscription.unsubscribe();\n      }\n      if (this.connectionErSubscription) {\n        this.connectionErSubscription.unsubscribe();\n      }\n      if (this.aggregateSubscription) {\n        this.aggregateSubscription.unsubscribe();\n      }\n      if (this.statusSubs) {\n        this.statusSubs.unsubscribe();\n      }\n      if (this.recordSubs) {\n        this.recordSubs.unsubscribe();\n      }\n      if (this.recordErrorSubscription) {\n        this.recordErrorSubscription.unsubscribe();\n      }\n      if (this.recordWsSubscription) {\n        this.recordWsSubscription.unsubscribe();\n      }\n      if (this.connectSubs) {\n        this.connectSubs.unsubscribe();\n      }\n      if (this.delaySubs) {\n        this.delaySubs.unsubscribe();\n      }\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n    }\n    // gotoHistory(): void {\n    //   this.router.navigate([]);\n    // }\n    getRtData() {\n      if (this.rtSubscription) {\n        this.rtSubscription.unsubscribe();\n      }\n      if (this.ratePacketStreamSubscription) {\n        this.ratePacketStreamSubscription.unsubscribe();\n      }\n      if (this.cacheDataSubscription) {\n        this.cacheDataSubscription.unsubscribe();\n      }\n      this.cacheDataSubscription = this.websocketservice.cacheData$.subscribe(data => {\n        // console.log(\"cache data subscription\", data)\n        this.cachePacketData = data['packet'];\n        this.cacheRateData = data['rate'];\n        this.loading = false;\n        this.connectionError = false;\n      });\n      this.ratePacketStreamSubscription = this.websocketservice.ratePacketStreamData$.subscribe(data => {\n        console.log(\"subscription data\", data);\n        this.showRealTime = true;\n        if (data.monitorType == 'EP' && data.monitorId == this.endPoinId) {\n          this.lastSubscriptionTime = new Date().getTime();\n          this.loading = false;\n          this.connectionError = false;\n          if (data.graphType === 'TRF') {\n            this.data = data;\n            this.showRealTime = true;\n          } else {\n            this.showBars = false;\n          }\n        }\n        // this.loading = false;\n      });\n\n      this.rtSubscription = this.websocketservice.rtData$.subscribe(data => {\n        if (data.monitorType == 'EP') {\n          this.lastRtSubscriptionTime = new Date().getTime();\n          this.loading = false;\n          if (data.graphType === 'TAPP') {\n            this.topAppsUpChartoptions = null;\n            //this.tAData = data;\n            // this.optnsMngr.setTopApp(data);\n            this.optnsMngr.setNetworkRealTimeGraphData(TopApp, data);\n            this.makeTAPPEvents(data);\n          }\n          if (data.graphType === 'TEP') {\n            this.topEndPointUpChartoptions = null;\n            //this.tEPData = data;\n            //this.optnsMngr.setTopEP(data);\n            this.optnsMngr.setNetworkRealTimeGraphData(TopEP, data);\n            this.makeTEPEvents(data);\n          }\n          if (data.graphType === 'TLOC') {\n            this.topLocationsUpChartoptions = null;\n            let findUpIndex = data.upData.findIndex(x => x.name === \"Unknown\" && x.id === \"00000000-0000-0000-0000-000000000000\");\n            if (findUpIndex > -1) {\n              data.upData.splice(findUpIndex, 1);\n            }\n            let findDownIndex = data.downData.findIndex(x => x.name === \"Unknown\" && x.id === \"00000000-0000-0000-0000-000000000000\");\n            if (findDownIndex > -1) {\n              data.downData.splice(findDownIndex, 1);\n            }\n            this.optnsMngr.setNetworkRealTimeGraphData(TopLoc, data);\n            this.makeTLOCEvents(data);\n          }\n        }\n        // this.loading = false;\n      });\n    }\n\n    makeTEPEvents(data) {\n      var _a, _b;\n      this.endpointSensitiveData = JSON.parse(JSON.stringify(data));\n      if (sessionStorage.getItem(\"showSensitiveInfo\") != \"true\") {\n        (_a = data.upData) === null || _a === void 0 ? void 0 : _a.forEach(x => x.name = maskString(x.name));\n        (_b = data.downData) === null || _b === void 0 ? void 0 : _b.forEach(x => x.name = maskString(x.name));\n      }\n      this.tEPrcntData = {\n        downPercentage: data.downPercentage ? data.downPercentage : 0,\n        upPercentage: data.upPercentage ? data.upPercentage : 0\n      };\n      let len = this.fsView && this.fsName === 'TEP' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.tEPrcntData.upPercentage = this.websocketservice.calculatePercentage(data.upTotal, data.upData, len);\n      this.tEPrcntData.downPercentage = this.websocketservice.calculatePercentage(data.downTotal, data.downData, len);\n      this.settepUpDataObj(data.upData);\n      this.settepDownDataObj(data.downData);\n      this.tEPData[\"upData\"] = data.upData;\n      this.tEPData[\"downData\"] = data.downData;\n      let topEndPointUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topEndPointDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topEndPointUpChartoptions.chart.height = this.fsView && this.fsName === 'TEP' ? 560 : 160;\n      topEndPointUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TEP' ? this.getFSPointWidth(upLen) : 14;\n      topEndPointDownChartoptions.chart.height = this.fsView && this.fsName === 'TEP' ? 560 : 160;\n      topEndPointDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TEP' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      let url = '/cco/traffic/endpoints/realtime';\n      if (!this.isCcoTraffic) {\n        url = this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/traffic/endpoint/realtime' : '/organization-admin/flowAnalyze/traffic/endpoint/realtime';\n      }\n      topEndPointUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (e) {\n            that.navigationByUrl(this.axis.categories[this.pos][1]);\n          },\n          contextmenu: function (e) {\n            e.preventDefault();\n            let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n            window.open(newTabUrl, '_blank');\n          }\n        }\n      };\n      topEndPointUpChartoptions['plotOptions'].series.point.events = {\n        click: function (event) {\n          that.navigationByUrl(this.category[1]);\n        }\n      };\n      topEndPointDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (e) {\n            that.navigationByUrl(this.axis.categories[this.pos][1]);\n          },\n          contextmenu: function (e) {\n            e.preventDefault();\n            let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n            window.open(newTabUrl, '_blank');\n          }\n        }\n      };\n      topEndPointDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          that.navigationByUrl(this.category[1]);\n        }\n      };\n      topEndPointDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      topEndPointUpChartoptions = Object.assign({}, topEndPointUpChartoptions);\n      topEndPointDownChartoptions = Object.assign({}, topEndPointDownChartoptions);\n      this.topEndPointUpChartoptions = topEndPointUpChartoptions;\n      this.topEndPointDownChartoptions = topEndPointDownChartoptions;\n    }\n    makeTLOCEvents(data) {\n      this.tLPrcntData = {\n        downPercentage: data.downPercentage ? data.downPercentage : 0,\n        upPercentage: data.upPercentage ? data.upPercentage : 0\n      };\n      let len = this.fsView && this.fsName === 'TLOC' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.tLPrcntData.upPercentage = this.websocketservice.calculatePercentage(data.upTotal, data.upData, len);\n      this.tLPrcntData.downPercentage = this.websocketservice.calculatePercentage(data.downTotal, data.downData, len);\n      this.settlocUpDataObj(data.upData);\n      this.settlocDownDataObj(data.downData);\n      this.tLData[\"upData\"] = data.upData;\n      this.tLData[\"downData\"] = data.downData;\n      let topLocationsUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topLocationsDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topLocationsUpChartoptions.chart.height = this.fsView && this.fsName === 'TLOC' ? 560 : 160;\n      delete topLocationsUpChartoptions.chart.width;\n      topLocationsUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TLOC' ? this.getFSPointWidth(upLen) : 14;\n      topLocationsDownChartoptions.chart.height = this.fsView && this.fsName === 'TLOC' ? 560 : 160;\n      delete topLocationsDownChartoptions.chart.width;\n      topLocationsDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TLOC' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      let url = '/cco/traffic/locations/realtime';\n      if (!this.isCcoTraffic) {\n        url = this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/traffic/location/realtime' : '/organization-admin/flowAnalyze/traffic/location/realtime';\n      }\n      topLocationsUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (event) {\n            if (that.hasLocationAccess) {\n              that.router.navigate([url], {\n                queryParams: {\n                  id: this.axis.categories[this.pos][1]\n                }\n              });\n            }\n          },\n          contextmenu: function (event) {\n            if (that.hasLocationAccess) {\n              event.preventDefault();\n              // that.router.navigate(['/cco/traffic/locations/realtime'], { queryParams: { id: that.tlocUpDataObj[this.value] } })\n              let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n              window.open(newTabUrl, '_blank');\n            }\n          }\n        }\n      };\n      topLocationsUpChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          if (that.hasLocationAccess) {\n            that.router.navigate([url], {\n              queryParams: {\n                id: this.category[1]\n              }\n            });\n          }\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tlocUpDataObj[this.value], 'Locations');\n        }\n      };\n\n      topLocationsDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (event) {\n            if (that.hasLocationAccess) {\n              that.router.navigate([url], {\n                queryParams: {\n                  id: this.axis.categories[this.pos][1]\n                }\n              });\n            }\n          },\n          contextmenu: function (event) {\n            if (that.hasLocationAccess) {\n              event.preventDefault();\n              // that.router.navigate(['/cco/traffic/locations/realtime'], { queryParams: { id: that.tlocDownDataObj[this.value] } })\n              let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n              window.open(newTabUrl, '_blank');\n            }\n          }\n        }\n      };\n      topLocationsDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          if (that.hasLocationAccess) {\n            that.router.navigate([url], {\n              queryParams: {\n                id: this.category[1]\n              }\n            });\n          }\n          //that.realTimeCommonFunctionService.nagigationByUrl(this.category, that.tlocDownDataObj[this.value], 'Locations');\n        }\n      };\n\n      topLocationsDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      topLocationsUpChartoptions = Object.assign({}, topLocationsUpChartoptions);\n      topLocationsDownChartoptions = Object.assign({}, topLocationsDownChartoptions);\n      this.topLocationsUpChartoptions = topLocationsUpChartoptions;\n      this.topLocationsDownChartoptions = topLocationsDownChartoptions;\n    }\n    makeTAPPEvents(data) {\n      //let data: any = this.tAData;\n      this.tAPrcntData = {\n        downPercentage: data.downPercentage ? data.downPercentage : 0,\n        upPercentage: data.upPercentage ? data.upPercentage : 0\n      };\n      let len = this.fsView && this.fsName === 'TAPP' ? this.selectedTopLength : 5;\n      let upLen = data['upData'].length;\n      let downLen = data['downData'].length;\n      if (upLen >= len) {\n        upLen = len;\n      }\n      if (downLen >= len) {\n        downLen = len;\n      }\n      this.tAPrcntData.upPercentage = this.websocketservice.calculatePercentage(data.upTotal, data.upData, len);\n      this.tAPrcntData.downPercentage = this.websocketservice.calculatePercentage(data.downTotal, data.downData, len);\n      this.settapUpDataObj(data.upData);\n      this.settapDownDataObj(data.downData);\n      this.tAData[\"upData\"] = data.upData;\n      this.tAData[\"downData\"] = data.downData;\n      let topAppsUpChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'upData', len, this.fsView);\n      let topAppsDownChartoptions = this.optnsMngr.makeOptionsForRTBC(data, 'bar', 'downData', len, this.fsView);\n      topAppsUpChartoptions.chart.height = this.fsView && this.fsName === 'TAPP' ? 560 : 160;\n      delete topAppsUpChartoptions.chart.width;\n      topAppsUpChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TAPP' ? this.getFSPointWidth(upLen) : 14;\n      topAppsDownChartoptions.chart.height = this.fsView && this.fsName === 'TAPP' ? 560 : 160;\n      delete topAppsDownChartoptions.chart.width;\n      topAppsDownChartoptions.plotOptions.series.pointWidth = this.fsView && this.fsName === 'TAPP' ? this.getFSPointWidth(downLen) : 14;\n      let that = this;\n      let url = '/cco/traffic/applications/realtime';\n      if (!this.isCcoTraffic) {\n        url = this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/traffic/application/realtime' : '/organization-admin/flowAnalyze/traffic/application/realtime';\n      }\n      topAppsUpChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (event) {\n            if (that.hasApplicationAccess) {\n              that.router.navigate([url], {\n                queryParams: {\n                  id: this.axis.categories[this.pos][1]\n                }\n              });\n            }\n          },\n          contextmenu: function (event) {\n            if (that.hasApplicationAccess) {\n              event.preventDefault();\n              // that.router.navigate(['/cco/traffic/applications/realtime'], { queryParams: { id: that.tapUpDataObj[this.value] } });\n              let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n              window.open(newTabUrl, '_blank');\n            }\n          }\n        }\n      };\n      topAppsUpChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          if (that.hasApplicationAccess) {\n            that.router.navigate([url], {\n              queryParams: {\n                id: this.category[1]\n              }\n            });\n          }\n        }\n      };\n      topAppsDownChartoptions.xAxis.labels = {\n        useHTML: true,\n        style: {\n          color: '#007bff',\n          cursor: 'pointer',\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        formatter: function () {\n          return `<span  class=\"text-primary axis_label\" title=\"${this.value[0]}\" style=\"cursor:pointer\">${this.value[0]}</span>`;\n          // return `${this.value}`\n        },\n\n        events: {\n          click: function (event) {\n            if (that.hasApplicationAccess) {\n              that.router.navigate([url], {\n                queryParams: {\n                  id: this.axis.categories[this.pos][1]\n                }\n              });\n            }\n          },\n          contextmenu: function (event) {\n            if (that.hasApplicationAccess) {\n              event.preventDefault();\n              // that.router.navigate(['/cco/traffic/applications/realtime'], { queryParams: { id: that.tapDownDataObj[this.value] } });\n              let newTabUrl = window.location.origin + url + '?id=' + this.axis.categories[this.pos][1];\n              window.open(newTabUrl, '_blank');\n            }\n          }\n        }\n      };\n      topAppsDownChartoptions.plotOptions.series.point.events = {\n        click: function (event) {\n          if (that.hasApplicationAccess) {\n            that.router.navigate([url], {\n              queryParams: {\n                id: this.category[1]\n              }\n            });\n          }\n        }\n      };\n      topAppsUpChartoptions = Object.assign({}, topAppsUpChartoptions);\n      topAppsDownChartoptions = Object.assign({}, topAppsDownChartoptions);\n      topAppsDownChartoptions.plotOptions.series.color = '#5ACFEA';\n      this.topAppsUpChartoptions = topAppsUpChartoptions;\n      this.topAppsDownChartoptions = topAppsDownChartoptions;\n    }\n    settepUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tepUpDataObj = obj;\n    }\n    gettepUpDataObj() {\n      return this.tepUpDataObj;\n    }\n    settepDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tepDownDataObj = obj;\n    }\n    gettepDownDataObj() {\n      return this.tepDownDataObj;\n    }\n    settapUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tapUpDataObj = obj;\n    }\n    gettapUpDataObj() {\n      return this.tapUpDataObj;\n    }\n    settapDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tapDownDataObj = obj;\n    }\n    gettapDownDataObj() {\n      return this.tapDownDataObj;\n    }\n    settlocDownDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tlocDownDataObj = obj;\n    }\n    gettlocDownDataObj() {\n      return this.tlocDownDataObj;\n    }\n    settlocUpDataObj(data) {\n      let obj = {};\n      data.forEach(element => {\n        obj[element.name] = element.id;\n      });\n      this.tlocUpDataObj = obj;\n    }\n    gettlocUpDataObj() {\n      return this.tlocUpDataObj;\n    }\n    goToRecordingList() {\n      // let newTabUrl = window.location.origin + '/cco/record/list';\n      // window.open(newTabUrl, '_blank');\n      let redirectUrl = '/cco/traffic/endpoints/realtime?id=' + this.endPoinId;\n      if (!this.isCcoTraffic) {\n        redirectUrl = this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/traffic/endpoint/realtime?id=' + this.endPoinId : '/organization-admin/flowAnalyze/traffic/endpoint/realtime?id=' + this.endPoinId;\n      }\n      localStorage.setItem('cco_record_list_history', redirectUrl);\n      let url = this.isCcoTraffic ? '/cco/record/list' : this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/recording/list' : '/organization-admin/flowAnalyze/recording/list';\n      this.router.navigate([url]);\n    }\n    close() {\n      this.btnDisabled = false;\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n    }\n    createRecordingModal() {\n      let pipe = new DatePipe('en-US');\n      this.error = false;\n      this.errorInfo = \"\";\n      let date = new Date();\n      this.date = new Date(date.getTime() + 1 * 60 * 1000);\n      this.isNow = this.recordingStatus ? false : true;\n      if (!this.isNow) {\n        if (this.lastRecordLength && this.lastRecordStartTime) {\n          let time = new Date().getTime();\n          this.timeDiff = this.lastRecordLength - (time - this.lastRecordStartTime);\n        }\n        this.date = new Date(date.getTime() + (this.timeDiff > 0 ? this.timeDiff : 1 * 60 * 60 * 1000));\n        this.minDate = new Date(date.getTime() + (this.timeDiff > 0 ? this.timeDiff : 1 * 60 * 60 * 1000));\n      }\n      this.recordingName = \"Endpoint_\" + pipe.transform(new Date(), \"yyyy-MM-dd\") + \"_\" + new Date().toTimeString().substr(0, 8);\n      // this.recordingName = this.websocketservice.endPointName + \"_\" + (pipe.transform(new Date(), \"yyyy-MM-dd\")) + \"_\" + new Date().toTimeString().substr(0, 8)\n      this.selectedDuration = \"1\";\n      this.description = \"\";\n      this.modalRef = this.dialogService.open(this.recordingModal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'custom-modal',\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    createFaviouteModal() {\n      this.modalRef = this.dialogService.open(this.faviouteModal, {\n        size: 'lg',\n        centered: true,\n        windowClass: 'custom-modal',\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    changeName() {\n      // console.log(\"recordingName\", this.recordingName);\n    }\n    createRecording() {\n      if (this.recordErrorSubscription) {\n        this.recordErrorSubscription.unsubscribe();\n      }\n      if (this.recordWsSubscription) {\n        this.recordWsSubscription.unsubscribe();\n      }\n      let userId = localStorage.getItem(\"calix.userId\");\n      let startTime = new Date().getTime();\n      let length = parseInt(this.selectedDuration) * 30 * 60 * 1000;\n      if (!this.isNow) {\n        startTime = new Date(this.date).getTime();\n        if (startTime <= new Date().getTime()) {\n          this.error = true;\n          this.errorInfo = \"Recording time should not be lesser than current time\";\n          return;\n        }\n      }\n      this.error = false;\n      this.errorInfo = \"\";\n      if (this.recordingName === \"\") {\n        this.isvalid = false;\n        return;\n      } else {\n        this.isvalid = true;\n      }\n      if (this.recordingName.length > 72) {\n        this.error = true;\n        this.errorInfo = \"Name should not have more than 72 characters\";\n        return;\n      } else if (this.description.length > 255) {\n        this.error = true;\n        this.errorInfo = \"Description should not have more than 255 characters \";\n        return;\n      }\n      let params = {\n        \"orgId\": this.orgId,\n        \"tenentid\": \"0\",\n        \"monitorType\": \"EP\",\n        \"graphType\": \"TRF,TAPP,TEP\",\n        \"startTime\": startTime,\n        \"name\": this.recordingName,\n        \"description\": this.description,\n        \"length\": length,\n        \"status\": \"New\",\n        \"userId\": userId,\n        \"recordingType\": \"traffic\",\n        \"trigger\": \"Manual\",\n        \"monitorId\": this.endPoinId\n      };\n      this.btnDisabled = true;\n      // console.log(\"params\", params);\n      this.send(\"RECORDING\", params);\n      this.websocketservice.listenRecord(\"RECORDING\");\n      this.websocketservice.listenRecord(\"error\");\n      this.recordWsSubscription = this.websocketservice.recordResponseData$.subscribe(res => {\n        this.btnDisabled = false;\n        if (res.includes('Successfully')) {\n          this.close();\n        }\n      });\n      this.recordErrorSubscription = this.websocketservice.recordErrorResponseData$.subscribe(res => {\n        this.btnDisabled = false;\n        this.error = true;\n        this.errorInfo = res.errorMessage;\n      });\n      setTimeout(() => {\n        this.getRecordingStatus();\n      }, 1000);\n    }\n    closeAlert() {\n      this.error = false;\n    }\n    createFavioute() {}\n    changeNowAndLater() {\n      this.showDate = !this.showDate;\n    }\n    checkLastSubscriptiontime() {\n      this.interval = setInterval(() => {\n        let diff = new Date().getTime() - this.lastSubscriptionTime;\n        let rtDiff = new Date().getTime() - this.lastRtSubscriptionTime;\n        if (diff >= 45000) {\n          this.data.maxRate = [0, 0];\n          this.data.packet = [0, 0];\n        }\n        if (rtDiff >= 45000) {\n          let locData = this.optnsMngr.getNetworkRealTimeGraphData(TopLoc);\n          locData.upData = [];\n          locData.downData = [];\n          this.makeTLOCEvents(locData);\n          this.optnsMngr.setNetworkRealTimeGraphData(TopLoc, locData);\n          let appData = this.optnsMngr.getNetworkRealTimeGraphData(TopApp);\n          appData.upData = [];\n          appData.downData = [];\n          this.makeTAPPEvents(appData);\n          this.optnsMngr.setNetworkRealTimeGraphData(TopApp, appData);\n        }\n      }, 15000);\n    }\n    getRecordingStatus() {\n      let params = {\n        monitorType: \"EP\",\n        monitorId: this.endPoinId\n      };\n      let userId = localStorage.getItem(\"calix.userId\");\n      let url = `${environment.API_BASE_URL}record/job/status/Recording?orgId=${this.orgId}&tenentid=0&userId=${userId}`;\n      this.statusSubs = this.http.post(url, params).subscribe(res => {\n        if (res) {\n          res.forEach(element => {\n            if (element.monitorType === \"EP\" && element.status === \"Recording\") {\n              this.getRecordDetails(element.id);\n              this.recordingStatus = true;\n              this.isNow = false;\n              this.showDate = false;\n            } else {\n              this.recordingStatus = false;\n              this.isNow = true;\n              this.showDate = true;\n            }\n          });\n        }\n      }, err => {});\n    }\n    webSocketConnectionError() {\n      if (this.connectionErSubscription) {\n        this.connectionErSubscription.unsubscribe();\n      }\n      if (this.wsNoResponseSubscription) {\n        this.wsNoResponseSubscription.unsubscribe();\n      }\n      this.connectionErSubscription = this.websocketservice.wsConnectionError$.subscribe(res => {\n        if (res && res === true) {\n          this.loading = false;\n          this.connectionError = true;\n          this.connectionErrorInfo = \"Web Socket connection failed\";\n          this.close();\n        }\n      });\n      this.wsNoResponseSubscription = this.websocketservice.wsNoResponse$.subscribe(res => {\n        if (res && res.isError === true && res.type === \"error_traffic_EP\") {\n          this.loading = false;\n          this.connectionError = true;\n          this.connectionErrorInfo = \"No Data Available\";\n        }\n      });\n    }\n    getRecordDetails(id) {\n      this.recordSubs = this.http.get(`${environment.API_BASE_URL}record/job/list/${id}?orgId=${this.orgId}&tenentid=0`).subscribe(data => {\n        if (data) {\n          this.lastRecordLength = data.length;\n          this.lastRecordStartTime = data.startTime;\n        }\n      }, err => {\n        this.timeDiff = 1 * 60 * 60 * 1000;\n      });\n    }\n    navigationByUrl(id) {\n      if (id) {\n        // this.sso.setEPRredirectFrom(window.location.pathname + '?id=' + this.endPoinId);\n        let path = window.location.pathname + '?id=' + this.endPoinId;\n        let redirectionPath = this.sso.getEndpointRedirectTo();\n        redirectionPath.push(path);\n        this.sso.setEndpointRedirectTo(redirectionPath);\n        let url = '/cco/traffic/endpoints/realtime';\n        if (!this.isCcoTraffic) {\n          url = this.router.url.indexOf(`/${environment.SYS_ADMIN_ROUTE}/`) > -1 ? '/systemAdministration/flowAnalyze/traffic/endpoint/realtime' : '/organization-admin/flowAnalyze/traffic/endpoint/realtime';\n        }\n        this.router.navigate([url], {\n          queryParams: {\n            id: id\n          }\n        });\n      }\n    }\n    reConnectWebSocket() {\n      if (this.reConnectSubscription) {\n        this.reConnectSubscription.unsubscribe();\n      }\n      this.reConnectSubscription = this.websocketservice.connectWS$.subscribe(res => {\n        if (res && this.websocketservice.WebSocketServer.hasDisconnectedOnce) {\n          let filterData = this.websocketservice.getCurrentMonitorInfo('EP');\n          this.websocketservice.listen('EP');\n          this.websocketservice.listen('REPLAY');\n          if (filterData && filterData['monitorId'] && filterData['monitorId'] === this.endPoinId) {\n            this.send(\"EP\", {\n              \"orgId\": this.orgId,\n              \"monitorType\": \"EP\",\n              \"networkId\": this.orgid_tenantid,\n              \"monitorId\": this.endPoinId,\n              \"graphType\": \"TRF,TAPP,TEP\",\n              \"startTime\": filterData['startTime']\n            });\n            let params = {\n              \"orgId\": filterData.orgId,\n              \"monitorType\": \"EP\",\n              \"networkId\": filterData.networkId,\n              \"monitorId\": filterData['monitorId'],\n              \"graphType\": \"TRF\",\n              \"replay\": \"true\",\n              \"startTime\": filterData['startTime'],\n              \"endTime\": new Date().getTime()\n            };\n            this.send(\"EP\", params);\n            return;\n          }\n          if (!filterData['monitorId'] || filterData && filterData['monitorId'] !== this.endPoinId) {\n            this.send(\"EP\", {\n              \"orgId\": this.orgId,\n              \"monitorType\": \"EP\",\n              \"networkId\": this.orgid_tenantid,\n              \"monitorId\": this.endPoinId,\n              \"graphType\": \"TRF,TAPP,TEP\"\n            });\n          }\n          this.getRtData();\n        }\n      });\n    }\n    getAggregateEndpointTraffic() {\n      this.aggregateSubscription = this.websocketservice.isAggregateMember$.subscribe(data => {\n        if (data.id) {\n          this.endPoinId = data.id;\n          setTimeout(() => {\n            this.send('remove', 'EP');\n            this.send(\"EP\", {\n              \"orgId\": this.orgId,\n              \"monitorType\": \"EP\",\n              \"networkId\": this.orgid_tenantid,\n              \"monitorId\": data.id,\n              \"graphType\": \"TRF,TAPP,TEP\"\n            });\n            this.websocketservice.isAggregateMember$.next({\n              id: null\n            });\n          }, 1000);\n        }\n      });\n    }\n    removeUnwantedSpace(input, value) {\n      this[input] = this.CommonFunctionsService.trimSpaceFromNonObjectInputs(value);\n    }\n  }\n  RealtimeComponent.ɵfac = function RealtimeComponent_Factory(t) {\n    return new (t || RealtimeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.SsoAuthService), i0.ɵɵdirectiveInject(i4.TrafficeRealtimeOptionsManagerService), i0.ɵɵdirectiveInject(i5.WebsocketService), i0.ɵɵdirectiveInject(i6.HttpClient), i0.ɵɵdirectiveInject(i7.NgbModal), i0.ɵɵdirectiveInject(i8.Title), i0.ɵɵdirectiveInject(i9.CommonFunctionsService));\n  };\n  RealtimeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RealtimeComponent,\n    selectors: [[\"app-realtime\"]],\n    viewQuery: function RealtimeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordingModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.faviouteModal = _t.first);\n      }\n    },\n    decls: 33,\n    vars: 14,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\", \"pr-0\"], [1, \"d-flex\", \"justify-content-end\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"row\", \"my-2\"], [1, \"col-md-9\", \"text-left\"], [\"class\", \"d-inline-flex mx-2 primary pointer\", \"id\", \"create-record\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModalCenter-video\", 3, \"title\", \"click\", 4, \"ngIf\"], [\"id\", \"record-list\", \"placement\", \"bottom\", 1, \"d-inline-flex\", \"primary\", \"pointer\", 3, \"title\", \"click\"], [1, \"icon-round\"], [\"src\", \"assets/img/ic_history_white.svg\"], [\"id\", \"record-status\", \"class\", \"indcit\", 4, \"ngIf\"], [1, \"col-md-3\", \"text-right\"], [1, \"row\", 3, \"hidden\"], [1, \"col-md-12\", \"col-lg-6\", \"col-xl-6\", \"col-sm-12\"], [\"id\", \"traffic-endpoint-realtime-rate\", \"class\", \"card m-10\", 4, \"ngIf\"], [\"id\", \"traffic-endpoint-realtime-packet\", \"class\", \"card m-10\", 4, \"ngIf\"], [\"class\", \"col-md-12 col-lg-6 col-xl-6 col-sm-12\", 4, \"ngIf\"], [1, \"bg-light\", \"h-auto\", 3, \"hidden\"], [1, \"col-md-12\", \"col-12\"], [\"class\", \"card h-auto\", 4, \"ngIf\"], [\"class\", \"col-md-12 custom-modal\"], [\"faviouteModal\", \"\"], [\"recordingModal\", \"\"], [1, \"loader\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [\"id\", \"create-record\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModalCenter-video\", 1, \"d-inline-flex\", \"mx-2\", \"primary\", \"pointer\", 3, \"title\", \"click\"], [\"src\", \"assets/img/ic_record_white.svg\"], [\"id\", \"record-status\", 1, \"indcit\"], [\"src\", \"assets/img/ic_point.svg\"], [\"id\", \"traffic-endpoint-realtime-rate\", 1, \"card\", \"m-10\"], [\"id\", \"ngx-stream-path-chart-rate\", 1, \"\"], [3, \"chartName\", \"yAxixTitle\", \"data\", \"time\", \"windowLen\", \"history\"], [\"id\", \"traffic-endpoint-realtime-packet\", 1, \"card\", \"m-10\"], [\"id\", \"ngx-stream-path-chart-packet\", 1, \"\"], [\"id\", \"traffic-endpoit-realtime-tep\", 1, \"card\", \"m-10\", \"h-auto\"], [1, \"board_head\"], [1, \"orange-text-wrapper\", \"d-inline-block\"], [1, \"orange-text\"], [1, \"ml20\"], [\"id\", \"open-fullscreen-top-endpoints\", 1, \"top5-fullscreen\", \"pointer\", \"btn-round\", \"btn-small-24\", \"btn-grey\", \"btn-expand\", 3, \"title\", \"click\"], [1, \"traffic-heading-subtitle\"], [1, \"card-body\", \"row\", \"board_body\", \"no-gutters\", \"h-210\"], [\"id\", \"top-endpoints-up-chart-div\", 1, \"col-md-6\", \"col-12\"], [1, \"chart-info\"], [1, \"\"], [\"id\", \"top-endpoints-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-12\"], [\"id\", \"top-endpoints-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"traffic-endpoit-realtime-app\", 1, \"card\", \"m-10\", \"h-auto\"], [\"id\", \"open-fullscreen-top-apps\", 1, \"top5-fullscreen\", \"pointer\", \"btn-round\", \"btn-small-24\", \"btn-grey\", \"btn-expand\", 3, \"title\", \"click\"], [\"id\", \"top-apps-up-chart-div\", 1, \"col-md-6\", \"col-12\"], [\"id\", \"top-apps-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-apps-down-chart-div\", 1, \"col-md-6\", \"col-12\"], [\"id\", \"top-apps-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-endpoints-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-apps-up-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-apps-down-chart\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [1, \"card\", \"h-auto\"], [\"id\", \"usage_criteria\", \"bindLabel\", \"name\", \"bindValue\", \"value\", \"placeholder\", \"\", 1, \"realtime-custom-select\", 3, \"items\", \"multiple\", \"ngModel\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\", \"change\"], [\"id\", \"close-fullscreen-top-endpoints\", 1, \"top5-fullscreen\", \"pointer\", \"expand-icon\", 3, \"title\", \"click\"], [1, \"card-body\", \"row\", \"board_body\"], [\"id\", \"top-endpoints-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [\"id\", \"top-endpoints-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"top-endpoints-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", \"updateFlag\"], [\"id\", \"close-fullscreen-top-apps\", 1, \"top5-fullscreen\", \"pointer\", \"expand-icon\", 3, \"title\", \"click\"], [1, \"col-md-6\", \"col-6\"], [\"id\", \"top-apps-up-chart-fullscreen\", 3, \"chartOptions\", \"type\", 4, \"ngIf\"], [\"id\", \"top-apps-down-chart-fullscreen\", 3, \"chartOptions\", \"type\", 4, \"ngIf\"], [\"id\", \"top-apps-up-chart-fullscreen\", 3, \"chartOptions\", \"type\"], [\"id\", \"top-apps-down-chart-fullscreen\", 3, \"chartOptions\", \"type\"], [1, \"top5-fullscreen\", \"pointer\", \"expand-icon\", 3, \"title\", \"click\"], [1, \"card-body\", \"row\", \"board_body\", \"mt20\"], [3, \"chartOptions\", \"type\", \"updateFlag\", 4, \"ngIf\"], [3, \"chartOptions\", \"type\", \"updateFlag\"], [1, \"modal-header\", \"d-block\"], [\"id\", \"showInfoModal\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"add-device-model\"], [1, \"form-group\", \"ccl-form\", \"text-left\"], [\"for\", \"exampleFormControlInput1\"], [\"type\", \"name\", \"id\", \"exampleFormControlInput1\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-12\", \"pl-0\", \"text-left\", \"mt-3\"], [\"type\", \"submit\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-default\", \"transparant\", \"px-3\", \"m-2\", 3, \"click\"], [1, \"row\", \"record-pop\"], [\"class\", \"w-100 alert alert-danger  fade show my-3\", 4, \"ngIf\"], [1, \"form-group\", \"ccl-form\"], [\"for\", \"name\"], [1, \"error\"], [\"type\", \"name\", \"id\", \"recording_Name\", \"autocomplete\", \"off\", \"trimSpace\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\", \"change\", \"blur\"], [4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"trimSpace\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\", \"blur\"], [1, \"mr-2\"], [1, \"form-check\", \"form-check-inline\"], [\"for\", \"inlineRadio1\", 1, \"form-check-label\", \"mr-2\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"inlineRadio1\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"checked\", \"disabled\", \"ngModelChange\", \"change\"], [\"for\", \"inlineRadio2\", 1, \"form-check-label\", \"mr-2\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"inlineRadio2\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\", \"change\"], [\"id\", \"start_date\", \"appendTo\", \"body\", \"dateFormat\", \"mm-dd-yy\", 1, \"ccl-form\", 3, \"inputStyle\", \"autoZIndex\", \"placeholder\", \"ngModel\", \"showIcon\", \"showTime\", \"hourFormat\", \"ngModelOptions\", \"disabled\", \"minDate\", \"ngModelChange\"], [\"class\", \"indcit mb-2\", 4, \"ngIf\"], [1, \"form-check\", \"pl-0\", \"mt-2\"], [\"for\", \"inlineRadio23\", 1, \"form-check-label\", \"mr-2\"], [\"bindLabel\", \"name\", \"bindValue\", \"value\", 3, \"items\", \"ngModel\", \"ngModelOptions\", \"clearable\", \"searchable\", \"ngModelChange\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"type\", \"submit\", 1, \"btn-default\", \"primary\", \"px-3\", 3, \"disabled\", \"click\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"errorMessage\"], [1, \"indcit\", \"mb-2\"], [\"src\", \"../../../../../assets/img/ic_point.svg\"]],\n    template: function RealtimeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, RealtimeComponent_div_5_Template, 5, 1, \"div\", 4);\n        i0.ɵɵelementStart(6, \"section\");\n        i0.ɵɵelementStart(7, \"div\", 0);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵtemplate(11, RealtimeComponent_div_11_Template, 3, 1, \"div\", 7);\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵlistener(\"click\", function RealtimeComponent_Template_div_click_12_listener() {\n          return ctx.goToRecordingList();\n        });\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, RealtimeComponent_label_15_Template, 4, 1, \"label\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵtemplate(20, RealtimeComponent_div_20_Template, 3, 6, \"div\", 15);\n        i0.ɵɵtemplate(21, RealtimeComponent_div_21_Template, 3, 6, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, RealtimeComponent_div_22_Template, 57, 26, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 18);\n        i0.ɵɵelementStart(24, \"div\", 1);\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵtemplate(26, RealtimeComponent_div_26_Template, 27, 19, \"div\", 20);\n        i0.ɵɵtemplate(27, RealtimeComponent_div_27_Template, 27, 19, \"div\", 20);\n        i0.ɵɵtemplate(28, RealtimeComponent_div_28_Template, 24, 18, \"div\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(29, RealtimeComponent_ng_template_29_Template, 16, 5, \"ng-template\", 21, 22, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(31, RealtimeComponent_ng_template_31_Template, 47, 44, \"ng-template\", 21, 23, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasWriteAccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.language.History);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.recordingStatus);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" \", ctx.wsDelay, \" \", ctx.language[\"minute delay\"], \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.fsView);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.data[\"maxRate\"].length || ctx.showRealTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data[\"packet\"].length || ctx.showRealTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.fsView);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.fsView);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.fsChartDetails.topChart == \"TEP\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fsChartDetails.topChart == \"TAPP\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fsChartDetails.topChart == \"TLOC\");\n      }\n    },\n    directives: [i10.NgIf, i11.StreamChartComponent, i12.BarChartComponent, i13.NgSelectComponent, i14.NgControlStatus, i14.NgModel, i14.ɵNgNoValidate, i14.NgControlStatusGroup, i14.NgForm, i14.DefaultValueAccessor, i15.TrimSpaceDirective, i14.RadioControlValueAccessor, i16.Calendar, i13.ɵh, i13.ɵf],\n    styles: [\".undo-icon[_ngcontent-%COMP%]{background-color:#f8f8fa;padding:3px;color:#9e9e9e;border-radius:15px;margin:2px;font-size:17px;cursor:pointer;width:30px;height:30px;text-align:center}.current-issue-menu-container[_ngcontent-%COMP%]{display:flex;justify-self:start}.current-issue-menu-item[_ngcontent-%COMP%]{flex-grow:0}.current-issue-menu-item[_ngcontent-%COMP%] + .current-issue-menu-item[_ngcontent-%COMP%]{margin-left:1%}.btn-secondary[_ngcontent-%COMP%]{color:#5f6165!important;background-color:#f7f8fa!important;border-color:#888!important}.test-container[_ngcontent-%COMP%]{display:flex;width:100%}.item[_ngcontent-%COMP%]{flex-grow:1;border-left:3px solid #cdcdcd;padding-left:20px;width:calc(100% / 3)}.item[_ngcontent-%COMP%] + .item[_ngcontent-%COMP%]{margin-left:2%}.sub-menu-list-icon[_ngcontent-%COMP%]{background-color:#dee5ef;padding:2px 10px;border-radius:15px;font-size:10px;margin:10px}.network-trends-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.network-trends-item[_ngcontent-%COMP%]{flex-grow:1;width:calc(100% / 2)}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%}.network-trends-item[_ngcontent-%COMP%] + .network-trends-item[_ngcontent-%COMP%]{margin-left:5%}.board_head[_ngcontent-%COMP%]{padding:5px 10px 0}.orange-text[_ngcontent-%COMP%]{color:#ff7f00}.ml20[_ngcontent-%COMP%]{margin-left:20px}.mt20[_ngcontent-%COMP%]{margin-top:20px}.top5-fullscreen[_ngcontent-%COMP%]{float:right}.board_body[_ngcontent-%COMP%]{padding:0!important}.chart-info[_ngcontent-%COMP%]{padding:0 10px!important}.ng-select.realtime-custom-select[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{color:#ff7f00!important;border:none!important;border-radius:0!important}.topEndPointUpChartXaxis[_ngcontent-%COMP%]:hover{cursor:pointer!important}.with-info[_ngcontent-%COMP%]{display:flex;align-items:center;padding-right:20px}.with-info[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{margin-bottom:0}.with-info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .with-select[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-left:10px}.with-select[_ngcontent-%COMP%]{display:flex;align-items:center}.deafult-select[_ngcontent-%COMP%]{border-radius:20px}.m-10[_ngcontent-%COMP%]{margin-bottom:10px}.highcharts-axis-line[_ngcontent-%COMP%]{display:none!important}@media only screen and (max-width: 500px){.discover-content[_ngcontent-%COMP%]{margin-left:0!important}}@media only screen and (min-width: 501px){.discover-content[_ngcontent-%COMP%]{margin-left:1.5rem!important}}.btn-expand[_ngcontent-%COMP%]{background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}.btn-expand[_ngcontent-%COMP%]:hover{background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}.btn-expand[_ngcontent-%COMP%]:focus{background-image:url(ic_expand_grey.a00ec25dcedb0cff0b8c.svg)}.expand-icon[_ngcontent-%COMP%]{background-color:#ebeaef;color:#ebeaef;width:25px;height:25px;border-radius:20px;font-size:1px;text-align:center;line-height:24px;font-weight:normal;justify-content:center;background-image:url(ic_expand_inverted_grey.044960530517ee37a1a9.svg);background-position:50%;background-repeat:no-repeat}.icon-round[_ngcontent-%COMP%]{width:32px;height:32px;background:#0279FF;border-radius:100%;text-align:center;line-height:26px}label.indcit[_ngcontent-%COMP%]{color:#e61a1a;margin:0 0 0 8px;position:relative;top:4px}label.indcit[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:14px}label.indcit[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:relative;top:-2px;margin-right:4px}.orange-text-wrapper[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0!important}.h-210[_ngcontent-%COMP%]{height:210px}#usage_criteria[_ngcontent-%COMP%]{min-width:200px}.form-check-inline[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{cursor:pointer!important}\"]\n  });\n  return RealtimeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}