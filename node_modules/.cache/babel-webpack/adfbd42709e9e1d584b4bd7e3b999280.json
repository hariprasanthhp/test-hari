{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../shared/services/sso-auth.service\";\nimport * as i2 from \"../data.service\";\nimport * as i3 from \"src/app-services/translate.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction FrameComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"span\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function FrameComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.isError = false;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alertMessage, \" \");\n  }\n}\nfunction FrameComponent_iframe_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"iframe\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.frameUrl, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nexport let FrameComponent = /*#__PURE__*/(() => {\n  class FrameComponent {\n    constructor(sso, dataService, translateService, sanitizer, titleService) {\n      this.sso = sso;\n      this.dataService = dataService;\n      this.translateService = translateService;\n      this.sanitizer = sanitizer;\n      this.titleService = titleService;\n      this.ticketId = '';\n      this.scopeFlag = {};\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.translateService.selectedLanguage.subscribe(data => {\n        if (this.ticketId) this.formUrl(this.ticketId);\n      });\n      this.loadUrl();\n      this.titleService.setTitle(`${this.language[\"Dashboard\"]}-${this.language[\"Support\"]}-${this.language[\"Calix Cloud\"]}`);\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language[\"Dashboard\"]}-${this.language[\"Support\"]}-${this.language[\"Calix Cloud\"]}`);\n      });\n    }\n    getScope() {\n      let scopes = this.sso.getScopes();\n      if (environment.VALIDATE_SCOPE) {\n        scopes['cloud.rbac.csc.dashboardse'] = scopes['cloud.rbac.csc.dashboardse'] ? scopes['cloud.rbac.csc.dashboardse'] : [];\n        if (scopes && scopes['cloud.rbac.csc.dashboardse']) {\n          if (scopes['cloud.rbac.csc.dashboardse'].indexOf('read') !== -1) this.scopeFlag.dashboardRead = true;\n          if (scopes['cloud.rbac.csc.dashboardse'].indexOf('write') !== -1) this.scopeFlag.dashboardWrite = true;\n        }\n      } else {\n        this.scopeFlag.dashboardRead = true;\n        this.scopeFlag.dashboardWrite = true;\n      }\n    }\n    loadUrl() {\n      const pageUrl = window.location.href;\n      let qlikCscType = this.sso.getCscType() === 'DME' ? 'CSC-DME' : 'CSC-EME';\n      this.loader = true;\n      this.sso.getQlikTOkenByAppType(qlikCscType).subscribe(res => {\n        this.loader = false;\n        this.ticketId = res.Ticket;\n        this.formUrl(this.ticketId);\n      }, err => {\n        this.loader = false;\n        this.pageErrorHandle(err);\n      });\n      //if(pageUrl.includes(\"dashboard\")) \n    }\n\n    formUrl(ticketId) {\n      let url = environment.ADVANCED_URL;\n      let urlArr = url.split(\"?\");\n      const langSuffix = {\n        'en': '#/?lang=en&select=%25LANGUAGE,English',\n        'fr': `#/?lang=fr&select=%25LANGUAGE,French%20Canadian`,\n        'es': `#/?lang=es&select=%25LANGUAGE,Spanish%20Latin%20America`,\n        'de_DE': `#/?lang=de&select=%25LANGUAGE,German`\n      };\n      const selectedLang = langSuffix[sessionStorage.getItem('defaultLanguage')] || langSuffix['en'];\n      this.frameUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${urlArr[0].replace('#/', '')}?qlikTicket=${ticketId}${selectedLang}&stream_id=41ifky01626783869132`);\n      this.refreshIframe();\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.alertMessage = 'Access Denied';\n      } else {\n        this.alertMessage = this.sso.pageErrorHandle(err);\n      }\n      this.isError = true;\n      $(\"body\").scrollTop(0);\n    }\n    refreshIframe() {\n      this.isRefreshing = true;\n      setTimeout(() => {\n        this.isRefreshing = false;\n      }, 50);\n    }\n  }\n  FrameComponent.ɵfac = function FrameComponent_Factory(t) {\n    return new (t || FrameComponent)(i0.ɵɵdirectiveInject(i1.SsoAuthService), i0.ɵɵdirectiveInject(i2.DataServiceService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DomSanitizer), i0.ɵɵdirectiveInject(i4.Title));\n  };\n  FrameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FrameComponent,\n    selectors: [[\"app-frame\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"dasboard-frame\", 2, \"min-height\", \"600px\"], [\"class\", \"w-100 alert alert alert-danger  fade show\", 4, \"ngIf\"], [\"class\", \"embed-responsive-item\", \"allowfullscreen\", \"\", \"style\", \"width: 100%;\\n    height: 100%\", 3, \"src\", 4, \"ngIf\"], [1, \"w-100\", \"alert\", \"alert\", \"alert-danger\", \"fade\", \"show\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"allowfullscreen\", \"\", 1, \"embed-responsive-item\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"src\"]],\n    template: function FrameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FrameComponent_div_1_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, FrameComponent_iframe_2_Template, 1, 1, \"iframe\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.frameUrl && !ctx.isRefreshing);\n      }\n    },\n    directives: [i5.NgIf],\n    styles: [\".dasboard-frame[_ngcontent-%COMP%]{height:calc(100vh - 185px);width:100%}\"]\n  });\n  return FrameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}