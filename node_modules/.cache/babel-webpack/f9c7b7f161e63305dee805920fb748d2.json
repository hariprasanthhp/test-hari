{"ast":null,"code":"\"use strict\";\n\n/**\n * Library mostly focused on IP matching, but with some other fancy goods.\n * Repository: https://github.com/SchoofsKelvin/ip-matching\n * @packageDocumentation\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matches = void 0;\nconst ip_1 = require(\"./ip\");\n__exportStar(require(\"./ip\"), exports);\n/**\n * Checks whether the given IP matches the given whitelist\n * @param ip - The IP to check, or a string to be converted to an exact IP\n * @param target - The target to check against, or a string to convert to an IPMatch\n * @throws Throws an error if either argument is a string but does not have a correct format\n */\nfunction matches(ip, target) {\n  const targ = ip_1.getMatch(target);\n  return targ.matches(ip);\n}\nexports.matches = matches;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}