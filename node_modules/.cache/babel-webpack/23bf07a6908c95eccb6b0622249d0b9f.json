{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CustomdecimalpointDirective = /*#__PURE__*/(() => {\n  class CustomdecimalpointDirective {\n    constructor(el) {\n      this.el = el;\n      // Allow decimal numbers and negative values [+-]?\n      this.regex = new RegExp(/^[+-]?\\d{1,2}\\.?\\d{0,2}$/g);\n      // Allow key codes for special events. Reflect :\n      // Backspace, tab, end, home\n      this.specialKeys = ['Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\n    }\n    onKeyDown(event) {\n      // Allow Ctrl, Backspace, tab, end, and home keys\n      if (event.ctrlKey || this.specialKeys.indexOf(event.key) !== -1) {\n        return;\n      }\n      let current = this.el.nativeElement.value;\n      if (event.key == '-' && current.indexOf(event.key) == -1) return;\n      if (!current) return;\n      if (this.el.nativeElement.selectionEnd - this.el.nativeElement.selectionStart > 0) return;\n      this.el.nativeElement.setAttribute(\"type\", \"text\");\n      const position = this.el.nativeElement.selectionStart;\n      const next = [current.slice(0, position), event.key == 'Decimal' ? '.' : event.key, current.slice(position)].join('');\n      if (next && !String(next).match(this.regex)) {\n        event.preventDefault();\n      }\n    }\n    onPaste(event) {\n      let pasted = event.clipboardData.getData('text/plain');\n      if (String(pasted).match(this.regex)) {\n        const current = this.el.nativeElement.value;\n        const start = this.el.nativeElement.selectionStart;\n        const end = this.el.nativeElement.selectionEnd;\n        const next = end - start > 0 ? [current.slice(0, start), pasted, current.slice(end)].join('') : [current.slice(0, start), pasted, current.slice(start)].join('');\n        if (String(next).match(this.regex)) {\n          return;\n        } else {\n          event.preventDefault();\n        }\n      } else {\n        event.preventDefault();\n      }\n    }\n    onDrop(event) {\n      event.preventDefault();\n    }\n  }\n  CustomdecimalpointDirective.ɵfac = function CustomdecimalpointDirective_Factory(t) {\n    return new (t || CustomdecimalpointDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  CustomdecimalpointDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CustomdecimalpointDirective,\n    selectors: [[\"\", \"appCustomdecimalpoint\", \"\"]],\n    hostBindings: function CustomdecimalpointDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function CustomdecimalpointDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"paste\", function CustomdecimalpointDirective_paste_HostBindingHandler($event) {\n          return ctx.onPaste($event);\n        })(\"drop\", function CustomdecimalpointDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    }\n  });\n  return CustomdecimalpointDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}