{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../outlier-workflow.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"src/app/shared/services/sso-auth.service\";\nimport * as i6 from \"src/app/cco/issues/historyreport/service/history-chart-options.service\";\nimport * as i7 from \"src/app/cco/issues/service/issue.service\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"@angular/common\";\nfunction SystemComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.language[\"This field is required\"], \".\");\n  }\n}\nfunction SystemComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.language[\"This field is required\"], \".\");\n  }\n}\nfunction SystemComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.language[\"This field is required\"], \".\");\n  }\n}\nexport let SystemComponent = /*#__PURE__*/(() => {\n  class SystemComponent {\n    constructor(translateService, fb, otlrWrkflwSrvc, http, sso, chartOptionService, issueService) {\n      this.translateService = translateService;\n      this.fb = fb;\n      this.otlrWrkflwSrvc = otlrWrkflwSrvc;\n      this.http = http;\n      this.sso = sso;\n      this.chartOptionService = chartOptionService;\n      this.issueService = issueService;\n      this.loading = false;\n      this.regionsDataArray = ['All'];\n      this.locationDataArray = ['All'];\n      this.systemDataArray = ['All'];\n      this.submitted = false;\n      this.isFormValid = new EventEmitter();\n      this.systemForm = this.fb.group({\n        regions: ['All', Validators.required],\n        locations: ['All', Validators.required],\n        systems: ['All', Validators.required]\n      });\n    }\n    set workflowObj(data) {\n      console.log(data);\n      this._workflowObj = data;\n    }\n    get workflowObj() {\n      return this._workflowObj;\n    }\n    ngOnInit() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n      this.tabSub = this.otlrWrkflwSrvc.outlierTabChanged$.subscribe(value => {\n        this.submitted = true;\n      });\n      this.getRegions();\n      this.systemForm.patchValue({\n        regions: ((_b = (_a = this.workflowObj) === null || _a === void 0 ? void 0 : _a.regions) === null || _b === void 0 ? void 0 : _b.length) ? (_c = this.workflowObj) === null || _c === void 0 ? void 0 : _c.regions : ['All'],\n        locations: ((_e = (_d = this.workflowObj) === null || _d === void 0 ? void 0 : _d.locations) === null || _e === void 0 ? void 0 : _e.length) ? (_f = this.workflowObj) === null || _f === void 0 ? void 0 : _f.locations : ['All'],\n        systems: ((_h = (_g = this.workflowObj) === null || _g === void 0 ? void 0 : _g.systems) === null || _h === void 0 ? void 0 : _h.length) ? (_j = this.workflowObj) === null || _j === void 0 ? void 0 : _j.systems : ['All']\n      });\n      this.formSub = this.systemForm.valueChanges.subscribe(value => {\n        this.workflowObj.regions = value === null || value === void 0 ? void 0 : value.regions;\n        this.workflowObj.locations = value === null || value === void 0 ? void 0 : value.locations;\n        this.workflowObj.systems = value === null || value === void 0 ? void 0 : value.systems;\n        this.isFormValid.emit(this.systemForm.valid);\n      });\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n    }\n    getRegions() {\n      this.regionsSubject = this.issueService.getRegions().subscribe(res => {\n        var _a;\n        if (res) {\n          res = this.issueService.appendFqn(res);\n          res.sort();\n          this.regionsDataArray = [...this.regionsDataArray, ...res];\n          console.log(this.regionsDataArray);\n          if ((_a = this._workflowObj) === null || _a === void 0 ? void 0 : _a.regions) {\n            this.systemForm.get('regions').setValue(this._workflowObj.regions);\n            this.loadLocationValue('');\n          }\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n    loadLocationValue(event) {\n      let ids = this.systemForm.get('regions').value;\n      if (ids === null || ids === void 0 ? void 0 : ids.length) {\n        let regionQuery = '';\n        if (ids.length) {\n          if (ids.indexOf('All') !== -1) {\n            this.locationDataArray = [\"All\"];\n            this.systemForm.get('locations').setValue(['All']);\n            return;\n          }\n          ids.forEach(element => {\n            if (element == 'All') {\n              return;\n            }\n            regionQuery += `&region=${element}`;\n          });\n          this.locationsSubject = this.http.get(`${environment.API_BASE_URL}nfa/locations?tenant=0${regionQuery}`).pipe(map(res => {\n            res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n              numeric: false\n            }));\n            return res;\n          }), catchError(this.handleError)).subscribe(res => {\n            var _a;\n            res = this.issueService.appendFqn(res);\n            this.chartOptionService.setLocationsInfo(res);\n            this.locationDataArray = [\"All\"];\n            this.locationDataArray = [...this.locationDataArray, ...res];\n            if ((_a = this._workflowObj) === null || _a === void 0 ? void 0 : _a.locations) {\n              this.systemForm.get('locations').setValue(this._workflowObj.locations);\n            }\n            let locationIds = this.systemForm.get('locations').value;\n            if (locationIds && locationIds.length) {\n              let locationsObj = this.chartOptionService.getLocationsObj();\n              let locationListIds = Object.keys(locationsObj).length ? Object.keys(locationsObj) : [];\n              let validLocationIds = [];\n              locationIds.forEach(element => {\n                if (locationListIds.indexOf(element) !== -1) {\n                  validLocationIds.push(element);\n                }\n              });\n              if (!validLocationIds.length) {\n                validLocationIds = ['All'];\n              }\n              this.systemForm.get('locations').setValue(validLocationIds);\n              this.loadSystemValue();\n            }\n          }, error => {});\n        } else {\n          this.systemForm.get('regions').setValue(['All']);\n          this.systemForm.get('locations').setValue(['All']);\n          this.locationDataArray = [\"All\"];\n        }\n      } else {\n        this.systemForm.get('regions').setValue(['All']);\n        this.systemForm.get('locations').setValue(['All']);\n        this.systemForm.get('systems').setValue(['All']);\n      }\n    }\n    loadSystemValue(event) {\n      let regionids = this.systemForm.get('regions').value;\n      let locationids = this.systemForm.get('locations').value;\n      let systemIds = this.systemForm.get('systems').value;\n      if (regionids.length && locationids.length && locationids.indexOf('All') === -1) {\n        let regionQuery = '';\n        regionids.forEach(element => {\n          if (element == 'All') {\n            return;\n          }\n          if (regionQuery) {\n            regionQuery += `&`;\n          }\n          regionQuery += `region=${element}`;\n        });\n        let locationQuery = '';\n        locationids.forEach(element => {\n          if (element == 'All') {\n            return;\n          }\n          locationQuery += `&location=${element}`;\n        });\n        this.systemsSubject = this.http.get(`${environment.API_BASE_URL}nfa/systems?${regionQuery}${locationQuery}`).pipe(map(res => {\n          res.sort((a, b) => (a[\"name\"] || \"\").toString().localeCompare((b[\"name\"] || \"\").toString(), 'en', {\n            numeric: false\n          }));\n          return res;\n        }), catchError(this.handleError)).subscribe(res => {\n          this.chartOptionService.setSystemsInfo(res);\n          this.systemDataArray = [\"All\"];\n          this.systemDataArray = [...this.systemDataArray, ...res];\n          if (systemIds && systemIds.length) {\n            let systemsObj = this.chartOptionService.getSystemsObj();\n            let systemListIds = Object.keys(systemsObj).length ? Object.keys(systemsObj) : [];\n            let validSystemIds = [];\n            systemIds.forEach(element => {\n              if (systemListIds.indexOf(element) !== -1) {\n                validSystemIds.push(element);\n              }\n            });\n            if (!validSystemIds.length) {\n              validSystemIds = ['All'];\n            }\n            this.systemForm.get('systems').setValue(validSystemIds);\n          }\n        }, error => {});\n      } else {\n        if (!locationids.length) {\n          this.systemForm.get('locations').setValue(['All']);\n          this.systemForm.get('systems').setValue(['All']);\n          //this.systemForm.get('location').setValue(['All']);\n          this.systemDataArray = [\"All\"];\n        }\n      }\n    }\n    handleError(error) {\n      return throwError(error);\n    }\n    validateRegion(event) {\n      let regions = this.systemForm.get('regions').value;\n      if (event === 'All') {\n        regions = ['All'];\n      } else {\n        let index = regions.indexOf('All');\n        if (index > -1) {\n          regions.splice(index, 1);\n        }\n      }\n      this.systemForm.get('regions').setValue(regions);\n      this.loadLocationValue('');\n    }\n    validateLocation(event) {\n      let locations = this.systemForm.get('locations').value;\n      //console.log(event);\n      if (event === 'All') {\n        locations = ['All'];\n      } else {\n        let index = locations.indexOf('All');\n        if (index > -1) {\n          locations.splice(index, 1);\n        }\n      }\n      this.systemForm.get('locations').setValue(locations);\n      this.workflowObj.locations = locations;\n      this.loadSystemValue('');\n    }\n    validateSystem(event) {\n      let systems = this.systemForm.get('systems').value;\n      //console.log(event);\n      if (!systems.length) {\n        systems = ['All'];\n      } else if (event === 'All') {\n        systems = ['All'];\n      } else {\n        let index = systems.indexOf('All');\n        if (index > -1) {\n          systems.splice(index, 1);\n        }\n      }\n      this.systemForm.get('systems').setValue(systems);\n    }\n  }\n  SystemComponent.ɵfac = function SystemComponent_Factory(t) {\n    return new (t || SystemComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.OutlierWorkflowService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.SsoAuthService), i0.ɵɵdirectiveInject(i6.HistoryChartOptionsService), i0.ɵɵdirectiveInject(i7.IssueService));\n  };\n  SystemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SystemComponent,\n    selectors: [[\"app-system\"]],\n    inputs: {\n      workflowObj: \"workflowObj\"\n    },\n    outputs: {\n      isFormValid: \"isFormValid\"\n    },\n    decls: 26,\n    vars: 24,\n    consts: [[1, \"col-md-6\"], [1, \"row\", 3, \"formGroup\"], [1, \"col-md-12\", \"px-0\"], [1, \"cco-secondary-title\", \"pb-1\", \"border-bottom\"], [1, \"col-md-11\"], [1, \"pt-2\", \"mb-1\"], [1, \"col-md-9\"], [\"for\", \"inputEmail3\", 1, \"col-form-label\"], [1, \"w-100\"], [\"formControlName\", \"regions\", \"bindValue\", \"id\", \"bindLabel\", \"name\", 3, \"multiple\", \"items\", \"clearable\", \"searchable\", \"placeholder\", \"add\", \"remove\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [\"formControlName\", \"locations\", \"bindValue\", \"id\", \"bindLabel\", \"name\", 3, \"multiple\", \"items\", \"placeholder\", \"clearable\", \"searchable\", \"add\", \"remove\"], [1, \"col-md-9\", \"mb-3\"], [\"formControlName\", \"systems\", \"bindValue\", \"uuid\", \"bindLabel\", \"name\", 1, \"selectboxwidth\", 3, \"multiple\", \"items\", \"placeholder\", \"clearable\", \"searchable\", \"add\", \"remove\"], [1, \"errorMessage\"]],\n    template: function SystemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"ng-select\", 9);\n        i0.ɵɵlistener(\"add\", function SystemComponent_Template_ng_select_add_12_listener($event) {\n          return ctx.validateRegion($event);\n        })(\"remove\", function SystemComponent_Template_ng_select_remove_12_listener($event) {\n          return ctx.loadLocationValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, SystemComponent_div_13_Template, 3, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelementStart(15, \"label\", 7);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelementStart(18, \"ng-select\", 11);\n        i0.ɵɵlistener(\"add\", function SystemComponent_Template_ng_select_add_18_listener($event) {\n          return ctx.validateLocation($event);\n        })(\"remove\", function SystemComponent_Template_ng_select_remove_18_listener($event) {\n          return ctx.loadSystemValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, SystemComponent_div_19_Template, 3, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelementStart(21, \"label\", 7);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 8);\n        i0.ɵɵelementStart(24, \"ng-select\", 13);\n        i0.ɵɵlistener(\"add\", function SystemComponent_Template_ng_select_add_24_listener($event) {\n          return ctx.validateSystem($event);\n        })(\"remove\", function SystemComponent_Template_ng_select_remove_24_listener($event) {\n          return ctx.validateSystem($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, SystemComponent_div_25_Template, 3, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.systemForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"OLT System\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Select a region, location, and OLT system to be included in the report\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.language[\"Region(s)\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.region);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.regionsDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Location(s)\"], \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.Location);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.locationDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"System(s)\"], \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.language.System);\n        i0.ɵɵproperty(\"multiple\", true)(\"items\", ctx.systemDataArray)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", false);\n      }\n    },\n    directives: [i2.NgControlStatusGroup, i2.FormGroupDirective, i8.NgSelectComponent, i2.NgControlStatus, i2.FormControlName, i9.NgIf],\n    styles: [\"\"]\n  });\n  return SystemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}