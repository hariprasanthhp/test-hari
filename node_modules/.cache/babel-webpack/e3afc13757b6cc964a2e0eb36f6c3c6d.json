{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"../service/ccochart.service\";\nimport * as i3 from \"src/app/shared-utils/date-utils.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"src/app/sys-admin/services/common.service\";\nimport * as i6 from \"src/app/support/shared/custom-pipes/shortnumber.pipe\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"angular-datatables\";\nimport * as i9 from \"@angular/common\";\nconst _c0 = [\"showPonModel\"];\nfunction PonKpiComponent_ng_template_0_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function PonKpiComponent_ng_template_0_tr_21_Template_a_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.showTopONTs(item_r5 == null ? null : item_r5.systemId, item_r5 == null ? null : item_r5.interface, item_r5 == null ? null : item_r5.system);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5 == null ? null : item_r5.system);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r5 == null ? null : item_r5.interface);\n  }\n}\nfunction PonKpiComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"h2\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PonKpiComponent_ng_template_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.close();\n    });\n    i0.ɵɵelement(5, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵelementStart(7, \"table\", 8, 9);\n    i0.ɵɵelementStart(9, \"thead\", 10);\n    i0.ɵɵelementStart(10, \"tr\");\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 11);\n    i0.ɵɵelementStart(16, \"div\", 12);\n    i0.ɵɵelementStart(17, \"div\", 13);\n    i0.ɵɵelementStart(18, \"span\", 14);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"tbody\", 15);\n    i0.ɵɵtemplate(21, PonKpiComponent_ng_template_0_tr_21_Template, 6, 2, \"tr\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.ponCapacitytd);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.language[\"PON Capacity Hits\"]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r1.dtOptions)(\"dtTrigger\", ctx_r1.dtTrigger);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.language[\"System\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.language[\"Affected Interfaces\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.loading);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.language.Loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.ponCapacitytd || ctx_r1.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.affectedPorts);\n  }\n}\nexport let PonKpiComponent = /*#__PURE__*/(() => {\n  class PonKpiComponent {\n    constructor(translateService, ccochatservice, dateUtils, modalService, commonOrgService, ShortnumberPipe, router) {\n      this.translateService = translateService;\n      this.ccochatservice = ccochatservice;\n      this.dateUtils = dateUtils;\n      this.modalService = modalService;\n      this.commonOrgService = commonOrgService;\n      this.ShortnumberPipe = ShortnumberPipe;\n      this.router = router;\n      this.dtTrigger = new Subject();\n      this.dtTrigger1 = new Subject();\n      this.count = 0;\n      this.topONTs = false;\n      this.dtOptionsONT = {\n        info: false,\n        pageLength: 10,\n        lengthChange: false,\n        processing: false,\n        dom: 'tipr',\n        destroy: true,\n        columnDefs: [{\n          targets: [0, 1, 2],\n          orderable: false\n        }],\n        order: []\n      };\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthChange: false,\n        processing: false,\n        dom: 'tipr',\n        columnDefs: [{\n          targets: [1],\n          orderable: false\n        }],\n        order: [0, 'asc']\n      };\n    }\n    ngOnInit() {\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n      });\n      this.FromDate = Math.ceil((this.dateUtils.getStartUtcTimeByDaysseconds(0) - 86400000) / 1000);\n      //let pFromDate = Math.ceil(this.dateUtils.getStartUtcTimeByDaysseconds(0) / 1000);\n      //let query = `tenant=0&granularity=15min&startTime=${this.FromDate}&endTime=${pFromDate}`;\n      this.showPonModelOpen(this.showPonModel);\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) {\n        this.languageSubject.unsubscribe();\n      }\n      if (this.dtsub) this.dtsub.unsubscribe();\n      if (this.totalcount) this.totalcount.unsubscribe();\n      this.dtTrigger.unsubscribe();\n      this.dtTrigger1.unsubscribe();\n    }\n    rerender() {\n      var _a, _b;\n      (_b = (_a = this.datatableElement) === null || _a === void 0 ? void 0 : _a.dtInstance) === null || _b === void 0 ? void 0 : _b.then(dtInstance => {\n        var _a, _b;\n        dtInstance === null || dtInstance === void 0 ? void 0 : dtInstance.destroy();\n        (_a = this.dtTrigger) === null || _a === void 0 ? void 0 : _a.next();\n        (_b = this.dtTrigger1) === null || _b === void 0 ? void 0 : _b.next();\n      });\n    }\n    close() {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n      this.router.navigate(['/cco/health/pon-utilization/realtime']);\n    }\n    showPonModelOpen(modal) {\n      var _a;\n      this.ponCapacitytd = true;\n      this.loading = true;\n      if (((_a = this.affectedPorts) === null || _a === void 0 ? void 0 : _a.length) !== 0 && this.isTableLoaded) {\n        this.rerender();\n      }\n      let endDate = new Date();\n      this.dateUtils.getUtCSecondsByDateObj(endDate, true);\n      this.dtsub = this.ccochatservice.GetAffectedPorts(this.FromDate, this.dateUtils.getUtCSecondsByDateObj(endDate, true), 'pon').subscribe(res => {\n        this.affectedPorts = res ? res : [];\n        if (this.isTableLoaded) {\n          this.rerender();\n        } else {\n          this.isTableLoaded = true;\n          this.dtTrigger.next();\n        }\n        this.loading = false;\n      }, err => {\n        this.loading = false;\n        this.errorHandler(err);\n      });\n      this.modalRef = this.modalService.open(modal, {\n        centered: true,\n        backdrop: 'static',\n        windowClass: 'vid-med-modal'\n      });\n    }\n    ngAfterViewInit() {\n      this.dtTrigger.next();\n    }\n    GoBack() {\n      this.topONTs = false;\n      this.ponCapacitytd = true;\n    }\n    countconvert(number) {\n      return this.ShortnumberPipe.transform(number, true, 5);\n    }\n    showTopONTs(system, value, name) {\n      if (this.modalRef) {\n        this.modalRef.close();\n      }\n      let query = {\n        system: system,\n        interface: value,\n        name: name\n      };\n      this.router.navigate(['/cco/health/pon-utilization/TopOnt'], {\n        queryParams: query\n      });\n    }\n    errorHandler(err) {\n      if (err.status == 401) {\n        this.errormsg = this.language['Access Denied'];\n      } else {\n        this.errormsg = this.commonOrgService.pageErrorHandle(err);\n      }\n    }\n  }\n  PonKpiComponent.ɵfac = function PonKpiComponent_Factory(t) {\n    return new (t || PonKpiComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.CcochartService), i0.ɵɵdirectiveInject(i3.DateUtilsService), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.CommonService), i0.ɵɵdirectiveInject(i6.ShortnumberPipe), i0.ɵɵdirectiveInject(i7.Router));\n  };\n  PonKpiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PonKpiComponent,\n    selectors: [[\"app-pon-kpi\"]],\n    viewQuery: function PonKpiComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showPonModel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datatableElement = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"class\", \"\"], [\"showPonModel\", \"\"], [1, \"modal-content\", 3, \"hidden\"], [1, \"modal-header\", \"mb-3\"], [1, \"modal-title\", \"eillips-text\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"datatable\", \"\", 1, \"w-100\", 3, \"dtOptions\", \"dtTrigger\"], [\"table1\", \"\"], [1, \"\"], [1, \"loader\", 3, \"hidden\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"\", 1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [3, \"hidden\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-decoration-none\", \"cursor-pointer\", 3, \"click\"]],\n    template: function PonKpiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PonKpiComponent_ng_template_0_Template, 22, 10, \"ng-template\", 0, 1, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i8.DataTableDirective, i9.NgForOf],\n    styles: [\"\"]\n  });\n  return PonKpiComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}