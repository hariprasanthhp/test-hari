{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { isEventSubProcess } from 'bpmn-js/lib/util/DiUtil';\nimport { isAny } from 'bpmn-js/lib/features/modeling/util/ModelingUtil';\nimport { REPLACE_OPTIONS as availableReplaceElements, HEADER_OPTIONS as availableHeaderEntries } from './ReplaceOptions';\nlet ReplaceMenuProvider = /*#__PURE__*/(() => {\n  class ReplaceMenuProvider {\n    constructor(popupMenu) {\n      popupMenu.registerProvider('bpmn-replace', this);\n    }\n    getPopupMenuHeaderEntries(element) {\n      return function (entries) {\n        let headerEntries = {};\n        if (isAny(element, ['bpmn:Task', 'bpmn:ReceiveTask', 'bpmn:ServiceTask', 'bpmn:SubProcess', 'bpmn:CallActivity']) && !isEventSubProcess(element)) {\n          forEach(entries, function (entry, key) {\n            if (availableHeaderEntries.includes(key)) {\n              headerEntries = {\n                ...headerEntries,\n                [key]: entry\n              };\n            }\n          });\n        }\n        entries = headerEntries;\n        return entries;\n      };\n    }\n    getPopupMenuEntries(element) {\n      return function (entries) {\n        forEach(entries, function (entry, key) {\n          if (!availableReplaceElements.includes(key)) {\n            delete entries[key];\n          }\n        });\n        return entries;\n      };\n    }\n  }\n  ReplaceMenuProvider.$inject = ['popupMenu'];\n  return ReplaceMenuProvider;\n})();\nexport { ReplaceMenuProvider as default };","map":null,"metadata":{},"sourceType":"module"}