{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { DOCUMENT } from '@angular/common';\nimport { nameValidator } from '../workflow-shared/common-workflow.service';\nimport { SmsConsentComponent } from '../workflow-shared/sms-consent/sms-consent.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/sys-admin/services/common.service\";\nimport * as i4 from \"src/app/shared/services/sso-auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"./services/alarm-notifications-apis.service\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"../issues/service/issue.service\";\nimport * as i10 from \"../workflow-shared/common-workflow.service\";\nimport * as i11 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"./workflow-details/workflow-details.component\";\nimport * as i14 from \"./workflow-alarms/workflow-alarms.component\";\nimport * as i15 from \"./workflow-conditions/workflow-conditions.component\";\nimport * as i16 from \"../workflow-shared/recepients/recepients.component\";\nimport * as i17 from \"./workflow-summary/workflow-summary.component\";\nfunction AlarmNotificationsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelementStart(1, \"span\", 27);\n    i0.ɵɵelement(2, \"img\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.closeAlert();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r0.language[ctx_r0.errorInfo] || ctx_r0.errorInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AlarmNotificationsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"span\", 32);\n    i0.ɵɵelement(2, \"img\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.success = false;\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r1.language[ctx_r1.successInfo] || ctx_r1.successInfo, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AlarmNotificationsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\", 35);\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵelementStart(3, \"div\", 37);\n    i0.ɵɵelementStart(4, \"div\", 38);\n    i0.ɵɵelementStart(5, \"span\", 39);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.language.Loading);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"step-current\": a0,\n    \"step-done\": a1\n  };\n};\nfunction AlarmNotificationsComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_li_15_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const i_r18 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onTabChange(i_r18, \"stepperClick\");\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r3.language[tab_r17[\"name\"]]);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r3.activeTab === tab_r17[\"value\"], ctx_r3.levelsPassed > i_r18 && ctx_r3.activeTab !== tab_r17[\"value\"]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.language[tab_r17[\"name\"]]);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"pe-none\": a0\n  };\n};\nfunction AlarmNotificationsComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onTabChange(ctx_r21.selectedTabIndex + 1, \"forward\");\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"img\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"title\", \"  \", ctx_r4.language.save_and_continue, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx_r4.btnDisabled == true));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.language.save_and_continue, \" \");\n  }\n}\nfunction AlarmNotificationsComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.pauseContinueWorkflow(\"pause\");\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"title\", \" \", ctx_r5.language.save_and_pause, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx_r5.btnDisabled == true));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.language.save_and_pause, \" \");\n  }\n}\nfunction AlarmNotificationsComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.pauseContinueWorkflow(\"activate\");\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"title\", \" \", ctx_r6.language.save_and_activate, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx_r6.btnDisabled == true));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.language.save_and_activate, \" \");\n  }\n}\nfunction AlarmNotificationsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵelementStart(1, \"span\", 27);\n    i0.ɵɵelement(2, \"img\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_div_23_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.onCloseError();\n    });\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r7.language[ctx_r7.errorMsg] || ctx_r7.errorMsg, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AlarmNotificationsComponent_app_workflow_details_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-workflow-details\", 46);\n    i0.ɵɵlistener(\"getWorkFlowAPIEmitter\", function AlarmNotificationsComponent_app_workflow_details_24_Template_app_workflow_details_getWorkFlowAPIEmitter_0_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.getWorkflowData($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"loadOnEdit\", ctx_r8.loadEditable.asObservable())(\"workFlowDetailsData\", ctx_r8.notificationsData.details);\n  }\n}\nfunction AlarmNotificationsComponent_app_workflow_alarms_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-workflow-alarms\", 47);\n    i0.ɵɵlistener(\"getWorkFlowAPIEmitter\", function AlarmNotificationsComponent_app_workflow_alarms_25_Template_app_workflow_alarms_getWorkFlowAPIEmitter_0_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.getWorkflowData($event);\n    })(\"errorMsg\", function AlarmNotificationsComponent_app_workflow_alarms_25_Template_app_workflow_alarms_errorMsg_0_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.getErrorMsg($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"workFlowAlarmsData\", ctx_r9.notificationsData.alarms);\n  }\n}\nfunction AlarmNotificationsComponent_app_workflow_conditions_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-workflow-conditions\", 48);\n    i0.ɵɵlistener(\"getWorkFlowAPIEmitter\", function AlarmNotificationsComponent_app_workflow_conditions_26_Template_app_workflow_conditions_getWorkFlowAPIEmitter_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.getWorkflowData($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"conditionFormSubmitted\", ctx_r10.conditionFormSubmit)(\"workFlowConditionsData\", ctx_r10.notificationsData.conditions);\n  }\n}\nfunction AlarmNotificationsComponent_app_recepients_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-recepients\", 49);\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dynamicFields\", ctx_r11.recepientFormFields)(\"dynamicFieldsObj\", ctx_r11.recepientFormFieldsObj)(\"workflowObj\", ctx_r11.notificationsData.notification);\n  }\n}\nfunction AlarmNotificationsComponent_app_workflow_summary_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-workflow-summary\", 50);\n    i0.ɵɵlistener(\"getWorkFlowAPIEmitter\", function AlarmNotificationsComponent_app_workflow_summary_28_Template_app_workflow_summary_getWorkFlowAPIEmitter_0_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.getWorkflowData($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"workFlowSummaryData\", ctx_r12.notificationsData);\n  }\n}\nexport let AlarmNotificationsComponent = /*#__PURE__*/(() => {\n  class AlarmNotificationsComponent {\n    constructor(translateService, http, commonOrgService, ssoService, router, route, formBuilder, apiPreDataSevice, titleService, issueService, document, commonWorkflowService, modalService) {\n      this.translateService = translateService;\n      this.http = http;\n      this.commonOrgService = commonOrgService;\n      this.ssoService = ssoService;\n      this.router = router;\n      this.route = route;\n      this.formBuilder = formBuilder;\n      this.apiPreDataSevice = apiPreDataSevice;\n      this.titleService = titleService;\n      this.issueService = issueService;\n      this.document = document;\n      this.commonWorkflowService = commonWorkflowService;\n      this.modalService = modalService;\n      this.recepientFormFields = [{\n        key: 'mailRecepients',\n        required: true\n      }, {\n        key: 'notes',\n        required: false\n      }, {\n        key: 'sms',\n        required: true\n      }, {\n        key: 'webhooks',\n        required: true\n      }];\n      this.recepientFormFieldsObj = {\n        emailRecipients: 'mailRecepients',\n        emailNotes: 'notes',\n        sms: 'sms',\n        webhooks: 'webhooks'\n      };\n      this.isDev = false;\n      this.loadEditable = new Subject();\n      this.scheduleFormSubmit = new Subject();\n      this.conditionFormSubmit = new Subject();\n      this.errorInfo = '';\n      this.successInfo = '';\n      this.loading = false;\n      this.btnDisabled = false;\n      this.alarmNotificationsSteppers = [{\n        name: 'Details',\n        value: 'Details'\n      }, {\n        name: 'Alarms',\n        value: 'Alarms'\n      }, {\n        name: 'Notification Trigger',\n        value: 'Conditions'\n      }, {\n        name: 'Recipients',\n        value: 'notification'\n      }, {\n        name: 'Summary',\n        value: 'Summary'\n      }];\n      // alarmNotificationsSteppers = [\n      //   'Details',\n      //   'Alarms',\n      //   'Conditions',\n      //   'notification',\n      //   'Summary',\n      // ];\n      this.activeTab = 'Details';\n      this.levelsPassed = 0;\n      this.selectedTabIndex = 0;\n      this.isTabChange = true;\n      this.errorMsg = undefined;\n      this.notificationsData = {\n        alarm_notifications_summary: true,\n        workFlowData: {},\n        workFlowTab: this.alarmNotificationsSteppers,\n        workflowId: '',\n        details: {\n          name: undefined,\n          description: undefined,\n          isNameEntered: true,\n          workFlowSaved: false,\n          workflowId: '',\n          workFlowDetailsForm: this.formBuilder.group({\n            name: ['', [Validators.required, Validators.maxLength(50), nameValidator]],\n            description: ['']\n          })\n        },\n        alarms: {\n          workFlowSaved: false,\n          alarmSelectedList: [],\n          exisitingAlarmSelectedList: [],\n          workFlowAlarmsForm: undefined,\n          alarmsFormEntered: false,\n          receiveAlert: 'No',\n          alert_threshold: 0,\n          clear_threshold: 0,\n          duration: 0,\n          // workflowAlarmFilter : '',\n          // workflowAlarmFilterValues: [],\n          totMonitoredAlarms: 0,\n          groupAlarmData: {\n            data: []\n          },\n          individualAlarmData: {\n            data: [],\n            categoryList: [],\n            searchCategory: undefined,\n            searchSeverity: undefined,\n            prevSearchCategory: undefined,\n            prevSearchSeverity: undefined,\n            categoryOrSeverity: undefined\n          },\n          transformAlarmData: {\n            data: []\n          },\n          monitoredIndividualAlarm: {\n            data: [],\n            categoryList: []\n          },\n          monitoredGroupAlarm: {\n            data: []\n          },\n          monitoredTransformAlarm: {\n            data: []\n          }\n        },\n        conditions: {\n          workFlowStatus: undefined,\n          workFlowSaved: false,\n          isFormValid: false,\n          immediate: 'true',\n          exclusionsValid: 'valid',\n          weeklyScheduleValid: 'valid',\n          // workFlowConditionsForm: undefined,\n          conditionsFormEntered: false,\n          regionsDataArray: ['All'],\n          locationDataArray: ['All'],\n          minRaiseThreshold: 1,\n          recurrence: 'daily',\n          // immediate: 'true',\n          weekDays: [],\n          soakTime: 0,\n          minClearThreshold: 0,\n          oldNotifyOnClear: false,\n          soakTimeChanged: false,\n          workFlowConditionsForm: this.formBuilder.group({\n            region: ['', Validators.required],\n            location: ['', Validators.required],\n            soakTime: [0, [Validators.required, Validators.max(240), Validators.min(0)]],\n            raiseThreshold: [1, [Validators.required, Validators.max(10000)]],\n            duration: [1, [Validators.required, Validators.max(120), Validators.min(1)]],\n            immediate: ['true', Validators.required],\n            clearThreshold: [0],\n            // immediate: ['true', Validators.required],\n            notifyOnClear: [false],\n            weekDays: new FormArray([]),\n            // everyCount: [1],\n            recurrence: ['daily'],\n            scheduleStartTime: [new Date(new Date().setMonth(11))],\n            // numberOfMonths: [''],\n            dayOfMonth: [1],\n            timezone: ['']\n          })\n        },\n        notification: {\n          mailRecepients: [],\n          mailEntered: true,\n          workFlowSaved: false,\n          isFormValid: false,\n          // exclusionsValid: 'valid',\n          // workFlowScheduleForm: undefined,\n          scheduleFormEntered: false,\n          // recurrence: 'daily',\n          // // immediate: 'true',\n          // weekDays: [],\n          // minClearThreshold: 0,\n          isConsentMsgSmsPopupAccepted: false,\n          isLoadConsentMsgSmsPopupApplicable: true,\n          workFlowScheduleForm: this.formBuilder.group({\n            notes: ['']\n            // mailFormat: ['html', Validators.required],\n            // clearThreshold: [0],\n            // // immediate: ['true', Validators.required],\n            // notifyOnClear: [false],\n            // weekDays: new FormArray([]),\n            // // everyCount: [1],\n            // recurrence: ['daily'],\n            // scheduleStartTime: [''],\n            // numberOfMonths: [''],\n            // timezone : [''],        \n          }),\n\n          \"sms\": [],\n          \"webhooks\": []\n        },\n        summary: {\n          workFlowSaved: false\n        }\n      };\n      this.baseUrl = `${environment.API_BASE_URL}analytics-engine/`;\n      let base = `${environment.API_BASE}`;\n      let host = window.location.host;\n      if (base.indexOf('/dev.api.calix.ai') > -1) {\n        // || host.indexOf('localhost') > -1\n        this.isDev = true;\n      } else this.isDev = false;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.notificationsData.workflowId = params['workflowId'] ? params.workflowId : '';\n        this.notificationsData.details.workflowId = params['workflowId'] ? params.workflowId : '';\n      });\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.titleService.setTitle(`${this.language['alarm_notifications']} - ${this.language['Email Notifications']} - ${this.language['Network_Operations']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      });\n      this.titleService.setTitle(`${this.language['alarm_notifications']} - ${this.language['Email Notifications']} - ${this.language['Network_Operations']} - ${this.language['Operations']} - ${this.language['Operations']} - ${this.language['Calix Cloud']}`);\n      this.setDefaultWeekDays();\n      this.callMultipleAPI();\n    }\n    openModal() {\n      const modalRef = this.modalService.open(SmsConsentComponent);\n      modalRef.componentInstance.workflowObj = this.notificationsData.notification;\n      modalRef.result.then(result => {\n        if (result) {\n          console.log(result);\n          this.onTabChange(this.selectedTabIndex + 1, 'forward');\n        }\n      }).catch(res => {});\n      ;\n    }\n    callMultipleAPI() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n        // get categories\n        this.getCategories(),\n        //alarm data\n        this.getIndividualAlarmData(),\n        // this.getGroupAlarmData(),\n        this.getTransformAlarmData(),\n        //regions data\n        this.regionsApiLoader()]);\n        this.mergeAlarmRules();\n        if (this.notificationsData.workflowId != '') {\n          this.getWorkflowData();\n        }\n        //Call Get workflow API in alarm Notification page\n        // this.getWorkFlowAPIEmitter.emit(true);\n      });\n    }\n\n    getCategories() {\n      return new Promise((resolve, reject) => {\n        this.apiPreDataSevice.getCategories().then(data => {\n          this.notificationsData.alarms.individualAlarmData.categoryList = [...data];\n          this.notificationsData.alarms.monitoredIndividualAlarm.categoryList = [...data];\n          resolve();\n        });\n      });\n    }\n    getIndividualAlarmData() {\n      return new Promise((resolve, reject) => {\n        this.apiPreDataSevice.getIndividualAlarmData().then(data => {\n          this.notificationsData.alarms.individualAlarmData.data = [...data];\n          this.notificationsData.alarms.individualAlarmData = Object.assign({}, this.notificationsData.alarms.individualAlarmData);\n          resolve();\n        });\n      });\n    }\n    getGroupAlarmData() {\n      return new Promise((resolve, reject) => {\n        this.apiPreDataSevice.getGroupAlarmData().then(data => {\n          this.notificationsData.alarms.groupAlarmData.data = [...data];\n          this.notificationsData.alarms.groupAlarmData = Object.assign({}, this.notificationsData.alarms.groupAlarmData);\n          resolve();\n        });\n      });\n    }\n    getTransformAlarmData() {\n      return new Promise((resolve, reject) => {\n        this.apiPreDataSevice.getTransformAlarmData().then(data => {\n          this.notificationsData.alarms.transformAlarmData.data = [...data];\n          this.notificationsData.alarms.transformAlarmData = Object.assign({}, this.notificationsData.alarms.transformAlarmData);\n          resolve();\n        });\n      });\n    }\n    regionsApiLoader() {\n      return new Promise((resolve, reject) => {\n        this.apiPreDataSevice.regionsApiLoader().then(data => {\n          this.notificationsData.conditions.regionsDataArray = [...this.notificationsData.conditions.regionsDataArray, ...data];\n          resolve();\n        });\n      });\n    }\n    mergeAlarmRules() {\n      if (this.notificationsData.alarms.individualAlarmData.data.length > 0) {\n        let alarmRulesObj = this.notificationsData.alarms.individualAlarmData.data.filter(el => el.alarm_name.includes('multiple-onts-down') && el.alarm_category == 'PON transformed');\n        // if(this.notificationsData.alarms.transformAlarmData.data.length == 0){\n        //   if(alarmRulesObj.length > 0){\n        //     alarmRulesObj.forEach((el) => {\n        //       el['rulesnotexist'] = true;\n        //     })\n        //   }\n        //   return;\n        // } else {\n        if (alarmRulesObj.length > 0) {\n          alarmRulesObj.forEach(element => {\n            let transformAlarmRule = this.notificationsData.alarms.transformAlarmData.data.find(el => el['alarm_name'] == element['alarm_name']);\n            if (transformAlarmRule) {\n              element['alarm_id'] = transformAlarmRule['alarmRuleId'];\n              element['rulesexist'] = true;\n            } else {\n              element['rulesnotexist'] = true;\n            }\n          });\n        }\n        // }\n      }\n    }\n\n    patchNotificationFormValue() {\n      const weeklyDays = this.notificationsData.conditions.workFlowConditionsForm.get('weekDays');\n      if (weeklyDays.controls) {\n        weeklyDays.controls.length = 0;\n      }\n      this.notificationsData.conditions.weekDays.forEach(days => {\n        days['scheduleWeeklyStatus'] = days['scheduleWeeklyStatus'] ? days['scheduleWeeklyStatus'] : false;\n        weeklyDays.push(new FormGroup({\n          name: new FormControl(days.name),\n          short_name: new FormControl(days.short_name),\n          value: new FormControl(days.value),\n          dayFrom: new FormControl(days.dayFrom),\n          dayTo: new FormControl(days.dayTo),\n          defaultTime: new FormControl(days.defaultTime),\n          minTime: new FormControl(days.minTime),\n          maxTime: new FormControl(days.maxTime),\n          checked: new FormControl(days['checked'] || false),\n          scheduleWeeklyStatus: new FormControl(days['scheduleWeeklyStatus'])\n        }));\n      });\n    }\n    onTabChange(index, type) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30;\n      this.errorMsg = undefined;\n      this.notificationsData.notification.mailEntered = true;\n      this.notificationsData.conditions.exclusionsValid = 'valid';\n      this.notificationsData.conditions.weeklyScheduleValid = 'valid';\n      if (type == 'forward') {\n        if (((_c = (_b = (_a = this.notificationsData) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.workFlowDetailsForm) === null || _c === void 0 ? void 0 : _c.valid) && index < 2 && this.activeTab == 'Details' || (((_d = this.notificationsData.alarms.monitoredIndividualAlarm) === null || _d === void 0 ? void 0 : _d.data.length) > 0 || ((_e = this.notificationsData.alarms.monitoredGroupAlarm) === null || _e === void 0 ? void 0 : _e.data.length) > 0 || ((_f = this.notificationsData.alarms.monitoredTransformAlarm) === null || _f === void 0 ? void 0 : _f.data.length) > 0) && index == 2 && this.activeTab == 'Alarms' || index == 3 && this.activeTab == 'Conditions' && this.exclusionValidations() && !this.weeklyScheduleValidation() && ((_h = (_g = this.notificationsData.conditions) === null || _g === void 0 ? void 0 : _g.workFlowConditionsForm) === null || _h === void 0 ? void 0 : _h.valid) || /*this.notificationsData.notification?.workFlowScheduleForm?.valid && */((_k = (_j = this.notificationsData.notification) === null || _j === void 0 ? void 0 : _j.mailRecepients) === null || _k === void 0 ? void 0 : _k.length) > 0 || ((_m = (_l = this.notificationsData.notification) === null || _l === void 0 ? void 0 : _l.sms) === null || _m === void 0 ? void 0 : _m.length) > 0 || ((_p = (_o = this.notificationsData.notification) === null || _o === void 0 ? void 0 : _o.webhooks) === null || _p === void 0 ? void 0 : _p.length) > 0 && index == 4 && this.activeTab == 'notification') {\n          if (((_q = this.notificationsData.notification) === null || _q === void 0 ? void 0 : _q.isLoadConsentMsgSmsPopupApplicable) && !((_r = this.notificationsData.notification) === null || _r === void 0 ? void 0 : _r.isConsentMsgSmsPopupAccepted) && ((_t = (_s = this.notificationsData.notification) === null || _s === void 0 ? void 0 : _s.sms) === null || _t === void 0 ? void 0 : _t.length)) {\n            this.openModal();\n            return;\n          }\n          this.saveAndContinue(index);\n        } else if (index == 4 && /*!this.notificationsData.notification.workFlowScheduleForm.valid || */((_v = (_u = this.notificationsData.notification) === null || _u === void 0 ? void 0 : _u.mailRecepients) === null || _v === void 0 ? void 0 : _v.length) <= 0 && ((_x = (_w = this.notificationsData.notification) === null || _w === void 0 ? void 0 : _w.sms) === null || _x === void 0 ? void 0 : _x.length) <= 0 && ((_z = (_y = this.notificationsData.notification) === null || _y === void 0 ? void 0 : _y.webhooks) === null || _z === void 0 ? void 0 : _z.length) <= 0) {\n          /*if (this.notificationsData.notification?.mailRecepients.length <= 0) {\r\n            this.notificationsData.notification.mailEntered = false;\r\n          }\r\n          this.scheduleFormSubmit.next(true);*/\n          this.commonWorkflowService.setTabChange();\n        } else if (index == 3 && (!this.notificationsData.conditions.workFlowConditionsForm.valid || this.notificationsData.conditions.exclusionsValid == 'not-valid' || this.notificationsData.conditions.weeklyScheduleValid == 'not-valid')) {\n          if (this.notificationsData.conditions.exclusionsValid == 'not-valid') {\n            this.errorMsg = 'Please select start time and end time of all selected exclusion days.';\n          } else if (this.notificationsData.conditions.weeklyScheduleValid == 'not-valid') {\n            this.errorMsg = 'Please select at least one day.';\n          }\n          this.conditionFormSubmit.next(true);\n        } else if (index == 2 && (((_1 = (_0 = this.notificationsData.alarms) === null || _0 === void 0 ? void 0 : _0.monitoredIndividualAlarm) === null || _1 === void 0 ? void 0 : _1.data.length) == 0 && ((_3 = (_2 = this.notificationsData.alarms) === null || _2 === void 0 ? void 0 : _2.monitoredGroupAlarm) === null || _3 === void 0 ? void 0 : _3.data.length) == 0 || ((_5 = (_4 = this.notificationsData.alarms) === null || _4 === void 0 ? void 0 : _4.monitoredTransformAlarm) === null || _5 === void 0 ? void 0 : _5.data.length) == 0)) {\n          this.errorMsg = 'Please add at least one alarm.';\n        } else {\n          this.notificationsData.details.workFlowDetailsForm.markAllAsTouched();\n          this.notificationsData.details.isNameEntered = index !== 0 ? false : true;\n        }\n      } else if (type == 'backward') {\n        // if (\n        //   ((this.notificationsData.alarms.monitoredIndividualAlarm?.data.length >\n        //     0 ||\n        //     this.notificationsData.alarms.monitoredGroupAlarm?.data.length > 0 ||\n        //     this.notificationsData.alarms.monitoredTransformAlarm?.data.length >\n        //       0) &&\n        //     index == 0 &&\n        //     this.activeTab == 'Alarms') ||\n        //   (index == 1 &&\n        //     this.activeTab == 'Conditions' &&\n        //     this.notificationsData.conditions?.workFlowConditionsForm?.valid) ||\n        //   (index == 2 &&\n        //     this.activeTab == 'notification' &&\n        //     this.notificationsData.notification?.mailRecepients.length > 0 &&\n        //     this.notificationsData.notification?.workFlowScheduleForm?.valid &&\n        //     this.exclusionValidations())\n        // ) {\n        //   this.saveAndContinue(index);\n        // } else if (\n        //   index == 0 &&\n        //   ((this.notificationsData.alarms?.monitoredIndividualAlarm?.data\n        //     .length == 0 &&\n        //     this.notificationsData.alarms?.monitoredGroupAlarm?.data.length ==\n        //       0) ||\n        //     this.notificationsData.alarms?.monitoredTransformAlarm?.data.length ==\n        //       0)\n        // ) {\n        //   this.errorMsg = 'Please add at least one alarm.';\n        // } else if (\n        //   index == 1 &&\n        //   !this.notificationsData.conditions.workFlowConditionsForm.valid\n        // ) {\n        //   this.conditionFormSubmit.next(true);\n        // } else if (\n        //   index == 2 &&\n        //   (!this.notificationsData.notification.workFlowScheduleForm.valid ||\n        //     this.notificationsData.notification.exclusionsValid == 'not-valid' ||\n        //     this.notificationsData.notification?.mailRecepients.length <= 0)\n        // ) {\n        //   if (\n        //     this.notificationsData.notification.exclusionsValid == 'not-valid'\n        //   ) {\n        //     this.errorMsg =\n        //       'Please select start time and end time of all selected exclusion days.';\n        //   }\n        //   if(this.notificationsData.notification?.mailRecepients.length <= 0){\n        //     this.notificationsData.notification.mailEntered = false;\n        //   }\n        //   this.scheduleFormSubmit.next(true);\n        // } else if (index == 3 && this.activeTab == 'Summary') {\n        setTimeout(() => {\n          this.updateStepperCompleted(index);\n        }, 1000);\n        // } else {\n        //   this.notificationsData.details.isNameEntered =\n        //     index !== 0 ? false : true;\n        // }\n      } else if (type == 'stepperClick') {\n        if (index > this.selectedTabIndex) {\n          if ((index - 1 == this.selectedTabIndex || this.notificationsData[this.alarmNotificationsSteppers[index].value.toLowerCase()].workFlowSaved) && !(index == this.selectedTabIndex)) {\n            if (this.notificationsData.details.workFlowDetailsForm.valid && this.activeTab == 'Details' || (((_6 = this.notificationsData.alarms.monitoredIndividualAlarm) === null || _6 === void 0 ? void 0 : _6.data.length) > 0 || ((_7 = this.notificationsData.alarms.monitoredGroupAlarm) === null || _7 === void 0 ? void 0 : _7.data.length) > 0 || ((_8 = this.notificationsData.alarms.monitoredTransformAlarm) === null || _8 === void 0 ? void 0 : _8.data.length) > 0) && this.activeTab == 'Alarms' || this.activeTab == 'Conditions' && ((_10 = (_9 = this.notificationsData.conditions) === null || _9 === void 0 ? void 0 : _9.workFlowConditionsForm) === null || _10 === void 0 ? void 0 : _10.valid) && !this.weeklyScheduleValidation() && this.exclusionValidations() || this.activeTab == 'notification' && ((_11 = this.notificationsData.notification) === null || _11 === void 0 ? void 0 : _11.mailRecepients.length) > 0 || ((_13 = (_12 = this.notificationsData.notification) === null || _12 === void 0 ? void 0 : _12.sms) === null || _13 === void 0 ? void 0 : _13.length) > 0 || ((_15 = (_14 = this.notificationsData.notification) === null || _14 === void 0 ? void 0 : _14.webhooks) === null || _15 === void 0 ? void 0 : _15.length) > 0 /* &&\r\nthis.notificationsData.notification?.workFlowScheduleForm?.valid */ || this.activeTab == 'Summary') {\n              if (((_16 = this.notificationsData.notification) === null || _16 === void 0 ? void 0 : _16.isLoadConsentMsgSmsPopupApplicable) && !((_17 = this.notificationsData.notification) === null || _17 === void 0 ? void 0 : _17.isConsentMsgSmsPopupAccepted) && ((_19 = (_18 = this.notificationsData.notification) === null || _18 === void 0 ? void 0 : _18.sms) === null || _19 === void 0 ? void 0 : _19.length)) {\n                this.openModal();\n                return;\n              }\n              this.saveAndContinue(index);\n            } else if (this.activeTab == 'Alarms' && (((_21 = (_20 = this.notificationsData.alarms) === null || _20 === void 0 ? void 0 : _20.monitoredIndividualAlarm) === null || _21 === void 0 ? void 0 : _21.data.length) == 0 && ((_23 = (_22 = this.notificationsData.alarms) === null || _22 === void 0 ? void 0 : _22.monitoredGroupAlarm) === null || _23 === void 0 ? void 0 : _23.data.length) == 0 || ((_25 = (_24 = this.notificationsData.alarms) === null || _24 === void 0 ? void 0 : _24.monitoredTransformAlarm) === null || _25 === void 0 ? void 0 : _25.data.length) == 0)) {\n              this.errorMsg = 'Please add at least one alarm.';\n            } else if (this.activeTab == 'Conditions' && (!this.notificationsData.conditions.workFlowConditionsForm.valid || this.notificationsData.conditions.exclusionsValid == 'not-valid' || this.notificationsData.conditions.weeklyScheduleValid == 'not-valid')) {\n              if (this.notificationsData.conditions.exclusionsValid == 'not-valid') {\n                this.errorMsg = 'Please select start time and end time of all selected exclusion days.';\n              } else if (this.notificationsData.conditions.weeklyScheduleValid == 'not-valid') {\n                this.errorMsg = 'Please select atleast one day.';\n              }\n              this.conditionFormSubmit.next(true);\n            } else if (this.activeTab == 'notification' && /*!this.notificationsData.notification.workFlowScheduleForm.valid ||*/((_26 = this.notificationsData.notification) === null || _26 === void 0 ? void 0 : _26.mailRecepients.length) <= 0 && ((_28 = (_27 = this.notificationsData.notification) === null || _27 === void 0 ? void 0 : _27.sms) === null || _28 === void 0 ? void 0 : _28.length) <= 0 && ((_30 = (_29 = this.notificationsData.notification) === null || _29 === void 0 ? void 0 : _29.webhooks) === null || _30 === void 0 ? void 0 : _30.length) <= 0) {\n              this.commonWorkflowService.setTabChange();\n              // if (this.notificationsData.notification?.mailRecepients.length <= 0) {\n              //   this.notificationsData.notification.mailEntered = false;\n              // }\n              // this.scheduleFormSubmit.next(true);\n            } else if (!this.notificationsData.details.workFlowDetailsForm.valid && this.activeTab == 'Details') {\n              this.notificationsData.details.isNameEntered = false;\n            }\n          }\n        } else {\n          setTimeout(() => {\n            this.updateStepperCompleted(index);\n          }, 1000);\n        }\n      }\n    }\n    weeklyScheduleValidation() {\n      var _a, _b, _c;\n      const conditionForm = Object.assign({}, (_c = (_b = (_a = this.notificationsData) === null || _a === void 0 ? void 0 : _a.conditions) === null || _b === void 0 ? void 0 : _b.workFlowConditionsForm) === null || _c === void 0 ? void 0 : _c.value);\n      let validate = false;\n      if (conditionForm.weekDays.length > 0 && conditionForm.weekDays && conditionForm.immediate == 'false' && conditionForm.recurrence == 'weekly') {\n        validate = conditionForm.weekDays.every(el => !el['scheduleWeeklyStatus']);\n        if (validate) {\n          this.notificationsData.conditions.weeklyScheduleValid = 'not-valid';\n        }\n      }\n      return validate;\n    }\n    exclusionValidations() {\n      var _a, _b, _c;\n      const conditionForm = Object.assign({}, (_c = (_b = (_a = this.notificationsData) === null || _a === void 0 ? void 0 : _a.conditions) === null || _b === void 0 ? void 0 : _b.workFlowConditionsForm) === null || _c === void 0 ? void 0 : _c.value);\n      let validate = true;\n      if (conditionForm.weekDays.length > 0 && conditionForm.weekDays && conditionForm.immediate == 'true') {\n        conditionForm.weekDays = conditionForm.weekDays.forEach(element => {\n          if (element.checked) {\n            if (element.dayFrom == '' || element.dayTo == '') {\n              this.notificationsData.conditions.exclusionsValid = 'not-valid';\n              validate = false;\n            }\n          }\n        });\n      }\n      return validate;\n    }\n    saveAndContinue(index) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      if (this.activeTab == 'Summary') {\n        this.updateStepperCompleted(index);\n      } else {\n        if (this.activeTab == 'Details' && this.notificationsData.workflowId == '') {\n          let detailsForm = Object.assign({}, (_a = this.notificationsData.details.workFlowDetailsForm) === null || _a === void 0 ? void 0 : _a.controls);\n          let request_body = {\n            name: (_b = detailsForm['name']) === null || _b === void 0 ? void 0 : _b.value,\n            description: ((_c = detailsForm['description']) === null || _c === void 0 ? void 0 : _c.value) ? detailsForm['description']['value'] : ''\n          };\n          this.loading = true;\n          this.btnDisabled = true;\n          this.errorMsg = undefined;\n          this.error = false;\n          this.http.post(`${this.baseUrl}workflow`, request_body, {\n            responseType: 'text'\n          }).subscribe(res => {\n            if (res && res != '') {\n              this.loading = false;\n              this.success = true;\n              setTimeout(() => {\n                this.btnDisabled = false;\n                this.success = false;\n              }, 2000);\n              this.notificationsData.workflowId = res;\n              this.notificationsData.details.workflowId = res;\n              this.successInfo = 'Successfully Saved';\n              this.updateStepperCompleted(index);\n            } else {\n              this.loading = false;\n              this.btnDisabled = false;\n              this.errorMsg = this.language['Error'];\n            }\n          }, err => {\n            this.error = true;\n            this.loading = false;\n            this.btnDisabled = false;\n            this.pageErrorHandle(err);\n          });\n        } else {\n          let request_body = {};\n          if (this.activeTab == 'Details') {\n            let detailsForm = Object.assign({}, (_d = this.notificationsData.details.workFlowDetailsForm) === null || _d === void 0 ? void 0 : _d.controls);\n            request_body = {\n              name: (_e = detailsForm['name']) === null || _e === void 0 ? void 0 : _e.value,\n              description: ((_f = detailsForm['description']) === null || _f === void 0 ? void 0 : _f.value) ? detailsForm['description'].value : ''\n            };\n          } else if (this.activeTab == 'Alarms') {\n            let monitoredGroupAlarm = this.notificationsData.alarms.monitoredGroupAlarm.data.map(el => el.group_id);\n            // ,\n            // monitoredIndividualAlarm =\n            //   this.notificationsData.alarms.monitoredIndividualAlarm.data.map(\n            //     (el) => el.alarm_id\n            //   ),\n            // monitoredTransformAlarm =\n            //   this.notificationsData.alarms.monitoredTransformAlarm.data.map(\n            //     (el) => el.alarmRuleId\n            //   );\n            // mergeTransformRulesToIndividualAlarmsChanges\n            let monitoredIndividualAlarm = this.notificationsData.alarms.monitoredIndividualAlarm.data.filter(el => !el['rulesexist']).map(el => el.alarm_id),\n              monitoredTransformAlarm = this.notificationsData.alarms.monitoredIndividualAlarm.data.filter(el => el['rulesexist']).map(el => el.alarm_id);\n            //   let monitoredGroupAlarm =\n            //   this.notificationsData.alarms.monitoredGroupAlarm.data.map(\n            //     (el) => el.group_name\n            //   ),\n            // monitoredIndividualAlarm =\n            //   this.notificationsData.alarms.monitoredIndividualAlarm.data.map(\n            //     (el) => el.alarm_name\n            //   ),\n            // monitoredTransformAlarm =\n            //   this.notificationsData.alarms.monitoredTransformAlarm.data.map(\n            //     (el) => el.group_name\n            //   );\n            let workflowAlarmFilterValues = [];\n            let workflowAlarmFilter = 'CATEGORY';\n            /*workflow mutually exclusive post\r\n               \r\n                let categorySeverityName = '';\r\n                if(this.notificationsData.alarms.individualAlarmData.categoryOrSeverity == 'CATEGORY'){\r\n                  if(this.notificationsData.alarms.individualAlarmData.prevSearchCategory){\r\n                    categorySeverityName = this.notificationsData.alarms.individualAlarmData.prevSearchCategory\r\n                  }else{\r\n                    categorySeverityName = this.notificationsData.alarms.individualAlarmData.searchCategory\r\n                  }\r\n                  workflowAlarmFilterValues.push(categorySeverityName);\r\n                  workflowAlarmFilter = 'CATEGORY';\r\n                }else if(this.notificationsData.alarms.individualAlarmData.categoryOrSeverity == 'SEVERITY'){\r\n                  if(this.notificationsData.alarms.individualAlarmData.prevSearchSeverity){\r\n                    categorySeverityName = this.notificationsData.alarms.individualAlarmData.prevSearchSeverity\r\n                  }else{\r\n                    categorySeverityName = this.notificationsData.alarms.individualAlarmData.searchSeverity\r\n                  }\r\n                  workflowAlarmFilterValues.push(categorySeverityName);\r\n                  workflowAlarmFilter = 'SEVERITY';\r\n                }\r\n                  \r\n                 workflow mutually exclusive post */\n            // if(this.notificationsData.alarms.individualAlarmData.searchCategory){\n            //   workflowAlarmFilterValues.push(this.notificationsData.alarms.individualAlarmData.searchCategory);\n            //   workflowAlarmFilter = 'CATEGORY';\n            // }else if(this.notificationsData.alarms.individualAlarmData.searchSeverity){\n            //   workflowAlarmFilterValues.push(this.notificationsData.alarms.individualAlarmData.searchSeverity);\n            //   workflowAlarmFilter = 'SEVERITY';\n            // }\n            // if(monitoredGroupAlarm.length > 0){\n            //   request_body['alarmGroups'] = monitoredGroupAlarm;\n            // }\n            // if(monitoredIndividualAlarm.length > 0){\n            //   request_body['alarmNames'] = monitoredIndividualAlarm;\n            // }\n            // if(monitoredTransformAlarm.length > 0){\n            //   request_body['transformAlarms'] = monitoredTransformAlarm;\n            // }\n            request_body = {\n              alarmGroups: monitoredGroupAlarm,\n              alarmNames: monitoredIndividualAlarm,\n              transformAlarms: monitoredTransformAlarm\n            };\n            // if(workflowAlarmFilterValues.length > 0 && monitoredIndividualAlarm.length > 0){\n            request_body['workflowAlarmFilterValues'] = workflowAlarmFilterValues;\n            request_body['workflowAlarmFilter'] = workflowAlarmFilter;\n            // }\n          } else if (this.activeTab == 'Conditions') {\n            let conditionForm = Object.assign({}, (_g = this.notificationsData.conditions.workFlowConditionsForm) === null || _g === void 0 ? void 0 : _g.value);\n            request_body = {\n              region: conditionForm['region'] && conditionForm['region'].length > 0 ? conditionForm['region'].indexOf('All') != -1 ? ['11111111-1111-1111-1111-111111111111'] : conditionForm['region'] : [],\n              location: conditionForm['location'] && conditionForm['location'].length > 0 ? conditionForm['location'].indexOf('All') != -1 ? ['11111111-1111-1111-1111-111111111111'] : conditionForm['location'] : []\n            };\n            request_body['timezone'] = conditionForm['timezone'];\n            request_body['schedule'] = {};\n            if (conditionForm['immediate'] == 'true') {\n              request_body['raiseThreshold'] = conditionForm['raiseThreshold'] ? conditionForm['raiseThreshold'] : 1;\n              request_body['duration'] = conditionForm['duration'] ? conditionForm['duration'] : 1;\n              request_body['soakTime'] = conditionForm['soakTime'] ? conditionForm['soakTime'] : 0;\n              if (conditionForm['notifyOnClear'] == true) {\n                request_body['notifyOnClear'] = true;\n                request_body['clearThreshold'] = conditionForm['clearThreshold'] ? conditionForm['clearThreshold'] : 0;\n              } else if (conditionForm['notifyOnClear'] == false) {\n                request_body['notifyOnClear'] = false;\n                request_body['clearThreshold'] = 0;\n              }\n              let filter = [];\n              conditionForm.weekDays.forEach(element => {\n                var _a;\n                if (element['checked']) {\n                  let obj = {};\n                  obj['fromTime'] = (element.dayFrom.getHours() < 10 ? '0' : '') + element.dayFrom.getHours() + ':' + (element.dayFrom.getMinutes() < 10 ? '0' : '') + element.dayFrom.getMinutes();\n                  obj['toTime'] = (element.dayTo.getHours() < 10 ? '0' : '') + element.dayTo.getHours() + ':' + (element.dayTo.getMinutes() < 10 ? '0' : '') + element.dayTo.getMinutes();\n                  obj['daysOfWeek'] = (_a = element.short_name) === null || _a === void 0 ? void 0 : _a.toUpperCase();\n                  filter.push(obj);\n                }\n              });\n              request_body['schedule']['immediate'] = true;\n              // if(filter.length > 0){\n              request_body['filter'] = filter;\n              // }\n            } else {\n              request_body['schedule']['immediate'] = false;\n              request_body['schedule']['recurrencePattern'] = {};\n              request_body['schedule']['type'] = conditionForm['recurrence'];\n              if (conditionForm['recurrence'] == 'daily') {\n                request_body['schedule']['recurrencePattern']['daily'] = {};\n                let reqStartTime = new Date(conditionForm['scheduleStartTime']);\n                request_body['schedule']['recurrencePattern']['daily']['startTime'] = (reqStartTime.getHours() < 10 ? '0' : '') + reqStartTime.getHours() + ':' + (reqStartTime.getMinutes() < 10 ? '0' : '') + reqStartTime.getMinutes();\n              } else if (conditionForm['recurrence'] == 'weekly') {\n                let weekly = conditionForm.weekDays.map(el => {\n                  if (el['scheduleWeeklyStatus']) {\n                    if (el['short_name']) {\n                      return el['short_name'].toUpperCase();\n                    }\n                  }\n                }).filter(notUndefined => notUndefined !== undefined);\n                request_body['schedule']['recurrencePattern']['weekly'] = {};\n                request_body['schedule']['recurrencePattern']['weekly']['days'] = weekly;\n                let reqStartTime = new Date(conditionForm['scheduleStartTime']);\n                request_body['schedule']['recurrencePattern']['weekly']['startTime'] = (reqStartTime.getHours() < 10 ? '0' : '') + reqStartTime.getHours() + ':' + (reqStartTime.getMinutes() < 10 ? '0' : '') + reqStartTime.getMinutes();\n              } else if (conditionForm['recurrence'] == 'monthly') {\n                request_body['schedule']['recurrencePattern']['monthly'] = {};\n                request_body['schedule']['recurrencePattern']['monthly']['dayOfMonth'] = conditionForm['dayOfMonth'] ? conditionForm['dayOfMonth'] : 1;\n                // new Date(\n                //   conditionForm['scheduleStartTime']\n                // ).getDate()\n                let reqStartTime = new Date(conditionForm['scheduleStartTime']);\n                request_body['schedule']['recurrencePattern']['monthly']['startTime'] = (reqStartTime.getHours() < 10 ? '0' : '') + reqStartTime.getHours() + ':' + (reqStartTime.getMinutes() < 10 ? '0' : '') + reqStartTime.getMinutes();\n                // request_body['schedule']['recurrencePattern']['monthly'][\n                // 'numberOfMonths'\n                // ] = conditionForm['numberOfMonths'];\n              }\n              // request_body['schedule']['scheduleStartTime'] = new Date(\n              //   conditionForm['scheduleStartTime']\n              // ).getTime();\n            }\n          } else if (this.activeTab == 'notification') {\n            // let scheduleForm = {\n            //   ...this.notificationsData.notification.workFlowScheduleForm?.value,\n            // };\n            request_body = {\n              // notes: this.isDev ? scheduleForm['notes'] : (scheduleForm['notes'] ? scheduleForm['notes'].replace(/\\n/g, \"<br />\") : ''),\n              // format : scheduleForm['mailFormat'] ? scheduleForm['mailFormat'].toUpperCase() : '',\n              notes: this.notificationsData.notification.notes,\n              emails: this.notificationsData.notification.mailRecepients && this.notificationsData.notification.mailRecepients.length > 0 ? this.notificationsData.notification.mailRecepients.map(el => {\n                return el;\n              }) : [],\n              sms: this.notificationsData.notification.sms,\n              webhooks: this.notificationsData.notification.webhooks\n            };\n          }\n          this.loading = true;\n          this.btnDisabled = true;\n          this.errorMsg = undefined;\n          this.http.put(`${this.baseUrl}workflow/${this.notificationsData.workflowId}`, request_body, {\n            responseType: 'text'\n          }).subscribe(res => {\n            if (res && res != '') {\n              this.loading = false;\n              this.success = true;\n              setTimeout(() => {\n                this.btnDisabled = false;\n                this.success = false;\n              }, 2000);\n              this.successInfo = 'Successfully Saved';\n              this.updateStepperCompleted(index);\n            } else {\n              this.loading = false;\n              this.btnDisabled = false;\n              this.errorMsg = this.language['Error'];\n            }\n          }, err => {\n            this.error = true;\n            this.loading = false;\n            this.btnDisabled = false;\n            this.pageErrorHandle(err);\n          });\n        }\n      }\n    }\n    updateStepperCompleted(index) {\n      this.notificationsData[this.activeTab.toLowerCase()].workFlowSaved = true;\n      this.goToNextStepper(index);\n    }\n    goToNextStepper(index) {\n      this.activeTab = this.alarmNotificationsSteppers[index].value;\n      this.selectedTabIndex = index;\n      this.isTabChange = !this.isTabChange;\n      if (this.levelsPassed < index) {\n        this.levelsPassed = index;\n      }\n    }\n    getWorkflowData(event) {\n      this.loadEditable.next(true);\n      this.http.get(`${this.baseUrl}workflow?workflowId=${this.notificationsData.workflowId}`).subscribe(data => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\n        if (data && Object.entries(data).length > 0) {\n          this.notificationsData.workFlowData = JSON.parse(JSON.stringify(data));\n          //Set Details page\n          this.notificationsData['details'].workFlowSaved = true;\n          this.levelsPassed = 1;\n          const detailsForm = Object.assign({}, (_c = (_b = (_a = this.notificationsData) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.workFlowDetailsForm) === null || _c === void 0 ? void 0 : _c.controls);\n          if (detailsForm && Object.entries(detailsForm).length > 0) {\n            detailsForm['name'].setValue(data['name'] ? data['name'] : (_d = detailsForm['name']) === null || _d === void 0 ? void 0 : _d.value);\n            detailsForm['description'].setValue(data['description'] ? data['description'] : (_e = detailsForm['description']) === null || _e === void 0 ? void 0 : _e.value);\n          }\n          //Set Alarms page\n          //Set group alarm\n          if (data.alarmGroups && data.alarmGroups.length > 0 || data.transformAlarms && data.transformAlarms.length > 0 || data.alarmNames && data.alarmNames.length > 0) {\n            this.notificationsData['alarms'].workFlowSaved = true;\n            this.levelsPassed = 2;\n          }\n          if ((_g = (_f = this.notificationsData.alarms) === null || _f === void 0 ? void 0 : _f.monitoredGroupAlarm) === null || _g === void 0 ? void 0 : _g.data) {\n            this.notificationsData.alarms.monitoredGroupAlarm.data = [];\n          }\n          if (this.notificationsData.alarms.groupAlarmData.data && this.notificationsData.alarms.groupAlarmData.data.length > 0) {\n            this.notificationsData.alarms.groupAlarmData.data.forEach(element => {\n              element['isChecked'] = false;\n              element['disabled'] = false;\n              element['selectedAlready'] = false;\n            });\n          }\n          if (data.alarmGroups && data.alarmGroups.length > 0) {\n            data.alarmGroups.forEach(el => {\n              let alarmObj = this.notificationsData.alarms.groupAlarmData.data.find(\n              // (alarm) => alarm.group_name == el\n              alarm => alarm.group_id == el);\n              if (alarmObj) {\n                delete alarmObj['isChecked'];\n                delete alarmObj['disabled'];\n                delete alarmObj['selectedAlready'];\n                this.notificationsData.alarms.monitoredGroupAlarm.data.push(Object.assign({}, alarmObj));\n                alarmObj['isChecked'] = true;\n                alarmObj['disabled'] = true;\n                alarmObj['selectedAlready'] = true;\n              }\n            });\n          }\n          if ((_j = (_h = this.notificationsData.alarms) === null || _h === void 0 ? void 0 : _h.monitoredGroupAlarm) === null || _j === void 0 ? void 0 : _j.rerenderSubject) {\n            this.notificationsData.alarms.monitoredGroupAlarm.rerenderSubject.next(true);\n          }\n          //Set transform alarm\n          if ((_l = (_k = this.notificationsData.alarms) === null || _k === void 0 ? void 0 : _k.monitoredTransformAlarm) === null || _l === void 0 ? void 0 : _l.data) {\n            this.notificationsData.alarms.monitoredTransformAlarm.data = [];\n          }\n          if (this.notificationsData.alarms.transformAlarmData.data && this.notificationsData.alarms.transformAlarmData.data.length > 0) {\n            this.notificationsData.alarms.transformAlarmData.data.forEach(element => {\n              element['isChecked'] = false;\n              element['disabled'] = false;\n              element['selectedAlready'] = false;\n            });\n          }\n          if (data.transformAlarms && data.transformAlarms.length > 0) {\n            data.transformAlarms.forEach(el => {\n              let alarmObj = this.notificationsData.alarms.transformAlarmData.data.find(alarm => alarm.alarmRuleId == el\n              // (alarm) => alarm.group_name == el\n              );\n\n              if (alarmObj) {\n                delete alarmObj['isChecked'];\n                delete alarmObj['disabled'];\n                delete alarmObj['selectedAlready'];\n                this.notificationsData.alarms.monitoredTransformAlarm.data.push(Object.assign({}, alarmObj));\n                alarmObj['isChecked'] = true;\n                alarmObj['disabled'] = true;\n                alarmObj['selectedAlready'] = true;\n              }\n            });\n          }\n          if ((_o = (_m = this.notificationsData.alarms) === null || _m === void 0 ? void 0 : _m.monitoredTransformAlarm) === null || _o === void 0 ? void 0 : _o.rerenderSubject) {\n            this.notificationsData.alarms.monitoredTransformAlarm.rerenderSubject.next(true);\n          }\n          //Set individual alarm\n          if ((_q = (_p = this.notificationsData.alarms) === null || _p === void 0 ? void 0 : _p.monitoredIndividualAlarm) === null || _q === void 0 ? void 0 : _q.data) {\n            this.notificationsData.alarms.monitoredIndividualAlarm.data = [];\n          }\n          if (this.notificationsData.alarms.individualAlarmData.data && this.notificationsData.alarms.individualAlarmData.data.length > 0) {\n            this.notificationsData.alarms.individualAlarmData.data.forEach(element => {\n              element['isChecked'] = false;\n              element['disabled'] = false;\n              element['selectedAlready'] = false;\n            });\n          }\n          if ((_t = (_s = (_r = this.notificationsData) === null || _r === void 0 ? void 0 : _r.alarms) === null || _s === void 0 ? void 0 : _s.individualAlarmData) === null || _t === void 0 ? void 0 : _t.searchCategory) {\n            this.notificationsData.alarms.individualAlarmData.searchCategory = undefined;\n            this.notificationsData.alarms.individualAlarmData.prevSearchCategory = undefined;\n          }\n          if ((_w = (_v = (_u = this.notificationsData) === null || _u === void 0 ? void 0 : _u.alarms) === null || _v === void 0 ? void 0 : _v.individualAlarmData) === null || _w === void 0 ? void 0 : _w.searchSeverity) {\n            this.notificationsData.alarms.individualAlarmData.searchSeverity = undefined;\n            this.notificationsData.alarms.individualAlarmData.prevSearchSeverity = undefined;\n          }\n          if (data.alarmNames && data.alarmNames.length > 0 || data.transformAlarms && data.transformAlarms.length > 0) {\n            //mergeTransformAlarmsToIndividualAlarmschanges\n            data.alarmNames = [...data.alarmNames, ...data.transformAlarms];\n            this.notificationsData.alarms.monitoredTransformAlarm.data = [];\n            data.alarmNames.forEach(el => {\n              let alarmObj = this.notificationsData.alarms.individualAlarmData.data.find(alarm => alarm.alarm_id == el\n              // (alarm) => alarm.alarm_name == el\n              );\n\n              if (alarmObj) {\n                delete alarmObj['isChecked'];\n                delete alarmObj['disabled'];\n                delete alarmObj['selectedAlready'];\n                this.notificationsData.alarms.monitoredIndividualAlarm.data.push(Object.assign({}, alarmObj));\n                alarmObj['isChecked'] = true;\n                alarmObj['disabled'] = true;\n                alarmObj['selectedAlready'] = true;\n              }\n            });\n            // if(data['workflowAlarmFilter'] && data['workflowAlarmFilter'] == 'CATEGORY'){\n            //   this.notificationsData.alarms.individualAlarmData.categoryOrSeverity = 'CATEGORY';\n            //   this.notificationsData.alarms.individualAlarmData.searchCategory = data['workflowAlarmFilterValues'] && data['workflowAlarmFilterValues'].length > 0?data['workflowAlarmFilterValues'][0] : '';\n            //   this.notificationsData.alarms.individualAlarmData.prevSearchCategory = data['workflowAlarmFilterValues'] && data['workflowAlarmFilterValues'].length > 0?data['workflowAlarmFilterValues'][0] : '';\n            // }else if(data['workflowAlarmFilter'] && data['workflowAlarmFilter'] == 'SEVERITY'){\n            //   this.notificationsData.alarms.individualAlarmData.categoryOrSeverity = 'SEVERITY'\n            //   this.notificationsData.alarms.individualAlarmData.searchSeverity = data['workflowAlarmFilterValues'] && data['workflowAlarmFilterValues'].length > 0?data['workflowAlarmFilterValues'][0] : '';\n            //   this.notificationsData.alarms.individualAlarmData.prevSearchSeverity = data['workflowAlarmFilterValues'] && data['workflowAlarmFilterValues'].length > 0?data['workflowAlarmFilterValues'][0] : '';\n            // }\n          }\n\n          if ((_y = (_x = this.notificationsData.alarms) === null || _x === void 0 ? void 0 : _x.monitoredIndividualAlarm) === null || _y === void 0 ? void 0 : _y.rerenderSubject) {\n            this.notificationsData.alarms.monitoredIndividualAlarm.rerenderSubject.next(true);\n          }\n          setTimeout(() => {\n            if (this.notificationsData.alarms.individualAlarmData) {\n              this.notificationsData.alarms.individualAlarmData = Object.assign({}, this.notificationsData.alarms.individualAlarmData);\n            }\n          }, 500);\n          this.calculateTotalMonitoredAlarms();\n          this.setConditionPageData(data);\n          this.loadEditable.next(false);\n          // this.goToNextStepper(index);\n        }\n      }, error => {\n        this.loadEditable.next(false);\n        this.error = true;\n        this.pageErrorHandle(error);\n      });\n    }\n    setConditionPageData(data) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12;\n      return __awaiter(this, void 0, void 0, function* () {\n        //setDefaultWeekDays\n        this.setDefaultWeekDays();\n        if (data.region && data.region.length > 0) {\n          data.region = (_b = (_a = this.notificationsData.conditions.regionsDataArray) === null || _a === void 0 ? void 0 : _a.filter(region => {\n            var _a;\n            return (_a = data.region) === null || _a === void 0 ? void 0 : _a.includes(region.id);\n          })) === null || _b === void 0 ? void 0 : _b.map(el => el['id']);\n          this.notificationsData['conditions'].workFlowSaved = true;\n          this.levelsPassed = 3;\n        }\n        this.notificationsData['conditions'].workFlowStatus = data && data.status ? data.status : undefined;\n        //Set Conditions data\n        const conditionForm = Object.assign({}, (_e = (_d = (_c = this.notificationsData) === null || _c === void 0 ? void 0 : _c.conditions) === null || _d === void 0 ? void 0 : _d.workFlowConditionsForm) === null || _e === void 0 ? void 0 : _e.controls);\n        if (conditionForm && Object.entries(conditionForm).length > 0) {\n          if (data.region && data.region.length > 0) {\n            this.notificationsData.conditions.locationDataArray = yield this.loadLocationValue(data.region);\n            this.notificationsData.conditions.locationDataArray = this.issueService.appendFqn(this.notificationsData.conditions.locationDataArray);\n            this.notificationsData.conditions.locationDataArray = this.notificationsData.conditions.locationDataArray.sort((a, b) => (a['name'] || '').toString().localeCompare((b['name'] || '').toString(), 'en', {\n              numeric: false\n            }));\n            let mod_res = this.notificationsData.conditions.locationDataArray.map(el => {\n              let strings = el.fqn.split(','),\n                regionFound = strings.find(el => el.includes('REGION'));\n              if (regionFound.split('=').length > 0) {\n                el['region_name'] = regionFound.split('=')[1];\n              }\n              return el;\n            });\n            let counts = {};\n            mod_res.forEach((x, parent_index) => {\n              let duplicateObj = mod_res.find((el, i) => el.region_name == x.region_name && el.regionId != x.regionId && i != parent_index);\n              if (duplicateObj) {\n                counts[x.region_name] = (counts[x.region_name] || 0) + 1;\n              }\n            });\n            mod_res.forEach((element, index) => {\n              var _a;\n              element['check_region_name'] = element.region_name + \" (\" + ((_a = element.fqn) === null || _a === void 0 ? void 0 : _a.split('=')[1].split(',')[0]) + \")\";\n              if (counts[element['region_name']] > 1) {\n                element.region_name = element['check_region_name'];\n              }\n            });\n            this.notificationsData.conditions.locationDataArray = [...mod_res];\n            this.notificationsData.conditions.locationDataArray.unshift({\n              name: 'All',\n              id: 'All'\n            });\n            if (data.region.indexOf('11111111-1111-1111-1111-111111111111') == -1) {\n              conditionForm['region'].setValue(data.region);\n            } else {\n              conditionForm['region'].setValue(['All']);\n            }\n          }\n          data['location'] = (_g = (_f = this.notificationsData.conditions.locationDataArray) === null || _f === void 0 ? void 0 : _f.filter(location => {\n            var _a;\n            return (_a = data.location) === null || _a === void 0 ? void 0 : _a.includes(location.id);\n          })) === null || _g === void 0 ? void 0 : _g.map(el => el['id']);\n          if (data.location && data.location.length > 0) {\n            if (data.location.indexOf('11111111-1111-1111-1111-111111111111') == -1) {\n              conditionForm['location'].setValue(data.location);\n            } else {\n              conditionForm['location'].setValue(['All']);\n            }\n          }\n          conditionForm['duration'].setValue(1);\n          conditionForm['soakTime'].setValue(0);\n          conditionForm['raiseThreshold'].setValue(1);\n          conditionForm['notifyOnClear'].setValue(false);\n          conditionForm['clearThreshold'].setValue(0);\n          conditionForm['recurrence'].setValue('daily');\n          //default timezone\n          let localeDate = new Date().toString().split(' '),\n            gmtId = (localeDate[5] ? localeDate[5] : '') + ' ' + (localeDate[6] ? localeDate[6] : '') + ' ' + (localeDate[7] ? localeDate[7] : '') + ' ' + (localeDate[8] ? localeDate[8] : '');\n          conditionForm['timezone'].setValue(gmtId);\n          if (data.timezone && data.timezone != '') {\n            conditionForm['timezone'].setValue(data.timezone);\n          }\n          // conditionForm['immediate'].setValue('true');\n          // conditionForm['immediate'].setValue(data?.schedule?.immediate && data.schedule.immediate == true ? 'true' : (!this.notificationsData['conditions'].workFlowSaved?'true' : 'false'));\n          conditionForm['immediate'].setValue(!(data === null || data === void 0 ? void 0 : data.schedule) ? 'true' : ((_h = data === null || data === void 0 ? void 0 : data.schedule) === null || _h === void 0 ? void 0 : _h.immediate) && data.schedule.immediate == true ? 'true' : !this.notificationsData['conditions'].workFlowSaved ? 'true' : 'false');\n          if ((_j = data === null || data === void 0 ? void 0 : data.schedule) === null || _j === void 0 ? void 0 : _j.immediate) {\n            this.notificationsData.conditions.minClearThreshold = 0;\n            // this.notificationsData.conditions.minRaiseThreshold =\n            //   data['clearThreshold'] ? Number(data.clearThreshold) + 1 : 1;\n            if (data.duration && data.duration != '') {\n              conditionForm['duration'].setValue(data.duration);\n            }\n            if (data.soakTime && data.soakTime != '' || data.soakTime == 0) {\n              conditionForm['soakTime'].setValue(data.soakTime);\n              this.notificationsData.conditions.soakTime = data.soakTime;\n            }\n            if (data.raiseThreshold && data.raiseThreshold != '') {\n              conditionForm['raiseThreshold'].setValue(data.raiseThreshold);\n              this.notificationsData.conditions.minClearThreshold = data.raiseThreshold;\n              // this.notificationsData.conditions.minRaiseThreshold =\n              //   data['clearThreshold'] ? Number(data.clearThreshold) + 1 : 1;\n            }\n\n            if (data && data.soakTime != undefined && data.soakTime != null && data.soakTime > 0) {\n              conditionForm['notifyOnClear'].setValue(true);\n              conditionForm['clearThreshold'].setValue((data === null || data === void 0 ? void 0 : data.clearThreshold) ? data.clearThreshold : 0);\n            } else if (data && data.soakTime != undefined && data.soakTime != null && data.soakTime == 0) {\n              conditionForm['notifyOnClear'].setValue((data === null || data === void 0 ? void 0 : data.notifyOnClear) == true ? true : false);\n              conditionForm['clearThreshold'].setValue((data === null || data === void 0 ? void 0 : data.clearThreshold) ? data.clearThreshold : 0);\n            }\n            if ((data === null || data === void 0 ? void 0 : data.filter) && data.filter.length > 0) {\n              if (((_k = conditionForm['weekDays']) === null || _k === void 0 ? void 0 : _k.value) && ((_l = conditionForm['weekDays']['value']) === null || _l === void 0 ? void 0 : _l.length) > 0) {\n                data.filter.forEach(element => {\n                  let weekDaysObj = conditionForm.weekDays.value.findIndex(el => {\n                    var _a, _b;\n                    return ((_a = el['short_name']) === null || _a === void 0 ? void 0 : _a.toLowerCase()) == ((_b = element['daysOfWeek']) === null || _b === void 0 ? void 0 : _b.toLowerCase());\n                  });\n                  if (weekDaysObj >= 0) {\n                    let dayFromTime = new Date(),\n                      dayToTime = new Date();\n                    let dayFromSplit = element['fromTime'].split(':'),\n                      dayToSplit = element['toTime'].split(':');\n                    dayFromTime.setHours(dayFromSplit[0]);\n                    dayFromTime.setMinutes(dayFromSplit[1]);\n                    dayToTime.setHours(dayToSplit[0]);\n                    dayToTime.setMinutes(dayToSplit[1]);\n                    // weekDaysObj['dayFrom'] = dayFromTime;\n                    // weekDaysObj['dayTo'] = dayToTime;\n                    conditionForm.weekDays.controls[weekDaysObj].controls['dayFrom'].setValue(dayFromTime);\n                    conditionForm.weekDays.controls[weekDaysObj].controls['dayTo'].setValue(dayToTime);\n                    conditionForm.weekDays.controls[weekDaysObj].controls['checked'].setValue(true);\n                  }\n                });\n              }\n            }\n          } else {\n            let startTime = new Date();\n            if (((_m = data === null || data === void 0 ? void 0 : data.schedule) === null || _m === void 0 ? void 0 : _m.type) == 'daily') {\n              if ((_q = (_p = (_o = data === null || data === void 0 ? void 0 : data.schedule) === null || _o === void 0 ? void 0 : _o.recurrencePattern) === null || _p === void 0 ? void 0 : _p.daily) === null || _q === void 0 ? void 0 : _q.startTime) {\n                let startTimeSplit = data.schedule.recurrencePattern.daily.startTime.split(':');\n                startTime.setHours(startTimeSplit[0]);\n                startTime.setMinutes(startTimeSplit[1]);\n              }\n              if ((_t = (_s = (_r = data === null || data === void 0 ? void 0 : data.schedule) === null || _r === void 0 ? void 0 : _r.recurrencePattern) === null || _s === void 0 ? void 0 : _s.daily) === null || _t === void 0 ? void 0 : _t.startTime) {\n                conditionForm['scheduleStartTime'].setValue(startTime);\n              }\n              conditionForm['recurrence'].setValue('daily');\n            } else if (((_u = data === null || data === void 0 ? void 0 : data.schedule) === null || _u === void 0 ? void 0 : _u.type) == 'weekly' && ((_x = (_w = (_v = data === null || data === void 0 ? void 0 : data.schedule) === null || _v === void 0 ? void 0 : _v.recurrencePattern) === null || _w === void 0 ? void 0 : _w.weekly) === null || _x === void 0 ? void 0 : _x.days) && data.schedule.recurrencePattern.weekly.days.length > 0) {\n              if ((_0 = (_z = (_y = data === null || data === void 0 ? void 0 : data.schedule) === null || _y === void 0 ? void 0 : _y.recurrencePattern) === null || _z === void 0 ? void 0 : _z.weekly) === null || _0 === void 0 ? void 0 : _0.startTime) {\n                let startTimeSplit = data.schedule.recurrencePattern.weekly.startTime.split(':');\n                startTime.setHours(startTimeSplit[0]);\n                startTime.setMinutes(startTimeSplit[1]);\n              }\n              conditionForm['scheduleStartTime'].setValue(startTime);\n              if (((_1 = conditionForm['weekDays']) === null || _1 === void 0 ? void 0 : _1.value) && ((_2 = conditionForm['weekDays']['value']) === null || _2 === void 0 ? void 0 : _2.length) > 0) {\n                conditionForm['recurrence'].setValue('weekly');\n                conditionForm.weekDays.value.forEach((el, index) => {\n                  if (el && el != '') {\n                    if (data.schedule.recurrencePattern.weekly.days.findIndex(ele => {\n                      var _a;\n                      return (ele === null || ele === void 0 ? void 0 : ele.toLowerCase()) == ((_a = el.short_name) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n                    }) != -1) {\n                      conditionForm.weekDays.controls[index].controls['scheduleWeeklyStatus'].setValue(true);\n                      // el['scheduleWeeklyStatus'] = true;\n                    } else {\n                      conditionForm.weekDays.controls[index].controls['scheduleWeeklyStatus'].setValue(false);\n                      // el['scheduleWeeklyStatus'] = false;\n                    }\n                  }\n                });\n\n                if (this.notificationsData.conditions.weekDays && ((_5 = (_4 = (_3 = this.notificationsData) === null || _3 === void 0 ? void 0 : _3.conditions) === null || _4 === void 0 ? void 0 : _4.weekDays) === null || _5 === void 0 ? void 0 : _5.length) > 0) {\n                  this.notificationsData.conditions.weekDays.forEach((el, index) => {\n                    if (el && el != '') {\n                      if (data.schedule.recurrencePattern.weekly.days.findIndex(ele => {\n                        var _a;\n                        return (ele === null || ele === void 0 ? void 0 : ele.toLowerCase()) == ((_a = el.short_name) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n                      }) != -1) {\n                        el['scheduleWeeklyStatus'] = true;\n                      } else {\n                        el['scheduleWeeklyStatus'] = false;\n                      }\n                    }\n                  });\n                }\n              }\n            } else if (((_6 = data === null || data === void 0 ? void 0 : data.schedule) === null || _6 === void 0 ? void 0 : _6.type) == 'monthly' && ((_9 = (_8 = (_7 = data === null || data === void 0 ? void 0 : data.schedule) === null || _7 === void 0 ? void 0 : _7.recurrencePattern) === null || _8 === void 0 ? void 0 : _8.monthly) === null || _9 === void 0 ? void 0 : _9.dayOfMonth) && data.schedule.recurrencePattern.monthly.dayOfMonth >= 0) {\n              if ((_12 = (_11 = (_10 = data === null || data === void 0 ? void 0 : data.schedule) === null || _10 === void 0 ? void 0 : _10.recurrencePattern) === null || _11 === void 0 ? void 0 : _11.monthly) === null || _12 === void 0 ? void 0 : _12.startTime) {\n                let startTimeSplit = data.schedule.recurrencePattern.monthly.startTime.split(':');\n                startTime.setHours(startTimeSplit[0]);\n                startTime.setMinutes(startTimeSplit[1]);\n                // startTime.setDate(data.schedule.recurrencePattern.monthly.dayOfMonth);\n                conditionForm['scheduleStartTime'].setValue(startTime);\n              }\n              conditionForm['recurrence'].setValue('monthly');\n              conditionForm['dayOfMonth'].setValue(data.schedule.recurrencePattern.monthly.dayOfMonth);\n              // conditionForm['numberOfMonths'].setValue(data.schedule.recurrencePattern.monthly.numberOfMonths);\n            }\n          }\n        }\n\n        this.setNotificationsPageData(data);\n      });\n    }\n    setNotificationsPageData(data) {\n      var _a, _b, _c, _d, _e, _f;\n      if (((_a = data === null || data === void 0 ? void 0 : data.emails) === null || _a === void 0 ? void 0 : _a.length) || ((_b = data === null || data === void 0 ? void 0 : data.sms) === null || _b === void 0 ? void 0 : _b.length) || ((_c = data === null || data === void 0 ? void 0 : data.webhooks) === null || _c === void 0 ? void 0 : _c.length)) {\n        this.notificationsData['notification'].workFlowSaved = true;\n        this.notificationsData['summary'].workFlowSaved = true;\n        this.levelsPassed = 5;\n      }\n      // //setDefaultWeekDays\n      // this.setDefaultWeekDays();\n      const scheduleForm = Object.assign({}, (_d = this.notificationsData.notification.workFlowScheduleForm) === null || _d === void 0 ? void 0 : _d.controls);\n      if (scheduleForm && Object.entries(scheduleForm).length > 0) {\n        scheduleForm['notes'].setValue('');\n        // scheduleForm['mailFormat'].setValue('');\n        // if (data.format && data.format != '') {\n        //   // let patternRegex = /<br\\s*[\\/]?>/gi;\n        //   // let newline = \"\\n\";\n        //   // if(this.isDev){\n        //     scheduleForm['mailFormat'].setValue(data.format.toLowerCase());\n        //   // }else{\n        //   //   scheduleForm['notes'].setValue(data.notes.replaceAll(patternRegex, newline));\n        //   // }\n        // }\n        if (data.notes && data.notes != '') {\n          // let patternRegex = /<br\\s*[\\/]?>/gi;\n          // let newline = \"\\n\";\n          // if(this.isDev){\n          scheduleForm['notes'].setValue(data.notes);\n          // }else{\n          //   scheduleForm['notes'].setValue(data.notes.replaceAll(patternRegex, newline));\n          // }\n        }\n\n        if (data.emails && data.emails.length > 0) {\n          this.notificationsData.notification.mailRecepients = [...data.emails];\n          // scheduleForm['emails'].setValue(data.emails.map((el) => {\n          //   let obj = {};\n          //   obj['display'] = el;\n          //   obj['value'] = el;\n          //   return obj;\n          // }));\n        } else {\n          this.notificationsData.notification.mailRecepients = [];\n        }\n        if ((_e = data === null || data === void 0 ? void 0 : data.sms) === null || _e === void 0 ? void 0 : _e.length) {\n          this.notificationsData.notification.sms = [...data.sms];\n          this.notificationsData.notification.isConsentMsgSmsPopupAccepted = true;\n          this.notificationsData.notification.isLoadConsentMsgSmsPopupApplicable = false;\n        } else {\n          this.notificationsData.notification.sms = [];\n        }\n        if ((_f = data === null || data === void 0 ? void 0 : data.webhooks) === null || _f === void 0 ? void 0 : _f.length) {\n          this.notificationsData.notification.webhooks = [...data.webhooks];\n        } else {\n          this.notificationsData.notification.webhooks = [];\n        }\n        this.notificationsData.notification.notes = data === null || data === void 0 ? void 0 : data.notes;\n      }\n    }\n    setDefaultWeekDays() {\n      let maxTime = new Date();\n      maxTime.setHours(23);\n      maxTime.setMinutes(58);\n      maxTime.setSeconds(0);\n      this.notificationsData.conditions.weekDays = [{\n        name: 'Monday',\n        short_name: 'Mon',\n        value: 'monday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'M',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Tuesday',\n        short_name: 'Tue',\n        value: 'tuesday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'T',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Wednesday',\n        short_name: 'Wed',\n        value: 'wednesday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'W',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Thursday',\n        short_name: 'Thu',\n        value: 'thursday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'Th',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Friday',\n        short_name: 'Fri',\n        value: 'friday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'F',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Saturday',\n        short_name: 'Sat',\n        value: 'saturday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'Sat',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }, {\n        name: 'Sunday',\n        short_name: 'Sun',\n        value: 'sunday',\n        dayFrom: '',\n        dayTo: '',\n        scheduleWeekly: 'Sun',\n        defaultTime: '',\n        minTime: '',\n        maxTime: maxTime\n      }];\n      this.patchNotificationFormValue();\n    }\n    loadLocationValue(regions) {\n      if (regions && regions != ['All'] && regions != ['11111111-1111-1111-1111-111111111111'] && regions.length > 0) {\n        let regionQuery = '';\n        regions.forEach(element => {\n          if (element == 'All' || element == '11111111-1111-1111-1111-111111111111') {\n            return;\n          }\n          regionQuery += `&region=${element}`;\n        });\n        if (regionQuery != '') {\n          return this.http.get(`${environment.API_BASE_URL}nfa/locations?tenant=0${regionQuery}`).toPromise();\n        } else {\n          return [];\n        }\n      }\n    }\n    calculateTotalMonitoredAlarms() {\n      let groupAlarms = this.notificationsData.alarms.monitoredGroupAlarm.data.reduce((acc, curr) => {\n        return acc + Number(curr['no_of_alarms']);\n      }, 0);\n      this.notificationsData.alarms.totMonitoredAlarms = this.notificationsData.alarms.monitoredIndividualAlarm.data.length + groupAlarms + this.notificationsData.alarms.monitoredTransformAlarm.data.length;\n    }\n    onCloseError() {\n      this.errorMsg = undefined;\n    }\n    pageErrorHandle(err) {\n      if (err.status == 401) {\n        this.errorInfo = 'Access Denied';\n      } else {\n        this.errorInfo = this.commonOrgService.pageErrorHandle(err);\n      }\n      this.closeAlert();\n      this.error = true;\n    }\n    closeAlert() {\n      this.error = false;\n      this.success = false;\n    }\n    pauseContinueWorkflow(type) {\n      var _a;\n      let query = `workflowId=${this.notificationsData.workflowId}`;\n      let searchText = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.ccoAlarmNotificationsText;\n      if (type == 'pause') {\n        query = query.concat(`&status=PAUSE`);\n      } else if (type == 'activate') {\n        query = query.concat(`&status=RUN`);\n      }\n      this.loading = true;\n      this.btnDisabled = true;\n      this.errorMsg = undefined;\n      this.successInfo = undefined;\n      this.http.put(`${this.baseUrl}deployWorkflow?${query}`, null, {\n        responseType: 'text'\n      }).subscribe(res => {\n        if (res == 'Workflow successfully deployed' || res == 'Workflow successfully deployed!') {\n          this.success = true;\n          this.successInfo = 'Alarm Notification Schedule successfully deployed';\n          setTimeout(() => {\n            this.success = false;\n            this.loading = false;\n            this.btnDisabled = false;\n            this.router.navigateByUrl(`/cco/operations/alarms/health-alarm-notifications`, {\n              state: {\n                ccoAlarmNotificationsText: searchText || ''\n              }\n            });\n          }, 3000);\n        } else if (res == 'Workflow successfully paused' || res == 'Workflow successfully paused!') {\n          this.success = true;\n          this.loading = false;\n          this.btnDisabled = false;\n          this.successInfo = 'Alarm Notification Schedule successfully paused';\n          setTimeout(() => {\n            this.success = false;\n            this.router.navigateByUrl(`/cco/operations/alarms/health-alarm-notifications`, {\n              state: {\n                ccoAlarmNotificationsText: searchText || ''\n              }\n            });\n          }, 3000);\n        } else {\n          this.error = true;\n          this.loading = false;\n          this.btnDisabled = false;\n          this.errorInfo = \"Something went wrong\";\n        }\n      }, err => {\n        this.error = true;\n        this.loading = false;\n        this.btnDisabled = false;\n        this.pageErrorHandle(err);\n      });\n    }\n    goToListView() {\n      var _a;\n      let searchText = (_a = history === null || history === void 0 ? void 0 : history.state) === null || _a === void 0 ? void 0 : _a.ccoAlarmNotificationsText;\n      this.router.navigateByUrl(`/cco/operations/alarms/health-alarm-notifications`, {\n        state: {\n          ccoAlarmNotificationsText: searchText || ''\n        }\n      });\n    }\n    getErrorMsg(msg) {\n      if (!msg) {\n        this.errorMsg = undefined;\n        return;\n      }\n      this.errorMsg = msg;\n      this.document.body.scrollIntoView({\n        block: 'start',\n        behavior: 'smooth'\n      });\n    }\n    ngOnDestroy() {\n      if (this.languageSubject) this.languageSubject.unsubscribe();\n      // if (this.scheduleFormSubmit) this.scheduleFormSubmit.unsubscribe();\n      // if (this.conditionFormSubmit) this.conditionFormSubmit.unsubscribe();\n    }\n  }\n\n  AlarmNotificationsComponent.ɵfac = function AlarmNotificationsComponent_Factory(t) {\n    return new (t || AlarmNotificationsComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.CommonService), i0.ɵɵdirectiveInject(i4.SsoAuthService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.FormBuilder), i0.ɵɵdirectiveInject(i7.AlarmNotificationsApisService), i0.ɵɵdirectiveInject(i8.Title), i0.ɵɵdirectiveInject(i9.IssueService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i10.CommonWorkflowService), i0.ɵɵdirectiveInject(i11.NgbModal));\n  };\n  AlarmNotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlarmNotificationsComponent,\n    selectors: [[\"app-alarm-notifications\"]],\n    decls: 29,\n    vars: 17,\n    consts: [[1, \"container\"], [\"class\", \"w-100 alert alert-danger fade show my-3\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-success fade show my-3\", 4, \"ngIf\"], [\"class\", \"row mb-3\", 4, \"ngIf\"], [1, \"row\", \"border-bottom\"], [1, \"col-md-11\", \"pl-0\"], [1, \"alarm-title\"], [1, \"col-md-1\", \"d-flex\", \"align-items-center\", \"justify-content-end\"], [\"href\", \"javascript:void(0)\", 3, \"click\"], [\"src\", \" assets/img/close-icon.svg\", \"alt\", \"\"], [1, \"my-4\"], [1, \"col-md-12\", \"px-0\"], [1, \"stepper-ui\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pos-abs-right\"], [\"type\", \"button\", \"id\", \"previousbtn\", 1, \"btn-arrow\", \"btn-arr-prev\", \"btn-grey\", \"mr-2\", 3, \"disabled\", \"hidden\", \"click\"], [\"src\", \"assets/img/ic_chevronleft_grey.svg\"], [\"type\", \"button\", \"id\", \"nextbtn\", \"class\", \"btn-default primary btn-arr-nxt px-3 mr-2\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 3, \"ngClass\", \"title\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"id\", \"finishbtn\", \"class\", \"small-screen-but btn-default primary px-3 mr-2\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 3, \"ngClass\", \"title\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"id\", \"finishbtn\", \"class\", \"small-screen-but btn-default primary px-3\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 3, \"ngClass\", \"title\", \"click\", 4, \"ngIf\"], [\"class\", \"w-100 alert alert-danger fade show ng-star-inserted\", 4, \"ngIf\"], [3, \"loadOnEdit\", \"workFlowDetailsData\", \"getWorkFlowAPIEmitter\", 4, \"ngIf\"], [3, \"workFlowAlarmsData\", \"getWorkFlowAPIEmitter\", \"errorMsg\", 4, \"ngIf\"], [3, \"conditionFormSubmitted\", \"workFlowConditionsData\", \"getWorkFlowAPIEmitter\", 4, \"ngIf\"], [3, \"dynamicFields\", \"dynamicFieldsObj\", \"workflowObj\", 4, \"ngIf\"], [3, \"workFlowSummaryData\", \"getWorkFlowAPIEmitter\", 4, \"ngIf\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"my-3\"], [1, \"error-img\"], [\"src\", \"./assets/img/ic_error-36px.svg\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"d-inline-flex\", 3, \"innerHtml\"], [1, \"w-100\", \"alert\", \"alert-success\", \"fade\", \"show\", \"my-3\"], [1, \"success-img\"], [\"src\", \"./assets/img/success-icon.svg\"], [1, \"row\", \"mb-3\"], [1, \"col-md-12\"], [1, \"loader\", \"mt-5\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [3, \"title\", \"ngClass\", \"click\"], [\"type\", \"button\", \"id\", \"nextbtn\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 1, \"btn-default\", \"primary\", \"btn-arr-nxt\", \"px-3\", \"mr-2\", 3, \"ngClass\", \"title\", \"click\"], [\"src\", \"assets/img/ic_chevron-r-w.svg\"], [\"type\", \"button\", \"id\", \"finishbtn\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 1, \"small-screen-but\", \"btn-default\", \"primary\", \"px-3\", \"mr-2\", 3, \"ngClass\", \"title\", \"click\"], [\"type\", \"button\", \"id\", \"finishbtn\", \"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 1, \"small-screen-but\", \"btn-default\", \"primary\", \"px-3\", 3, \"ngClass\", \"title\", \"click\"], [1, \"w-100\", \"alert\", \"alert-danger\", \"fade\", \"show\", \"ng-star-inserted\"], [3, \"loadOnEdit\", \"workFlowDetailsData\", \"getWorkFlowAPIEmitter\"], [3, \"workFlowAlarmsData\", \"getWorkFlowAPIEmitter\", \"errorMsg\"], [3, \"conditionFormSubmitted\", \"workFlowConditionsData\", \"getWorkFlowAPIEmitter\"], [3, \"dynamicFields\", \"dynamicFieldsObj\", \"workflowObj\"], [3, \"workFlowSummaryData\", \"getWorkFlowAPIEmitter\"]],\n    template: function AlarmNotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, AlarmNotificationsComponent_div_2_Template, 6, 1, \"div\", 1);\n        i0.ɵɵtemplate(3, AlarmNotificationsComponent_div_3_Template, 6, 1, \"div\", 2);\n        i0.ɵɵtemplate(4, AlarmNotificationsComponent_div_4_Template, 7, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_Template_a_click_10_listener() {\n          return ctx.goToListView();\n        });\n        i0.ɵɵelement(11, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"section\", 10);\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵelementStart(14, \"ul\", 12);\n        i0.ɵɵtemplate(15, AlarmNotificationsComponent_li_15_Template, 4, 6, \"li\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 14);\n        i0.ɵɵelementStart(17, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AlarmNotificationsComponent_Template_button_click_17_listener() {\n          return ctx.onTabChange(ctx.selectedTabIndex - 1, \"backward\");\n        });\n        i0.ɵɵelement(18, \"img\", 16);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, AlarmNotificationsComponent_button_20_Template, 3, 5, \"button\", 17);\n        i0.ɵɵtemplate(21, AlarmNotificationsComponent_button_21_Template, 2, 5, \"button\", 18);\n        i0.ɵɵtemplate(22, AlarmNotificationsComponent_button_22_Template, 2, 5, \"button\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, AlarmNotificationsComponent_div_23_Template, 6, 1, \"div\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, AlarmNotificationsComponent_app_workflow_details_24_Template, 1, 2, \"app-workflow-details\", 21);\n        i0.ɵɵtemplate(25, AlarmNotificationsComponent_app_workflow_alarms_25_Template, 1, 1, \"app-workflow-alarms\", 22);\n        i0.ɵɵtemplate(26, AlarmNotificationsComponent_app_workflow_conditions_26_Template, 1, 2, \"app-workflow-conditions\", 23);\n        i0.ɵɵtemplate(27, AlarmNotificationsComponent_app_recepients_27_Template, 1, 3, \"app-recepients\", 24);\n        i0.ɵɵtemplate(28, AlarmNotificationsComponent_app_workflow_summary_28_Template, 1, 1, \"app-workflow-summary\", 25);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.success);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", (ctx.notificationsData == null ? null : ctx.notificationsData.details == null ? null : ctx.notificationsData.details.workFlowDetailsForm == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls.name == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls.name.value) != \"\" ? ctx.notificationsData == null ? null : ctx.notificationsData.details == null ? null : ctx.notificationsData.details.workFlowDetailsForm == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls.name == null ? null : ctx.notificationsData.details.workFlowDetailsForm.controls.name.value : ctx.notificationsData.workflowId && ctx.notificationsData.workflowId != \"\" ? ctx.language[\"Notification Schedule\"] || \"Notification Schedule\" : ctx.language[\"New Notification Schedule\"], \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.alarmNotificationsSteppers);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.selectedTabIndex === 0)(\"hidden\", ctx.selectedTabIndex === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.language[\"Go back\"], \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTabIndex + 1 !== (ctx.alarmNotificationsSteppers == null ? null : ctx.alarmNotificationsSteppers.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTabIndex + 1 === (ctx.alarmNotificationsSteppers == null ? null : ctx.alarmNotificationsSteppers.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedTabIndex + 1 === (ctx.alarmNotificationsSteppers == null ? null : ctx.alarmNotificationsSteppers.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"Details\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"Alarms\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"Conditions\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"notification\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"Summary\");\n      }\n    },\n    directives: [i12.NgIf, i12.NgForOf, i12.NgClass, i13.WorkflowDetailsComponent, i14.WorkflowAlarmsComponent, i15.WorkflowConditionsComponent, i16.RecepientsComponent, i17.WorkflowSummaryComponent],\n    styles: [\".stepper-ui[_ngcontent-%COMP%]{display:flex;list-style:none;margin:0 0 10px;padding:0;overflow:hidden}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:2px 10px 0 30px;background:#ffffff;color:#1a1f22;position:relative;height:32px;border-top:1px solid #0279ff;border-bottom:1px solid #0279ff;border-right:0px!important;border-left:0px!important;outline:none!important;width:110px;overflow:hidden;text-overflow:ellipsis}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:relative;z-index:2}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:after{content:\\\"\\\";width:30px;height:100%;background:transparent;position:absolute;top:0;right:-10px;transform:rotate(48deg);z-index:1;border:1px ridge transparent;border-top-color:#0279ff;border-right-color:#0279ff;border-top-right-radius:5px}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]{color:#fff}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:after{background-color:#0279ff!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]{background-color:#82bf00;border-color:#82bf00}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:after{background-color:#82bf00}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:disabled{background-color:#82bf00!important;border-color:#82bf00!important}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:after{border-top-color:#fff!important;border-right-color:#fff!important;border-style:solid}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:after{border-top-color:#0279ff!important;border-right-color:#0279ff!important;border-style:solid}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:first-child   button[_ngcontent-%COMP%]{border-top-left-radius:30px;border-bottom-left-radius:30px}button[_ngcontent-%COMP%]:disabled{background:transparent!important;border:1px solid #0279ff!important;cursor:not-allowed;color:#4c4c4c}.stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-current[_ngcontent-%COMP%]:disabled   span[_ngcontent-%COMP%], .stepper-ui[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.step-done[_ngcontent-%COMP%]:disabled   span[_ngcontent-%COMP%]{opacity:.8;color:#fff!important}.alarm-title[_ngcontent-%COMP%]{font-family:Source Sans Pro;font-size:42px;font-style:normal;font-weight:300;line-height:53px;letter-spacing:0em;text-align:left}.pe-none[_ngcontent-%COMP%]{pointer-events:none}.pos-abs-right[_ngcontent-%COMP%]{position:absolute;right:0px;top:0px}.small-screen-but[_ngcontent-%COMP%]{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important}\"]\n  });\n  return AlarmNotificationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}