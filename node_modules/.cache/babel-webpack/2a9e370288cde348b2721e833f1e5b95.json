{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared/services/sso-auth.service\";\nexport let MarketingSegmentsApiService = /*#__PURE__*/(() => {\n  class MarketingSegmentsApiService {\n    constructor(httpClient, ssoAuthService) {\n      this.httpClient = httpClient;\n      this.ssoAuthService = ssoAuthService;\n      this.recommendedDataSubject = new Subject();\n      this.baseURL = environment.API_BASE_URL;\n      this.savedSegments = this.baseURL + 'cmc/segments/savedSegments?details=false';\n      this.recommended = this.baseURL + 'cmc/segments/recommendedSegments?details=false';\n      this.savedSegmentsIn = this.baseURL + 'cmc/segments/savedSegments?details=true';\n      this.recommendedIn = this.baseURL + 'cmc/segments/recommendedSegments?details=true';\n      this.savedSegmentscamp = this.baseURL + 'cmc/segments/savedSegments?details=false&counts=false';\n      this.recommendedcamp = this.baseURL + 'cmc/segments/recommendedSegments?details=false&counts=false';\n      this.deletesave = this.baseURL + 'cmc/segments/savedSegments';\n      //\n      this.savedSegmentsNot = this.baseURL + 'cmc/segments/savedSegments';\n      this.recommendedNot = this.baseURL + 'cmc/segments/recommendedSegments';\n      this.savedSegmentsTrig = this.baseURL + 'cmc/segments/savedSegments?subscriberOnly=true&counts=false';\n      this.recommendedTrig = this.baseURL + 'cmc/segments/recommendedSegments?subscriberOnly=true&counts=false';\n      // /recommendedSegments/{ orgId } /{userId}\n    }\n\n    SavedSegmentsListInGET() {\n      return this.httpClient.get(`${this.savedSegmentsIn}`);\n      // return this.httpClient.get(`${this.savedSegmentsIn}/${this.ssoAuthService.getOrgId()}/${this.ssoAuthService.getUsername()}`)\n    }\n\n    SavedSegmentsListNotGET() {\n      return this.httpClient.get(`${this.savedSegmentsNot}`);\n      // return this.httpClient.get(`${this.savedSegmentsIn}/${this.ssoAuthService.getOrgId()}/${this.ssoAuthService.getUsername()}`)\n    }\n\n    recommendedSegmentsListNotGET() {\n      return this.httpClient.get(`${this.recommendedNot}`);\n    }\n    SavedSegmentsListGET() {\n      return this.httpClient.get(`${this.savedSegments}`);\n    }\n    SavedSegmentsDELETE(id, type, name) {\n      return this.httpClient.delete(`${this.deletesave}/${id}?type=${type}&name=${name}`);\n    }\n    recommendedSegmentsListGET() {\n      return this.httpClient.get(`${this.recommended}`);\n    }\n    recommendedSegmentsListInGET() {\n      return this.httpClient.get(`${this.recommendedIn}`);\n      // return this.httpClient.get(`${this.recommendedIn}/${this.ssoAuthService.getOrgId()}/${this.ssoAuthService.getUsername()}`)\n    }\n\n    setRecommendedSegmentData(array) {\n      this.recommendedDataSubject.next(array);\n    }\n    SavedSegmentsListCampGET(trigCamp) {\n      if (trigCamp) {\n        return this.httpClient.get(`${this.savedSegmentsTrig}`);\n      } else {\n        return this.httpClient.get(`${this.savedSegmentscamp}`);\n      }\n    }\n    recommendedSegmentsListCampGET(trigCamp) {\n      if (trigCamp) {\n        return this.httpClient.get(`${this.recommendedTrig}`);\n      } else {\n        return this.httpClient.get(`${this.recommendedcamp}`);\n      }\n    }\n  }\n  MarketingSegmentsApiService.ɵfac = function MarketingSegmentsApiService_Factory(t) {\n    return new (t || MarketingSegmentsApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SsoAuthService));\n  };\n  MarketingSegmentsApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketingSegmentsApiService,\n    factory: MarketingSegmentsApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarketingSegmentsApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}