{"ast":null,"code":"import { getExtensionElements } from 'bpmn-js-properties-panel/lib/helper/ExtensionElementsHelper';\nimport elementHelper from 'bpmn-js-properties-panel/lib/helper/ElementHelper';\nimport { getBusinessObject, is } from 'bpmn-js/lib/util/ModelUtil';\nimport { nextId } from 'bpmn-js-properties-panel/lib/Utils';\nimport { find } from 'min-dash';\nconst USER_TASK_FORM_PREFIX = 'userTaskForm_';\nexport function getUserTaskForm(element, parent) {\n  const rootElement = parent || getRootElement(element);\n\n  // (1) get form definition from user task\n  const formDefinition = getFormDefinition(element);\n  if (!formDefinition) {\n    return;\n  }\n  const formKey = formDefinition.get('formKey');\n\n  // (2) retrieve user task form via form key\n  const userTaskForm = findUserTaskForm(formKey, rootElement);\n  return userTaskForm;\n}\nexport function getFormDefinition(element) {\n  const businessObject = getBusinessObject(element);\n  const formDefinitions = getExtensionElements(businessObject, 'zeebe:FormDefinition');\n  return formDefinitions && formDefinitions.length && formDefinitions[0];\n}\nexport function createFormKey(formId) {\n  return 'camunda-forms:bpmn:' + formId;\n}\nexport function createFormDefinition(properties, extensionElements, bpmnFactory) {\n  return elementHelper.createElement('zeebe:FormDefinition', properties, extensionElements, bpmnFactory);\n}\nexport function createUserTaskForm(properties, extensionElements, bpmnFactory) {\n  return elementHelper.createElement('zeebe:UserTaskForm', properties, extensionElements, bpmnFactory);\n}\nexport function createFormId() {\n  return nextId(USER_TASK_FORM_PREFIX);\n}\n\n// helpers /////////////////////\n\nfunction findUserTaskForm(formKey, rootElement) {\n  const forms = getExtensionElements(rootElement, 'zeebe:UserTaskForm');\n  return find(forms, function (userTaskForm) {\n    return createFormKey(userTaskForm.id) === formKey;\n  });\n}\nfunction getRootElement(element) {\n  var businessObject = getBusinessObject(element),\n    parent = businessObject;\n  while (parent.$parent && !is(parent, 'bpmn:Process')) {\n    parent = parent.$parent;\n  }\n  return parent;\n}","map":null,"metadata":{},"sourceType":"module"}