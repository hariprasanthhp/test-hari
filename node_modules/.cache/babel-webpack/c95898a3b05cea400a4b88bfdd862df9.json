{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app-services/translate.service\";\nexport let MarketingCampaignDefineApiService = /*#__PURE__*/(() => {\n  class MarketingCampaignDefineApiService {\n    constructor(translateService) {\n      this.translateService = translateService;\n      this.savedSegmentSubject = new Subject();\n      this.CsvSelected = false;\n      this.defineNextEmitterSubject = new Subject();\n      this.channelNextEmitterSubject = new Subject();\n      this.deployNextEmitterSubject = new Subject();\n      this.deploy2ndNextEmitterSubject = new Subject();\n      this.defineSuccessEmitterSubject = new Subject();\n      this.editCampaignDataSubject = new Subject();\n      this.editChannelDataSubject = new Subject();\n      this.editCampaignChannelDataSubject = new Subject();\n      this.clearCampaignDataSubject = new Subject();\n      this.segmentSelectSubject = new Subject();\n      this.segmentTypeSelectSubject = new Subject();\n      this.campaignSubject = new Subject();\n      this.eventTypeSubject = new Subject();\n      this.startDateSubject = new Subject();\n      this.savedSegmentEmitter('empty');\n      this.language = this.translateService.defualtLanguage;\n      this.languageSubject = this.translateService.selectedLanguage.subscribe(data => {\n        this.language = data;\n        this.isRerender = true;\n      });\n    }\n    savedSegmentEmitter(savedSegment) {\n      this.savedSegmentSubject.next(savedSegment);\n    }\n    defineNextEventTrigger() {\n      this.defineNextEmitterSubject.next(true);\n    }\n    channelNextEventTrigger(saveBtn) {\n      this.channelNextEmitterSubject.next(saveBtn);\n    }\n    deployNextEventTrigger(statusUpdate) {\n      this.deployNextEmitterSubject.next(statusUpdate);\n    }\n    deploy2ndNextEventTrigger() {\n      this.deploy2ndNextEmitterSubject.next(true);\n    }\n    defineSuccesEventTrigger(response) {\n      if (response) {\n        this.setDefineDataEmitter(response);\n      }\n      this.defineSuccessEmitterSubject.next(true);\n    }\n    setDefineDataEmitter(defineData) {\n      this.defineData = defineData;\n      this.editCampaignDataSubject.next(this.defineData);\n    }\n    getDefineDataEmitter() {\n      return this.defineData;\n    }\n    setMobileChannelDataEmitter(channelData) {\n      this.channelData = channelData;\n      this.editChannelDataSubject.next(this.channelData);\n    }\n    getMobileChannelDataEmitter() {\n      return this.channelData;\n    }\n    setCsvDataEmitter(selected) {\n      this.CsvSelected = selected;\n    }\n    getCsvDataEmitter() {\n      return this.CsvSelected;\n    }\n    setCampaignChannelDataEmitter(channelData) {\n      this.channelData = channelData;\n      this.editCampaignChannelDataSubject.next(channelData);\n    }\n    getCampaignChannelDataEmitter() {\n      return this.channelData;\n    }\n    clearCampaignDataEmitter(pageName) {\n      this.clearCampaignDataSubject.next(pageName);\n    }\n    nextAllSubject() {\n      // this.savedSegmentEmitter('empty')\n      // this.defineNextEventTrigger();\n      // this.channelNextEventTrigger(false)\n      // this.deployNextEventTrigger(false)\n      // this.deploy2ndNextEventTrigger()\n      // this.defineSuccesEventTrigger();\n      // this.clearCampaignDataEmitter('define')\n      // this.channelNextEmitterSubject.next(false)\n      // this.deployNextEmitterSubject.complete()\n      // this.deploy2ndNextEmitterSubject.complete()\n      // this.defineSuccessEmitterSubject.complete();\n      // this.editCampaignDataSubject.complete()\n      // this.editChannelDataSubject.complete()\n      // this.editCampaignChannelDataSubject.complete()\n      // this.clearCampaignDataSubject.complete()\n    }\n    completeAllSubject() {\n      // this.savedSegmentSubject.complete()\n      // this.savedSegmentEmitter('empty')\n      // this.defineNextEmitterSubject.complete()\n      // this.channelNextEmitterSubject.complete()\n      // this.deployNextEmitterSubject.complete()\n      // this.deploy2ndNextEmitterSubject.complete()\n      // this.defineSuccessEmitterSubject.complete();\n      // this.editCampaignDataSubject.complete()\n      // this.editChannelDataSubject.complete()\n      // this.editCampaignChannelDataSubject.complete()\n      // this.clearCampaignDataSubject.complete()\n    }\n    stringValidatorWithCrossScriptAndErrorMsgDeploy(data) {\n      let returnObj = {\n        error: false,\n        errorMsg: undefined\n      };\n      if (data === undefined || data === '' || data === null) {\n        return returnObj = {\n          error: true,\n          errorMsg: undefined\n        };\n      } else if (data.includes('<') || data.includes('>')) {\n        return returnObj = {\n          error: true,\n          errorMsg: this.language.Script_not\n        };\n      } else if (data.replaceAll(' ', '').length == 0) {\n        return returnObj = {\n          error: true,\n          errorMsg: this.language.Valid_Text_Deploy\n        };\n      } else {\n        return returnObj = {\n          error: false,\n          errorMsg: undefined\n        };\n      }\n    }\n  }\n  MarketingCampaignDefineApiService.ɵfac = function MarketingCampaignDefineApiService_Factory(t) {\n    return new (t || MarketingCampaignDefineApiService)(i0.ɵɵinject(i1.TranslateService));\n  };\n  MarketingCampaignDefineApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketingCampaignDefineApiService,\n    factory: MarketingCampaignDefineApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarketingCampaignDefineApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}